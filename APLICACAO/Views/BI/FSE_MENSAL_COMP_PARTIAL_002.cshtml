


<style id="ccs_style" type="text/css">
    .webgrid-table {
        font-family: "Trebuchet MS", Arial, Helvetica, sans-serif;
        font-size: 13px;
        width: 100%;
        display: table;
        border: solid 1px #FFFFFF;
        background-color: white;
        text-align: right;
    }

        .webgrid-table td, th {
            border: solid 1px #FFFFFF;
            padding: 3px 7px 2px;
            text-align: right;
        }

    .webgrid-header {
        padding: 6px 5px;
        text-align: center;
        background-color: #e8eef4;
        border-bottom: 2px solid #A4A4A4;
        height: 40px;
    }

    .webgrid-footer {
    }

    .webgrid-row-style {
        text-align: right;
        padding: 3px 7px 2px;
    }

    .webgrid-rubrica {
        text-align: right;
        background-color: #EAF2D3;
        padding: 3px 7px 2px;
    }

    .webgrid-total {
        text-align: right;
        background-color: #EAF2D3;
        padding: 3px 7px 2px;
    }

    .webgrid-selected-row {
        text-align: right;
        border: solid 1px #FFFFFF;
        padding: 3px 7px 2px;
    }

    .Webgrid_col_data {
        text-align: center;
    }

    .input {
        width: 50px;
        height: 25px;
        text-align: justify;
        background-color: #EAF2D3;
        padding: 3px 4px 2px;
        text-overflow: clip;
    }

    .GRAVAR {
        font-family: "Trebuchet MS", Arial, Helvetica, sans-serif;
        font-size: 15px;
        color: #eaf2d3;
        background-color: #d2d4f1;
    }

    .campocalc_resultado {
        background-color: #E3DFFF;
        text-align: center;
    }

    /*.oculta_na_impressao {
        height: 95px;
    }*/

    .titulos_mapas {
        background-color: #7F7F7F;
        text-align: center;
        color: #FFFFFF;
        vertical-align: middle;
        font-size: 22px;
        font-weight: bold;
    }
</style>

@{
    var ANO_VERSAO_REAL = @ViewData["ANO_VERSAO_REAL"];
    var ANO_VERSAO_ANTE = @ViewData["ANO_VERSAO_ANTE"];
    var MES_ACUM_REAL = @ViewData["MES_ACUM_REAL"];
    var MES_ACUM_ANTE = @ViewData["MES_ACUM_ANTE"];
    var MES_INI_PER_REAL = @ViewData["MES_INI_PER_REAL"];
    var MES_INI_PER_ANTE = @ViewData["MES_INI_PER_ANTE"];
    var MES_FIN_PER_REAL = @ViewData["MES_FIN_PER_REAL"];
    var MES_FIN_PER_ANTE = @ViewData["MES_FIN_PER_ANTE"];
}


 @if (@ViewData["FSE_COMBUSTIVEIS_REAL_ACUM"].Equals("calc"))  {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_030"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_031" style="display:none"></canvas>} else { if ((Convert.ToDecimal(@ViewData["FSE_COMBUSTIVEIS_REAL_ACUM"])) == 0)  {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_030"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_031" style="display:none"></canvas>} else { <div class="page-breaker"></div> <table  class="graficos_textos"> <tr> <td class="titulos_mapas" colspan="2"> Combustiveis </td> </tr>
     <tr>
       <td  style="width:50%"> 
           <p>Os Combustiveis, em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])) atingiram o valor de 
             @if (@ViewData["FSE_COMBUSTIVEIS_REAL_ACUM"].Equals("calc")) { <text>calc.</text> } else { @Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_COMBUSTIVEIS_REAL_ACUM"])))))} €,
         sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiram o valor de
             @if (@ViewData["FSE_COMBUSTIVEIS_ANTE_ACUM"].Equals("calc")) { <text>calc.</text> } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_COMBUSTIVEIS_ANTE_ACUM"]) ))))} €,
         verificando-se @if (@ViewData["FSE_COMBUSTIVEIS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_COMBUSTIVEIS_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else {if ((Convert.ToDecimal(@ViewData["FSE_COMBUSTIVEIS_REAL_ACUM"]) ) >= (Convert.ToDecimal(@ViewData["FSE_COMBUSTIVEIS_ANTE_ACUM"]) ))      {  <text> um crescimento de </text> ; }  else   {  <text> uma diminuição de </text>  ; }}
                         @if (@ViewData["FSE_COMBUSTIVEIS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_COMBUSTIVEIS_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else { if ((Convert.ToInt32(@ViewData["FSE_COMBUSTIVEIS_ANTE_ACUM"]) ).Equals(0)){<text> 0 %</text>  } else { decimal FSE_COMBUSTIVEIS_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_COMBUSTIVEIS_REAL_ACUM"]) ; decimal FSE_COMBUSTIVEIS_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_COMBUSTIVEIS_ANTE_ACUM"]) ; @Html.Raw((string.Format("{0:N}", ((FSE_COMBUSTIVEIS_REAL_ACUM - FSE_COMBUSTIVEIS_ANTE_ACUM) / Math.Abs(FSE_COMBUSTIVEIS_ANTE_ACUM)) * 100))) <text>%</text>} }.
               </p>
            <p> No mesmo período a Variação do Volume de Negócios (inclui Variação de Produção) foi de
             @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else { if ((Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]) ).Equals(0)){<text> 0 %</text>  } else { decimal IND_VN_REAL_ACUM = Convert.ToInt32(@ViewData["IND_VN_REAL_ACUM"]) ; decimal IND_VN_ANTE_ACUM = Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]) ; @Html.Raw((string.Format("{0:N}", ((IND_VN_REAL_ACUM - IND_VN_ANTE_ACUM) / Math.Abs(IND_VN_ANTE_ACUM)) * 100))) <text>%</text>} }.
            @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") || @ViewData["FSE_COMBUSTIVEIS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_COMBUSTIVEIS_ANTE_ACUM"].Equals("calc") || Convert.ToDecimal(@ViewData["FSE_COMBUSTIVEIS_ANTE_ACUM"]).Equals(0) || Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]).Equals(0)) { <text></text> } else { if (((Convert.ToDecimal(@ViewData["FSE_COMBUSTIVEIS_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["FSE_COMBUSTIVEIS_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["FSE_COMBUSTIVEIS_ANTE_ACUM"]))) * 100 >= ((Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))/Math.Abs(Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])))*100 )        {  <text>Sendo a variação dos Combustiveis superior à variação do Volume de Negócios verifica-se uma perda relativa de Rentabilidade Operacional </text> ; }  else   {  <text>Sendo a variação dos Combustiveis inferior à variação do Volume de Negócios verifica-se um ganho relativo de Rentabilidade Operacional </text> ; } }.
       </p>
          </td>
         <td style="width:50%">
             <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_030"></canvas>
         </td>
     </tr>
          <tr>
         <td style="width:50%">
             <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_031"></canvas>
         </td>
         <td  style="width:50%">O Peso dos Combustiveis no Volume de Negócios (VN: inclui variação de Produção), em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])), atingiu o valor de
             @if (@ViewData["FSE_COMBUSTIVEIS_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc")) { <text>calc.</text>  } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_COMBUSTIVEIS_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) * 100)))} %
         sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiu o valor de
             @if (@ViewData["FSE_COMBUSTIVEIS_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>calc.</text>  } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_COMBUSTIVEIS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) * 100)))} %,
         verificando-se @if (@ViewData["FSE_COMBUSTIVEIS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_COMBUSTIVEIS_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>    -</text>  } else { if ((Convert.ToDecimal(@ViewData["FSE_COMBUSTIVEIS_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_COMBUSTIVEIS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))) {  <text> uma diminuição de eficiência </text> ; } else {  <text> um aumento de eficiência de </text>  ; } }
                         @if (@ViewData["FSE_COMBUSTIVEIS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_COMBUSTIVEIS_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>    -</text>  } else { if ((Convert.ToDecimal(@ViewData["FSE_COMBUSTIVEIS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0)){<text> 0 %</text>  } else { decimal PESO_FSE_COMBUSTIVEIS_VN_REAL_ACUM = Convert.ToDecimal(@ViewData["FSE_COMBUSTIVEIS_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]); decimal PESO_FSE_COMBUSTIVEIS_VN_ANTE_ACUM = Convert.ToDecimal(@ViewData["FSE_COMBUSTIVEIS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((PESO_FSE_COMBUSTIVEIS_VN_REAL_ACUM - PESO_FSE_COMBUSTIVEIS_VN_ANTE_ACUM) )*100*-1 ))) <text>%</text>} }.
         </td>

     </tr>
</table>}}  @if (@ViewData["FSE_AGUA_REAL_ACUM"].Equals("calc"))  {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_032"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_033" style="display:none"></canvas>} else { if ((Convert.ToDecimal(@ViewData["FSE_AGUA_REAL_ACUM"])) == 0)  {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_032"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_033" style="display:none"></canvas>} else { <div class="page-breaker"></div> <table  class="graficos_textos"> <tr> <td class="titulos_mapas" colspan="2"> Água </td> </tr>
     <tr>
       <td  style="width:50%"> 
           <p>A Água, em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])) atingiram o valor de 
             @if (@ViewData["FSE_AGUA_REAL_ACUM"].Equals("calc")) { <text>calc.</text> } else { @Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_AGUA_REAL_ACUM"])))))} €,
         sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiram o valor de
             @if (@ViewData["FSE_AGUA_ANTE_ACUM"].Equals("calc")) { <text>calc.</text> } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_AGUA_ANTE_ACUM"]) ))))} €,
         verificando-se @if (@ViewData["FSE_AGUA_REAL_ACUM"].Equals("calc") || @ViewData["FSE_AGUA_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else {if ((Convert.ToDecimal(@ViewData["FSE_AGUA_REAL_ACUM"]) ) >= (Convert.ToDecimal(@ViewData["FSE_AGUA_ANTE_ACUM"]) ))      {  <text> um crescimento de </text> ; }  else   {  <text> uma diminuição de </text>  ; }}
                         @if (@ViewData["FSE_AGUA_REAL_ACUM"].Equals("calc") || @ViewData["FSE_AGUA_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else { if ((Convert.ToInt32(@ViewData["FSE_AGUA_ANTE_ACUM"]) ).Equals(0)){<text> 0 %</text>  } else { decimal FSE_AGUA_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_AGUA_REAL_ACUM"]) ; decimal FSE_AGUA_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_AGUA_ANTE_ACUM"]) ; @Html.Raw((string.Format("{0:N}", ((FSE_AGUA_REAL_ACUM - FSE_AGUA_ANTE_ACUM) / Math.Abs(FSE_AGUA_ANTE_ACUM)) * 100))) <text>%</text>} }.
               </p>
            <p> No mesmo período a Variação do Volume de Negócios (inclui Variação de Produção) foi de
             @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else { if ((Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]) ).Equals(0)){<text> 0 %</text>  } else { decimal IND_VN_REAL_ACUM = Convert.ToInt32(@ViewData["IND_VN_REAL_ACUM"]) ; decimal IND_VN_ANTE_ACUM = Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]) ; @Html.Raw((string.Format("{0:N}", ((IND_VN_REAL_ACUM - IND_VN_ANTE_ACUM) / Math.Abs(IND_VN_ANTE_ACUM)) * 100))) <text>%</text>} }.
            @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") || @ViewData["FSE_AGUA_REAL_ACUM"].Equals("calc") || @ViewData["FSE_AGUA_ANTE_ACUM"].Equals("calc") || Convert.ToDecimal(@ViewData["FSE_AGUA_ANTE_ACUM"]).Equals(0) || Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]).Equals(0)) { <text></text> } else { if (((Convert.ToDecimal(@ViewData["FSE_AGUA_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["FSE_AGUA_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["FSE_AGUA_ANTE_ACUM"]))) * 100 >= ((Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))/Math.Abs(Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])))*100 )        {  <text>Sendo a variação da Água superior à variação do Volume de Negócios verifica-se uma perda relativa de Rentabilidade Operacional </text> ; }  else   {  <text>Sendo a variação da Água inferior à variação do Volume de Negócios verifica-se um ganho relativo de Rentabilidade Operacional </text> ; } }.
       </p>
          </td>
         <td style="width:50%">
             <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_032"></canvas>
         </td>
     </tr>
          <tr>
         <td style="width:50%">
             <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_033"></canvas>
         </td>
         <td  style="width:50%">O Peso da Água no Volume de Negócios (VN: inclui variação de Produção), em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])), atingiu o valor de
             @if (@ViewData["FSE_AGUA_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc")) { <text>calc.</text>  } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_AGUA_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) * 100)))} %
         sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiu o valor de
             @if (@ViewData["FSE_AGUA_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>calc.</text>  } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_AGUA_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) * 100)))} %,
         verificando-se @if (@ViewData["FSE_AGUA_REAL_ACUM"].Equals("calc") || @ViewData["FSE_AGUA_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>    -</text>  } else { if ((Convert.ToDecimal(@ViewData["FSE_AGUA_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_AGUA_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))) {  <text> uma diminuição de eficiência </text> ; } else {  <text> um aumento de eficiência de </text>  ; } }
                         @if (@ViewData["FSE_AGUA_REAL_ACUM"].Equals("calc") || @ViewData["FSE_AGUA_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>    -</text>  } else { if ((Convert.ToDecimal(@ViewData["FSE_AGUA_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0)){<text> 0 %</text>  } else { decimal PESO_FSE_AGUA_VN_REAL_ACUM = Convert.ToDecimal(@ViewData["FSE_AGUA_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]); decimal PESO_FSE_AGUA_VN_ANTE_ACUM = Convert.ToDecimal(@ViewData["FSE_AGUA_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((PESO_FSE_AGUA_VN_REAL_ACUM - PESO_FSE_AGUA_VN_ANTE_ACUM) )*100*-1 ))) <text>%</text>} }.
         </td>

     </tr>
</table>}}  @if (@ViewData["FSE_OUTROS_ENERG_FLUIDOS_REAL_ACUM"].Equals("calc"))  {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_034"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_035" style="display:none"></canvas>} else { if ((Convert.ToDecimal(@ViewData["FSE_OUTROS_ENERG_FLUIDOS_REAL_ACUM"])) == 0)  {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_034"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_035" style="display:none"></canvas>} else { <div class="page-breaker"></div> <table  class="graficos_textos"> <tr> <td class="titulos_mapas" colspan="2"> Outros de Energia e Fluidos </td> </tr>
     <tr>
       <td  style="width:50%"> 
           <p>Os Outros de Energia e Fluidos, em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])) atingiram o valor de 
             @if (@ViewData["FSE_OUTROS_ENERG_FLUIDOS_REAL_ACUM"].Equals("calc")) { <text>calc.</text> } else { @Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_OUTROS_ENERG_FLUIDOS_REAL_ACUM"])))))} €,
         sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiram o valor de
             @if (@ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM"].Equals("calc")) { <text>calc.</text> } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM"]) ))))} €,
         verificando-se @if (@ViewData["FSE_OUTROS_ENERG_FLUIDOS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else {if ((Convert.ToDecimal(@ViewData["FSE_OUTROS_ENERG_FLUIDOS_REAL_ACUM"]) ) >= (Convert.ToDecimal(@ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM"]) ))      {  <text> um crescimento de </text> ; }  else   {  <text> uma diminuição de </text>  ; }}
                         @if (@ViewData["FSE_OUTROS_ENERG_FLUIDOS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else { if ((Convert.ToInt32(@ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM"]) ).Equals(0)){<text> 0 %</text>  } else { decimal FSE_OUTROS_ENERG_FLUIDOS_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_OUTROS_ENERG_FLUIDOS_REAL_ACUM"]) ; decimal FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM"]) ; @Html.Raw((string.Format("{0:N}", ((FSE_OUTROS_ENERG_FLUIDOS_REAL_ACUM - FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM) / Math.Abs(FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM)) * 100))) <text>%</text>} }.
               </p>
            <p> No mesmo período a Variação do Volume de Negócios (inclui Variação de Produção) foi de
             @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else { if ((Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]) ).Equals(0)){<text> 0 %</text>  } else { decimal IND_VN_REAL_ACUM = Convert.ToInt32(@ViewData["IND_VN_REAL_ACUM"]) ; decimal IND_VN_ANTE_ACUM = Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]) ; @Html.Raw((string.Format("{0:N}", ((IND_VN_REAL_ACUM - IND_VN_ANTE_ACUM) / Math.Abs(IND_VN_ANTE_ACUM)) * 100))) <text>%</text>} }.
            @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_ENERG_FLUIDOS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM"].Equals("calc") || Convert.ToDecimal(@ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM"]).Equals(0) || Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]).Equals(0)) { <text></text> } else { if (((Convert.ToDecimal(@ViewData["FSE_OUTROS_ENERG_FLUIDOS_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM"]))) * 100 >= ((Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))/Math.Abs(Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])))*100 )        {  <text>Sendo a variação dos Outros de Energia e Fluidos superior à variação do Volume de Negócios verifica-se uma perda relativa de Rentabilidade Operacional </text> ; }  else   {  <text>Sendo a variação dos Outros de Energia e Fluidos inferior à variação do Volume de Negócios verifica-se um ganho relativo de Rentabilidade Operacional </text> ; } }.
       </p>
          </td>
         <td style="width:50%">
             <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_034"></canvas>
         </td>
     </tr>
          <tr>
         <td style="width:50%">
             <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_035"></canvas>
         </td>
         <td  style="width:50%">O Peso dos Outros de Energia e Fluidos no Volume de Negócios (VN: inclui variação de Produção), em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])), atingiu o valor de
             @if (@ViewData["FSE_OUTROS_ENERG_FLUIDOS_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc")) { <text>calc.</text>  } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_OUTROS_ENERG_FLUIDOS_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) * 100)))} %
         sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiu o valor de
             @if (@ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>calc.</text>  } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) * 100)))} %,
         verificando-se @if (@ViewData["FSE_OUTROS_ENERG_FLUIDOS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>    -</text>  } else { if ((Convert.ToDecimal(@ViewData["FSE_OUTROS_ENERG_FLUIDOS_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))) {  <text> uma diminuição de eficiência </text> ; } else {  <text> um aumento de eficiência de </text>  ; } }
                         @if (@ViewData["FSE_OUTROS_ENERG_FLUIDOS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>    -</text>  } else { if ((Convert.ToDecimal(@ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0)){<text> 0 %</text>  } else { decimal PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_REAL_ACUM = Convert.ToDecimal(@ViewData["FSE_OUTROS_ENERG_FLUIDOS_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]); decimal PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANTE_ACUM = Convert.ToDecimal(@ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_REAL_ACUM - PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANTE_ACUM) )*100*-1 ))) <text>%</text>} }.
         </td>

     </tr>
</table>}}  @if (@ViewData["FSE_DESLOC_ESTADAS_REAL_ACUM"].Equals("calc"))  {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_036"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_037" style="display:none"></canvas>} else { if ((Convert.ToDecimal(@ViewData["FSE_DESLOC_ESTADAS_REAL_ACUM"])) == 0)  {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_036"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_037" style="display:none"></canvas>} else { <div class="page-breaker"></div> <table  class="graficos_textos"> <tr> <td class="titulos_mapas" colspan="2"> Deslocações e Estadas </td> </tr>
     <tr>
       <td  style="width:50%"> 
           <p>As Deslocações e Estadas, em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])) atingiram o valor de 
             @if (@ViewData["FSE_DESLOC_ESTADAS_REAL_ACUM"].Equals("calc")) { <text>calc.</text> } else { @Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_DESLOC_ESTADAS_REAL_ACUM"])))))} €,
         sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiram o valor de
             @if (@ViewData["FSE_DESLOC_ESTADAS_ANTE_ACUM"].Equals("calc")) { <text>calc.</text> } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_DESLOC_ESTADAS_ANTE_ACUM"]) ))))} €,
         verificando-se @if (@ViewData["FSE_DESLOC_ESTADAS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_DESLOC_ESTADAS_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else {if ((Convert.ToDecimal(@ViewData["FSE_DESLOC_ESTADAS_REAL_ACUM"]) ) >= (Convert.ToDecimal(@ViewData["FSE_DESLOC_ESTADAS_ANTE_ACUM"]) ))      {  <text> um crescimento de </text> ; }  else   {  <text> uma diminuição de </text>  ; }}
                         @if (@ViewData["FSE_DESLOC_ESTADAS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_DESLOC_ESTADAS_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else { if ((Convert.ToInt32(@ViewData["FSE_DESLOC_ESTADAS_ANTE_ACUM"]) ).Equals(0)){<text> 0 %</text>  } else { decimal FSE_DESLOC_ESTADAS_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_DESLOC_ESTADAS_REAL_ACUM"]) ; decimal FSE_DESLOC_ESTADAS_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_DESLOC_ESTADAS_ANTE_ACUM"]) ; @Html.Raw((string.Format("{0:N}", ((FSE_DESLOC_ESTADAS_REAL_ACUM - FSE_DESLOC_ESTADAS_ANTE_ACUM) / Math.Abs(FSE_DESLOC_ESTADAS_ANTE_ACUM)) * 100))) <text>%</text>} }.
               </p>
            <p> No mesmo período a Variação do Volume de Negócios (inclui Variação de Produção) foi de
             @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else { if ((Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]) ).Equals(0)){<text> 0 %</text>  } else { decimal IND_VN_REAL_ACUM = Convert.ToInt32(@ViewData["IND_VN_REAL_ACUM"]) ; decimal IND_VN_ANTE_ACUM = Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]) ; @Html.Raw((string.Format("{0:N}", ((IND_VN_REAL_ACUM - IND_VN_ANTE_ACUM) / Math.Abs(IND_VN_ANTE_ACUM)) * 100))) <text>%</text>} }.
            @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") || @ViewData["FSE_DESLOC_ESTADAS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_DESLOC_ESTADAS_ANTE_ACUM"].Equals("calc") || Convert.ToDecimal(@ViewData["FSE_DESLOC_ESTADAS_ANTE_ACUM"]).Equals(0) || Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]).Equals(0)) { <text></text> } else { if (((Convert.ToDecimal(@ViewData["FSE_DESLOC_ESTADAS_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["FSE_DESLOC_ESTADAS_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["FSE_DESLOC_ESTADAS_ANTE_ACUM"]))) * 100 >= ((Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))/Math.Abs(Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])))*100 )        {  <text>Sendo a variação das Deslocações e Estadas superior à variação do Volume de Negócios verifica-se uma perda relativa de Rentabilidade Operacional </text> ; }  else   {  <text>Sendo a variação das Deslocações e Estadas inferior à variação do Volume de Negócios verifica-se um ganho relativo de Rentabilidade Operacional </text> ; } }.
       </p>
          </td>
         <td style="width:50%">
             <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_036"></canvas>
         </td>
     </tr>
          <tr>
         <td style="width:50%">
             <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_037"></canvas>
         </td>
         <td  style="width:50%">O Peso das Deslocações e Estadas no Volume de Negócios (VN: inclui variação de Produção), em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])), atingiu o valor de
             @if (@ViewData["FSE_DESLOC_ESTADAS_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc")) { <text>calc.</text>  } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_DESLOC_ESTADAS_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) * 100)))} %
         sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiu o valor de
             @if (@ViewData["FSE_DESLOC_ESTADAS_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>calc.</text>  } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_DESLOC_ESTADAS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) * 100)))} %,
         verificando-se @if (@ViewData["FSE_DESLOC_ESTADAS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_DESLOC_ESTADAS_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>    -</text>  } else { if ((Convert.ToDecimal(@ViewData["FSE_DESLOC_ESTADAS_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_DESLOC_ESTADAS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))) {  <text> uma diminuição de eficiência </text> ; } else {  <text> um aumento de eficiência de </text>  ; } }
                         @if (@ViewData["FSE_DESLOC_ESTADAS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_DESLOC_ESTADAS_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>    -</text>  } else { if ((Convert.ToDecimal(@ViewData["FSE_DESLOC_ESTADAS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0)){<text> 0 %</text>  } else { decimal PESO_FSE_DESLOC_ESTADAS_VN_REAL_ACUM = Convert.ToDecimal(@ViewData["FSE_DESLOC_ESTADAS_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]); decimal PESO_FSE_DESLOC_ESTADAS_VN_ANTE_ACUM = Convert.ToDecimal(@ViewData["FSE_DESLOC_ESTADAS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((PESO_FSE_DESLOC_ESTADAS_VN_REAL_ACUM - PESO_FSE_DESLOC_ESTADAS_VN_ANTE_ACUM) )*100*-1 ))) <text>%</text>} }.
         </td>

     </tr>
</table>}}  @if (@ViewData["FSE_TRANSPORT_PESSOAL_REAL_ACUM"].Equals("calc"))  {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_038"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_039" style="display:none"></canvas>} else { if ((Convert.ToDecimal(@ViewData["FSE_TRANSPORT_PESSOAL_REAL_ACUM"])) == 0)  {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_038"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_039" style="display:none"></canvas>} else { <div class="page-breaker"></div> <table  class="graficos_textos"> <tr> <td class="titulos_mapas" colspan="2"> Transporte de Pessoal </td> </tr>
     <tr>
       <td  style="width:50%"> 
           <p>O Transporte de Pessoal, em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])) atingiram o valor de 
             @if (@ViewData["FSE_TRANSPORT_PESSOAL_REAL_ACUM"].Equals("calc")) { <text>calc.</text> } else { @Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_TRANSPORT_PESSOAL_REAL_ACUM"])))))} €,
         sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiram o valor de
             @if (@ViewData["FSE_TRANSPORT_PESSOAL_ANTE_ACUM"].Equals("calc")) { <text>calc.</text> } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_TRANSPORT_PESSOAL_ANTE_ACUM"]) ))))} €,
         verificando-se @if (@ViewData["FSE_TRANSPORT_PESSOAL_REAL_ACUM"].Equals("calc") || @ViewData["FSE_TRANSPORT_PESSOAL_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else {if ((Convert.ToDecimal(@ViewData["FSE_TRANSPORT_PESSOAL_REAL_ACUM"]) ) >= (Convert.ToDecimal(@ViewData["FSE_TRANSPORT_PESSOAL_ANTE_ACUM"]) ))      {  <text> um crescimento de </text> ; }  else   {  <text> uma diminuição de </text>  ; }}
                         @if (@ViewData["FSE_TRANSPORT_PESSOAL_REAL_ACUM"].Equals("calc") || @ViewData["FSE_TRANSPORT_PESSOAL_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else { if ((Convert.ToInt32(@ViewData["FSE_TRANSPORT_PESSOAL_ANTE_ACUM"]) ).Equals(0)){<text> 0 %</text>  } else { decimal FSE_TRANSPORT_PESSOAL_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_TRANSPORT_PESSOAL_REAL_ACUM"]) ; decimal FSE_TRANSPORT_PESSOAL_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_TRANSPORT_PESSOAL_ANTE_ACUM"]) ; @Html.Raw((string.Format("{0:N}", ((FSE_TRANSPORT_PESSOAL_REAL_ACUM - FSE_TRANSPORT_PESSOAL_ANTE_ACUM) / Math.Abs(FSE_TRANSPORT_PESSOAL_ANTE_ACUM)) * 100))) <text>%</text>} }.
               </p>
            <p> No mesmo período a Variação do Volume de Negócios (inclui Variação de Produção) foi de
             @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else { if ((Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]) ).Equals(0)){<text> 0 %</text>  } else { decimal IND_VN_REAL_ACUM = Convert.ToInt32(@ViewData["IND_VN_REAL_ACUM"]) ; decimal IND_VN_ANTE_ACUM = Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]) ; @Html.Raw((string.Format("{0:N}", ((IND_VN_REAL_ACUM - IND_VN_ANTE_ACUM) / Math.Abs(IND_VN_ANTE_ACUM)) * 100))) <text>%</text>} }.
            @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") || @ViewData["FSE_TRANSPORT_PESSOAL_REAL_ACUM"].Equals("calc") || @ViewData["FSE_TRANSPORT_PESSOAL_ANTE_ACUM"].Equals("calc") || Convert.ToDecimal(@ViewData["FSE_TRANSPORT_PESSOAL_ANTE_ACUM"]).Equals(0) || Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]).Equals(0)) { <text></text> } else { if (((Convert.ToDecimal(@ViewData["FSE_TRANSPORT_PESSOAL_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["FSE_TRANSPORT_PESSOAL_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["FSE_TRANSPORT_PESSOAL_ANTE_ACUM"]))) * 100 >= ((Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))/Math.Abs(Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])))*100 )        {  <text>Sendo a variação do Transporte de Pessoal superior à variação do Volume de Negócios verifica-se uma perda relativa de Rentabilidade Operacional </text> ; }  else   {  <text>Sendo a variação do Transporte de Pessoal inferior à variação do Volume de Negócios verifica-se um ganho relativo de Rentabilidade Operacional </text> ; } }.
       </p>
          </td>
         <td style="width:50%">
             <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_038"></canvas>
         </td>
     </tr>
          <tr>
         <td style="width:50%">
             <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_039"></canvas>
         </td>
         <td  style="width:50%">O Peso do Transporte de Pessoal no Volume de Negócios (VN: inclui variação de Produção), em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])), atingiu o valor de
             @if (@ViewData["FSE_TRANSPORT_PESSOAL_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc")) { <text>calc.</text>  } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_TRANSPORT_PESSOAL_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) * 100)))} %
         sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiu o valor de
             @if (@ViewData["FSE_TRANSPORT_PESSOAL_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>calc.</text>  } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_TRANSPORT_PESSOAL_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) * 100)))} %,
         verificando-se @if (@ViewData["FSE_TRANSPORT_PESSOAL_REAL_ACUM"].Equals("calc") || @ViewData["FSE_TRANSPORT_PESSOAL_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>    -</text>  } else { if ((Convert.ToDecimal(@ViewData["FSE_TRANSPORT_PESSOAL_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_TRANSPORT_PESSOAL_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))) {  <text> uma diminuição de eficiência </text> ; } else {  <text> um aumento de eficiência de </text>  ; } }
                         @if (@ViewData["FSE_TRANSPORT_PESSOAL_REAL_ACUM"].Equals("calc") || @ViewData["FSE_TRANSPORT_PESSOAL_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>    -</text>  } else { if ((Convert.ToDecimal(@ViewData["FSE_TRANSPORT_PESSOAL_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0)){<text> 0 %</text>  } else { decimal PESO_FSE_TRANSPORT_PESSOAL_VN_REAL_ACUM = Convert.ToDecimal(@ViewData["FSE_TRANSPORT_PESSOAL_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]); decimal PESO_FSE_TRANSPORT_PESSOAL_VN_ANTE_ACUM = Convert.ToDecimal(@ViewData["FSE_TRANSPORT_PESSOAL_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((PESO_FSE_TRANSPORT_PESSOAL_VN_REAL_ACUM - PESO_FSE_TRANSPORT_PESSOAL_VN_ANTE_ACUM) )*100*-1 ))) <text>%</text>} }.
         </td>

     </tr>
</table>}}  @if (@ViewData["FSE_TRANSPORT_MERCAD_REAL_ACUM"].Equals("calc"))  {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_040"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_041" style="display:none"></canvas>} else { if ((Convert.ToDecimal(@ViewData["FSE_TRANSPORT_MERCAD_REAL_ACUM"])) == 0)  {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_040"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_041" style="display:none"></canvas>} else { <div class="page-breaker"></div> <table  class="graficos_textos"> <tr> <td class="titulos_mapas" colspan="2"> Transporte de Mercadorias </td> </tr>
     <tr>
       <td  style="width:50%"> 
           <p>O Transporte de Mercadorias, em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])) atingiram o valor de 
             @if (@ViewData["FSE_TRANSPORT_MERCAD_REAL_ACUM"].Equals("calc")) { <text>calc.</text> } else { @Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_TRANSPORT_MERCAD_REAL_ACUM"])))))} €,
         sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiram o valor de
             @if (@ViewData["FSE_TRANSPORT_MERCAD_ANTE_ACUM"].Equals("calc")) { <text>calc.</text> } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_TRANSPORT_MERCAD_ANTE_ACUM"]) ))))} €,
         verificando-se @if (@ViewData["FSE_TRANSPORT_MERCAD_REAL_ACUM"].Equals("calc") || @ViewData["FSE_TRANSPORT_MERCAD_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else {if ((Convert.ToDecimal(@ViewData["FSE_TRANSPORT_MERCAD_REAL_ACUM"]) ) >= (Convert.ToDecimal(@ViewData["FSE_TRANSPORT_MERCAD_ANTE_ACUM"]) ))      {  <text> um crescimento de </text> ; }  else   {  <text> uma diminuição de </text>  ; }}
                         @if (@ViewData["FSE_TRANSPORT_MERCAD_REAL_ACUM"].Equals("calc") || @ViewData["FSE_TRANSPORT_MERCAD_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else { if ((Convert.ToInt32(@ViewData["FSE_TRANSPORT_MERCAD_ANTE_ACUM"]) ).Equals(0)){<text> 0 %</text>  } else { decimal FSE_TRANSPORT_MERCAD_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_TRANSPORT_MERCAD_REAL_ACUM"]) ; decimal FSE_TRANSPORT_MERCAD_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_TRANSPORT_MERCAD_ANTE_ACUM"]) ; @Html.Raw((string.Format("{0:N}", ((FSE_TRANSPORT_MERCAD_REAL_ACUM - FSE_TRANSPORT_MERCAD_ANTE_ACUM) / Math.Abs(FSE_TRANSPORT_MERCAD_ANTE_ACUM)) * 100))) <text>%</text>} }.
               </p>
            <p> No mesmo período a Variação do Volume de Negócios (inclui Variação de Produção) foi de
             @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else { if ((Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]) ).Equals(0)){<text> 0 %</text>  } else { decimal IND_VN_REAL_ACUM = Convert.ToInt32(@ViewData["IND_VN_REAL_ACUM"]) ; decimal IND_VN_ANTE_ACUM = Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]) ; @Html.Raw((string.Format("{0:N}", ((IND_VN_REAL_ACUM - IND_VN_ANTE_ACUM) / Math.Abs(IND_VN_ANTE_ACUM)) * 100))) <text>%</text>} }.
            @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") || @ViewData["FSE_TRANSPORT_MERCAD_REAL_ACUM"].Equals("calc") || @ViewData["FSE_TRANSPORT_MERCAD_ANTE_ACUM"].Equals("calc") || Convert.ToDecimal(@ViewData["FSE_TRANSPORT_MERCAD_ANTE_ACUM"]).Equals(0) || Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]).Equals(0)) { <text></text> } else { if (((Convert.ToDecimal(@ViewData["FSE_TRANSPORT_MERCAD_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["FSE_TRANSPORT_MERCAD_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["FSE_TRANSPORT_MERCAD_ANTE_ACUM"]))) * 100 >= ((Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))/Math.Abs(Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])))*100 )        {  <text>Sendo a variação do Transporte de Mercadorias superior à variação do Volume de Negócios verifica-se uma perda relativa de Rentabilidade Operacional </text> ; }  else   {  <text>Sendo a variação do Transporte de Mercadorias inferior à variação do Volume de Negócios verifica-se um ganho relativo de Rentabilidade Operacional </text> ; } }.
       </p>
          </td>
         <td style="width:50%">
             <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_040"></canvas>
         </td>
     </tr>
          <tr>
         <td style="width:50%">
             <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_041"></canvas>
         </td>
         <td  style="width:50%">O Peso do Transporte de Mercadorias no Volume de Negócios (VN: inclui variação de Produção), em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])), atingiu o valor de
             @if (@ViewData["FSE_TRANSPORT_MERCAD_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc")) { <text>calc.</text>  } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_TRANSPORT_MERCAD_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) * 100)))} %
         sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiu o valor de
             @if (@ViewData["FSE_TRANSPORT_MERCAD_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>calc.</text>  } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_TRANSPORT_MERCAD_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) * 100)))} %,
         verificando-se @if (@ViewData["FSE_TRANSPORT_MERCAD_REAL_ACUM"].Equals("calc") || @ViewData["FSE_TRANSPORT_MERCAD_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>    -</text>  } else { if ((Convert.ToDecimal(@ViewData["FSE_TRANSPORT_MERCAD_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_TRANSPORT_MERCAD_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))) {  <text> uma diminuição de eficiência </text> ; } else {  <text> um aumento de eficiência de </text>  ; } }
                         @if (@ViewData["FSE_TRANSPORT_MERCAD_REAL_ACUM"].Equals("calc") || @ViewData["FSE_TRANSPORT_MERCAD_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>    -</text>  } else { if ((Convert.ToDecimal(@ViewData["FSE_TRANSPORT_MERCAD_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0)){<text> 0 %</text>  } else { decimal PESO_FSE_TRANSPORT_MERCAD_VN_REAL_ACUM = Convert.ToDecimal(@ViewData["FSE_TRANSPORT_MERCAD_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]); decimal PESO_FSE_TRANSPORT_MERCAD_VN_ANTE_ACUM = Convert.ToDecimal(@ViewData["FSE_TRANSPORT_MERCAD_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((PESO_FSE_TRANSPORT_MERCAD_VN_REAL_ACUM - PESO_FSE_TRANSPORT_MERCAD_VN_ANTE_ACUM) )*100*-1 ))) <text>%</text>} }.
         </td>

     </tr>
</table>}}  @if (@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_ACUM"].Equals("calc"))  {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_042"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_043" style="display:none"></canvas>} else { if ((Convert.ToDecimal(@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_ACUM"])) == 0)  {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_042"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_043" style="display:none"></canvas>} else { <div class="page-breaker"></div> <table  class="graficos_textos"> <tr> <td class="titulos_mapas" colspan="2"> Outros de Deslocações, Estadas e Transportes </td> </tr>
     <tr>
       <td  style="width:50%"> 
           <p>Os Outros de Deslocações, Estadas e Transportes, em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])) atingiram o valor de 
             @if (@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_ACUM"].Equals("calc")) { <text>calc.</text> } else { @Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_ACUM"])))))} €,
         sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiram o valor de
             @if (@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM"].Equals("calc")) { <text>calc.</text> } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM"]) ))))} €,
         verificando-se @if (@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else {if ((Convert.ToDecimal(@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_ACUM"]) ) >= (Convert.ToDecimal(@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM"]) ))      {  <text> um crescimento de </text> ; }  else   {  <text> uma diminuição de </text>  ; }}
                         @if (@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else { if ((Convert.ToInt32(@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM"]) ).Equals(0)){<text> 0 %</text>  } else { decimal FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_ACUM"]) ; decimal FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM"]) ; @Html.Raw((string.Format("{0:N}", ((FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_ACUM - FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM) / Math.Abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM)) * 100))) <text>%</text>} }.
               </p>
            <p> No mesmo período a Variação do Volume de Negócios (inclui Variação de Produção) foi de
             @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else { if ((Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]) ).Equals(0)){<text> 0 %</text>  } else { decimal IND_VN_REAL_ACUM = Convert.ToInt32(@ViewData["IND_VN_REAL_ACUM"]) ; decimal IND_VN_ANTE_ACUM = Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]) ; @Html.Raw((string.Format("{0:N}", ((IND_VN_REAL_ACUM - IND_VN_ANTE_ACUM) / Math.Abs(IND_VN_ANTE_ACUM)) * 100))) <text>%</text>} }.
            @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM"].Equals("calc") || Convert.ToDecimal(@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM"]).Equals(0) || Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]).Equals(0)) { <text></text> } else { if (((Convert.ToDecimal(@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM"]))) * 100 >= ((Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))/Math.Abs(Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])))*100 )        {  <text>Sendo a variação dos Outros de Deslocações, Estadas e Transportes superior à variação do Volume de Negócios verifica-se uma perda relativa de Rentabilidade Operacional </text> ; }  else   {  <text>Sendo a variação dos Outros de Deslocações, Estadas e Transportes inferior à variação do Volume de Negócios verifica-se um ganho relativo de Rentabilidade Operacional </text> ; } }.
       </p>
          </td>
         <td style="width:50%">
             <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_042"></canvas>
         </td>
     </tr>
          <tr>
         <td style="width:50%">
             <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_043"></canvas>
         </td>
         <td  style="width:50%">O Peso dos Outros de Deslocações, Estadas e Transportes no Volume de Negócios (VN: inclui variação de Produção), em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])), atingiu o valor de
             @if (@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc")) { <text>calc.</text>  } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) * 100)))} %
         sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiu o valor de
             @if (@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>calc.</text>  } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) * 100)))} %,
         verificando-se @if (@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>    -</text>  } else { if ((Convert.ToDecimal(@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))) {  <text> uma diminuição de eficiência </text> ; } else {  <text> um aumento de eficiência de </text>  ; } }
                         @if (@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>    -</text>  } else { if ((Convert.ToDecimal(@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0)){<text> 0 %</text>  } else { decimal PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_REAL_ACUM = Convert.ToDecimal(@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]); decimal PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANTE_ACUM = Convert.ToDecimal(@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_REAL_ACUM - PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANTE_ACUM) )*100*-1 ))) <text>%</text>} }.
         </td>

     </tr>
</table>}}  @if (@ViewData["FSE_RENDAS_ALUGUERES_REAL_ACUM"].Equals("calc"))  {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_044"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_045" style="display:none"></canvas>} else { if ((Convert.ToDecimal(@ViewData["FSE_RENDAS_ALUGUERES_REAL_ACUM"])) == 0)  {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_044"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_045" style="display:none"></canvas>} else { <div class="page-breaker"></div> <table  class="graficos_textos"> <tr> <td class="titulos_mapas" colspan="2"> Rendas e Alugeres </td> </tr>
     <tr>
       <td  style="width:50%"> 
           <p>As Rendas e Alugeres, em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])) atingiram o valor de 
             @if (@ViewData["FSE_RENDAS_ALUGUERES_REAL_ACUM"].Equals("calc")) { <text>calc.</text> } else { @Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_RENDAS_ALUGUERES_REAL_ACUM"])))))} €,
         sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiram o valor de
             @if (@ViewData["FSE_RENDAS_ALUGUERES_ANTE_ACUM"].Equals("calc")) { <text>calc.</text> } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_RENDAS_ALUGUERES_ANTE_ACUM"]) ))))} €,
         verificando-se @if (@ViewData["FSE_RENDAS_ALUGUERES_REAL_ACUM"].Equals("calc") || @ViewData["FSE_RENDAS_ALUGUERES_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else {if ((Convert.ToDecimal(@ViewData["FSE_RENDAS_ALUGUERES_REAL_ACUM"]) ) >= (Convert.ToDecimal(@ViewData["FSE_RENDAS_ALUGUERES_ANTE_ACUM"]) ))      {  <text> um crescimento de </text> ; }  else   {  <text> uma diminuição de </text>  ; }}
                         @if (@ViewData["FSE_RENDAS_ALUGUERES_REAL_ACUM"].Equals("calc") || @ViewData["FSE_RENDAS_ALUGUERES_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else { if ((Convert.ToInt32(@ViewData["FSE_RENDAS_ALUGUERES_ANTE_ACUM"]) ).Equals(0)){<text> 0 %</text>  } else { decimal FSE_RENDAS_ALUGUERES_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_RENDAS_ALUGUERES_REAL_ACUM"]) ; decimal FSE_RENDAS_ALUGUERES_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_RENDAS_ALUGUERES_ANTE_ACUM"]) ; @Html.Raw((string.Format("{0:N}", ((FSE_RENDAS_ALUGUERES_REAL_ACUM - FSE_RENDAS_ALUGUERES_ANTE_ACUM) / Math.Abs(FSE_RENDAS_ALUGUERES_ANTE_ACUM)) * 100))) <text>%</text>} }.
               </p>
            <p> No mesmo período a Variação do Volume de Negócios (inclui Variação de Produção) foi de
             @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else { if ((Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]) ).Equals(0)){<text> 0 %</text>  } else { decimal IND_VN_REAL_ACUM = Convert.ToInt32(@ViewData["IND_VN_REAL_ACUM"]) ; decimal IND_VN_ANTE_ACUM = Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]) ; @Html.Raw((string.Format("{0:N}", ((IND_VN_REAL_ACUM - IND_VN_ANTE_ACUM) / Math.Abs(IND_VN_ANTE_ACUM)) * 100))) <text>%</text>} }.
            @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") || @ViewData["FSE_RENDAS_ALUGUERES_REAL_ACUM"].Equals("calc") || @ViewData["FSE_RENDAS_ALUGUERES_ANTE_ACUM"].Equals("calc") || Convert.ToDecimal(@ViewData["FSE_RENDAS_ALUGUERES_ANTE_ACUM"]).Equals(0) || Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]).Equals(0)) { <text></text> } else { if (((Convert.ToDecimal(@ViewData["FSE_RENDAS_ALUGUERES_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["FSE_RENDAS_ALUGUERES_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["FSE_RENDAS_ALUGUERES_ANTE_ACUM"]))) * 100 >= ((Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))/Math.Abs(Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])))*100 )        {  <text>Sendo a variação das Rendas e Alugeres superior à variação do Volume de Negócios verifica-se uma perda relativa de Rentabilidade Operacional </text> ; }  else   {  <text>Sendo a variação das Rendas e Alugeres inferior à variação do Volume de Negócios verifica-se um ganho relativo de Rentabilidade Operacional </text> ; } }.
       </p>
          </td>
         <td style="width:50%">
             <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_044"></canvas>
         </td>
     </tr>
          <tr>
         <td style="width:50%">
             <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_045"></canvas>
         </td>
         <td  style="width:50%">O Peso das Rendas e Alugeres no Volume de Negócios (VN: inclui variação de Produção), em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])), atingiu o valor de
             @if (@ViewData["FSE_RENDAS_ALUGUERES_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc")) { <text>calc.</text>  } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_RENDAS_ALUGUERES_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) * 100)))} %
         sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiu o valor de
             @if (@ViewData["FSE_RENDAS_ALUGUERES_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>calc.</text>  } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_RENDAS_ALUGUERES_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) * 100)))} %,
         verificando-se @if (@ViewData["FSE_RENDAS_ALUGUERES_REAL_ACUM"].Equals("calc") || @ViewData["FSE_RENDAS_ALUGUERES_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>    -</text>  } else { if ((Convert.ToDecimal(@ViewData["FSE_RENDAS_ALUGUERES_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_RENDAS_ALUGUERES_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))) {  <text> uma diminuição de eficiência </text> ; } else {  <text> um aumento de eficiência de </text>  ; } }
                         @if (@ViewData["FSE_RENDAS_ALUGUERES_REAL_ACUM"].Equals("calc") || @ViewData["FSE_RENDAS_ALUGUERES_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>    -</text>  } else { if ((Convert.ToDecimal(@ViewData["FSE_RENDAS_ALUGUERES_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0)){<text> 0 %</text>  } else { decimal PESO_FSE_RENDAS_ALUGUERES_VN_REAL_ACUM = Convert.ToDecimal(@ViewData["FSE_RENDAS_ALUGUERES_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]); decimal PESO_FSE_RENDAS_ALUGUERES_VN_ANTE_ACUM = Convert.ToDecimal(@ViewData["FSE_RENDAS_ALUGUERES_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((PESO_FSE_RENDAS_ALUGUERES_VN_REAL_ACUM - PESO_FSE_RENDAS_ALUGUERES_VN_ANTE_ACUM) )*100*-1 ))) <text>%</text>} }.
         </td>

     </tr>
</table>}}  @if (@ViewData["FSE_COMUNICACAO_REAL_ACUM"].Equals("calc"))  {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_046"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_047" style="display:none"></canvas>} else { if ((Convert.ToDecimal(@ViewData["FSE_COMUNICACAO_REAL_ACUM"])) == 0)  {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_046"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_047" style="display:none"></canvas>} else { <div class="page-breaker"></div> <table  class="graficos_textos"> <tr> <td class="titulos_mapas" colspan="2"> Comunicação </td> </tr>
     <tr>
       <td  style="width:50%"> 
           <p>A Comunicação, em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])) atingiram o valor de 
             @if (@ViewData["FSE_COMUNICACAO_REAL_ACUM"].Equals("calc")) { <text>calc.</text> } else { @Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_COMUNICACAO_REAL_ACUM"])))))} €,
         sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiram o valor de
             @if (@ViewData["FSE_COMUNICACAO_ANTE_ACUM"].Equals("calc")) { <text>calc.</text> } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_COMUNICACAO_ANTE_ACUM"]) ))))} €,
         verificando-se @if (@ViewData["FSE_COMUNICACAO_REAL_ACUM"].Equals("calc") || @ViewData["FSE_COMUNICACAO_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else {if ((Convert.ToDecimal(@ViewData["FSE_COMUNICACAO_REAL_ACUM"]) ) >= (Convert.ToDecimal(@ViewData["FSE_COMUNICACAO_ANTE_ACUM"]) ))      {  <text> um crescimento de </text> ; }  else   {  <text> uma diminuição de </text>  ; }}
                         @if (@ViewData["FSE_COMUNICACAO_REAL_ACUM"].Equals("calc") || @ViewData["FSE_COMUNICACAO_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else { if ((Convert.ToInt32(@ViewData["FSE_COMUNICACAO_ANTE_ACUM"]) ).Equals(0)){<text> 0 %</text>  } else { decimal FSE_COMUNICACAO_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_COMUNICACAO_REAL_ACUM"]) ; decimal FSE_COMUNICACAO_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_COMUNICACAO_ANTE_ACUM"]) ; @Html.Raw((string.Format("{0:N}", ((FSE_COMUNICACAO_REAL_ACUM - FSE_COMUNICACAO_ANTE_ACUM) / Math.Abs(FSE_COMUNICACAO_ANTE_ACUM)) * 100))) <text>%</text>} }.
               </p>
            <p> No mesmo período a Variação do Volume de Negócios (inclui Variação de Produção) foi de
             @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else { if ((Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]) ).Equals(0)){<text> 0 %</text>  } else { decimal IND_VN_REAL_ACUM = Convert.ToInt32(@ViewData["IND_VN_REAL_ACUM"]) ; decimal IND_VN_ANTE_ACUM = Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]) ; @Html.Raw((string.Format("{0:N}", ((IND_VN_REAL_ACUM - IND_VN_ANTE_ACUM) / Math.Abs(IND_VN_ANTE_ACUM)) * 100))) <text>%</text>} }.
            @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") || @ViewData["FSE_COMUNICACAO_REAL_ACUM"].Equals("calc") || @ViewData["FSE_COMUNICACAO_ANTE_ACUM"].Equals("calc") || Convert.ToDecimal(@ViewData["FSE_COMUNICACAO_ANTE_ACUM"]).Equals(0) || Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]).Equals(0)) { <text></text> } else { if (((Convert.ToDecimal(@ViewData["FSE_COMUNICACAO_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["FSE_COMUNICACAO_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["FSE_COMUNICACAO_ANTE_ACUM"]))) * 100 >= ((Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))/Math.Abs(Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])))*100 )        {  <text>Sendo a variação da Comunicação superior à variação do Volume de Negócios verifica-se uma perda relativa de Rentabilidade Operacional </text> ; }  else   {  <text>Sendo a variação da Comunicação inferior à variação do Volume de Negócios verifica-se um ganho relativo de Rentabilidade Operacional </text> ; } }.
       </p>
          </td>
         <td style="width:50%">
             <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_046"></canvas>
         </td>
     </tr>
          <tr>
         <td style="width:50%">
             <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_047"></canvas>
         </td>
         <td  style="width:50%">O Peso da Comunicação no Volume de Negócios (VN: inclui variação de Produção), em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])), atingiu o valor de
             @if (@ViewData["FSE_COMUNICACAO_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc")) { <text>calc.</text>  } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_COMUNICACAO_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) * 100)))} %
         sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiu o valor de
             @if (@ViewData["FSE_COMUNICACAO_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>calc.</text>  } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_COMUNICACAO_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) * 100)))} %,
         verificando-se @if (@ViewData["FSE_COMUNICACAO_REAL_ACUM"].Equals("calc") || @ViewData["FSE_COMUNICACAO_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>    -</text>  } else { if ((Convert.ToDecimal(@ViewData["FSE_COMUNICACAO_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_COMUNICACAO_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))) {  <text> uma diminuição de eficiência </text> ; } else {  <text> um aumento de eficiência de </text>  ; } }
                         @if (@ViewData["FSE_COMUNICACAO_REAL_ACUM"].Equals("calc") || @ViewData["FSE_COMUNICACAO_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>    -</text>  } else { if ((Convert.ToDecimal(@ViewData["FSE_COMUNICACAO_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0)){<text> 0 %</text>  } else { decimal PESO_FSE_COMUNICACAO_VN_REAL_ACUM = Convert.ToDecimal(@ViewData["FSE_COMUNICACAO_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]); decimal PESO_FSE_COMUNICACAO_VN_ANTE_ACUM = Convert.ToDecimal(@ViewData["FSE_COMUNICACAO_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((PESO_FSE_COMUNICACAO_VN_REAL_ACUM - PESO_FSE_COMUNICACAO_VN_ANTE_ACUM) )*100*-1 ))) <text>%</text>} }.
         </td>

     </tr>
</table>}}  @if (@ViewData["FSE_SEGUROS_REAL_ACUM"].Equals("calc"))  {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_048"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_049" style="display:none"></canvas>} else { if ((Convert.ToDecimal(@ViewData["FSE_SEGUROS_REAL_ACUM"])) == 0)  {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_048"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_049" style="display:none"></canvas>} else { <div class="page-breaker"></div> <table  class="graficos_textos"> <tr> <td class="titulos_mapas" colspan="2"> Seguros </td> </tr>
     <tr>
       <td  style="width:50%"> 
           <p>Os Seguros, em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])) atingiram o valor de 
             @if (@ViewData["FSE_SEGUROS_REAL_ACUM"].Equals("calc")) { <text>calc.</text> } else { @Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_SEGUROS_REAL_ACUM"])))))} €,
         sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiram o valor de
             @if (@ViewData["FSE_SEGUROS_ANTE_ACUM"].Equals("calc")) { <text>calc.</text> } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_SEGUROS_ANTE_ACUM"]) ))))} €,
         verificando-se @if (@ViewData["FSE_SEGUROS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_SEGUROS_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else {if ((Convert.ToDecimal(@ViewData["FSE_SEGUROS_REAL_ACUM"]) ) >= (Convert.ToDecimal(@ViewData["FSE_SEGUROS_ANTE_ACUM"]) ))      {  <text> um crescimento de </text> ; }  else   {  <text> uma diminuição de </text>  ; }}
                         @if (@ViewData["FSE_SEGUROS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_SEGUROS_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else { if ((Convert.ToInt32(@ViewData["FSE_SEGUROS_ANTE_ACUM"]) ).Equals(0)){<text> 0 %</text>  } else { decimal FSE_SEGUROS_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_SEGUROS_REAL_ACUM"]) ; decimal FSE_SEGUROS_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_SEGUROS_ANTE_ACUM"]) ; @Html.Raw((string.Format("{0:N}", ((FSE_SEGUROS_REAL_ACUM - FSE_SEGUROS_ANTE_ACUM) / Math.Abs(FSE_SEGUROS_ANTE_ACUM)) * 100))) <text>%</text>} }.
               </p>
            <p> No mesmo período a Variação do Volume de Negócios (inclui Variação de Produção) foi de
             @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else { if ((Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]) ).Equals(0)){<text> 0 %</text>  } else { decimal IND_VN_REAL_ACUM = Convert.ToInt32(@ViewData["IND_VN_REAL_ACUM"]) ; decimal IND_VN_ANTE_ACUM = Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]) ; @Html.Raw((string.Format("{0:N}", ((IND_VN_REAL_ACUM - IND_VN_ANTE_ACUM) / Math.Abs(IND_VN_ANTE_ACUM)) * 100))) <text>%</text>} }.
            @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") || @ViewData["FSE_SEGUROS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_SEGUROS_ANTE_ACUM"].Equals("calc") || Convert.ToDecimal(@ViewData["FSE_SEGUROS_ANTE_ACUM"]).Equals(0) || Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]).Equals(0)) { <text></text> } else { if (((Convert.ToDecimal(@ViewData["FSE_SEGUROS_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["FSE_SEGUROS_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["FSE_SEGUROS_ANTE_ACUM"]))) * 100 >= ((Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))/Math.Abs(Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])))*100 )        {  <text>Sendo a variação dos Seguros superior à variação do Volume de Negócios verifica-se uma perda relativa de Rentabilidade Operacional </text> ; }  else   {  <text>Sendo a variação dos Seguros inferior à variação do Volume de Negócios verifica-se um ganho relativo de Rentabilidade Operacional </text> ; } }.
       </p>
          </td>
         <td style="width:50%">
             <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_048"></canvas>
         </td>
     </tr>
          <tr>
         <td style="width:50%">
             <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_049"></canvas>
         </td>
         <td  style="width:50%">O Peso do Seguros no Volume de Negócios (VN: inclui variação de Produção), em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])), atingiu o valor de
             @if (@ViewData["FSE_SEGUROS_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc")) { <text>calc.</text>  } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_SEGUROS_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) * 100)))} %
         sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiu o valor de
             @if (@ViewData["FSE_SEGUROS_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>calc.</text>  } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_SEGUROS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) * 100)))} %,
         verificando-se @if (@ViewData["FSE_SEGUROS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_SEGUROS_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>    -</text>  } else { if ((Convert.ToDecimal(@ViewData["FSE_SEGUROS_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_SEGUROS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))) {  <text> uma diminuição de eficiência </text> ; } else {  <text> um aumento de eficiência de </text>  ; } }
                         @if (@ViewData["FSE_SEGUROS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_SEGUROS_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>    -</text>  } else { if ((Convert.ToDecimal(@ViewData["FSE_SEGUROS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0)){<text> 0 %</text>  } else { decimal PESO_FSE_SEGUROS_VN_REAL_ACUM = Convert.ToDecimal(@ViewData["FSE_SEGUROS_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]); decimal PESO_FSE_SEGUROS_VN_ANTE_ACUM = Convert.ToDecimal(@ViewData["FSE_SEGUROS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((PESO_FSE_SEGUROS_VN_REAL_ACUM - PESO_FSE_SEGUROS_VN_ANTE_ACUM) )*100*-1 ))) <text>%</text>} }.
         </td>

     </tr>
</table>}}  @if (@ViewData["FSE_ROYALITIES_REAL_ACUM"].Equals("calc"))  {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_050"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_051" style="display:none"></canvas>} else { if ((Convert.ToDecimal(@ViewData["FSE_ROYALITIES_REAL_ACUM"])) == 0)  {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_050"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_051" style="display:none"></canvas>} else { <div class="page-breaker"></div> <table  class="graficos_textos"> <tr> <td class="titulos_mapas" colspan="2"> Royalities </td> </tr>
     <tr>
       <td  style="width:50%"> 
           <p>Os Royalities, em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])) atingiram o valor de 
             @if (@ViewData["FSE_ROYALITIES_REAL_ACUM"].Equals("calc")) { <text>calc.</text> } else { @Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_ROYALITIES_REAL_ACUM"])))))} €,
         sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiram o valor de
             @if (@ViewData["FSE_ROYALITIES_ANTE_ACUM"].Equals("calc")) { <text>calc.</text> } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_ROYALITIES_ANTE_ACUM"]) ))))} €,
         verificando-se @if (@ViewData["FSE_ROYALITIES_REAL_ACUM"].Equals("calc") || @ViewData["FSE_ROYALITIES_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else {if ((Convert.ToDecimal(@ViewData["FSE_ROYALITIES_REAL_ACUM"]) ) >= (Convert.ToDecimal(@ViewData["FSE_ROYALITIES_ANTE_ACUM"]) ))      {  <text> um crescimento de </text> ; }  else   {  <text> uma diminuição de </text>  ; }}
                         @if (@ViewData["FSE_ROYALITIES_REAL_ACUM"].Equals("calc") || @ViewData["FSE_ROYALITIES_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else { if ((Convert.ToInt32(@ViewData["FSE_ROYALITIES_ANTE_ACUM"]) ).Equals(0)){<text> 0 %</text>  } else { decimal FSE_ROYALITIES_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_ROYALITIES_REAL_ACUM"]) ; decimal FSE_ROYALITIES_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_ROYALITIES_ANTE_ACUM"]) ; @Html.Raw((string.Format("{0:N}", ((FSE_ROYALITIES_REAL_ACUM - FSE_ROYALITIES_ANTE_ACUM) / Math.Abs(FSE_ROYALITIES_ANTE_ACUM)) * 100))) <text>%</text>} }.
               </p>
            <p> No mesmo período a Variação do Volume de Negócios (inclui Variação de Produção) foi de
             @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else { if ((Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]) ).Equals(0)){<text> 0 %</text>  } else { decimal IND_VN_REAL_ACUM = Convert.ToInt32(@ViewData["IND_VN_REAL_ACUM"]) ; decimal IND_VN_ANTE_ACUM = Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]) ; @Html.Raw((string.Format("{0:N}", ((IND_VN_REAL_ACUM - IND_VN_ANTE_ACUM) / Math.Abs(IND_VN_ANTE_ACUM)) * 100))) <text>%</text>} }.
            @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") || @ViewData["FSE_ROYALITIES_REAL_ACUM"].Equals("calc") || @ViewData["FSE_ROYALITIES_ANTE_ACUM"].Equals("calc") || Convert.ToDecimal(@ViewData["FSE_ROYALITIES_ANTE_ACUM"]).Equals(0) || Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]).Equals(0)) { <text></text> } else { if (((Convert.ToDecimal(@ViewData["FSE_ROYALITIES_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["FSE_ROYALITIES_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["FSE_ROYALITIES_ANTE_ACUM"]))) * 100 >= ((Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))/Math.Abs(Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])))*100 )        {  <text>Sendo a variação dos Royalities superior à variação do Volume de Negócios verifica-se uma perda relativa de Rentabilidade Operacional </text> ; }  else   {  <text>Sendo a variação dos Royalities inferior à variação do Volume de Negócios verifica-se um ganho relativo de Rentabilidade Operacional </text> ; } }.
       </p>
          </td>
         <td style="width:50%">
             <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_050"></canvas>
         </td>
     </tr>
          <tr>
         <td style="width:50%">
             <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_051"></canvas>
         </td>
         <td  style="width:50%">O Peso dos Royalities no Volume de Negócios (VN: inclui variação de Produção), em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])), atingiu o valor de
             @if (@ViewData["FSE_ROYALITIES_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc")) { <text>calc.</text>  } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_ROYALITIES_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) * 100)))} %
         sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiu o valor de
             @if (@ViewData["FSE_ROYALITIES_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>calc.</text>  } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_ROYALITIES_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) * 100)))} %,
         verificando-se @if (@ViewData["FSE_ROYALITIES_REAL_ACUM"].Equals("calc") || @ViewData["FSE_ROYALITIES_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>    -</text>  } else { if ((Convert.ToDecimal(@ViewData["FSE_ROYALITIES_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_ROYALITIES_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))) {  <text> uma diminuição de eficiência </text> ; } else {  <text> um aumento de eficiência de </text>  ; } }
                         @if (@ViewData["FSE_ROYALITIES_REAL_ACUM"].Equals("calc") || @ViewData["FSE_ROYALITIES_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>    -</text>  } else { if ((Convert.ToDecimal(@ViewData["FSE_ROYALITIES_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0)){<text> 0 %</text>  } else { decimal PESO_FSE_ROYALITIES_VN_REAL_ACUM = Convert.ToDecimal(@ViewData["FSE_ROYALITIES_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]); decimal PESO_FSE_ROYALITIES_VN_ANTE_ACUM = Convert.ToDecimal(@ViewData["FSE_ROYALITIES_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((PESO_FSE_ROYALITIES_VN_REAL_ACUM - PESO_FSE_ROYALITIES_VN_ANTE_ACUM) )*100*-1 ))) <text>%</text>} }.
         </td>

     </tr>
</table>}}  @if (@ViewData["FSE_CONTENS_NOTARIADO_REAL_ACUM"].Equals("calc"))  {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_052"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_053" style="display:none"></canvas>} else { if ((Convert.ToDecimal(@ViewData["FSE_CONTENS_NOTARIADO_REAL_ACUM"])) == 0)  {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_052"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_053" style="display:none"></canvas>} else { <div class="page-breaker"></div> <table  class="graficos_textos"> <tr> <td class="titulos_mapas" colspan="2"> Contensioso e Notariado </td> </tr>
     <tr>
       <td  style="width:50%"> 
           <p>O Contensioso e Notariado, em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])) atingiram o valor de 
             @if (@ViewData["FSE_CONTENS_NOTARIADO_REAL_ACUM"].Equals("calc")) { <text>calc.</text> } else { @Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_CONTENS_NOTARIADO_REAL_ACUM"])))))} €,
         sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiram o valor de
             @if (@ViewData["FSE_CONTENS_NOTARIADO_ANTE_ACUM"].Equals("calc")) { <text>calc.</text> } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_CONTENS_NOTARIADO_ANTE_ACUM"]) ))))} €,
         verificando-se @if (@ViewData["FSE_CONTENS_NOTARIADO_REAL_ACUM"].Equals("calc") || @ViewData["FSE_CONTENS_NOTARIADO_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else {if ((Convert.ToDecimal(@ViewData["FSE_CONTENS_NOTARIADO_REAL_ACUM"]) ) >= (Convert.ToDecimal(@ViewData["FSE_CONTENS_NOTARIADO_ANTE_ACUM"]) ))      {  <text> um crescimento de </text> ; }  else   {  <text> uma diminuição de </text>  ; }}
                         @if (@ViewData["FSE_CONTENS_NOTARIADO_REAL_ACUM"].Equals("calc") || @ViewData["FSE_CONTENS_NOTARIADO_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else { if ((Convert.ToInt32(@ViewData["FSE_CONTENS_NOTARIADO_ANTE_ACUM"]) ).Equals(0)){<text> 0 %</text>  } else { decimal FSE_CONTENS_NOTARIADO_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_CONTENS_NOTARIADO_REAL_ACUM"]) ; decimal FSE_CONTENS_NOTARIADO_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_CONTENS_NOTARIADO_ANTE_ACUM"]) ; @Html.Raw((string.Format("{0:N}", ((FSE_CONTENS_NOTARIADO_REAL_ACUM - FSE_CONTENS_NOTARIADO_ANTE_ACUM) / Math.Abs(FSE_CONTENS_NOTARIADO_ANTE_ACUM)) * 100))) <text>%</text>} }.
               </p>
            <p> No mesmo período a Variação do Volume de Negócios (inclui Variação de Produção) foi de
             @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else { if ((Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]) ).Equals(0)){<text> 0 %</text>  } else { decimal IND_VN_REAL_ACUM = Convert.ToInt32(@ViewData["IND_VN_REAL_ACUM"]) ; decimal IND_VN_ANTE_ACUM = Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]) ; @Html.Raw((string.Format("{0:N}", ((IND_VN_REAL_ACUM - IND_VN_ANTE_ACUM) / Math.Abs(IND_VN_ANTE_ACUM)) * 100))) <text>%</text>} }.
            @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") || @ViewData["FSE_CONTENS_NOTARIADO_REAL_ACUM"].Equals("calc") || @ViewData["FSE_CONTENS_NOTARIADO_ANTE_ACUM"].Equals("calc") || Convert.ToDecimal(@ViewData["FSE_CONTENS_NOTARIADO_ANTE_ACUM"]).Equals(0) || Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]).Equals(0)) { <text></text> } else { if (((Convert.ToDecimal(@ViewData["FSE_CONTENS_NOTARIADO_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["FSE_CONTENS_NOTARIADO_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["FSE_CONTENS_NOTARIADO_ANTE_ACUM"]))) * 100 >= ((Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))/Math.Abs(Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])))*100 )        {  <text>Sendo a variação do Contensioso e Notariado superior à variação do Volume de Negócios verifica-se uma perda relativa de Rentabilidade Operacional </text> ; }  else   {  <text>Sendo a variação do Contensioso e Notariado inferior à variação do Volume de Negócios verifica-se um ganho relativo de Rentabilidade Operacional </text> ; } }.
       </p>
          </td>
         <td style="width:50%">
             <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_052"></canvas>
         </td>
     </tr>
          <tr>
         <td style="width:50%">
             <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_053"></canvas>
         </td>
         <td  style="width:50%">O Peso do Contensioso e Notariado no Volume de Negócios (VN: inclui variação de Produção), em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])), atingiu o valor de
             @if (@ViewData["FSE_CONTENS_NOTARIADO_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc")) { <text>calc.</text>  } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_CONTENS_NOTARIADO_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) * 100)))} %
         sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiu o valor de
             @if (@ViewData["FSE_CONTENS_NOTARIADO_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>calc.</text>  } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_CONTENS_NOTARIADO_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) * 100)))} %,
         verificando-se @if (@ViewData["FSE_CONTENS_NOTARIADO_REAL_ACUM"].Equals("calc") || @ViewData["FSE_CONTENS_NOTARIADO_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>    -</text>  } else { if ((Convert.ToDecimal(@ViewData["FSE_CONTENS_NOTARIADO_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_CONTENS_NOTARIADO_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))) {  <text> uma diminuição de eficiência </text> ; } else {  <text> um aumento de eficiência de </text>  ; } }
                         @if (@ViewData["FSE_CONTENS_NOTARIADO_REAL_ACUM"].Equals("calc") || @ViewData["FSE_CONTENS_NOTARIADO_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>    -</text>  } else { if ((Convert.ToDecimal(@ViewData["FSE_CONTENS_NOTARIADO_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0)){<text> 0 %</text>  } else { decimal PESO_FSE_CONTENS_NOTARIADO_VN_REAL_ACUM = Convert.ToDecimal(@ViewData["FSE_CONTENS_NOTARIADO_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]); decimal PESO_FSE_CONTENS_NOTARIADO_VN_ANTE_ACUM = Convert.ToDecimal(@ViewData["FSE_CONTENS_NOTARIADO_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((PESO_FSE_CONTENS_NOTARIADO_VN_REAL_ACUM - PESO_FSE_CONTENS_NOTARIADO_VN_ANTE_ACUM) )*100*-1 ))) <text>%</text>} }.
         </td>

     </tr>
</table>}}  @if (@ViewData["FSE_DESP_RESPRESENT_REAL_ACUM"].Equals("calc"))  {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_054"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_055" style="display:none"></canvas>} else { if ((Convert.ToDecimal(@ViewData["FSE_DESP_RESPRESENT_REAL_ACUM"])) == 0)  {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_054"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_055" style="display:none"></canvas>} else { <div class="page-breaker"></div> <table  class="graficos_textos"> <tr> <td class="titulos_mapas" colspan="2"> Despesas de Representação </td> </tr>
     <tr>
       <td  style="width:50%"> 
           <p>As Despesas de Representação, em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])) atingiram o valor de 
             @if (@ViewData["FSE_DESP_RESPRESENT_REAL_ACUM"].Equals("calc")) { <text>calc.</text> } else { @Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_DESP_RESPRESENT_REAL_ACUM"])))))} €,
         sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiram o valor de
             @if (@ViewData["FSE_DESP_RESPRESENT_ANTE_ACUM"].Equals("calc")) { <text>calc.</text> } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_DESP_RESPRESENT_ANTE_ACUM"]) ))))} €,
         verificando-se @if (@ViewData["FSE_DESP_RESPRESENT_REAL_ACUM"].Equals("calc") || @ViewData["FSE_DESP_RESPRESENT_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else {if ((Convert.ToDecimal(@ViewData["FSE_DESP_RESPRESENT_REAL_ACUM"]) ) >= (Convert.ToDecimal(@ViewData["FSE_DESP_RESPRESENT_ANTE_ACUM"]) ))      {  <text> um crescimento de </text> ; }  else   {  <text> uma diminuição de </text>  ; }}
                         @if (@ViewData["FSE_DESP_RESPRESENT_REAL_ACUM"].Equals("calc") || @ViewData["FSE_DESP_RESPRESENT_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else { if ((Convert.ToInt32(@ViewData["FSE_DESP_RESPRESENT_ANTE_ACUM"]) ).Equals(0)){<text> 0 %</text>  } else { decimal FSE_DESP_RESPRESENT_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_DESP_RESPRESENT_REAL_ACUM"]) ; decimal FSE_DESP_RESPRESENT_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_DESP_RESPRESENT_ANTE_ACUM"]) ; @Html.Raw((string.Format("{0:N}", ((FSE_DESP_RESPRESENT_REAL_ACUM - FSE_DESP_RESPRESENT_ANTE_ACUM) / Math.Abs(FSE_DESP_RESPRESENT_ANTE_ACUM)) * 100))) <text>%</text>} }.
               </p>
            <p> No mesmo período a Variação do Volume de Negócios (inclui Variação de Produção) foi de
             @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else { if ((Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]) ).Equals(0)){<text> 0 %</text>  } else { decimal IND_VN_REAL_ACUM = Convert.ToInt32(@ViewData["IND_VN_REAL_ACUM"]) ; decimal IND_VN_ANTE_ACUM = Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]) ; @Html.Raw((string.Format("{0:N}", ((IND_VN_REAL_ACUM - IND_VN_ANTE_ACUM) / Math.Abs(IND_VN_ANTE_ACUM)) * 100))) <text>%</text>} }.
            @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") || @ViewData["FSE_DESP_RESPRESENT_REAL_ACUM"].Equals("calc") || @ViewData["FSE_DESP_RESPRESENT_ANTE_ACUM"].Equals("calc") || Convert.ToDecimal(@ViewData["FSE_DESP_RESPRESENT_ANTE_ACUM"]).Equals(0) || Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]).Equals(0)) { <text></text> } else { if (((Convert.ToDecimal(@ViewData["FSE_DESP_RESPRESENT_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["FSE_DESP_RESPRESENT_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["FSE_DESP_RESPRESENT_ANTE_ACUM"]))) * 100 >= ((Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))/Math.Abs(Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])))*100 )        {  <text>Sendo a variação das Despesas de Representação superior à variação do Volume de Negócios verifica-se uma perda relativa de Rentabilidade Operacional </text> ; }  else   {  <text>Sendo a variação das Despesas de Representação inferior à variação do Volume de Negócios verifica-se um ganho relativo de Rentabilidade Operacional </text> ; } }.
       </p>
          </td>
         <td style="width:50%">
             <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_054"></canvas>
         </td>
     </tr>
          <tr>
         <td style="width:50%">
             <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_055"></canvas>
         </td>
         <td  style="width:50%">O Peso das Despesas de Representação no Volume de Negócios (VN: inclui variação de Produção), em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])), atingiu o valor de
             @if (@ViewData["FSE_DESP_RESPRESENT_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc")) { <text>calc.</text>  } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_DESP_RESPRESENT_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) * 100)))} %
         sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiu o valor de
             @if (@ViewData["FSE_DESP_RESPRESENT_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>calc.</text>  } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_DESP_RESPRESENT_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) * 100)))} %,
         verificando-se @if (@ViewData["FSE_DESP_RESPRESENT_REAL_ACUM"].Equals("calc") || @ViewData["FSE_DESP_RESPRESENT_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>    -</text>  } else { if ((Convert.ToDecimal(@ViewData["FSE_DESP_RESPRESENT_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_DESP_RESPRESENT_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))) {  <text> uma diminuição de eficiência </text> ; } else {  <text> um aumento de eficiência de </text>  ; } }
                         @if (@ViewData["FSE_DESP_RESPRESENT_REAL_ACUM"].Equals("calc") || @ViewData["FSE_DESP_RESPRESENT_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>    -</text>  } else { if ((Convert.ToDecimal(@ViewData["FSE_DESP_RESPRESENT_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0)){<text> 0 %</text>  } else { decimal PESO_FSE_DESP_RESPRESENT_VN_REAL_ACUM = Convert.ToDecimal(@ViewData["FSE_DESP_RESPRESENT_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]); decimal PESO_FSE_DESP_RESPRESENT_VN_ANTE_ACUM = Convert.ToDecimal(@ViewData["FSE_DESP_RESPRESENT_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((PESO_FSE_DESP_RESPRESENT_VN_REAL_ACUM - PESO_FSE_DESP_RESPRESENT_VN_ANTE_ACUM) )*100*-1 ))) <text>%</text>} }.
         </td>

     </tr>
</table>}}  @if (@ViewData["FSE_LIMP_HIG_CONFORT_REAL_ACUM"].Equals("calc"))  {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_056"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_057" style="display:none"></canvas>} else { if ((Convert.ToDecimal(@ViewData["FSE_LIMP_HIG_CONFORT_REAL_ACUM"])) == 0)  {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_056"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_057" style="display:none"></canvas>} else { <div class="page-breaker"></div> <table  class="graficos_textos"> <tr> <td class="titulos_mapas" colspan="2"> Limpeza, Higiene e Conforto </td> </tr>
     <tr>
       <td  style="width:50%"> 
           <p>A Limpeza, Higiene e Conforto, em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])) atingiram o valor de 
             @if (@ViewData["FSE_LIMP_HIG_CONFORT_REAL_ACUM"].Equals("calc")) { <text>calc.</text> } else { @Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_LIMP_HIG_CONFORT_REAL_ACUM"])))))} €,
         sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiram o valor de
             @if (@ViewData["FSE_LIMP_HIG_CONFORT_ANTE_ACUM"].Equals("calc")) { <text>calc.</text> } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_LIMP_HIG_CONFORT_ANTE_ACUM"]) ))))} €,
         verificando-se @if (@ViewData["FSE_LIMP_HIG_CONFORT_REAL_ACUM"].Equals("calc") || @ViewData["FSE_LIMP_HIG_CONFORT_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else {if ((Convert.ToDecimal(@ViewData["FSE_LIMP_HIG_CONFORT_REAL_ACUM"]) ) >= (Convert.ToDecimal(@ViewData["FSE_LIMP_HIG_CONFORT_ANTE_ACUM"]) ))      {  <text> um crescimento de </text> ; }  else   {  <text> uma diminuição de </text>  ; }}
                         @if (@ViewData["FSE_LIMP_HIG_CONFORT_REAL_ACUM"].Equals("calc") || @ViewData["FSE_LIMP_HIG_CONFORT_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else { if ((Convert.ToInt32(@ViewData["FSE_LIMP_HIG_CONFORT_ANTE_ACUM"]) ).Equals(0)){<text> 0 %</text>  } else { decimal FSE_LIMP_HIG_CONFORT_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_LIMP_HIG_CONFORT_REAL_ACUM"]) ; decimal FSE_LIMP_HIG_CONFORT_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_LIMP_HIG_CONFORT_ANTE_ACUM"]) ; @Html.Raw((string.Format("{0:N}", ((FSE_LIMP_HIG_CONFORT_REAL_ACUM - FSE_LIMP_HIG_CONFORT_ANTE_ACUM) / Math.Abs(FSE_LIMP_HIG_CONFORT_ANTE_ACUM)) * 100))) <text>%</text>} }.
               </p>
            <p> No mesmo período a Variação do Volume de Negócios (inclui Variação de Produção) foi de
             @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else { if ((Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]) ).Equals(0)){<text> 0 %</text>  } else { decimal IND_VN_REAL_ACUM = Convert.ToInt32(@ViewData["IND_VN_REAL_ACUM"]) ; decimal IND_VN_ANTE_ACUM = Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]) ; @Html.Raw((string.Format("{0:N}", ((IND_VN_REAL_ACUM - IND_VN_ANTE_ACUM) / Math.Abs(IND_VN_ANTE_ACUM)) * 100))) <text>%</text>} }.
            @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") || @ViewData["FSE_LIMP_HIG_CONFORT_REAL_ACUM"].Equals("calc") || @ViewData["FSE_LIMP_HIG_CONFORT_ANTE_ACUM"].Equals("calc") || Convert.ToDecimal(@ViewData["FSE_LIMP_HIG_CONFORT_ANTE_ACUM"]).Equals(0) || Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]).Equals(0)) { <text></text> } else { if (((Convert.ToDecimal(@ViewData["FSE_LIMP_HIG_CONFORT_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["FSE_LIMP_HIG_CONFORT_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["FSE_LIMP_HIG_CONFORT_ANTE_ACUM"]))) * 100 >= ((Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))/Math.Abs(Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])))*100 )        {  <text>Sendo a variação da Limpeza, Higiene e Conforto superior à variação do Volume de Negócios verifica-se uma perda relativa de Rentabilidade Operacional </text> ; }  else   {  <text>Sendo a variação da Limpeza, Higiene e Conforto inferior à variação do Volume de Negócios verifica-se um ganho relativo de Rentabilidade Operacional </text> ; } }.
       </p>
          </td>
         <td style="width:50%">
             <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_056"></canvas>
         </td>
     </tr>
          <tr>
         <td style="width:50%">
             <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_057"></canvas>
         </td>
         <td  style="width:50%">O Peso da Limpeza, Higiene e Conforto no Volume de Negócios (VN: inclui variação de Produção), em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])), atingiu o valor de
             @if (@ViewData["FSE_LIMP_HIG_CONFORT_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc")) { <text>calc.</text>  } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_LIMP_HIG_CONFORT_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) * 100)))} %
         sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiu o valor de
             @if (@ViewData["FSE_LIMP_HIG_CONFORT_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>calc.</text>  } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_LIMP_HIG_CONFORT_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) * 100)))} %,
         verificando-se @if (@ViewData["FSE_LIMP_HIG_CONFORT_REAL_ACUM"].Equals("calc") || @ViewData["FSE_LIMP_HIG_CONFORT_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>    -</text>  } else { if ((Convert.ToDecimal(@ViewData["FSE_LIMP_HIG_CONFORT_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_LIMP_HIG_CONFORT_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))) {  <text> uma diminuição de eficiência </text> ; } else {  <text> um aumento de eficiência de </text>  ; } }
                         @if (@ViewData["FSE_LIMP_HIG_CONFORT_REAL_ACUM"].Equals("calc") || @ViewData["FSE_LIMP_HIG_CONFORT_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>    -</text>  } else { if ((Convert.ToDecimal(@ViewData["FSE_LIMP_HIG_CONFORT_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0)){<text> 0 %</text>  } else { decimal PESO_FSE_LIMP_HIG_CONFORT_VN_REAL_ACUM = Convert.ToDecimal(@ViewData["FSE_LIMP_HIG_CONFORT_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]); decimal PESO_FSE_LIMP_HIG_CONFORT_VN_ANTE_ACUM = Convert.ToDecimal(@ViewData["FSE_LIMP_HIG_CONFORT_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((PESO_FSE_LIMP_HIG_CONFORT_VN_REAL_ACUM - PESO_FSE_LIMP_HIG_CONFORT_VN_ANTE_ACUM) )*100*-1 ))) <text>%</text>} }.
         </td>

     </tr>
</table>}}  @if (@ViewData["FSE_OUTROS_SERV_DIVERSOS_REAL_ACUM"].Equals("calc"))  {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_058"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_059" style="display:none"></canvas>} else { if ((Convert.ToDecimal(@ViewData["FSE_OUTROS_SERV_DIVERSOS_REAL_ACUM"])) == 0)  {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_058"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_059" style="display:none"></canvas>} else { <div class="page-breaker"></div> <table  class="graficos_textos"> <tr> <td class="titulos_mapas" colspan="2"> Outros de Serviços Diversos </td> </tr>
     <tr>
       <td  style="width:50%"> 
           <p>Os Outros de Serviços Diversos, em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])) atingiram o valor de 
             @if (@ViewData["FSE_OUTROS_SERV_DIVERSOS_REAL_ACUM"].Equals("calc")) { <text>calc.</text> } else { @Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_OUTROS_SERV_DIVERSOS_REAL_ACUM"])))))} €,
         sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiram o valor de
             @if (@ViewData["FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM"].Equals("calc")) { <text>calc.</text> } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM"]) ))))} €,
         verificando-se @if (@ViewData["FSE_OUTROS_SERV_DIVERSOS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else {if ((Convert.ToDecimal(@ViewData["FSE_OUTROS_SERV_DIVERSOS_REAL_ACUM"]) ) >= (Convert.ToDecimal(@ViewData["FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM"]) ))      {  <text> um crescimento de </text> ; }  else   {  <text> uma diminuição de </text>  ; }}
                         @if (@ViewData["FSE_OUTROS_SERV_DIVERSOS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else { if ((Convert.ToInt32(@ViewData["FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM"]) ).Equals(0)){<text> 0 %</text>  } else { decimal FSE_OUTROS_SERV_DIVERSOS_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_OUTROS_SERV_DIVERSOS_REAL_ACUM"]) ; decimal FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM"]) ; @Html.Raw((string.Format("{0:N}", ((FSE_OUTROS_SERV_DIVERSOS_REAL_ACUM - FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM) / Math.Abs(FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM)) * 100))) <text>%</text>} }.
               </p>
            <p> No mesmo período a Variação do Volume de Negócios (inclui Variação de Produção) foi de
             @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else { if ((Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]) ).Equals(0)){<text> 0 %</text>  } else { decimal IND_VN_REAL_ACUM = Convert.ToInt32(@ViewData["IND_VN_REAL_ACUM"]) ; decimal IND_VN_ANTE_ACUM = Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]) ; @Html.Raw((string.Format("{0:N}", ((IND_VN_REAL_ACUM - IND_VN_ANTE_ACUM) / Math.Abs(IND_VN_ANTE_ACUM)) * 100))) <text>%</text>} }.
            @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_SERV_DIVERSOS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM"].Equals("calc") || Convert.ToDecimal(@ViewData["FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM"]).Equals(0) || Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]).Equals(0)) { <text></text> } else { if (((Convert.ToDecimal(@ViewData["FSE_OUTROS_SERV_DIVERSOS_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM"]))) * 100 >= ((Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))/Math.Abs(Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])))*100 )        {  <text>Sendo a variação dos Outros de Serviços Diversos superior à variação do Volume de Negócios verifica-se uma perda relativa de Rentabilidade Operacional </text> ; }  else   {  <text>Sendo a variação dos Outros de Serviços Diversos inferior à variação do Volume de Negócios verifica-se um ganho relativo de Rentabilidade Operacional </text> ; } }.
       </p>
          </td>
         <td style="width:50%">
             <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_058"></canvas>
         </td>
     </tr>
          <tr>
         <td style="width:50%">
             <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_059"></canvas>
         </td>
         <td  style="width:50%">O Peso dos Outros de Serviços Diversos no Volume de Negócios (VN: inclui variação de Produção), em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])), atingiu o valor de
             @if (@ViewData["FSE_OUTROS_SERV_DIVERSOS_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc")) { <text>calc.</text>  } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_OUTROS_SERV_DIVERSOS_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) * 100)))} %
         sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiu o valor de
             @if (@ViewData["FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>calc.</text>  } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) * 100)))} %,
         verificando-se @if (@ViewData["FSE_OUTROS_SERV_DIVERSOS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>    -</text>  } else { if ((Convert.ToDecimal(@ViewData["FSE_OUTROS_SERV_DIVERSOS_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))) {  <text> uma diminuição de eficiência </text> ; } else {  <text> um aumento de eficiência de </text>  ; } }
                         @if (@ViewData["FSE_OUTROS_SERV_DIVERSOS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc")) { <text>    -</text>  } else { if ((Convert.ToDecimal(@ViewData["FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0)){<text> 0 %</text>  } else { decimal PESO_FSE_OUTROS_SERV_DIVERSOS_VN_REAL_ACUM = Convert.ToDecimal(@ViewData["FSE_OUTROS_SERV_DIVERSOS_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]); decimal PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANTE_ACUM = Convert.ToDecimal(@ViewData["FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((PESO_FSE_OUTROS_SERV_DIVERSOS_VN_REAL_ACUM - PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANTE_ACUM) )*100*-1 ))) <text>%</text>} }.
         </td>

     </tr> </table> }}


    <script src="@Url.Content("~/Scripts/chart.js@2.8.0.js")"></script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_030-----------------------------------------------------------*@
<script>

    var ANO_VERSAO_REAL = @Html.Raw((string.Format("{0:0}", ViewData["ANO_VERSAO_REAL"])));
    var ANO_VERSAO_REAL_ = ANO_VERSAO_REAL.toString().substr(ANO_VERSAO_REAL.toString().length - 2,ANO_VERSAO_REAL.toString().length);

    var ANO_VERSAO_ANTE = @Html.Raw((string.Format("{0:0}", ViewData["ANO_VERSAO_ANTE"])));
    var ANO_VERSAO_ANTE_ = ANO_VERSAO_ANTE.toString().substr(ANO_VERSAO_ANTE.toString().length - 2,ANO_VERSAO_ANTE.toString().length);


    if(@ViewData["MES_ACUM_REAL"]<1){ var IND_VN_ANO_N_JANEIRO = 'nd'; var IND_VN_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JANEIRO"]))); var IND_VN_ANO_N_JANEIRO_MAX_MIN = IND_VN_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var IND_VN_ANO_N_FEVEREIRO = 'nd'; var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_FEVEREIRO"]))); var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = IND_VN_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var IND_VN_ANO_N_MARCO = 'nd'; var IND_VN_ANO_N_MARCO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MARCO"]))); var IND_VN_ANO_N_MARCO_MAX_MIN = IND_VN_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var IND_VN_ANO_N_ABRIL = 'nd'; var IND_VN_ANO_N_ABRIL_MAX_MIN = 0;  } else { var IND_VN_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_ABRIL"]))); var IND_VN_ANO_N_ABRIL_MAX_MIN = IND_VN_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var IND_VN_ANO_N_MAIO = 'nd'; var IND_VN_ANO_N_MAIO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MAIO"]))); var IND_VN_ANO_N_MAIO_MAX_MIN = IND_VN_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var IND_VN_ANO_N_JUNHO = 'nd'; var IND_VN_ANO_N_JUNHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JUNHO"]))); var IND_VN_ANO_N_JUNHO_MAX_MIN = IND_VN_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var IND_VN_ANO_N_JULHO = 'nd'; var IND_VN_ANO_N_JULHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JULHO"]))); var IND_VN_ANO_N_JULHO_MAX_MIN = IND_VN_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var IND_VN_ANO_N_AGOSTO = 'nd'; var IND_VN_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_AGOSTO"]))); var IND_VN_ANO_N_AGOSTO_MAX_MIN = IND_VN_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var IND_VN_ANO_N_SETEMBRO = 'nd'; var IND_VN_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_SETEMBRO"]))); var IND_VN_ANO_N_SETEMBRO_MAX_MIN = IND_VN_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var IND_VN_ANO_N_OUTUBRO = 'nd'; var IND_VN_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_OUTUBRO"]))); var IND_VN_ANO_N_OUTUBRO_MAX_MIN = IND_VN_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var IND_VN_ANO_N_NOVEMBRO = 'nd'; var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_NOVEMBRO"]))); var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = IND_VN_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var IND_VN_ANO_N_DEZEMBRO = 'nd'; var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_DEZEMBRO"]))); var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = IND_VN_ANO_N_DEZEMBRO };

    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_COMBUSTIVEIS_ANO_N_JANEIRO = 'nd'; var FSE_COMBUSTIVEIS_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var FSE_COMBUSTIVEIS_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_JANEIRO"]))); var FSE_COMBUSTIVEIS_ANO_N_JANEIRO_MAX_MIN = FSE_COMBUSTIVEIS_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_COMBUSTIVEIS_ANO_N_FEVEREIRO = 'nd'; var FSE_COMBUSTIVEIS_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var FSE_COMBUSTIVEIS_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_FEVEREIRO"]))); var FSE_COMBUSTIVEIS_ANO_N_FEVEREIRO_MAX_MIN = FSE_COMBUSTIVEIS_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_COMBUSTIVEIS_ANO_N_MARCO = 'nd'; var FSE_COMBUSTIVEIS_ANO_N_MARCO_MAX_MIN = 0;  } else { var FSE_COMBUSTIVEIS_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_MARCO"]))); var FSE_COMBUSTIVEIS_ANO_N_MARCO_MAX_MIN = FSE_COMBUSTIVEIS_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_COMBUSTIVEIS_ANO_N_ABRIL = 'nd'; var FSE_COMBUSTIVEIS_ANO_N_ABRIL_MAX_MIN = 0;  } else { var FSE_COMBUSTIVEIS_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_ABRIL"]))); var FSE_COMBUSTIVEIS_ANO_N_ABRIL_MAX_MIN = FSE_COMBUSTIVEIS_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_COMBUSTIVEIS_ANO_N_MAIO = 'nd'; var FSE_COMBUSTIVEIS_ANO_N_MAIO_MAX_MIN = 0;  } else { var FSE_COMBUSTIVEIS_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_MAIO"]))); var FSE_COMBUSTIVEIS_ANO_N_MAIO_MAX_MIN = FSE_COMBUSTIVEIS_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_COMBUSTIVEIS_ANO_N_JUNHO = 'nd'; var FSE_COMBUSTIVEIS_ANO_N_JUNHO_MAX_MIN = 0;  } else { var FSE_COMBUSTIVEIS_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_JUNHO"]))); var FSE_COMBUSTIVEIS_ANO_N_JUNHO_MAX_MIN = FSE_COMBUSTIVEIS_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_COMBUSTIVEIS_ANO_N_JULHO = 'nd'; var FSE_COMBUSTIVEIS_ANO_N_JULHO_MAX_MIN = 0;  } else { var FSE_COMBUSTIVEIS_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_JULHO"]))); var FSE_COMBUSTIVEIS_ANO_N_JULHO_MAX_MIN = FSE_COMBUSTIVEIS_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_COMBUSTIVEIS_ANO_N_AGOSTO = 'nd'; var FSE_COMBUSTIVEIS_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var FSE_COMBUSTIVEIS_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_AGOSTO"]))); var FSE_COMBUSTIVEIS_ANO_N_AGOSTO_MAX_MIN = FSE_COMBUSTIVEIS_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_COMBUSTIVEIS_ANO_N_SETEMBRO = 'nd'; var FSE_COMBUSTIVEIS_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var FSE_COMBUSTIVEIS_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_SETEMBRO"]))); var FSE_COMBUSTIVEIS_ANO_N_SETEMBRO_MAX_MIN = FSE_COMBUSTIVEIS_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_COMBUSTIVEIS_ANO_N_OUTUBRO = 'nd'; var FSE_COMBUSTIVEIS_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var FSE_COMBUSTIVEIS_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_OUTUBRO"]))); var FSE_COMBUSTIVEIS_ANO_N_OUTUBRO_MAX_MIN = FSE_COMBUSTIVEIS_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_COMBUSTIVEIS_ANO_N_NOVEMBRO = 'nd'; var FSE_COMBUSTIVEIS_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var FSE_COMBUSTIVEIS_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_NOVEMBRO"]))); var FSE_COMBUSTIVEIS_ANO_N_NOVEMBRO_MAX_MIN = FSE_COMBUSTIVEIS_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_COMBUSTIVEIS_ANO_N_DEZEMBRO = 'nd'; var FSE_COMBUSTIVEIS_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var FSE_COMBUSTIVEIS_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_DEZEMBRO"]))); var FSE_COMBUSTIVEIS_ANO_N_DEZEMBRO_MAX_MIN = FSE_COMBUSTIVEIS_ANO_N_DEZEMBRO };


    var FSE_COMBUSTIVEIS_ANO_N_JANEIRO_ACUM = FSE_COMBUSTIVEIS_ANO_N_JANEIRO;
    var FSE_COMBUSTIVEIS_ANO_N_FEVEREIRO_ACUM = FSE_COMBUSTIVEIS_ANO_N_FEVEREIRO + FSE_COMBUSTIVEIS_ANO_N_JANEIRO_ACUM;
    var FSE_COMBUSTIVEIS_ANO_N_MARCO_ACUM = FSE_COMBUSTIVEIS_ANO_N_MARCO + FSE_COMBUSTIVEIS_ANO_N_FEVEREIRO_ACUM;
    var FSE_COMBUSTIVEIS_ANO_N_ABRIL_ACUM = FSE_COMBUSTIVEIS_ANO_N_ABRIL + FSE_COMBUSTIVEIS_ANO_N_MARCO_ACUM;
    var FSE_COMBUSTIVEIS_ANO_N_MAIO_ACUM = FSE_COMBUSTIVEIS_ANO_N_MAIO + FSE_COMBUSTIVEIS_ANO_N_ABRIL_ACUM;
    var FSE_COMBUSTIVEIS_ANO_N_JUNHO_ACUM = FSE_COMBUSTIVEIS_ANO_N_JUNHO + FSE_COMBUSTIVEIS_ANO_N_MAIO_ACUM;
    var FSE_COMBUSTIVEIS_ANO_N_JULHO_ACUM = FSE_COMBUSTIVEIS_ANO_N_JULHO + FSE_COMBUSTIVEIS_ANO_N_JUNHO_ACUM;
    var FSE_COMBUSTIVEIS_ANO_N_AGOSTO_ACUM = FSE_COMBUSTIVEIS_ANO_N_AGOSTO + FSE_COMBUSTIVEIS_ANO_N_JULHO_ACUM;
    var FSE_COMBUSTIVEIS_ANO_N_SETEMBRO_ACUM = FSE_COMBUSTIVEIS_ANO_N_SETEMBRO + FSE_COMBUSTIVEIS_ANO_N_AGOSTO_ACUM;
    var FSE_COMBUSTIVEIS_ANO_N_OUTUBRO_ACUM = FSE_COMBUSTIVEIS_ANO_N_OUTUBRO + FSE_COMBUSTIVEIS_ANO_N_SETEMBRO_ACUM;
    var FSE_COMBUSTIVEIS_ANO_N_NOVEMBRO_ACUM = FSE_COMBUSTIVEIS_ANO_N_NOVEMBRO + FSE_COMBUSTIVEIS_ANO_N_OUTUBRO_ACUM;
    var FSE_COMBUSTIVEIS_ANO_N_DEZEMBRO_ACUM = FSE_COMBUSTIVEIS_ANO_N_DEZEMBRO + FSE_COMBUSTIVEIS_ANO_N_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_COMBUSTIVEIS_ANO_N_JANEIRO_ACUM = 'nd'; var FSE_COMBUSTIVEIS_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var FSE_COMBUSTIVEIS_ANO_N_JANEIRO_ACUM= FSE_COMBUSTIVEIS_ANO_N_JANEIRO_ACUM; var FSE_COMBUSTIVEIS_ANO_N_JANEIRO_ACUM_MAX_MIN = FSE_COMBUSTIVEIS_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_COMBUSTIVEIS_ANO_N_FEVEREIRO_ACUM = 'nd'; var FSE_COMBUSTIVEIS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var FSE_COMBUSTIVEIS_ANO_N_FEVEREIRO_ACUM= FSE_COMBUSTIVEIS_ANO_N_FEVEREIRO_ACUM; var FSE_COMBUSTIVEIS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = FSE_COMBUSTIVEIS_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_COMBUSTIVEIS_ANO_N_MARCO_ACUM = 'nd'; var FSE_COMBUSTIVEIS_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var FSE_COMBUSTIVEIS_ANO_N_MARCO_ACUM= FSE_COMBUSTIVEIS_ANO_N_MARCO_ACUM; var FSE_COMBUSTIVEIS_ANO_N_MARCO_ACUM_MAX_MIN = FSE_COMBUSTIVEIS_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_COMBUSTIVEIS_ANO_N_ABRIL_ACUM = 'nd'; var FSE_COMBUSTIVEIS_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var FSE_COMBUSTIVEIS_ANO_N_ABRIL_ACUM= FSE_COMBUSTIVEIS_ANO_N_ABRIL_ACUM; var FSE_COMBUSTIVEIS_ANO_N_ABRIL_ACUM_MAX_MIN = FSE_COMBUSTIVEIS_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_COMBUSTIVEIS_ANO_N_MAIO_ACUM = 'nd'; var FSE_COMBUSTIVEIS_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var FSE_COMBUSTIVEIS_ANO_N_MAIO_ACUM= FSE_COMBUSTIVEIS_ANO_N_MAIO_ACUM; var FSE_COMBUSTIVEIS_ANO_N_MAIO_ACUM_MAX_MIN = FSE_COMBUSTIVEIS_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_COMBUSTIVEIS_ANO_N_JUNHO_ACUM = 'nd'; var FSE_COMBUSTIVEIS_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var FSE_COMBUSTIVEIS_ANO_N_JUNHO_ACUM= FSE_COMBUSTIVEIS_ANO_N_JUNHO_ACUM; var FSE_COMBUSTIVEIS_ANO_N_JUNHO_ACUM_MAX_MIN = FSE_COMBUSTIVEIS_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_COMBUSTIVEIS_ANO_N_JULHO_ACUM = 'nd'; var FSE_COMBUSTIVEIS_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var FSE_COMBUSTIVEIS_ANO_N_JULHO_ACUM= FSE_COMBUSTIVEIS_ANO_N_JULHO_ACUM; var FSE_COMBUSTIVEIS_ANO_N_JULHO_ACUM_MAX_MIN = FSE_COMBUSTIVEIS_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_COMBUSTIVEIS_ANO_N_AGOSTO_ACUM = 'nd'; var FSE_COMBUSTIVEIS_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var FSE_COMBUSTIVEIS_ANO_N_AGOSTO_ACUM= FSE_COMBUSTIVEIS_ANO_N_AGOSTO_ACUM; var FSE_COMBUSTIVEIS_ANO_N_AGOSTO_ACUM_MAX_MIN = FSE_COMBUSTIVEIS_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_COMBUSTIVEIS_ANO_N_SETEMBRO_ACUM = 'nd'; var FSE_COMBUSTIVEIS_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_COMBUSTIVEIS_ANO_N_SETEMBRO_ACUM= FSE_COMBUSTIVEIS_ANO_N_SETEMBRO_ACUM; var FSE_COMBUSTIVEIS_ANO_N_SETEMBRO_ACUM_MAX_MIN = FSE_COMBUSTIVEIS_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_COMBUSTIVEIS_ANO_N_OUTUBRO_ACUM = 'nd'; var FSE_COMBUSTIVEIS_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var FSE_COMBUSTIVEIS_ANO_N_OUTUBRO_ACUM= FSE_COMBUSTIVEIS_ANO_N_OUTUBRO_ACUM; var FSE_COMBUSTIVEIS_ANO_N_OUTUBRO_ACUM_MAX_MIN = FSE_COMBUSTIVEIS_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_COMBUSTIVEIS_ANO_N_NOVEMBRO_ACUM = 'nd'; var FSE_COMBUSTIVEIS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_COMBUSTIVEIS_ANO_N_NOVEMBRO_ACUM= FSE_COMBUSTIVEIS_ANO_N_NOVEMBRO_ACUM; var FSE_COMBUSTIVEIS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = FSE_COMBUSTIVEIS_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_COMBUSTIVEIS_ANO_N_DEZEMBRO_ACUM = 'nd'; var FSE_COMBUSTIVEIS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_COMBUSTIVEIS_ANO_N_DEZEMBRO_ACUM= FSE_COMBUSTIVEIS_ANO_N_DEZEMBRO_ACUM; var FSE_COMBUSTIVEIS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = FSE_COMBUSTIVEIS_ANO_N_DEZEMBRO_ACUM };




    var FSE_COMBUSTIVEIS_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_JANEIRO"])));
    var FSE_COMBUSTIVEIS_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_FEVEREIRO"]))) + FSE_COMBUSTIVEIS_ANO_N_1_JANEIRO_ACUM;
    var FSE_COMBUSTIVEIS_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_MARCO"]))) + FSE_COMBUSTIVEIS_ANO_N_1_FEVEREIRO_ACUM;
    var FSE_COMBUSTIVEIS_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_ABRIL"]))) + FSE_COMBUSTIVEIS_ANO_N_1_MARCO_ACUM;
    var FSE_COMBUSTIVEIS_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_MAIO"]))) + FSE_COMBUSTIVEIS_ANO_N_1_ABRIL_ACUM;
    var FSE_COMBUSTIVEIS_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_JUNHO"]))) + FSE_COMBUSTIVEIS_ANO_N_1_MAIO_ACUM;
    var FSE_COMBUSTIVEIS_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_JULHO"]))) + FSE_COMBUSTIVEIS_ANO_N_1_JUNHO_ACUM;
    var FSE_COMBUSTIVEIS_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_AGOSTO"]))) + FSE_COMBUSTIVEIS_ANO_N_1_JULHO_ACUM;
    var FSE_COMBUSTIVEIS_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_SETEMBRO"]))) + FSE_COMBUSTIVEIS_ANO_N_1_AGOSTO_ACUM;
    var FSE_COMBUSTIVEIS_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_OUTUBRO"]))) + FSE_COMBUSTIVEIS_ANO_N_1_SETEMBRO_ACUM;
    var FSE_COMBUSTIVEIS_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_NOVEMBRO"]))) + FSE_COMBUSTIVEIS_ANO_N_1_OUTUBRO_ACUM;
    var FSE_COMBUSTIVEIS_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_DEZEMBRO"]))) + FSE_COMBUSTIVEIS_ANO_N_1_NOVEMBRO_ACUM;


    var FSE_COMBUSTIVEIS_Mensal_Eixo_max_princ= Math.max(
                       FSE_COMBUSTIVEIS_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_COMBUSTIVEIS_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_COMBUSTIVEIS_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_COMBUSTIVEIS_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_COMBUSTIVEIS_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_COMBUSTIVEIS_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_COMBUSTIVEIS_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_COMBUSTIVEIS_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_COMBUSTIVEIS_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_COMBUSTIVEIS_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_COMBUSTIVEIS_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_COMBUSTIVEIS_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_COMBUSTIVEIS_ANO_N_1_JANEIRO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_1_MARCO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_1_ABRIL_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_1_MAIO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_1_JUNHO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_1_JULHO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_1_AGOSTO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_1_SETEMBRO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_1_OUTUBRO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_1_DEZEMBRO_ACUM
                             );
    var FSE_COMBUSTIVEIS_Mensal_Eixo_min_princ= Math.min(

                       FSE_COMBUSTIVEIS_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_COMBUSTIVEIS_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_COMBUSTIVEIS_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_COMBUSTIVEIS_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_COMBUSTIVEIS_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_COMBUSTIVEIS_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_COMBUSTIVEIS_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_COMBUSTIVEIS_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_COMBUSTIVEIS_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_COMBUSTIVEIS_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_COMBUSTIVEIS_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_COMBUSTIVEIS_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_COMBUSTIVEIS_ANO_N_1_JANEIRO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_1_MARCO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_1_ABRIL_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_1_MAIO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_1_JUNHO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_1_JULHO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_1_AGOSTO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_1_SETEMBRO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_1_OUTUBRO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_1_DEZEMBRO_ACUM
                           );
    var FSE_COMBUSTIVEIS_Mensal_Eixo_max_secon= Math.max(
                       FSE_COMBUSTIVEIS_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_COMBUSTIVEIS_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_COMBUSTIVEIS_ANO_N_MARCO_MAX_MIN ,
                       FSE_COMBUSTIVEIS_ANO_N_ABRIL_MAX_MIN ,
                       FSE_COMBUSTIVEIS_ANO_N_MAIO_MAX_MIN ,
                       FSE_COMBUSTIVEIS_ANO_N_JUNHO_MAX_MIN ,
                       FSE_COMBUSTIVEIS_ANO_N_JULHO_MAX_MIN ,
                       FSE_COMBUSTIVEIS_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_COMBUSTIVEIS_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_COMBUSTIVEIS_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_COMBUSTIVEIS_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_COMBUSTIVEIS_ANO_N_DEZEMBRO_MAX_MIN ,



                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_DEZEMBRO"])))

                            );
    var FSE_COMBUSTIVEIS_Mensal_Eixo_min_secon= Math.min(
                       FSE_COMBUSTIVEIS_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_COMBUSTIVEIS_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_COMBUSTIVEIS_ANO_N_MARCO_MAX_MIN ,
                       FSE_COMBUSTIVEIS_ANO_N_ABRIL_MAX_MIN ,
                       FSE_COMBUSTIVEIS_ANO_N_MAIO_MAX_MIN ,
                       FSE_COMBUSTIVEIS_ANO_N_JUNHO_MAX_MIN ,
                       FSE_COMBUSTIVEIS_ANO_N_JULHO_MAX_MIN ,
                       FSE_COMBUSTIVEIS_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_COMBUSTIVEIS_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_COMBUSTIVEIS_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_COMBUSTIVEIS_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_COMBUSTIVEIS_ANO_N_DEZEMBRO_MAX_MIN ,


                           @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_DEZEMBRO"])))

                          );

    //NOTA TA: Aqui trato o minimo e o maximo do eixo principal
    if(Math.abs(FSE_COMBUSTIVEIS_Mensal_Eixo_max_princ)>=Math.abs(FSE_COMBUSTIVEIS_Mensal_Eixo_min_princ))
    {
        var FSE_COMBUSTIVEIS_Mensal_Eixo_max_princ_=(Math.ceil(FSE_COMBUSTIVEIS_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_COMBUSTIVEIS_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_COMBUSTIVEIS_Mensal_Eixo_max_princ),0).toString().length-1);
        var FSE_COMBUSTIVEIS_Mensal_Eixo_min_princ_= (Math.floor(FSE_COMBUSTIVEIS_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_COMBUSTIVEIS_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_COMBUSTIVEIS_Mensal_Eixo_max_princ),0).toString().length-1);
        //alert(FSE_COMBUSTIVEIS_Mensal_Eixo_max_princ_);
        //alert(FSE_COMBUSTIVEIS_Mensal_Eixo_min_princ_);
    }
    else
    {
        var FSE_COMBUSTIVEIS_Mensal_Eixo_max_princ_=(Math.ceil(FSE_COMBUSTIVEIS_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_COMBUSTIVEIS_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_COMBUSTIVEIS_Mensal_Eixo_min_princ),0).toString().length-1);
        var FSE_COMBUSTIVEIS_Mensal_Eixo_min_princ_= (Math.floor(FSE_COMBUSTIVEIS_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_COMBUSTIVEIS_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_COMBUSTIVEIS_Mensal_Eixo_min_princ),0).toString().length-1);}

    //NOTA TA: Aqui trato o minimo e o maximo do eixo secundario

    if(Math.abs(FSE_COMBUSTIVEIS_Mensal_Eixo_max_secon)>=Math.abs(FSE_COMBUSTIVEIS_Mensal_Eixo_min_secon))
    {
        var FSE_COMBUSTIVEIS_Mensal_Eixo_max_secon_=(Math.ceil(FSE_COMBUSTIVEIS_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_COMBUSTIVEIS_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_COMBUSTIVEIS_Mensal_Eixo_max_secon),0).toString().length-1);
        var FSE_COMBUSTIVEIS_Mensal_Eixo_min_secon_= (Math.floor(FSE_COMBUSTIVEIS_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_COMBUSTIVEIS_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_COMBUSTIVEIS_Mensal_Eixo_max_secon),0).toString().length-1);
        //alert(FSE_COMBUSTIVEIS_Mensal_Eixo_max_secon_);
        //alert(FSE_COMBUSTIVEIS_Mensal_Eixo_min_secon_);
    }
    else
    {
        var FSE_COMBUSTIVEIS_Mensal_Eixo_max_secon_=(Math.ceil(FSE_COMBUSTIVEIS_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_COMBUSTIVEIS_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_COMBUSTIVEIS_Mensal_Eixo_min_secon),0).toString().length-1);
        var FSE_COMBUSTIVEIS_Mensal_Eixo_min_secon_= (Math.floor(FSE_COMBUSTIVEIS_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_COMBUSTIVEIS_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_COMBUSTIVEIS_Mensal_Eixo_min_secon),0).toString().length-1);}


    if(Math.abs(FSE_COMBUSTIVEIS_Mensal_Eixo_min_princ)/Math.abs(FSE_COMBUSTIVEIS_Mensal_Eixo_max_princ)>=Math.abs(FSE_COMBUSTIVEIS_Mensal_Eixo_min_secon)/Math.abs(FSE_COMBUSTIVEIS_Mensal_Eixo_max_secon))
    { if(FSE_COMBUSTIVEIS_Mensal_Eixo_max_princ > 0 && FSE_COMBUSTIVEIS_Mensal_Eixo_min_princ <0 ){ var FSE_COMBUSTIVEIS_Mensal_Eixo_min_secon__=(FSE_COMBUSTIVEIS_Mensal_Eixo_min_princ_*FSE_COMBUSTIVEIS_Mensal_Eixo_max_secon_)/FSE_COMBUSTIVEIS_Mensal_Eixo_max_princ_;} else { var FSE_COMBUSTIVEIS_Mensal_Eixo_min_secon__=FSE_COMBUSTIVEIS_Mensal_Eixo_min_secon_;}
        if(FSE_COMBUSTIVEIS_Mensal_Eixo_max_secon > 0 && FSE_COMBUSTIVEIS_Mensal_Eixo_min_secon <0 ){ var FSE_COMBUSTIVEIS_Mensal_Eixo_min_princ__=(FSE_COMBUSTIVEIS_Mensal_Eixo_min_secon__*FSE_COMBUSTIVEIS_Mensal_Eixo_max_princ_)/FSE_COMBUSTIVEIS_Mensal_Eixo_max_secon_;} else { var FSE_COMBUSTIVEIS_Mensal_Eixo_min_princ__=FSE_COMBUSTIVEIS_Mensal_Eixo_min_princ_;}}
    else
    {if(FSE_COMBUSTIVEIS_Mensal_Eixo_max_secon > 0 && FSE_COMBUSTIVEIS_Mensal_Eixo_min_secon <0 ){ var FSE_COMBUSTIVEIS_Mensal_Eixo_min_princ__=(FSE_COMBUSTIVEIS_Mensal_Eixo_min_secon_*FSE_COMBUSTIVEIS_Mensal_Eixo_max_princ_)/FSE_COMBUSTIVEIS_Mensal_Eixo_max_secon_;} else { var FSE_COMBUSTIVEIS_Mensal_Eixo_min_princ__=FSE_COMBUSTIVEIS_Mensal_Eixo_min_princ_;}
        if(FSE_COMBUSTIVEIS_Mensal_Eixo_max_princ > 0 && FSE_COMBUSTIVEIS_Mensal_Eixo_min_princ <0 ){ var FSE_COMBUSTIVEIS_Mensal_Eixo_min_secon__=(FSE_COMBUSTIVEIS_Mensal_Eixo_min_princ__*FSE_COMBUSTIVEIS_Mensal_Eixo_max_secon_)/FSE_COMBUSTIVEIS_Mensal_Eixo_max_princ_;} else { var FSE_COMBUSTIVEIS_Mensal_Eixo_min_secon__=FSE_COMBUSTIVEIS_Mensal_Eixo_min_secon_;}
    }



    if(Math.abs(FSE_COMBUSTIVEIS_Mensal_Eixo_max_princ)/Math.abs(FSE_COMBUSTIVEIS_Mensal_Eixo_min_princ)>=Math.abs(FSE_COMBUSTIVEIS_Mensal_Eixo_max_secon)/Math.abs(FSE_COMBUSTIVEIS_Mensal_Eixo_min_secon))
    { if(FSE_COMBUSTIVEIS_Mensal_Eixo_min_princ > 0 && FSE_COMBUSTIVEIS_Mensal_Eixo_max_princ <0 ){ var FSE_COMBUSTIVEIS_Mensal_Eixo_max_secon__=(FSE_COMBUSTIVEIS_Mensal_Eixo_max_princ_*FSE_COMBUSTIVEIS_Mensal_Eixo_min_secon_)/FSE_COMBUSTIVEIS_Mensal_Eixo_min_princ_;} else { var FSE_COMBUSTIVEIS_Mensal_Eixo_max_secon__=FSE_COMBUSTIVEIS_Mensal_Eixo_max_secon_;}
        if(FSE_COMBUSTIVEIS_Mensal_Eixo_min_secon > 0 && FSE_COMBUSTIVEIS_Mensal_Eixo_max_secon <0 ){ var FSE_COMBUSTIVEIS_Mensal_Eixo_max_princ__=(FSE_COMBUSTIVEIS_Mensal_Eixo_max_secon__*FSE_COMBUSTIVEIS_Mensal_Eixo_min_princ_)/FSE_COMBUSTIVEIS_Mensal_Eixo_min_secon_;} else { var FSE_COMBUSTIVEIS_Mensal_Eixo_max_princ__=FSE_COMBUSTIVEIS_Mensal_Eixo_max_princ_;}}
    else
    {if(FSE_COMBUSTIVEIS_Mensal_Eixo_min_secon > 0 && FSE_COMBUSTIVEIS_Mensal_Eixo_max_secon <0 ){ var FSE_COMBUSTIVEIS_Mensal_Eixo_max_princ__=(FSE_COMBUSTIVEIS_Mensal_Eixo_max_secon_*FSE_COMBUSTIVEIS_Mensal_Eixo_min_princ_)/FSE_COMBUSTIVEIS_Mensal_Eixo_min_secon_;} else { var FSE_COMBUSTIVEIS_Mensal_Eixo_max_princ__=FSE_COMBUSTIVEIS_Mensal_Eixo_max_princ_;}
        if(FSE_COMBUSTIVEIS_Mensal_Eixo_min_princ > 0 && FSE_COMBUSTIVEIS_Mensal_Eixo_max_princ <0 ){ var FSE_COMBUSTIVEIS_Mensal_Eixo_max_secon__=(FSE_COMBUSTIVEIS_Mensal_Eixo_max_princ__*FSE_COMBUSTIVEIS_Mensal_Eixo_min_secon_)/FSE_COMBUSTIVEIS_Mensal_Eixo_min_princ_;} else { var FSE_COMBUSTIVEIS_Mensal_Eixo_max_secon__=FSE_COMBUSTIVEIS_Mensal_Eixo_max_secon_;}
    }



    var GRAFICO_FSE_RESULT_MENSAL_COMP_030=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_030').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_030=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_030, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label: 'Combustiveis(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   data: [
                       FSE_COMBUSTIVEIS_ANO_N_JANEIRO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_FEVEREIRO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_MARCO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_ABRIL_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_MAIO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_JUNHO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_JULHO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_AGOSTO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_SETEMBRO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_OUTUBRO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_NOVEMBRO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_DEZEMBRO_ACUM,
                   ],
                   type: 'line'


               },
                              {
                                  label: 'Combustiveis(ac) ' + ANO_VERSAO_ANTE_,
                                  yAxisID: 'A',
                                  //backgroundColor: 'rgb(201, 10, 10)',
                                  borderColor: 'rgb(0,221,0)',
                                  data: [
                       FSE_COMBUSTIVEIS_ANO_N_1_JANEIRO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_1_MARCO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_1_ABRIL_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_1_MAIO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_1_JUNHO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_1_JULHO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_1_AGOSTO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_1_SETEMBRO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_1_OUTUBRO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_COMBUSTIVEIS_ANO_N_1_DEZEMBRO_ACUM,
                                  ],
                                  type: 'line'


                              },
                {
                    label:  'Combustiveis(m) ' + ANO_VERSAO_REAL_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(250 , 83 , 0, 0.5)',
                    borderColor: 'rgba(250 , 83 , 0, 0.5)',
                    data: [
                  FSE_COMBUSTIVEIS_ANO_N_JANEIRO ,
                  FSE_COMBUSTIVEIS_ANO_N_FEVEREIRO ,
                  FSE_COMBUSTIVEIS_ANO_N_MARCO ,
                  FSE_COMBUSTIVEIS_ANO_N_ABRIL,
                  FSE_COMBUSTIVEIS_ANO_N_MAIO ,
                  FSE_COMBUSTIVEIS_ANO_N_JUNHO ,
                  FSE_COMBUSTIVEIS_ANO_N_JULHO ,
                  FSE_COMBUSTIVEIS_ANO_N_AGOSTO ,
                  FSE_COMBUSTIVEIS_ANO_N_SETEMBRO ,
                  FSE_COMBUSTIVEIS_ANO_N_OUTUBRO ,
                  FSE_COMBUSTIVEIS_ANO_N_NOVEMBRO ,
                  FSE_COMBUSTIVEIS_ANO_N_DEZEMBRO ,
                    ],
                },
                {
                    label:  'Combustiveis(m) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(0,221,0, 0.4)',
                    borderColor: 'rgba(0,221,0, 0.4)',
                    data: [
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_JANEIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_FEVEREIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_MARCO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_ABRIL"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_MAIO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_JUNHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_JULHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_AGOSTO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_SETEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_OUTUBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_NOVEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANO_N_1_DEZEMBRO"]))),
                    ],
                },


            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_COMBUSTIVEIS_MENSAL_1',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                min:  Math.round(FSE_COMBUSTIVEIS_Mensal_Eixo_min_princ__,0),
                                                max:  Math.round(FSE_COMBUSTIVEIS_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString();
                                                }
                                            }
                                        },

                    { id: 'B',
                        type: 'linear',
                        position: 'right',
                        ticks: {
                            min: Math.round(FSE_COMBUSTIVEIS_Mensal_Eixo_min_secon__,0),
                            max:  Math.round(FSE_COMBUSTIVEIS_Mensal_Eixo_max_secon__,0),
                            beginAtZero: false,
                            callback: function(value, index, values) {
                                return value.toLocaleString();
                            }
                        }
                    },






                ]
            }
        },

    });

    </script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_031-----------------------------------------------------------*@
<script>

    var IND_VN_ANO_N_JANEIRO_ACUM = IND_VN_ANO_N_JANEIRO;
    var IND_VN_ANO_N_FEVEREIRO_ACUM = IND_VN_ANO_N_FEVEREIRO + IND_VN_ANO_N_JANEIRO_ACUM;
    var IND_VN_ANO_N_MARCO_ACUM = IND_VN_ANO_N_MARCO + IND_VN_ANO_N_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_ABRIL_ACUM = IND_VN_ANO_N_ABRIL + IND_VN_ANO_N_MARCO_ACUM;
    var IND_VN_ANO_N_MAIO_ACUM = IND_VN_ANO_N_MAIO + IND_VN_ANO_N_ABRIL_ACUM;
    var IND_VN_ANO_N_JUNHO_ACUM = IND_VN_ANO_N_JUNHO + IND_VN_ANO_N_MAIO_ACUM;
    var IND_VN_ANO_N_JULHO_ACUM = IND_VN_ANO_N_JULHO + IND_VN_ANO_N_JUNHO_ACUM;
    var IND_VN_ANO_N_AGOSTO_ACUM = IND_VN_ANO_N_AGOSTO + IND_VN_ANO_N_JULHO_ACUM;
    var IND_VN_ANO_N_SETEMBRO_ACUM = IND_VN_ANO_N_SETEMBRO + IND_VN_ANO_N_AGOSTO_ACUM;
    var IND_VN_ANO_N_OUTUBRO_ACUM = IND_VN_ANO_N_OUTUBRO + IND_VN_ANO_N_SETEMBRO_ACUM;
    var IND_VN_ANO_N_NOVEMBRO_ACUM = IND_VN_ANO_N_NOVEMBRO + IND_VN_ANO_N_OUTUBRO_ACUM;
    var IND_VN_ANO_N_DEZEMBRO_ACUM = IND_VN_ANO_N_DEZEMBRO + IND_VN_ANO_N_NOVEMBRO_ACUM;



    var IND_VN_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JANEIRO"])));
    var IND_VN_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_FEVEREIRO"]))) + IND_VN_ANO_N_1_JANEIRO_ACUM;
    var IND_VN_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MARCO"]))) + IND_VN_ANO_N_1_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_ABRIL"]))) + IND_VN_ANO_N_1_MARCO_ACUM;
    var IND_VN_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MAIO"]))) + IND_VN_ANO_N_1_ABRIL_ACUM;
    var IND_VN_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JUNHO"]))) + IND_VN_ANO_N_1_MAIO_ACUM;
    var IND_VN_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JULHO"]))) + IND_VN_ANO_N_1_JUNHO_ACUM;
    var IND_VN_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_AGOSTO"]))) + IND_VN_ANO_N_1_JULHO_ACUM;
    var IND_VN_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_SETEMBRO"]))) + IND_VN_ANO_N_1_AGOSTO_ACUM;
    var IND_VN_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_OUTUBRO"]))) + IND_VN_ANO_N_1_SETEMBRO_ACUM;
    var IND_VN_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_NOVEMBRO"]))) + IND_VN_ANO_N_1_OUTUBRO_ACUM;
    var IND_VN_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_DEZEMBRO"]))) + IND_VN_ANO_N_1_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_JANEIRO_ACUM = 'nd'; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_JANEIRO_ACUM= FSE_COMBUSTIVEIS_ANO_N_JANEIRO_ACUM/IND_VN_ANO_N_JANEIRO_ACUM*100; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = PESO_FSE_COMBUSTIVEIS_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_FEVEREIRO_ACUM= FSE_COMBUSTIVEIS_ANO_N_FEVEREIRO_ACUM/IND_VN_ANO_N_FEVEREIRO_ACUM*100; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_COMBUSTIVEIS_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_MARCO_ACUM = 'nd'; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_MARCO_ACUM= FSE_COMBUSTIVEIS_ANO_N_MARCO_ACUM/IND_VN_ANO_N_MARCO_ACUM*100; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_MARCO_ACUM_MAX_MIN = PESO_FSE_COMBUSTIVEIS_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_ABRIL_ACUM = 'nd'; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_ABRIL_ACUM= FSE_COMBUSTIVEIS_ANO_N_ABRIL_ACUM/IND_VN_ANO_N_ABRIL_ACUM*100; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_ABRIL_ACUM_MAX_MIN = PESO_FSE_COMBUSTIVEIS_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_MAIO_ACUM = 'nd'; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_MAIO_ACUM= FSE_COMBUSTIVEIS_ANO_N_MAIO_ACUM/IND_VN_ANO_N_MAIO_ACUM*100; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_MAIO_ACUM_MAX_MIN = PESO_FSE_COMBUSTIVEIS_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_JUNHO_ACUM = 'nd'; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_JUNHO_ACUM= FSE_COMBUSTIVEIS_ANO_N_JUNHO_ACUM/IND_VN_ANO_N_JUNHO_ACUM*100; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_JUNHO_ACUM_MAX_MIN = PESO_FSE_COMBUSTIVEIS_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_JULHO_ACUM = 'nd'; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_JULHO_ACUM= FSE_COMBUSTIVEIS_ANO_N_JULHO_ACUM/IND_VN_ANO_N_JULHO_ACUM*100; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_JULHO_ACUM_MAX_MIN = PESO_FSE_COMBUSTIVEIS_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_AGOSTO_ACUM = 'nd'; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_AGOSTO_ACUM= FSE_COMBUSTIVEIS_ANO_N_AGOSTO_ACUM/IND_VN_ANO_N_AGOSTO_ACUM*100; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = PESO_FSE_COMBUSTIVEIS_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_SETEMBRO_ACUM= FSE_COMBUSTIVEIS_ANO_N_SETEMBRO_ACUM/IND_VN_ANO_N_SETEMBRO_ACUM*100; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_COMBUSTIVEIS_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_OUTUBRO_ACUM= FSE_COMBUSTIVEIS_ANO_N_OUTUBRO_ACUM/IND_VN_ANO_N_OUTUBRO_ACUM*100; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_COMBUSTIVEIS_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_NOVEMBRO_ACUM= FSE_COMBUSTIVEIS_ANO_N_NOVEMBRO_ACUM/IND_VN_ANO_N_NOVEMBRO_ACUM*100; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_COMBUSTIVEIS_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_DEZEMBRO_ACUM= FSE_COMBUSTIVEIS_ANO_N_DEZEMBRO_ACUM/IND_VN_ANO_N_DEZEMBRO_ACUM*100; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_COMBUSTIVEIS_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_JANEIRO_ACUM = 'nd'; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_JANEIRO_ACUM= FSE_COMBUSTIVEIS_ANO_N_1_JANEIRO_ACUM/IND_VN_ANO_N_1_JANEIRO_ACUM*100; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_FEVEREIRO_ACUM= FSE_COMBUSTIVEIS_ANO_N_1_FEVEREIRO_ACUM/IND_VN_ANO_N_1_FEVEREIRO_ACUM*100; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_MARCO_ACUM = 'nd'; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_MARCO_ACUM= FSE_COMBUSTIVEIS_ANO_N_1_MARCO_ACUM/IND_VN_ANO_N_1_MARCO_ACUM*100; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_ABRIL_ACUM = 'nd'; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_ABRIL_ACUM= FSE_COMBUSTIVEIS_ANO_N_1_ABRIL_ACUM/IND_VN_ANO_N_1_ABRIL_ACUM*100; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_MAIO_ACUM = 'nd'; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_MAIO_ACUM= FSE_COMBUSTIVEIS_ANO_N_1_MAIO_ACUM/IND_VN_ANO_N_1_MAIO_ACUM*100; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_JUNHO_ACUM = 'nd'; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_JUNHO_ACUM= FSE_COMBUSTIVEIS_ANO_N_1_JUNHO_ACUM/IND_VN_ANO_N_1_JUNHO_ACUM*100; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_JULHO_ACUM = 'nd'; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_JULHO_ACUM= FSE_COMBUSTIVEIS_ANO_N_1_JULHO_ACUM/IND_VN_ANO_N_1_JULHO_ACUM*100; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_AGOSTO_ACUM = 'nd'; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_AGOSTO_ACUM= FSE_COMBUSTIVEIS_ANO_N_1_AGOSTO_ACUM/IND_VN_ANO_N_1_AGOSTO_ACUM*100; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_SETEMBRO_ACUM = 'nd'; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_SETEMBRO_ACUM= FSE_COMBUSTIVEIS_ANO_N_1_SETEMBRO_ACUM/IND_VN_ANO_N_1_SETEMBRO_ACUM*100; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_OUTUBRO_ACUM = 'nd'; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_OUTUBRO_ACUM= FSE_COMBUSTIVEIS_ANO_N_1_OUTUBRO_ACUM/IND_VN_ANO_N_1_OUTUBRO_ACUM*100; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_NOVEMBRO_ACUM= FSE_COMBUSTIVEIS_ANO_N_1_NOVEMBRO_ACUM/IND_VN_ANO_N_1_NOVEMBRO_ACUM*100; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_DEZEMBRO_ACUM= FSE_COMBUSTIVEIS_ANO_N_1_DEZEMBRO_ACUM/IND_VN_ANO_N_1_DEZEMBRO_ACUM*100; var PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_VN_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JANEIRO_ACUM= ((IND_VN_ANO_N_JANEIRO_ACUM-IND_VN_ANO_N_1_JANEIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_JANEIRO_ACUM))*100; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_FEVEREIRO_ACUM= ((IND_VN_ANO_N_FEVEREIRO_ACUM-IND_VN_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_VN_ANO_N_MARCO_ACUM = 'nd'; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MARCO_ACUM= ((IND_VN_ANO_N_MARCO_ACUM-IND_VN_ANO_N_1_MARCO_ACUM)/Math.abs(IND_VN_ANO_N_1_MARCO_ACUM))*100; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = VAR_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_VN_ANO_N_ABRIL_ACUM = 'nd'; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_ABRIL_ACUM= ((IND_VN_ANO_N_ABRIL_ACUM-IND_VN_ANO_N_1_ABRIL_ACUM)/Math.abs(IND_VN_ANO_N_1_ABRIL_ACUM))*100; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_VN_ANO_N_MAIO_ACUM = 'nd'; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MAIO_ACUM= ((IND_VN_ANO_N_MAIO_ACUM-IND_VN_ANO_N_1_MAIO_ACUM)/Math.abs(IND_VN_ANO_N_1_MAIO_ACUM))*100; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = VAR_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_VN_ANO_N_JUNHO_ACUM = 'nd'; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JUNHO_ACUM= ((IND_VN_ANO_N_JUNHO_ACUM-IND_VN_ANO_N_1_JUNHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JUNHO_ACUM))*100; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_VN_ANO_N_JULHO_ACUM = 'nd'; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JULHO_ACUM= ((IND_VN_ANO_N_JULHO_ACUM-IND_VN_ANO_N_1_JULHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JULHO_ACUM))*100; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_VN_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_AGOSTO_ACUM= ((IND_VN_ANO_N_AGOSTO_ACUM-IND_VN_ANO_N_1_AGOSTO_ACUM)/Math.abs(IND_VN_ANO_N_1_AGOSTO_ACUM))*100; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_SETEMBRO_ACUM= ((IND_VN_ANO_N_SETEMBRO_ACUM-IND_VN_ANO_N_1_SETEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_OUTUBRO_ACUM= ((IND_VN_ANO_N_OUTUBRO_ACUM-IND_VN_ANO_N_1_OUTUBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_NOVEMBRO_ACUM= ((IND_VN_ANO_N_NOVEMBRO_ACUM-IND_VN_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_DEZEMBRO_ACUM= ((IND_VN_ANO_N_DEZEMBRO_ACUM-IND_VN_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_FSE_COMBUSTIVEIS_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_FSE_COMBUSTIVEIS_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMBUSTIVEIS_ANO_N_JANEIRO_ACUM= ((FSE_COMBUSTIVEIS_ANO_N_JANEIRO_ACUM-FSE_COMBUSTIVEIS_ANO_N_1_JANEIRO_ACUM)/Math.abs(FSE_COMBUSTIVEIS_ANO_N_1_JANEIRO_ACUM))*100; var VAR_FSE_COMBUSTIVEIS_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_FSE_COMBUSTIVEIS_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_FSE_COMBUSTIVEIS_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_FSE_COMBUSTIVEIS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMBUSTIVEIS_ANO_N_FEVEREIRO_ACUM= ((FSE_COMBUSTIVEIS_ANO_N_FEVEREIRO_ACUM-FSE_COMBUSTIVEIS_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(FSE_COMBUSTIVEIS_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_FSE_COMBUSTIVEIS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_FSE_COMBUSTIVEIS_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_FSE_COMBUSTIVEIS_ANO_N_MARCO_ACUM = 'nd'; var VAR_FSE_COMBUSTIVEIS_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMBUSTIVEIS_ANO_N_MARCO_ACUM= ((FSE_COMBUSTIVEIS_ANO_N_MARCO_ACUM-FSE_COMBUSTIVEIS_ANO_N_1_MARCO_ACUM)/Math.abs(FSE_COMBUSTIVEIS_ANO_N_1_MARCO_ACUM))*100; var VAR_FSE_COMBUSTIVEIS_ANO_N_MARCO_ACUM_MAX_MIN = VAR_FSE_COMBUSTIVEIS_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_FSE_COMBUSTIVEIS_ANO_N_ABRIL_ACUM = 'nd'; var VAR_FSE_COMBUSTIVEIS_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMBUSTIVEIS_ANO_N_ABRIL_ACUM= ((FSE_COMBUSTIVEIS_ANO_N_ABRIL_ACUM-FSE_COMBUSTIVEIS_ANO_N_1_ABRIL_ACUM)/Math.abs(FSE_COMBUSTIVEIS_ANO_N_1_ABRIL_ACUM))*100; var VAR_FSE_COMBUSTIVEIS_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_FSE_COMBUSTIVEIS_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_FSE_COMBUSTIVEIS_ANO_N_MAIO_ACUM = 'nd'; var VAR_FSE_COMBUSTIVEIS_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMBUSTIVEIS_ANO_N_MAIO_ACUM= ((FSE_COMBUSTIVEIS_ANO_N_MAIO_ACUM-FSE_COMBUSTIVEIS_ANO_N_1_MAIO_ACUM)/Math.abs(FSE_COMBUSTIVEIS_ANO_N_1_MAIO_ACUM))*100; var VAR_FSE_COMBUSTIVEIS_ANO_N_MAIO_ACUM_MAX_MIN = VAR_FSE_COMBUSTIVEIS_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_FSE_COMBUSTIVEIS_ANO_N_JUNHO_ACUM = 'nd'; var VAR_FSE_COMBUSTIVEIS_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMBUSTIVEIS_ANO_N_JUNHO_ACUM= ((FSE_COMBUSTIVEIS_ANO_N_JUNHO_ACUM-FSE_COMBUSTIVEIS_ANO_N_1_JUNHO_ACUM)/Math.abs(FSE_COMBUSTIVEIS_ANO_N_1_JUNHO_ACUM))*100; var VAR_FSE_COMBUSTIVEIS_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_FSE_COMBUSTIVEIS_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_FSE_COMBUSTIVEIS_ANO_N_JULHO_ACUM = 'nd'; var VAR_FSE_COMBUSTIVEIS_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMBUSTIVEIS_ANO_N_JULHO_ACUM= ((FSE_COMBUSTIVEIS_ANO_N_JULHO_ACUM-FSE_COMBUSTIVEIS_ANO_N_1_JULHO_ACUM)/Math.abs(FSE_COMBUSTIVEIS_ANO_N_1_JULHO_ACUM))*100; var VAR_FSE_COMBUSTIVEIS_ANO_N_JULHO_ACUM_MAX_MIN = VAR_FSE_COMBUSTIVEIS_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_FSE_COMBUSTIVEIS_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_FSE_COMBUSTIVEIS_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMBUSTIVEIS_ANO_N_AGOSTO_ACUM= ((FSE_COMBUSTIVEIS_ANO_N_AGOSTO_ACUM-FSE_COMBUSTIVEIS_ANO_N_1_AGOSTO_ACUM)/Math.abs(FSE_COMBUSTIVEIS_ANO_N_1_AGOSTO_ACUM))*100; var VAR_FSE_COMBUSTIVEIS_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_FSE_COMBUSTIVEIS_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_FSE_COMBUSTIVEIS_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_FSE_COMBUSTIVEIS_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMBUSTIVEIS_ANO_N_SETEMBRO_ACUM= ((FSE_COMBUSTIVEIS_ANO_N_SETEMBRO_ACUM-FSE_COMBUSTIVEIS_ANO_N_1_SETEMBRO_ACUM)/Math.abs(FSE_COMBUSTIVEIS_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_FSE_COMBUSTIVEIS_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_FSE_COMBUSTIVEIS_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_FSE_COMBUSTIVEIS_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_FSE_COMBUSTIVEIS_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMBUSTIVEIS_ANO_N_OUTUBRO_ACUM= ((FSE_COMBUSTIVEIS_ANO_N_OUTUBRO_ACUM-FSE_COMBUSTIVEIS_ANO_N_1_OUTUBRO_ACUM)/Math.abs(FSE_COMBUSTIVEIS_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_FSE_COMBUSTIVEIS_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_FSE_COMBUSTIVEIS_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_FSE_COMBUSTIVEIS_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_FSE_COMBUSTIVEIS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMBUSTIVEIS_ANO_N_NOVEMBRO_ACUM= ((FSE_COMBUSTIVEIS_ANO_N_NOVEMBRO_ACUM-FSE_COMBUSTIVEIS_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(FSE_COMBUSTIVEIS_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_FSE_COMBUSTIVEIS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_FSE_COMBUSTIVEIS_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_FSE_COMBUSTIVEIS_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_FSE_COMBUSTIVEIS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMBUSTIVEIS_ANO_N_DEZEMBRO_ACUM= ((FSE_COMBUSTIVEIS_ANO_N_DEZEMBRO_ACUM-FSE_COMBUSTIVEIS_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(FSE_COMBUSTIVEIS_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_FSE_COMBUSTIVEIS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_FSE_COMBUSTIVEIS_ANO_N_DEZEMBRO_ACUM };

    if( PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_JANEIRO_ACUM > PESO_FSE_COMBUSTIVEIS_VN_ANO_N_JANEIRO_ACUM) { var  INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_JANEIRO_ACUM=PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_JANEIRO_ACUM ; } else { var  INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_JANEIRO_ACUM=PESO_FSE_COMBUSTIVEIS_VN_ANO_N_JANEIRO_ACUM ; }
    if( PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_FEVEREIRO_ACUM > PESO_FSE_COMBUSTIVEIS_VN_ANO_N_FEVEREIRO_ACUM) { var  INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_FEVEREIRO_ACUM=PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_FEVEREIRO_ACUM ; } else { var  INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_FEVEREIRO_ACUM=PESO_FSE_COMBUSTIVEIS_VN_ANO_N_FEVEREIRO_ACUM ; }
    if( PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_MARCO_ACUM > PESO_FSE_COMBUSTIVEIS_VN_ANO_N_MARCO_ACUM) { var  INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_MARCO_ACUM=PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_MARCO_ACUM ; } else { var  INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_MARCO_ACUM=PESO_FSE_COMBUSTIVEIS_VN_ANO_N_MARCO_ACUM ; }
    if( PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_ABRIL_ACUM > PESO_FSE_COMBUSTIVEIS_VN_ANO_N_ABRIL_ACUM) { var  INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_ABRIL_ACUM=PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_ABRIL_ACUM ; } else { var  INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_ABRIL_ACUM=PESO_FSE_COMBUSTIVEIS_VN_ANO_N_ABRIL_ACUM ; }
    if( PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_MAIO_ACUM > PESO_FSE_COMBUSTIVEIS_VN_ANO_N_MAIO_ACUM) { var  INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_MAIO_ACUM=PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_MAIO_ACUM ; } else { var  INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_MAIO_ACUM=PESO_FSE_COMBUSTIVEIS_VN_ANO_N_MAIO_ACUM ; }
    if( PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_JUNHO_ACUM > PESO_FSE_COMBUSTIVEIS_VN_ANO_N_JUNHO_ACUM) { var  INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_JUNHO_ACUM=PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_JUNHO_ACUM ; } else { var  INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_JUNHO_ACUM=PESO_FSE_COMBUSTIVEIS_VN_ANO_N_JUNHO_ACUM ; }
    if( PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_JULHO_ACUM > PESO_FSE_COMBUSTIVEIS_VN_ANO_N_JULHO_ACUM) { var  INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_JULHO_ACUM=PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_JULHO_ACUM ; } else { var  INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_JULHO_ACUM=PESO_FSE_COMBUSTIVEIS_VN_ANO_N_JULHO_ACUM ; }
    if( PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_AGOSTO_ACUM > PESO_FSE_COMBUSTIVEIS_VN_ANO_N_AGOSTO_ACUM) { var  INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_AGOSTO_ACUM=PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_AGOSTO_ACUM ; } else { var  INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_AGOSTO_ACUM=PESO_FSE_COMBUSTIVEIS_VN_ANO_N_AGOSTO_ACUM ; }
    if( PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_SETEMBRO_ACUM > PESO_FSE_COMBUSTIVEIS_VN_ANO_N_SETEMBRO_ACUM) { var  INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_SETEMBRO_ACUM=PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_SETEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_SETEMBRO_ACUM=PESO_FSE_COMBUSTIVEIS_VN_ANO_N_SETEMBRO_ACUM ; }
    if( PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_OUTUBRO_ACUM > PESO_FSE_COMBUSTIVEIS_VN_ANO_N_OUTUBRO_ACUM) { var  INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_OUTUBRO_ACUM=PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_OUTUBRO_ACUM ; } else { var  INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_OUTUBRO_ACUM=PESO_FSE_COMBUSTIVEIS_VN_ANO_N_OUTUBRO_ACUM ; }
    if( PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_NOVEMBRO_ACUM > PESO_FSE_COMBUSTIVEIS_VN_ANO_N_NOVEMBRO_ACUM) { var  INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_NOVEMBRO_ACUM=PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_NOVEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_NOVEMBRO_ACUM=PESO_FSE_COMBUSTIVEIS_VN_ANO_N_NOVEMBRO_ACUM ; }
    if( PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_DEZEMBRO_ACUM > PESO_FSE_COMBUSTIVEIS_VN_ANO_N_DEZEMBRO_ACUM) { var  INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_DEZEMBRO_ACUM=PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_DEZEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_DEZEMBRO_ACUM=PESO_FSE_COMBUSTIVEIS_VN_ANO_N_DEZEMBRO_ACUM ; }



    var fillBetweenLinesPlugin = {
        afterDatasetsDraw: function (chart) {
            var ctx = chart.chart.ctx;
            var xaxis = chart.scales['x-axis-0'];
            var yaxis = chart.scales['y-axis-0'];
            var datasets = chart.data.datasets;
            ctx.save();

            for (var d = 0; d < datasets.length; d++) {
                var dataset = datasets[d];
                if (dataset.fillBetweenSet == undefined) {
                    continue;
                }

                // get meta for both data sets
                var meta1 = chart.getDatasetMeta(d);
                var meta2 = chart.getDatasetMeta(dataset.fillBetweenSet);

                // do not draw fill if one of the datasets is hidden
                if (meta1.hidden || meta2.hidden) continue;

                // create fill areas in pairs
                for (var p = 0; p < meta1.data.length-1;p++) {
                    // if null skip
                    if (dataset.data[p] == null || dataset.data[p+1] == null) continue;

                    ctx.beginPath();

                    // trace line 1
                    var curr = meta1.data[p];
                    var next = meta1.data[p+1];
                    ctx.moveTo(curr._view.x, curr._view.y);
                    ctx.lineTo(curr._view.x, curr._view.y);
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(next._view.x, curr._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        ctx.bezierCurveTo(
                          curr._view.controlPointNextX,
                          curr._view.controlPointNextY,
                          next._view.controlPointPreviousX,
                          next._view.controlPointPreviousY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // connect dataset1 to dataset2
                    var curr = meta2.data[p+1];
                    var next = meta2.data[p];
                    ctx.lineTo(curr._view.x, curr._view.y);

                    // trace BACKWORDS set2 to complete the box
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(curr._view.x, next._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        // reverse bezier
                        ctx.bezierCurveTo(
                          curr._view.controlPointPreviousX,
                          curr._view.controlPointPreviousY,
                          next._view.controlPointNextX,
                          next._view.controlPointNextY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // close the loop and fill with shading
                    ctx.closePath();
                    ctx.fillStyle = dataset.fillBetweenColor || "rgba(0,0,0,0.1)";
                    ctx.fill();
                } // end for p loop
            }
        } // end afterDatasetsDraw
    }; // end fillBetweenLinesPlugin

    Chart.pluginService.register(fillBetweenLinesPlugin);



    var GRAFICO_FSE_RESULT_MENSAL_COMP_031=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_031').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_031=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_031, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label:  'Peso CombustiveisvsVN(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   //borderColor: "#F00",
                   fill: false,
                   steppedLine: false,
                   tension: 0.5,
                   fillBetweenSet: 1,
                   fillBetweenColor: "rgba(0, 221, 0, 0.1)",
                   data: [
                   PESO_FSE_COMBUSTIVEIS_VN_ANO_N_JANEIRO_ACUM,
                   PESO_FSE_COMBUSTIVEIS_VN_ANO_N_FEVEREIRO_ACUM,
                   PESO_FSE_COMBUSTIVEIS_VN_ANO_N_MARCO_ACUM,
                   PESO_FSE_COMBUSTIVEIS_VN_ANO_N_ABRIL_ACUM,
                   PESO_FSE_COMBUSTIVEIS_VN_ANO_N_MAIO_ACUM,
                   PESO_FSE_COMBUSTIVEIS_VN_ANO_N_JUNHO_ACUM,
                   PESO_FSE_COMBUSTIVEIS_VN_ANO_N_JULHO_ACUM,
                   PESO_FSE_COMBUSTIVEIS_VN_ANO_N_AGOSTO_ACUM,
                   PESO_FSE_COMBUSTIVEIS_VN_ANO_N_SETEMBRO_ACUM,
                   PESO_FSE_COMBUSTIVEIS_VN_ANO_N_OUTUBRO_ACUM,
                   PESO_FSE_COMBUSTIVEIS_VN_ANO_N_NOVEMBRO_ACUM,
                   PESO_FSE_COMBUSTIVEIS_VN_ANO_N_DEZEMBRO_ACUM,

                   ],
                   type: 'line'


               },
                {
                    label: 'Peso CombustiveisvsVN(ac) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'A',
                    //backgroundColor: 'rgb(17, 121, 240)',
                    borderColor: 'rgb(0,221,0)',
                    //borderColor: "#00F",
                    fill: false,
                    steppedLine: false,
                    tension: 0.5,
                    data: [
                   PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_JANEIRO_ACUM,
                   PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_FEVEREIRO_ACUM,
                   PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_MARCO_ACUM,
                   PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_ABRIL_ACUM,
                   PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_MAIO_ACUM,
                   PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_JUNHO_ACUM,
                   PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_JULHO_ACUM,
                   PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_AGOSTO_ACUM,
                   PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_SETEMBRO_ACUM,
                   PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_OUTUBRO_ACUM,
                   PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_NOVEMBRO_ACUM,
                   PESO_FSE_COMBUSTIVEIS_VN_ANO_N_1_DEZEMBRO_ACUM,
                    ],
                    type: 'line'
                },
    {
        label: 'Ineficiência',
        yAxisID: 'A',
        backgroundColor: "rgba(255, 0, 0, 0.2)",
        borderColor: 'rgba(255, 255, 255, 0.1)',
        //borderColor: "#0D0",
        fill: false,
        steppedLine: false,
        tension: 0.5,
        fillBetweenSet: 1,
        fillBetweenColor: "rgba(255, 0, 0, 0.2)",
        data: [
    INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_JANEIRO_ACUM,
    INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_FEVEREIRO_ACUM,
    INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_MARCO_ACUM,
    INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_ABRIL_ACUM,
    INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_MAIO_ACUM,
    INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_JUNHO_ACUM,
    INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_JULHO_ACUM,
    INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_AGOSTO_ACUM,
    INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_SETEMBRO_ACUM,
    INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_OUTUBRO_ACUM,
    INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_NOVEMBRO_ACUM,
    INEFICIENCIA_FSE_COMBUSTIVEIS_ANO_N_DEZEMBRO_ACUM,
        ],
        type: 'line'
    },

            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_COMBUSTIVEIS COMP',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                //min:  Math.round(FSE_COMBUSTIVEIS_Mensal_Eixo_min_princ__,0),
                                                //max:  Math.round(FSE_COMBUSTIVEIS_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString()+ "%";
                                                }
                                            }
                                        },







                ]
            }
        },

    });

</script>


@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_032-----------------------------------------------------------*@
<script>

    if(@ViewData["MES_ACUM_REAL"]<1){ var IND_VN_ANO_N_JANEIRO = 'nd'; var IND_VN_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JANEIRO"]))); var IND_VN_ANO_N_JANEIRO_MAX_MIN = IND_VN_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var IND_VN_ANO_N_FEVEREIRO = 'nd'; var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_FEVEREIRO"]))); var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = IND_VN_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var IND_VN_ANO_N_MARCO = 'nd'; var IND_VN_ANO_N_MARCO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MARCO"]))); var IND_VN_ANO_N_MARCO_MAX_MIN = IND_VN_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var IND_VN_ANO_N_ABRIL = 'nd'; var IND_VN_ANO_N_ABRIL_MAX_MIN = 0;  } else { var IND_VN_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_ABRIL"]))); var IND_VN_ANO_N_ABRIL_MAX_MIN = IND_VN_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var IND_VN_ANO_N_MAIO = 'nd'; var IND_VN_ANO_N_MAIO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MAIO"]))); var IND_VN_ANO_N_MAIO_MAX_MIN = IND_VN_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var IND_VN_ANO_N_JUNHO = 'nd'; var IND_VN_ANO_N_JUNHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JUNHO"]))); var IND_VN_ANO_N_JUNHO_MAX_MIN = IND_VN_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var IND_VN_ANO_N_JULHO = 'nd'; var IND_VN_ANO_N_JULHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JULHO"]))); var IND_VN_ANO_N_JULHO_MAX_MIN = IND_VN_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var IND_VN_ANO_N_AGOSTO = 'nd'; var IND_VN_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_AGOSTO"]))); var IND_VN_ANO_N_AGOSTO_MAX_MIN = IND_VN_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var IND_VN_ANO_N_SETEMBRO = 'nd'; var IND_VN_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_SETEMBRO"]))); var IND_VN_ANO_N_SETEMBRO_MAX_MIN = IND_VN_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var IND_VN_ANO_N_OUTUBRO = 'nd'; var IND_VN_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_OUTUBRO"]))); var IND_VN_ANO_N_OUTUBRO_MAX_MIN = IND_VN_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var IND_VN_ANO_N_NOVEMBRO = 'nd'; var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_NOVEMBRO"]))); var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = IND_VN_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var IND_VN_ANO_N_DEZEMBRO = 'nd'; var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_DEZEMBRO"]))); var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = IND_VN_ANO_N_DEZEMBRO };

    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_AGUA_ANO_N_JANEIRO = 'nd'; var FSE_AGUA_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var FSE_AGUA_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_JANEIRO"]))); var FSE_AGUA_ANO_N_JANEIRO_MAX_MIN = FSE_AGUA_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_AGUA_ANO_N_FEVEREIRO = 'nd'; var FSE_AGUA_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var FSE_AGUA_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_FEVEREIRO"]))); var FSE_AGUA_ANO_N_FEVEREIRO_MAX_MIN = FSE_AGUA_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_AGUA_ANO_N_MARCO = 'nd'; var FSE_AGUA_ANO_N_MARCO_MAX_MIN = 0;  } else { var FSE_AGUA_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_MARCO"]))); var FSE_AGUA_ANO_N_MARCO_MAX_MIN = FSE_AGUA_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_AGUA_ANO_N_ABRIL = 'nd'; var FSE_AGUA_ANO_N_ABRIL_MAX_MIN = 0;  } else { var FSE_AGUA_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_ABRIL"]))); var FSE_AGUA_ANO_N_ABRIL_MAX_MIN = FSE_AGUA_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_AGUA_ANO_N_MAIO = 'nd'; var FSE_AGUA_ANO_N_MAIO_MAX_MIN = 0;  } else { var FSE_AGUA_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_MAIO"]))); var FSE_AGUA_ANO_N_MAIO_MAX_MIN = FSE_AGUA_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_AGUA_ANO_N_JUNHO = 'nd'; var FSE_AGUA_ANO_N_JUNHO_MAX_MIN = 0;  } else { var FSE_AGUA_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_JUNHO"]))); var FSE_AGUA_ANO_N_JUNHO_MAX_MIN = FSE_AGUA_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_AGUA_ANO_N_JULHO = 'nd'; var FSE_AGUA_ANO_N_JULHO_MAX_MIN = 0;  } else { var FSE_AGUA_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_JULHO"]))); var FSE_AGUA_ANO_N_JULHO_MAX_MIN = FSE_AGUA_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_AGUA_ANO_N_AGOSTO = 'nd'; var FSE_AGUA_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var FSE_AGUA_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_AGOSTO"]))); var FSE_AGUA_ANO_N_AGOSTO_MAX_MIN = FSE_AGUA_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_AGUA_ANO_N_SETEMBRO = 'nd'; var FSE_AGUA_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var FSE_AGUA_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_SETEMBRO"]))); var FSE_AGUA_ANO_N_SETEMBRO_MAX_MIN = FSE_AGUA_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_AGUA_ANO_N_OUTUBRO = 'nd'; var FSE_AGUA_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var FSE_AGUA_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_OUTUBRO"]))); var FSE_AGUA_ANO_N_OUTUBRO_MAX_MIN = FSE_AGUA_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_AGUA_ANO_N_NOVEMBRO = 'nd'; var FSE_AGUA_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var FSE_AGUA_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_NOVEMBRO"]))); var FSE_AGUA_ANO_N_NOVEMBRO_MAX_MIN = FSE_AGUA_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_AGUA_ANO_N_DEZEMBRO = 'nd'; var FSE_AGUA_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var FSE_AGUA_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_DEZEMBRO"]))); var FSE_AGUA_ANO_N_DEZEMBRO_MAX_MIN = FSE_AGUA_ANO_N_DEZEMBRO };


    var FSE_AGUA_ANO_N_JANEIRO_ACUM = FSE_AGUA_ANO_N_JANEIRO;
    var FSE_AGUA_ANO_N_FEVEREIRO_ACUM = FSE_AGUA_ANO_N_FEVEREIRO + FSE_AGUA_ANO_N_JANEIRO_ACUM;
    var FSE_AGUA_ANO_N_MARCO_ACUM = FSE_AGUA_ANO_N_MARCO + FSE_AGUA_ANO_N_FEVEREIRO_ACUM;
    var FSE_AGUA_ANO_N_ABRIL_ACUM = FSE_AGUA_ANO_N_ABRIL + FSE_AGUA_ANO_N_MARCO_ACUM;
    var FSE_AGUA_ANO_N_MAIO_ACUM = FSE_AGUA_ANO_N_MAIO + FSE_AGUA_ANO_N_ABRIL_ACUM;
    var FSE_AGUA_ANO_N_JUNHO_ACUM = FSE_AGUA_ANO_N_JUNHO + FSE_AGUA_ANO_N_MAIO_ACUM;
    var FSE_AGUA_ANO_N_JULHO_ACUM = FSE_AGUA_ANO_N_JULHO + FSE_AGUA_ANO_N_JUNHO_ACUM;
    var FSE_AGUA_ANO_N_AGOSTO_ACUM = FSE_AGUA_ANO_N_AGOSTO + FSE_AGUA_ANO_N_JULHO_ACUM;
    var FSE_AGUA_ANO_N_SETEMBRO_ACUM = FSE_AGUA_ANO_N_SETEMBRO + FSE_AGUA_ANO_N_AGOSTO_ACUM;
    var FSE_AGUA_ANO_N_OUTUBRO_ACUM = FSE_AGUA_ANO_N_OUTUBRO + FSE_AGUA_ANO_N_SETEMBRO_ACUM;
    var FSE_AGUA_ANO_N_NOVEMBRO_ACUM = FSE_AGUA_ANO_N_NOVEMBRO + FSE_AGUA_ANO_N_OUTUBRO_ACUM;
    var FSE_AGUA_ANO_N_DEZEMBRO_ACUM = FSE_AGUA_ANO_N_DEZEMBRO + FSE_AGUA_ANO_N_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_AGUA_ANO_N_JANEIRO_ACUM = 'nd'; var FSE_AGUA_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var FSE_AGUA_ANO_N_JANEIRO_ACUM= FSE_AGUA_ANO_N_JANEIRO_ACUM; var FSE_AGUA_ANO_N_JANEIRO_ACUM_MAX_MIN = FSE_AGUA_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_AGUA_ANO_N_FEVEREIRO_ACUM = 'nd'; var FSE_AGUA_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var FSE_AGUA_ANO_N_FEVEREIRO_ACUM= FSE_AGUA_ANO_N_FEVEREIRO_ACUM; var FSE_AGUA_ANO_N_FEVEREIRO_ACUM_MAX_MIN = FSE_AGUA_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_AGUA_ANO_N_MARCO_ACUM = 'nd'; var FSE_AGUA_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var FSE_AGUA_ANO_N_MARCO_ACUM= FSE_AGUA_ANO_N_MARCO_ACUM; var FSE_AGUA_ANO_N_MARCO_ACUM_MAX_MIN = FSE_AGUA_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_AGUA_ANO_N_ABRIL_ACUM = 'nd'; var FSE_AGUA_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var FSE_AGUA_ANO_N_ABRIL_ACUM= FSE_AGUA_ANO_N_ABRIL_ACUM; var FSE_AGUA_ANO_N_ABRIL_ACUM_MAX_MIN = FSE_AGUA_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_AGUA_ANO_N_MAIO_ACUM = 'nd'; var FSE_AGUA_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var FSE_AGUA_ANO_N_MAIO_ACUM= FSE_AGUA_ANO_N_MAIO_ACUM; var FSE_AGUA_ANO_N_MAIO_ACUM_MAX_MIN = FSE_AGUA_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_AGUA_ANO_N_JUNHO_ACUM = 'nd'; var FSE_AGUA_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var FSE_AGUA_ANO_N_JUNHO_ACUM= FSE_AGUA_ANO_N_JUNHO_ACUM; var FSE_AGUA_ANO_N_JUNHO_ACUM_MAX_MIN = FSE_AGUA_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_AGUA_ANO_N_JULHO_ACUM = 'nd'; var FSE_AGUA_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var FSE_AGUA_ANO_N_JULHO_ACUM= FSE_AGUA_ANO_N_JULHO_ACUM; var FSE_AGUA_ANO_N_JULHO_ACUM_MAX_MIN = FSE_AGUA_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_AGUA_ANO_N_AGOSTO_ACUM = 'nd'; var FSE_AGUA_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var FSE_AGUA_ANO_N_AGOSTO_ACUM= FSE_AGUA_ANO_N_AGOSTO_ACUM; var FSE_AGUA_ANO_N_AGOSTO_ACUM_MAX_MIN = FSE_AGUA_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_AGUA_ANO_N_SETEMBRO_ACUM = 'nd'; var FSE_AGUA_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_AGUA_ANO_N_SETEMBRO_ACUM= FSE_AGUA_ANO_N_SETEMBRO_ACUM; var FSE_AGUA_ANO_N_SETEMBRO_ACUM_MAX_MIN = FSE_AGUA_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_AGUA_ANO_N_OUTUBRO_ACUM = 'nd'; var FSE_AGUA_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var FSE_AGUA_ANO_N_OUTUBRO_ACUM= FSE_AGUA_ANO_N_OUTUBRO_ACUM; var FSE_AGUA_ANO_N_OUTUBRO_ACUM_MAX_MIN = FSE_AGUA_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_AGUA_ANO_N_NOVEMBRO_ACUM = 'nd'; var FSE_AGUA_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_AGUA_ANO_N_NOVEMBRO_ACUM= FSE_AGUA_ANO_N_NOVEMBRO_ACUM; var FSE_AGUA_ANO_N_NOVEMBRO_ACUM_MAX_MIN = FSE_AGUA_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_AGUA_ANO_N_DEZEMBRO_ACUM = 'nd'; var FSE_AGUA_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_AGUA_ANO_N_DEZEMBRO_ACUM= FSE_AGUA_ANO_N_DEZEMBRO_ACUM; var FSE_AGUA_ANO_N_DEZEMBRO_ACUM_MAX_MIN = FSE_AGUA_ANO_N_DEZEMBRO_ACUM };




    var FSE_AGUA_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_JANEIRO"])));
    var FSE_AGUA_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_FEVEREIRO"]))) + FSE_AGUA_ANO_N_1_JANEIRO_ACUM;
    var FSE_AGUA_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_MARCO"]))) + FSE_AGUA_ANO_N_1_FEVEREIRO_ACUM;
    var FSE_AGUA_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_ABRIL"]))) + FSE_AGUA_ANO_N_1_MARCO_ACUM;
    var FSE_AGUA_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_MAIO"]))) + FSE_AGUA_ANO_N_1_ABRIL_ACUM;
    var FSE_AGUA_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_JUNHO"]))) + FSE_AGUA_ANO_N_1_MAIO_ACUM;
    var FSE_AGUA_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_JULHO"]))) + FSE_AGUA_ANO_N_1_JUNHO_ACUM;
    var FSE_AGUA_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_AGOSTO"]))) + FSE_AGUA_ANO_N_1_JULHO_ACUM;
    var FSE_AGUA_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_SETEMBRO"]))) + FSE_AGUA_ANO_N_1_AGOSTO_ACUM;
    var FSE_AGUA_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_OUTUBRO"]))) + FSE_AGUA_ANO_N_1_SETEMBRO_ACUM;
    var FSE_AGUA_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_NOVEMBRO"]))) + FSE_AGUA_ANO_N_1_OUTUBRO_ACUM;
    var FSE_AGUA_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_DEZEMBRO"]))) + FSE_AGUA_ANO_N_1_NOVEMBRO_ACUM;


    var FSE_AGUA_Mensal_Eixo_max_princ= Math.max(
                       FSE_AGUA_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_AGUA_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_AGUA_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_AGUA_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_AGUA_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_AGUA_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_AGUA_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_AGUA_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_AGUA_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_AGUA_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_AGUA_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_AGUA_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_AGUA_ANO_N_1_JANEIRO_ACUM,
                       FSE_AGUA_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_AGUA_ANO_N_1_MARCO_ACUM,
                       FSE_AGUA_ANO_N_1_ABRIL_ACUM,
                       FSE_AGUA_ANO_N_1_MAIO_ACUM,
                       FSE_AGUA_ANO_N_1_JUNHO_ACUM,
                       FSE_AGUA_ANO_N_1_JULHO_ACUM,
                       FSE_AGUA_ANO_N_1_AGOSTO_ACUM,
                       FSE_AGUA_ANO_N_1_SETEMBRO_ACUM,
                       FSE_AGUA_ANO_N_1_OUTUBRO_ACUM,
                       FSE_AGUA_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_AGUA_ANO_N_1_DEZEMBRO_ACUM
                             );
    var FSE_AGUA_Mensal_Eixo_min_princ= Math.min(

                       FSE_AGUA_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_AGUA_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_AGUA_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_AGUA_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_AGUA_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_AGUA_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_AGUA_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_AGUA_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_AGUA_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_AGUA_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_AGUA_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_AGUA_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_AGUA_ANO_N_1_JANEIRO_ACUM,
                       FSE_AGUA_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_AGUA_ANO_N_1_MARCO_ACUM,
                       FSE_AGUA_ANO_N_1_ABRIL_ACUM,
                       FSE_AGUA_ANO_N_1_MAIO_ACUM,
                       FSE_AGUA_ANO_N_1_JUNHO_ACUM,
                       FSE_AGUA_ANO_N_1_JULHO_ACUM,
                       FSE_AGUA_ANO_N_1_AGOSTO_ACUM,
                       FSE_AGUA_ANO_N_1_SETEMBRO_ACUM,
                       FSE_AGUA_ANO_N_1_OUTUBRO_ACUM,
                       FSE_AGUA_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_AGUA_ANO_N_1_DEZEMBRO_ACUM
                           );
    var FSE_AGUA_Mensal_Eixo_max_secon= Math.max(
                       FSE_AGUA_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_AGUA_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_AGUA_ANO_N_MARCO_MAX_MIN ,
                       FSE_AGUA_ANO_N_ABRIL_MAX_MIN ,
                       FSE_AGUA_ANO_N_MAIO_MAX_MIN ,
                       FSE_AGUA_ANO_N_JUNHO_MAX_MIN ,
                       FSE_AGUA_ANO_N_JULHO_MAX_MIN ,
                       FSE_AGUA_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_AGUA_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_AGUA_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_AGUA_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_AGUA_ANO_N_DEZEMBRO_MAX_MIN ,



                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_DEZEMBRO"])))

                            );
    var FSE_AGUA_Mensal_Eixo_min_secon= Math.min(
                       FSE_AGUA_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_AGUA_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_AGUA_ANO_N_MARCO_MAX_MIN ,
                       FSE_AGUA_ANO_N_ABRIL_MAX_MIN ,
                       FSE_AGUA_ANO_N_MAIO_MAX_MIN ,
                       FSE_AGUA_ANO_N_JUNHO_MAX_MIN ,
                       FSE_AGUA_ANO_N_JULHO_MAX_MIN ,
                       FSE_AGUA_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_AGUA_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_AGUA_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_AGUA_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_AGUA_ANO_N_DEZEMBRO_MAX_MIN ,


                           @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_DEZEMBRO"])))

                          );

    //NOTA TA: Aqui trato o minimo e o maximo do eixo principal
    if(Math.abs(FSE_AGUA_Mensal_Eixo_max_princ)>=Math.abs(FSE_AGUA_Mensal_Eixo_min_princ))
    {
        var FSE_AGUA_Mensal_Eixo_max_princ_=(Math.ceil(FSE_AGUA_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_AGUA_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_AGUA_Mensal_Eixo_max_princ),0).toString().length-1);
        var FSE_AGUA_Mensal_Eixo_min_princ_= (Math.floor(FSE_AGUA_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_AGUA_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_AGUA_Mensal_Eixo_max_princ),0).toString().length-1);
        //alert(FSE_AGUA_Mensal_Eixo_max_princ_);
        //alert(FSE_AGUA_Mensal_Eixo_min_princ_);
    }
    else
    {
        var FSE_AGUA_Mensal_Eixo_max_princ_=(Math.ceil(FSE_AGUA_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_AGUA_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_AGUA_Mensal_Eixo_min_princ),0).toString().length-1);
        var FSE_AGUA_Mensal_Eixo_min_princ_= (Math.floor(FSE_AGUA_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_AGUA_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_AGUA_Mensal_Eixo_min_princ),0).toString().length-1);}

    //NOTA TA: Aqui trato o minimo e o maximo do eixo secundario

    if(Math.abs(FSE_AGUA_Mensal_Eixo_max_secon)>=Math.abs(FSE_AGUA_Mensal_Eixo_min_secon))
    {
        var FSE_AGUA_Mensal_Eixo_max_secon_=(Math.ceil(FSE_AGUA_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_AGUA_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_AGUA_Mensal_Eixo_max_secon),0).toString().length-1);
        var FSE_AGUA_Mensal_Eixo_min_secon_= (Math.floor(FSE_AGUA_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_AGUA_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_AGUA_Mensal_Eixo_max_secon),0).toString().length-1);
        //alert(FSE_AGUA_Mensal_Eixo_max_secon_);
        //alert(FSE_AGUA_Mensal_Eixo_min_secon_);
    }
    else
    {
        var FSE_AGUA_Mensal_Eixo_max_secon_=(Math.ceil(FSE_AGUA_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_AGUA_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_AGUA_Mensal_Eixo_min_secon),0).toString().length-1);
        var FSE_AGUA_Mensal_Eixo_min_secon_= (Math.floor(FSE_AGUA_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_AGUA_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_AGUA_Mensal_Eixo_min_secon),0).toString().length-1);}


    if(Math.abs(FSE_AGUA_Mensal_Eixo_min_princ)/Math.abs(FSE_AGUA_Mensal_Eixo_max_princ)>=Math.abs(FSE_AGUA_Mensal_Eixo_min_secon)/Math.abs(FSE_AGUA_Mensal_Eixo_max_secon))
    { if(FSE_AGUA_Mensal_Eixo_max_princ > 0 && FSE_AGUA_Mensal_Eixo_min_princ <0 ){ var FSE_AGUA_Mensal_Eixo_min_secon__=(FSE_AGUA_Mensal_Eixo_min_princ_*FSE_AGUA_Mensal_Eixo_max_secon_)/FSE_AGUA_Mensal_Eixo_max_princ_;} else { var FSE_AGUA_Mensal_Eixo_min_secon__=FSE_AGUA_Mensal_Eixo_min_secon_;}
        if(FSE_AGUA_Mensal_Eixo_max_secon > 0 && FSE_AGUA_Mensal_Eixo_min_secon <0 ){ var FSE_AGUA_Mensal_Eixo_min_princ__=(FSE_AGUA_Mensal_Eixo_min_secon__*FSE_AGUA_Mensal_Eixo_max_princ_)/FSE_AGUA_Mensal_Eixo_max_secon_;} else { var FSE_AGUA_Mensal_Eixo_min_princ__=FSE_AGUA_Mensal_Eixo_min_princ_;}}
    else
    {if(FSE_AGUA_Mensal_Eixo_max_secon > 0 && FSE_AGUA_Mensal_Eixo_min_secon <0 ){ var FSE_AGUA_Mensal_Eixo_min_princ__=(FSE_AGUA_Mensal_Eixo_min_secon_*FSE_AGUA_Mensal_Eixo_max_princ_)/FSE_AGUA_Mensal_Eixo_max_secon_;} else { var FSE_AGUA_Mensal_Eixo_min_princ__=FSE_AGUA_Mensal_Eixo_min_princ_;}
        if(FSE_AGUA_Mensal_Eixo_max_princ > 0 && FSE_AGUA_Mensal_Eixo_min_princ <0 ){ var FSE_AGUA_Mensal_Eixo_min_secon__=(FSE_AGUA_Mensal_Eixo_min_princ__*FSE_AGUA_Mensal_Eixo_max_secon_)/FSE_AGUA_Mensal_Eixo_max_princ_;} else { var FSE_AGUA_Mensal_Eixo_min_secon__=FSE_AGUA_Mensal_Eixo_min_secon_;}
    }



    if(Math.abs(FSE_AGUA_Mensal_Eixo_max_princ)/Math.abs(FSE_AGUA_Mensal_Eixo_min_princ)>=Math.abs(FSE_AGUA_Mensal_Eixo_max_secon)/Math.abs(FSE_AGUA_Mensal_Eixo_min_secon))
    { if(FSE_AGUA_Mensal_Eixo_min_princ > 0 && FSE_AGUA_Mensal_Eixo_max_princ <0 ){ var FSE_AGUA_Mensal_Eixo_max_secon__=(FSE_AGUA_Mensal_Eixo_max_princ_*FSE_AGUA_Mensal_Eixo_min_secon_)/FSE_AGUA_Mensal_Eixo_min_princ_;} else { var FSE_AGUA_Mensal_Eixo_max_secon__=FSE_AGUA_Mensal_Eixo_max_secon_;}
        if(FSE_AGUA_Mensal_Eixo_min_secon > 0 && FSE_AGUA_Mensal_Eixo_max_secon <0 ){ var FSE_AGUA_Mensal_Eixo_max_princ__=(FSE_AGUA_Mensal_Eixo_max_secon__*FSE_AGUA_Mensal_Eixo_min_princ_)/FSE_AGUA_Mensal_Eixo_min_secon_;} else { var FSE_AGUA_Mensal_Eixo_max_princ__=FSE_AGUA_Mensal_Eixo_max_princ_;}}
    else
    {if(FSE_AGUA_Mensal_Eixo_min_secon > 0 && FSE_AGUA_Mensal_Eixo_max_secon <0 ){ var FSE_AGUA_Mensal_Eixo_max_princ__=(FSE_AGUA_Mensal_Eixo_max_secon_*FSE_AGUA_Mensal_Eixo_min_princ_)/FSE_AGUA_Mensal_Eixo_min_secon_;} else { var FSE_AGUA_Mensal_Eixo_max_princ__=FSE_AGUA_Mensal_Eixo_max_princ_;}
        if(FSE_AGUA_Mensal_Eixo_min_princ > 0 && FSE_AGUA_Mensal_Eixo_max_princ <0 ){ var FSE_AGUA_Mensal_Eixo_max_secon__=(FSE_AGUA_Mensal_Eixo_max_princ__*FSE_AGUA_Mensal_Eixo_min_secon_)/FSE_AGUA_Mensal_Eixo_min_princ_;} else { var FSE_AGUA_Mensal_Eixo_max_secon__=FSE_AGUA_Mensal_Eixo_max_secon_;}
    }



    var GRAFICO_FSE_RESULT_MENSAL_COMP_032=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_032').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_032=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_032, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label: 'Água(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   data: [
                       FSE_AGUA_ANO_N_JANEIRO_ACUM,
                       FSE_AGUA_ANO_N_FEVEREIRO_ACUM,
                       FSE_AGUA_ANO_N_MARCO_ACUM,
                       FSE_AGUA_ANO_N_ABRIL_ACUM,
                       FSE_AGUA_ANO_N_MAIO_ACUM,
                       FSE_AGUA_ANO_N_JUNHO_ACUM,
                       FSE_AGUA_ANO_N_JULHO_ACUM,
                       FSE_AGUA_ANO_N_AGOSTO_ACUM,
                       FSE_AGUA_ANO_N_SETEMBRO_ACUM,
                       FSE_AGUA_ANO_N_OUTUBRO_ACUM,
                       FSE_AGUA_ANO_N_NOVEMBRO_ACUM,
                       FSE_AGUA_ANO_N_DEZEMBRO_ACUM,
                   ],
                   type: 'line'


               },
                              {
                                  label: 'Água(ac) ' + ANO_VERSAO_ANTE_,
                                  yAxisID: 'A',
                                  //backgroundColor: 'rgb(201, 10, 10)',
                                  borderColor: 'rgb(0,221,0)',
                                  data: [
                       FSE_AGUA_ANO_N_1_JANEIRO_ACUM,
                       FSE_AGUA_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_AGUA_ANO_N_1_MARCO_ACUM,
                       FSE_AGUA_ANO_N_1_ABRIL_ACUM,
                       FSE_AGUA_ANO_N_1_MAIO_ACUM,
                       FSE_AGUA_ANO_N_1_JUNHO_ACUM,
                       FSE_AGUA_ANO_N_1_JULHO_ACUM,
                       FSE_AGUA_ANO_N_1_AGOSTO_ACUM,
                       FSE_AGUA_ANO_N_1_SETEMBRO_ACUM,
                       FSE_AGUA_ANO_N_1_OUTUBRO_ACUM,
                       FSE_AGUA_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_AGUA_ANO_N_1_DEZEMBRO_ACUM,
                                  ],
                                  type: 'line'


                              },
                {
                    label:  'Água(m) ' + ANO_VERSAO_REAL_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(250 , 83 , 0, 0.5)',
                    borderColor: 'rgba(250 , 83 , 0, 0.5)',
                    data: [
                  FSE_AGUA_ANO_N_JANEIRO ,
                  FSE_AGUA_ANO_N_FEVEREIRO ,
                  FSE_AGUA_ANO_N_MARCO ,
                  FSE_AGUA_ANO_N_ABRIL,
                  FSE_AGUA_ANO_N_MAIO ,
                  FSE_AGUA_ANO_N_JUNHO ,
                  FSE_AGUA_ANO_N_JULHO ,
                  FSE_AGUA_ANO_N_AGOSTO ,
                  FSE_AGUA_ANO_N_SETEMBRO ,
                  FSE_AGUA_ANO_N_OUTUBRO ,
                  FSE_AGUA_ANO_N_NOVEMBRO ,
                  FSE_AGUA_ANO_N_DEZEMBRO ,
                    ],
                },
                {
                    label:  'Água(m) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(0,221,0, 0.4)',
                    borderColor: 'rgba(0,221,0, 0.4)',
                    data: [
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_JANEIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_FEVEREIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_MARCO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_ABRIL"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_MAIO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_JUNHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_JULHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_AGOSTO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_SETEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_OUTUBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_NOVEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANO_N_1_DEZEMBRO"]))),
                    ],
                },


            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_AGUA_MENSAL_1',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                min:  Math.round(FSE_AGUA_Mensal_Eixo_min_princ__,0),
                                                max:  Math.round(FSE_AGUA_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString();
                                                }
                                            }
                                        },

                    { id: 'B',
                        type: 'linear',
                        position: 'right',
                        ticks: {
                            min: Math.round(FSE_AGUA_Mensal_Eixo_min_secon__,0),
                            max:  Math.round(FSE_AGUA_Mensal_Eixo_max_secon__,0),
                            beginAtZero: false,
                            callback: function(value, index, values) {
                                return value.toLocaleString();
                            }
                        }
                    },






                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_033-----------------------------------------------------------*@
<script>

    var IND_VN_ANO_N_JANEIRO_ACUM = IND_VN_ANO_N_JANEIRO;
    var IND_VN_ANO_N_FEVEREIRO_ACUM = IND_VN_ANO_N_FEVEREIRO + IND_VN_ANO_N_JANEIRO_ACUM;
    var IND_VN_ANO_N_MARCO_ACUM = IND_VN_ANO_N_MARCO + IND_VN_ANO_N_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_ABRIL_ACUM = IND_VN_ANO_N_ABRIL + IND_VN_ANO_N_MARCO_ACUM;
    var IND_VN_ANO_N_MAIO_ACUM = IND_VN_ANO_N_MAIO + IND_VN_ANO_N_ABRIL_ACUM;
    var IND_VN_ANO_N_JUNHO_ACUM = IND_VN_ANO_N_JUNHO + IND_VN_ANO_N_MAIO_ACUM;
    var IND_VN_ANO_N_JULHO_ACUM = IND_VN_ANO_N_JULHO + IND_VN_ANO_N_JUNHO_ACUM;
    var IND_VN_ANO_N_AGOSTO_ACUM = IND_VN_ANO_N_AGOSTO + IND_VN_ANO_N_JULHO_ACUM;
    var IND_VN_ANO_N_SETEMBRO_ACUM = IND_VN_ANO_N_SETEMBRO + IND_VN_ANO_N_AGOSTO_ACUM;
    var IND_VN_ANO_N_OUTUBRO_ACUM = IND_VN_ANO_N_OUTUBRO + IND_VN_ANO_N_SETEMBRO_ACUM;
    var IND_VN_ANO_N_NOVEMBRO_ACUM = IND_VN_ANO_N_NOVEMBRO + IND_VN_ANO_N_OUTUBRO_ACUM;
    var IND_VN_ANO_N_DEZEMBRO_ACUM = IND_VN_ANO_N_DEZEMBRO + IND_VN_ANO_N_NOVEMBRO_ACUM;



    var IND_VN_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JANEIRO"])));
    var IND_VN_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_FEVEREIRO"]))) + IND_VN_ANO_N_1_JANEIRO_ACUM;
    var IND_VN_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MARCO"]))) + IND_VN_ANO_N_1_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_ABRIL"]))) + IND_VN_ANO_N_1_MARCO_ACUM;
    var IND_VN_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MAIO"]))) + IND_VN_ANO_N_1_ABRIL_ACUM;
    var IND_VN_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JUNHO"]))) + IND_VN_ANO_N_1_MAIO_ACUM;
    var IND_VN_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JULHO"]))) + IND_VN_ANO_N_1_JUNHO_ACUM;
    var IND_VN_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_AGOSTO"]))) + IND_VN_ANO_N_1_JULHO_ACUM;
    var IND_VN_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_SETEMBRO"]))) + IND_VN_ANO_N_1_AGOSTO_ACUM;
    var IND_VN_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_OUTUBRO"]))) + IND_VN_ANO_N_1_SETEMBRO_ACUM;
    var IND_VN_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_NOVEMBRO"]))) + IND_VN_ANO_N_1_OUTUBRO_ACUM;
    var IND_VN_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_DEZEMBRO"]))) + IND_VN_ANO_N_1_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_AGUA_VN_ANO_N_JANEIRO_ACUM = 'nd'; var PESO_FSE_AGUA_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_AGUA_VN_ANO_N_JANEIRO_ACUM= FSE_AGUA_ANO_N_JANEIRO_ACUM/IND_VN_ANO_N_JANEIRO_ACUM*100; var PESO_FSE_AGUA_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = PESO_FSE_AGUA_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_AGUA_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_AGUA_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_AGUA_VN_ANO_N_FEVEREIRO_ACUM= FSE_AGUA_ANO_N_FEVEREIRO_ACUM/IND_VN_ANO_N_FEVEREIRO_ACUM*100; var PESO_FSE_AGUA_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_AGUA_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_AGUA_VN_ANO_N_MARCO_ACUM = 'nd'; var PESO_FSE_AGUA_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_AGUA_VN_ANO_N_MARCO_ACUM= FSE_AGUA_ANO_N_MARCO_ACUM/IND_VN_ANO_N_MARCO_ACUM*100; var PESO_FSE_AGUA_VN_ANO_N_MARCO_ACUM_MAX_MIN = PESO_FSE_AGUA_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_AGUA_VN_ANO_N_ABRIL_ACUM = 'nd'; var PESO_FSE_AGUA_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_AGUA_VN_ANO_N_ABRIL_ACUM= FSE_AGUA_ANO_N_ABRIL_ACUM/IND_VN_ANO_N_ABRIL_ACUM*100; var PESO_FSE_AGUA_VN_ANO_N_ABRIL_ACUM_MAX_MIN = PESO_FSE_AGUA_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_AGUA_VN_ANO_N_MAIO_ACUM = 'nd'; var PESO_FSE_AGUA_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_AGUA_VN_ANO_N_MAIO_ACUM= FSE_AGUA_ANO_N_MAIO_ACUM/IND_VN_ANO_N_MAIO_ACUM*100; var PESO_FSE_AGUA_VN_ANO_N_MAIO_ACUM_MAX_MIN = PESO_FSE_AGUA_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_AGUA_VN_ANO_N_JUNHO_ACUM = 'nd'; var PESO_FSE_AGUA_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_AGUA_VN_ANO_N_JUNHO_ACUM= FSE_AGUA_ANO_N_JUNHO_ACUM/IND_VN_ANO_N_JUNHO_ACUM*100; var PESO_FSE_AGUA_VN_ANO_N_JUNHO_ACUM_MAX_MIN = PESO_FSE_AGUA_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_AGUA_VN_ANO_N_JULHO_ACUM = 'nd'; var PESO_FSE_AGUA_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_AGUA_VN_ANO_N_JULHO_ACUM= FSE_AGUA_ANO_N_JULHO_ACUM/IND_VN_ANO_N_JULHO_ACUM*100; var PESO_FSE_AGUA_VN_ANO_N_JULHO_ACUM_MAX_MIN = PESO_FSE_AGUA_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_AGUA_VN_ANO_N_AGOSTO_ACUM = 'nd'; var PESO_FSE_AGUA_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_AGUA_VN_ANO_N_AGOSTO_ACUM= FSE_AGUA_ANO_N_AGOSTO_ACUM/IND_VN_ANO_N_AGOSTO_ACUM*100; var PESO_FSE_AGUA_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = PESO_FSE_AGUA_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_AGUA_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var PESO_FSE_AGUA_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_AGUA_VN_ANO_N_SETEMBRO_ACUM= FSE_AGUA_ANO_N_SETEMBRO_ACUM/IND_VN_ANO_N_SETEMBRO_ACUM*100; var PESO_FSE_AGUA_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_AGUA_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_AGUA_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var PESO_FSE_AGUA_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_AGUA_VN_ANO_N_OUTUBRO_ACUM= FSE_AGUA_ANO_N_OUTUBRO_ACUM/IND_VN_ANO_N_OUTUBRO_ACUM*100; var PESO_FSE_AGUA_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_AGUA_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_AGUA_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_AGUA_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_AGUA_VN_ANO_N_NOVEMBRO_ACUM= FSE_AGUA_ANO_N_NOVEMBRO_ACUM/IND_VN_ANO_N_NOVEMBRO_ACUM*100; var PESO_FSE_AGUA_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_AGUA_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_AGUA_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_AGUA_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_AGUA_VN_ANO_N_DEZEMBRO_ACUM= FSE_AGUA_ANO_N_DEZEMBRO_ACUM/IND_VN_ANO_N_DEZEMBRO_ACUM*100; var PESO_FSE_AGUA_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_AGUA_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_AGUA_VN_ANO_N_1_JANEIRO_ACUM = 'nd'; var PESO_FSE_AGUA_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_AGUA_VN_ANO_N_1_JANEIRO_ACUM= FSE_AGUA_ANO_N_1_JANEIRO_ACUM/IND_VN_ANO_N_1_JANEIRO_ACUM*100; var PESO_FSE_AGUA_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = PESO_FSE_AGUA_VN_ANO_N_1_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_AGUA_VN_ANO_N_1_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_AGUA_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_AGUA_VN_ANO_N_1_FEVEREIRO_ACUM= FSE_AGUA_ANO_N_1_FEVEREIRO_ACUM/IND_VN_ANO_N_1_FEVEREIRO_ACUM*100; var PESO_FSE_AGUA_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_AGUA_VN_ANO_N_1_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_AGUA_VN_ANO_N_1_MARCO_ACUM = 'nd'; var PESO_FSE_AGUA_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_AGUA_VN_ANO_N_1_MARCO_ACUM= FSE_AGUA_ANO_N_1_MARCO_ACUM/IND_VN_ANO_N_1_MARCO_ACUM*100; var PESO_FSE_AGUA_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = PESO_FSE_AGUA_VN_ANO_N_1_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_AGUA_VN_ANO_N_1_ABRIL_ACUM = 'nd'; var PESO_FSE_AGUA_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_AGUA_VN_ANO_N_1_ABRIL_ACUM= FSE_AGUA_ANO_N_1_ABRIL_ACUM/IND_VN_ANO_N_1_ABRIL_ACUM*100; var PESO_FSE_AGUA_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = PESO_FSE_AGUA_VN_ANO_N_1_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_AGUA_VN_ANO_N_1_MAIO_ACUM = 'nd'; var PESO_FSE_AGUA_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_AGUA_VN_ANO_N_1_MAIO_ACUM= FSE_AGUA_ANO_N_1_MAIO_ACUM/IND_VN_ANO_N_1_MAIO_ACUM*100; var PESO_FSE_AGUA_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = PESO_FSE_AGUA_VN_ANO_N_1_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_AGUA_VN_ANO_N_1_JUNHO_ACUM = 'nd'; var PESO_FSE_AGUA_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_AGUA_VN_ANO_N_1_JUNHO_ACUM= FSE_AGUA_ANO_N_1_JUNHO_ACUM/IND_VN_ANO_N_1_JUNHO_ACUM*100; var PESO_FSE_AGUA_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = PESO_FSE_AGUA_VN_ANO_N_1_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_AGUA_VN_ANO_N_1_JULHO_ACUM = 'nd'; var PESO_FSE_AGUA_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_AGUA_VN_ANO_N_1_JULHO_ACUM= FSE_AGUA_ANO_N_1_JULHO_ACUM/IND_VN_ANO_N_1_JULHO_ACUM*100; var PESO_FSE_AGUA_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = PESO_FSE_AGUA_VN_ANO_N_1_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_AGUA_VN_ANO_N_1_AGOSTO_ACUM = 'nd'; var PESO_FSE_AGUA_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_AGUA_VN_ANO_N_1_AGOSTO_ACUM= FSE_AGUA_ANO_N_1_AGOSTO_ACUM/IND_VN_ANO_N_1_AGOSTO_ACUM*100; var PESO_FSE_AGUA_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = PESO_FSE_AGUA_VN_ANO_N_1_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_AGUA_VN_ANO_N_1_SETEMBRO_ACUM = 'nd'; var PESO_FSE_AGUA_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_AGUA_VN_ANO_N_1_SETEMBRO_ACUM= FSE_AGUA_ANO_N_1_SETEMBRO_ACUM/IND_VN_ANO_N_1_SETEMBRO_ACUM*100; var PESO_FSE_AGUA_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_AGUA_VN_ANO_N_1_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_AGUA_VN_ANO_N_1_OUTUBRO_ACUM = 'nd'; var PESO_FSE_AGUA_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_AGUA_VN_ANO_N_1_OUTUBRO_ACUM= FSE_AGUA_ANO_N_1_OUTUBRO_ACUM/IND_VN_ANO_N_1_OUTUBRO_ACUM*100; var PESO_FSE_AGUA_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_AGUA_VN_ANO_N_1_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_AGUA_VN_ANO_N_1_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_AGUA_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_AGUA_VN_ANO_N_1_NOVEMBRO_ACUM= FSE_AGUA_ANO_N_1_NOVEMBRO_ACUM/IND_VN_ANO_N_1_NOVEMBRO_ACUM*100; var PESO_FSE_AGUA_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_AGUA_VN_ANO_N_1_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_AGUA_VN_ANO_N_1_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_AGUA_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_AGUA_VN_ANO_N_1_DEZEMBRO_ACUM= FSE_AGUA_ANO_N_1_DEZEMBRO_ACUM/IND_VN_ANO_N_1_DEZEMBRO_ACUM*100; var PESO_FSE_AGUA_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_AGUA_VN_ANO_N_1_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_VN_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JANEIRO_ACUM= ((IND_VN_ANO_N_JANEIRO_ACUM-IND_VN_ANO_N_1_JANEIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_JANEIRO_ACUM))*100; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_FEVEREIRO_ACUM= ((IND_VN_ANO_N_FEVEREIRO_ACUM-IND_VN_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_VN_ANO_N_MARCO_ACUM = 'nd'; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MARCO_ACUM= ((IND_VN_ANO_N_MARCO_ACUM-IND_VN_ANO_N_1_MARCO_ACUM)/Math.abs(IND_VN_ANO_N_1_MARCO_ACUM))*100; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = VAR_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_VN_ANO_N_ABRIL_ACUM = 'nd'; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_ABRIL_ACUM= ((IND_VN_ANO_N_ABRIL_ACUM-IND_VN_ANO_N_1_ABRIL_ACUM)/Math.abs(IND_VN_ANO_N_1_ABRIL_ACUM))*100; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_VN_ANO_N_MAIO_ACUM = 'nd'; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MAIO_ACUM= ((IND_VN_ANO_N_MAIO_ACUM-IND_VN_ANO_N_1_MAIO_ACUM)/Math.abs(IND_VN_ANO_N_1_MAIO_ACUM))*100; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = VAR_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_VN_ANO_N_JUNHO_ACUM = 'nd'; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JUNHO_ACUM= ((IND_VN_ANO_N_JUNHO_ACUM-IND_VN_ANO_N_1_JUNHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JUNHO_ACUM))*100; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_VN_ANO_N_JULHO_ACUM = 'nd'; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JULHO_ACUM= ((IND_VN_ANO_N_JULHO_ACUM-IND_VN_ANO_N_1_JULHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JULHO_ACUM))*100; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_VN_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_AGOSTO_ACUM= ((IND_VN_ANO_N_AGOSTO_ACUM-IND_VN_ANO_N_1_AGOSTO_ACUM)/Math.abs(IND_VN_ANO_N_1_AGOSTO_ACUM))*100; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_SETEMBRO_ACUM= ((IND_VN_ANO_N_SETEMBRO_ACUM-IND_VN_ANO_N_1_SETEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_OUTUBRO_ACUM= ((IND_VN_ANO_N_OUTUBRO_ACUM-IND_VN_ANO_N_1_OUTUBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_NOVEMBRO_ACUM= ((IND_VN_ANO_N_NOVEMBRO_ACUM-IND_VN_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_DEZEMBRO_ACUM= ((IND_VN_ANO_N_DEZEMBRO_ACUM-IND_VN_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_FSE_AGUA_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_FSE_AGUA_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_AGUA_ANO_N_JANEIRO_ACUM= ((FSE_AGUA_ANO_N_JANEIRO_ACUM-FSE_AGUA_ANO_N_1_JANEIRO_ACUM)/Math.abs(FSE_AGUA_ANO_N_1_JANEIRO_ACUM))*100; var VAR_FSE_AGUA_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_FSE_AGUA_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_FSE_AGUA_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_FSE_AGUA_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_AGUA_ANO_N_FEVEREIRO_ACUM= ((FSE_AGUA_ANO_N_FEVEREIRO_ACUM-FSE_AGUA_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(FSE_AGUA_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_FSE_AGUA_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_FSE_AGUA_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_FSE_AGUA_ANO_N_MARCO_ACUM = 'nd'; var VAR_FSE_AGUA_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_AGUA_ANO_N_MARCO_ACUM= ((FSE_AGUA_ANO_N_MARCO_ACUM-FSE_AGUA_ANO_N_1_MARCO_ACUM)/Math.abs(FSE_AGUA_ANO_N_1_MARCO_ACUM))*100; var VAR_FSE_AGUA_ANO_N_MARCO_ACUM_MAX_MIN = VAR_FSE_AGUA_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_FSE_AGUA_ANO_N_ABRIL_ACUM = 'nd'; var VAR_FSE_AGUA_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_AGUA_ANO_N_ABRIL_ACUM= ((FSE_AGUA_ANO_N_ABRIL_ACUM-FSE_AGUA_ANO_N_1_ABRIL_ACUM)/Math.abs(FSE_AGUA_ANO_N_1_ABRIL_ACUM))*100; var VAR_FSE_AGUA_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_FSE_AGUA_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_FSE_AGUA_ANO_N_MAIO_ACUM = 'nd'; var VAR_FSE_AGUA_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_AGUA_ANO_N_MAIO_ACUM= ((FSE_AGUA_ANO_N_MAIO_ACUM-FSE_AGUA_ANO_N_1_MAIO_ACUM)/Math.abs(FSE_AGUA_ANO_N_1_MAIO_ACUM))*100; var VAR_FSE_AGUA_ANO_N_MAIO_ACUM_MAX_MIN = VAR_FSE_AGUA_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_FSE_AGUA_ANO_N_JUNHO_ACUM = 'nd'; var VAR_FSE_AGUA_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_AGUA_ANO_N_JUNHO_ACUM= ((FSE_AGUA_ANO_N_JUNHO_ACUM-FSE_AGUA_ANO_N_1_JUNHO_ACUM)/Math.abs(FSE_AGUA_ANO_N_1_JUNHO_ACUM))*100; var VAR_FSE_AGUA_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_FSE_AGUA_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_FSE_AGUA_ANO_N_JULHO_ACUM = 'nd'; var VAR_FSE_AGUA_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_AGUA_ANO_N_JULHO_ACUM= ((FSE_AGUA_ANO_N_JULHO_ACUM-FSE_AGUA_ANO_N_1_JULHO_ACUM)/Math.abs(FSE_AGUA_ANO_N_1_JULHO_ACUM))*100; var VAR_FSE_AGUA_ANO_N_JULHO_ACUM_MAX_MIN = VAR_FSE_AGUA_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_FSE_AGUA_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_FSE_AGUA_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_AGUA_ANO_N_AGOSTO_ACUM= ((FSE_AGUA_ANO_N_AGOSTO_ACUM-FSE_AGUA_ANO_N_1_AGOSTO_ACUM)/Math.abs(FSE_AGUA_ANO_N_1_AGOSTO_ACUM))*100; var VAR_FSE_AGUA_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_FSE_AGUA_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_FSE_AGUA_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_FSE_AGUA_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_AGUA_ANO_N_SETEMBRO_ACUM= ((FSE_AGUA_ANO_N_SETEMBRO_ACUM-FSE_AGUA_ANO_N_1_SETEMBRO_ACUM)/Math.abs(FSE_AGUA_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_FSE_AGUA_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_FSE_AGUA_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_FSE_AGUA_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_FSE_AGUA_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_AGUA_ANO_N_OUTUBRO_ACUM= ((FSE_AGUA_ANO_N_OUTUBRO_ACUM-FSE_AGUA_ANO_N_1_OUTUBRO_ACUM)/Math.abs(FSE_AGUA_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_FSE_AGUA_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_FSE_AGUA_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_FSE_AGUA_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_FSE_AGUA_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_AGUA_ANO_N_NOVEMBRO_ACUM= ((FSE_AGUA_ANO_N_NOVEMBRO_ACUM-FSE_AGUA_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(FSE_AGUA_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_FSE_AGUA_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_FSE_AGUA_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_FSE_AGUA_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_FSE_AGUA_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_AGUA_ANO_N_DEZEMBRO_ACUM= ((FSE_AGUA_ANO_N_DEZEMBRO_ACUM-FSE_AGUA_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(FSE_AGUA_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_FSE_AGUA_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_FSE_AGUA_ANO_N_DEZEMBRO_ACUM };

    if( PESO_FSE_AGUA_VN_ANO_N_1_JANEIRO_ACUM > PESO_FSE_AGUA_VN_ANO_N_JANEIRO_ACUM) { var  INEFICIENCIA_FSE_AGUA_ANO_N_JANEIRO_ACUM=PESO_FSE_AGUA_VN_ANO_N_1_JANEIRO_ACUM ; } else { var  INEFICIENCIA_FSE_AGUA_ANO_N_JANEIRO_ACUM=PESO_FSE_AGUA_VN_ANO_N_JANEIRO_ACUM ; }
    if( PESO_FSE_AGUA_VN_ANO_N_1_FEVEREIRO_ACUM > PESO_FSE_AGUA_VN_ANO_N_FEVEREIRO_ACUM) { var  INEFICIENCIA_FSE_AGUA_ANO_N_FEVEREIRO_ACUM=PESO_FSE_AGUA_VN_ANO_N_1_FEVEREIRO_ACUM ; } else { var  INEFICIENCIA_FSE_AGUA_ANO_N_FEVEREIRO_ACUM=PESO_FSE_AGUA_VN_ANO_N_FEVEREIRO_ACUM ; }
    if( PESO_FSE_AGUA_VN_ANO_N_1_MARCO_ACUM > PESO_FSE_AGUA_VN_ANO_N_MARCO_ACUM) { var  INEFICIENCIA_FSE_AGUA_ANO_N_MARCO_ACUM=PESO_FSE_AGUA_VN_ANO_N_1_MARCO_ACUM ; } else { var  INEFICIENCIA_FSE_AGUA_ANO_N_MARCO_ACUM=PESO_FSE_AGUA_VN_ANO_N_MARCO_ACUM ; }
    if( PESO_FSE_AGUA_VN_ANO_N_1_ABRIL_ACUM > PESO_FSE_AGUA_VN_ANO_N_ABRIL_ACUM) { var  INEFICIENCIA_FSE_AGUA_ANO_N_ABRIL_ACUM=PESO_FSE_AGUA_VN_ANO_N_1_ABRIL_ACUM ; } else { var  INEFICIENCIA_FSE_AGUA_ANO_N_ABRIL_ACUM=PESO_FSE_AGUA_VN_ANO_N_ABRIL_ACUM ; }
    if( PESO_FSE_AGUA_VN_ANO_N_1_MAIO_ACUM > PESO_FSE_AGUA_VN_ANO_N_MAIO_ACUM) { var  INEFICIENCIA_FSE_AGUA_ANO_N_MAIO_ACUM=PESO_FSE_AGUA_VN_ANO_N_1_MAIO_ACUM ; } else { var  INEFICIENCIA_FSE_AGUA_ANO_N_MAIO_ACUM=PESO_FSE_AGUA_VN_ANO_N_MAIO_ACUM ; }
    if( PESO_FSE_AGUA_VN_ANO_N_1_JUNHO_ACUM > PESO_FSE_AGUA_VN_ANO_N_JUNHO_ACUM) { var  INEFICIENCIA_FSE_AGUA_ANO_N_JUNHO_ACUM=PESO_FSE_AGUA_VN_ANO_N_1_JUNHO_ACUM ; } else { var  INEFICIENCIA_FSE_AGUA_ANO_N_JUNHO_ACUM=PESO_FSE_AGUA_VN_ANO_N_JUNHO_ACUM ; }
    if( PESO_FSE_AGUA_VN_ANO_N_1_JULHO_ACUM > PESO_FSE_AGUA_VN_ANO_N_JULHO_ACUM) { var  INEFICIENCIA_FSE_AGUA_ANO_N_JULHO_ACUM=PESO_FSE_AGUA_VN_ANO_N_1_JULHO_ACUM ; } else { var  INEFICIENCIA_FSE_AGUA_ANO_N_JULHO_ACUM=PESO_FSE_AGUA_VN_ANO_N_JULHO_ACUM ; }
    if( PESO_FSE_AGUA_VN_ANO_N_1_AGOSTO_ACUM > PESO_FSE_AGUA_VN_ANO_N_AGOSTO_ACUM) { var  INEFICIENCIA_FSE_AGUA_ANO_N_AGOSTO_ACUM=PESO_FSE_AGUA_VN_ANO_N_1_AGOSTO_ACUM ; } else { var  INEFICIENCIA_FSE_AGUA_ANO_N_AGOSTO_ACUM=PESO_FSE_AGUA_VN_ANO_N_AGOSTO_ACUM ; }
    if( PESO_FSE_AGUA_VN_ANO_N_1_SETEMBRO_ACUM > PESO_FSE_AGUA_VN_ANO_N_SETEMBRO_ACUM) { var  INEFICIENCIA_FSE_AGUA_ANO_N_SETEMBRO_ACUM=PESO_FSE_AGUA_VN_ANO_N_1_SETEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_AGUA_ANO_N_SETEMBRO_ACUM=PESO_FSE_AGUA_VN_ANO_N_SETEMBRO_ACUM ; }
    if( PESO_FSE_AGUA_VN_ANO_N_1_OUTUBRO_ACUM > PESO_FSE_AGUA_VN_ANO_N_OUTUBRO_ACUM) { var  INEFICIENCIA_FSE_AGUA_ANO_N_OUTUBRO_ACUM=PESO_FSE_AGUA_VN_ANO_N_1_OUTUBRO_ACUM ; } else { var  INEFICIENCIA_FSE_AGUA_ANO_N_OUTUBRO_ACUM=PESO_FSE_AGUA_VN_ANO_N_OUTUBRO_ACUM ; }
    if( PESO_FSE_AGUA_VN_ANO_N_1_NOVEMBRO_ACUM > PESO_FSE_AGUA_VN_ANO_N_NOVEMBRO_ACUM) { var  INEFICIENCIA_FSE_AGUA_ANO_N_NOVEMBRO_ACUM=PESO_FSE_AGUA_VN_ANO_N_1_NOVEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_AGUA_ANO_N_NOVEMBRO_ACUM=PESO_FSE_AGUA_VN_ANO_N_NOVEMBRO_ACUM ; }
    if( PESO_FSE_AGUA_VN_ANO_N_1_DEZEMBRO_ACUM > PESO_FSE_AGUA_VN_ANO_N_DEZEMBRO_ACUM) { var  INEFICIENCIA_FSE_AGUA_ANO_N_DEZEMBRO_ACUM=PESO_FSE_AGUA_VN_ANO_N_1_DEZEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_AGUA_ANO_N_DEZEMBRO_ACUM=PESO_FSE_AGUA_VN_ANO_N_DEZEMBRO_ACUM ; }



    var fillBetweenLinesPlugin = {
        afterDatasetsDraw: function (chart) {
            var ctx = chart.chart.ctx;
            var xaxis = chart.scales['x-axis-0'];
            var yaxis = chart.scales['y-axis-0'];
            var datasets = chart.data.datasets;
            ctx.save();

            for (var d = 0; d < datasets.length; d++) {
                var dataset = datasets[d];
                if (dataset.fillBetweenSet == undefined) {
                    continue;
                }

                // get meta for both data sets
                var meta1 = chart.getDatasetMeta(d);
                var meta2 = chart.getDatasetMeta(dataset.fillBetweenSet);

                // do not draw fill if one of the datasets is hidden
                if (meta1.hidden || meta2.hidden) continue;

                // create fill areas in pairs
                for (var p = 0; p < meta1.data.length-1;p++) {
                    // if null skip
                    if (dataset.data[p] == null || dataset.data[p+1] == null) continue;

                    ctx.beginPath();

                    // trace line 1
                    var curr = meta1.data[p];
                    var next = meta1.data[p+1];
                    ctx.moveTo(curr._view.x, curr._view.y);
                    ctx.lineTo(curr._view.x, curr._view.y);
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(next._view.x, curr._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        ctx.bezierCurveTo(
                          curr._view.controlPointNextX,
                          curr._view.controlPointNextY,
                          next._view.controlPointPreviousX,
                          next._view.controlPointPreviousY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // connect dataset1 to dataset2
                    var curr = meta2.data[p+1];
                    var next = meta2.data[p];
                    ctx.lineTo(curr._view.x, curr._view.y);

                    // trace BACKWORDS set2 to complete the box
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(curr._view.x, next._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        // reverse bezier
                        ctx.bezierCurveTo(
                          curr._view.controlPointPreviousX,
                          curr._view.controlPointPreviousY,
                          next._view.controlPointNextX,
                          next._view.controlPointNextY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // close the loop and fill with shading
                    ctx.closePath();
                    ctx.fillStyle = dataset.fillBetweenColor || "rgba(0,0,0,0.1)";
                    ctx.fill();
                } // end for p loop
            }
        } // end afterDatasetsDraw
    }; // end fillBetweenLinesPlugin

    Chart.pluginService.register(fillBetweenLinesPlugin);



    var GRAFICO_FSE_RESULT_MENSAL_COMP_033=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_033').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_033=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_033, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label:  'Peso ÁguavsVN(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   //borderColor: "#F00",
                   fill: false,
                   steppedLine: false,
                   tension: 0.5,
                   fillBetweenSet: 1,
                   fillBetweenColor: "rgba(0, 221, 0, 0.1)",
                   data: [
                   PESO_FSE_AGUA_VN_ANO_N_JANEIRO_ACUM,
                   PESO_FSE_AGUA_VN_ANO_N_FEVEREIRO_ACUM,
                   PESO_FSE_AGUA_VN_ANO_N_MARCO_ACUM,
                   PESO_FSE_AGUA_VN_ANO_N_ABRIL_ACUM,
                   PESO_FSE_AGUA_VN_ANO_N_MAIO_ACUM,
                   PESO_FSE_AGUA_VN_ANO_N_JUNHO_ACUM,
                   PESO_FSE_AGUA_VN_ANO_N_JULHO_ACUM,
                   PESO_FSE_AGUA_VN_ANO_N_AGOSTO_ACUM,
                   PESO_FSE_AGUA_VN_ANO_N_SETEMBRO_ACUM,
                   PESO_FSE_AGUA_VN_ANO_N_OUTUBRO_ACUM,
                   PESO_FSE_AGUA_VN_ANO_N_NOVEMBRO_ACUM,
                   PESO_FSE_AGUA_VN_ANO_N_DEZEMBRO_ACUM,

                   ],
                   type: 'line'


               },
                {
                    label: 'Peso ÁguavsVN(ac) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'A',
                    //backgroundColor: 'rgb(17, 121, 240)',
                    borderColor: 'rgb(0,221,0)',
                    //borderColor: "#00F",
                    fill: false,
                    steppedLine: false,
                    tension: 0.5,
                    data: [
                   PESO_FSE_AGUA_VN_ANO_N_1_JANEIRO_ACUM,
                   PESO_FSE_AGUA_VN_ANO_N_1_FEVEREIRO_ACUM,
                   PESO_FSE_AGUA_VN_ANO_N_1_MARCO_ACUM,
                   PESO_FSE_AGUA_VN_ANO_N_1_ABRIL_ACUM,
                   PESO_FSE_AGUA_VN_ANO_N_1_MAIO_ACUM,
                   PESO_FSE_AGUA_VN_ANO_N_1_JUNHO_ACUM,
                   PESO_FSE_AGUA_VN_ANO_N_1_JULHO_ACUM,
                   PESO_FSE_AGUA_VN_ANO_N_1_AGOSTO_ACUM,
                   PESO_FSE_AGUA_VN_ANO_N_1_SETEMBRO_ACUM,
                   PESO_FSE_AGUA_VN_ANO_N_1_OUTUBRO_ACUM,
                   PESO_FSE_AGUA_VN_ANO_N_1_NOVEMBRO_ACUM,
                   PESO_FSE_AGUA_VN_ANO_N_1_DEZEMBRO_ACUM,
                    ],
                    type: 'line'
                },
    {
        label: 'Ineficiência',
        yAxisID: 'A',
        backgroundColor: "rgba(255, 0, 0, 0.2)",
        borderColor: 'rgba(255, 255, 255, 0.1)',
        //borderColor: "#0D0",
        fill: false,
        steppedLine: false,
        tension: 0.5,
        fillBetweenSet: 1,
        fillBetweenColor: "rgba(255, 0, 0, 0.2)",
        data: [
    INEFICIENCIA_FSE_AGUA_ANO_N_JANEIRO_ACUM,
    INEFICIENCIA_FSE_AGUA_ANO_N_FEVEREIRO_ACUM,
    INEFICIENCIA_FSE_AGUA_ANO_N_MARCO_ACUM,
    INEFICIENCIA_FSE_AGUA_ANO_N_ABRIL_ACUM,
    INEFICIENCIA_FSE_AGUA_ANO_N_MAIO_ACUM,
    INEFICIENCIA_FSE_AGUA_ANO_N_JUNHO_ACUM,
    INEFICIENCIA_FSE_AGUA_ANO_N_JULHO_ACUM,
    INEFICIENCIA_FSE_AGUA_ANO_N_AGOSTO_ACUM,
    INEFICIENCIA_FSE_AGUA_ANO_N_SETEMBRO_ACUM,
    INEFICIENCIA_FSE_AGUA_ANO_N_OUTUBRO_ACUM,
    INEFICIENCIA_FSE_AGUA_ANO_N_NOVEMBRO_ACUM,
    INEFICIENCIA_FSE_AGUA_ANO_N_DEZEMBRO_ACUM,
        ],
        type: 'line'
    },

            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_AGUA COMP',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                //min:  Math.round(FSE_AGUA_Mensal_Eixo_min_princ__,0),
                                                //max:  Math.round(FSE_AGUA_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString()+ "%";
                                                }
                                            }
                                        },







                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_034-----------------------------------------------------------*@
<script>

    if(@ViewData["MES_ACUM_REAL"]<1){ var IND_VN_ANO_N_JANEIRO = 'nd'; var IND_VN_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JANEIRO"]))); var IND_VN_ANO_N_JANEIRO_MAX_MIN = IND_VN_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var IND_VN_ANO_N_FEVEREIRO = 'nd'; var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_FEVEREIRO"]))); var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = IND_VN_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var IND_VN_ANO_N_MARCO = 'nd'; var IND_VN_ANO_N_MARCO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MARCO"]))); var IND_VN_ANO_N_MARCO_MAX_MIN = IND_VN_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var IND_VN_ANO_N_ABRIL = 'nd'; var IND_VN_ANO_N_ABRIL_MAX_MIN = 0;  } else { var IND_VN_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_ABRIL"]))); var IND_VN_ANO_N_ABRIL_MAX_MIN = IND_VN_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var IND_VN_ANO_N_MAIO = 'nd'; var IND_VN_ANO_N_MAIO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MAIO"]))); var IND_VN_ANO_N_MAIO_MAX_MIN = IND_VN_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var IND_VN_ANO_N_JUNHO = 'nd'; var IND_VN_ANO_N_JUNHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JUNHO"]))); var IND_VN_ANO_N_JUNHO_MAX_MIN = IND_VN_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var IND_VN_ANO_N_JULHO = 'nd'; var IND_VN_ANO_N_JULHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JULHO"]))); var IND_VN_ANO_N_JULHO_MAX_MIN = IND_VN_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var IND_VN_ANO_N_AGOSTO = 'nd'; var IND_VN_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_AGOSTO"]))); var IND_VN_ANO_N_AGOSTO_MAX_MIN = IND_VN_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var IND_VN_ANO_N_SETEMBRO = 'nd'; var IND_VN_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_SETEMBRO"]))); var IND_VN_ANO_N_SETEMBRO_MAX_MIN = IND_VN_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var IND_VN_ANO_N_OUTUBRO = 'nd'; var IND_VN_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_OUTUBRO"]))); var IND_VN_ANO_N_OUTUBRO_MAX_MIN = IND_VN_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var IND_VN_ANO_N_NOVEMBRO = 'nd'; var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_NOVEMBRO"]))); var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = IND_VN_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var IND_VN_ANO_N_DEZEMBRO = 'nd'; var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_DEZEMBRO"]))); var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = IND_VN_ANO_N_DEZEMBRO };

    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JANEIRO = 'nd'; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JANEIRO"]))); var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JANEIRO_MAX_MIN = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_FEVEREIRO = 'nd'; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_FEVEREIRO"]))); var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_FEVEREIRO_MAX_MIN = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MARCO = 'nd'; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MARCO_MAX_MIN = 0;  } else { var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MARCO"]))); var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MARCO_MAX_MIN = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_ABRIL = 'nd'; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_ABRIL_MAX_MIN = 0;  } else { var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_ABRIL"]))); var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_ABRIL_MAX_MIN = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MAIO = 'nd'; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MAIO_MAX_MIN = 0;  } else { var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MAIO"]))); var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MAIO_MAX_MIN = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JUNHO = 'nd'; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JUNHO_MAX_MIN = 0;  } else { var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JUNHO"]))); var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JUNHO_MAX_MIN = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JULHO = 'nd'; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JULHO_MAX_MIN = 0;  } else { var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JULHO"]))); var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JULHO_MAX_MIN = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_AGOSTO = 'nd'; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_AGOSTO"]))); var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_AGOSTO_MAX_MIN = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_SETEMBRO = 'nd'; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_SETEMBRO"]))); var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_SETEMBRO_MAX_MIN = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_OUTUBRO = 'nd'; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_OUTUBRO"]))); var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_OUTUBRO_MAX_MIN = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_NOVEMBRO = 'nd'; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_NOVEMBRO"]))); var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_NOVEMBRO_MAX_MIN = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_DEZEMBRO = 'nd'; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_DEZEMBRO"]))); var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_DEZEMBRO_MAX_MIN = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_DEZEMBRO };


    var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JANEIRO_ACUM = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JANEIRO;
    var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_FEVEREIRO_ACUM = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_FEVEREIRO + FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JANEIRO_ACUM;
    var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MARCO_ACUM = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MARCO + FSE_OUTROS_ENERG_FLUIDOS_ANO_N_FEVEREIRO_ACUM;
    var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_ABRIL_ACUM = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_ABRIL + FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MARCO_ACUM;
    var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MAIO_ACUM = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MAIO + FSE_OUTROS_ENERG_FLUIDOS_ANO_N_ABRIL_ACUM;
    var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JUNHO_ACUM = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JUNHO + FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MAIO_ACUM;
    var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JULHO_ACUM = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JULHO + FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JUNHO_ACUM;
    var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_AGOSTO_ACUM = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_AGOSTO + FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JULHO_ACUM;
    var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_SETEMBRO_ACUM = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_SETEMBRO + FSE_OUTROS_ENERG_FLUIDOS_ANO_N_AGOSTO_ACUM;
    var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_OUTUBRO_ACUM = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_OUTUBRO + FSE_OUTROS_ENERG_FLUIDOS_ANO_N_SETEMBRO_ACUM;
    var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_NOVEMBRO_ACUM = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_NOVEMBRO + FSE_OUTROS_ENERG_FLUIDOS_ANO_N_OUTUBRO_ACUM;
    var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_DEZEMBRO_ACUM = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_DEZEMBRO + FSE_OUTROS_ENERG_FLUIDOS_ANO_N_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JANEIRO_ACUM = 'nd'; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JANEIRO_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JANEIRO_ACUM; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JANEIRO_ACUM_MAX_MIN = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_FEVEREIRO_ACUM = 'nd'; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_FEVEREIRO_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_FEVEREIRO_ACUM; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MARCO_ACUM = 'nd'; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MARCO_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MARCO_ACUM; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MARCO_ACUM_MAX_MIN = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_ABRIL_ACUM = 'nd'; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_ABRIL_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_ABRIL_ACUM; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_ABRIL_ACUM_MAX_MIN = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MAIO_ACUM = 'nd'; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MAIO_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MAIO_ACUM; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MAIO_ACUM_MAX_MIN = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JUNHO_ACUM = 'nd'; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JUNHO_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JUNHO_ACUM; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JUNHO_ACUM_MAX_MIN = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JULHO_ACUM = 'nd'; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JULHO_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JULHO_ACUM; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JULHO_ACUM_MAX_MIN = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_AGOSTO_ACUM = 'nd'; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_AGOSTO_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_AGOSTO_ACUM; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_AGOSTO_ACUM_MAX_MIN = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_SETEMBRO_ACUM = 'nd'; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_SETEMBRO_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_SETEMBRO_ACUM; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_SETEMBRO_ACUM_MAX_MIN = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_OUTUBRO_ACUM = 'nd'; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_OUTUBRO_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_OUTUBRO_ACUM; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_OUTUBRO_ACUM_MAX_MIN = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_NOVEMBRO_ACUM = 'nd'; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_NOVEMBRO_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_NOVEMBRO_ACUM; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_DEZEMBRO_ACUM = 'nd'; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_DEZEMBRO_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_DEZEMBRO_ACUM; var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = FSE_OUTROS_ENERG_FLUIDOS_ANO_N_DEZEMBRO_ACUM };




    var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JANEIRO"])));
    var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_FEVEREIRO"]))) + FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JANEIRO_ACUM;
    var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_MARCO"]))) + FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_FEVEREIRO_ACUM;
    var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_ABRIL"]))) + FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_MARCO_ACUM;
    var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_MAIO"]))) + FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_ABRIL_ACUM;
    var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JUNHO"]))) + FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_MAIO_ACUM;
    var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JULHO"]))) + FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JUNHO_ACUM;
    var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_AGOSTO"]))) + FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JULHO_ACUM;
    var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_SETEMBRO"]))) + FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_AGOSTO_ACUM;
    var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_OUTUBRO"]))) + FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_SETEMBRO_ACUM;
    var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_NOVEMBRO"]))) + FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_OUTUBRO_ACUM;
    var FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_DEZEMBRO"]))) + FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_NOVEMBRO_ACUM;


    var FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_princ= Math.max(
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JANEIRO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_MARCO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_ABRIL_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_MAIO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JUNHO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JULHO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_AGOSTO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_SETEMBRO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_OUTUBRO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_DEZEMBRO_ACUM
                             );
    var FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_princ= Math.min(

                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JANEIRO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_MARCO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_ABRIL_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_MAIO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JUNHO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JULHO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_AGOSTO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_SETEMBRO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_OUTUBRO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_DEZEMBRO_ACUM
                           );
    var FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_secon= Math.max(
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MARCO_MAX_MIN ,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_ABRIL_MAX_MIN ,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MAIO_MAX_MIN ,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JUNHO_MAX_MIN ,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JULHO_MAX_MIN ,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_DEZEMBRO_MAX_MIN ,



                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_DEZEMBRO"])))

                            );
    var FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_secon= Math.min(
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MARCO_MAX_MIN ,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_ABRIL_MAX_MIN ,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MAIO_MAX_MIN ,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JUNHO_MAX_MIN ,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JULHO_MAX_MIN ,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_DEZEMBRO_MAX_MIN ,


                           @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_DEZEMBRO"])))

                          );

    //NOTA TA: Aqui trato o minimo e o maximo do eixo principal
    if(Math.abs(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_princ)>=Math.abs(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_princ))
    {
        var FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_princ_=(Math.ceil(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_princ),0).toString().length-1);
        var FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_princ_= (Math.floor(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_princ),0).toString().length-1);
        //alert(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_princ_);
        //alert(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_princ_);
    }
    else
    {
        var FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_princ_=(Math.ceil(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_princ),0).toString().length-1);
        var FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_princ_= (Math.floor(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_princ),0).toString().length-1);}

    //NOTA TA: Aqui trato o minimo e o maximo do eixo secundario

    if(Math.abs(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_secon)>=Math.abs(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_secon))
    {
        var FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_secon_=(Math.ceil(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_secon),0).toString().length-1);
        var FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_secon_= (Math.floor(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_secon),0).toString().length-1);
        //alert(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_secon_);
        //alert(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_secon_);
    }
    else
    {
        var FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_secon_=(Math.ceil(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_secon),0).toString().length-1);
        var FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_secon_= (Math.floor(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_secon),0).toString().length-1);}


    if(Math.abs(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_princ)/Math.abs(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_princ)>=Math.abs(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_secon)/Math.abs(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_secon))
    { if(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_princ > 0 && FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_princ <0 ){ var FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_secon__=(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_princ_*FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_secon_)/FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_princ_;} else { var FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_secon__=FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_secon_;}
        if(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_secon > 0 && FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_secon <0 ){ var FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_princ__=(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_secon__*FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_princ_)/FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_secon_;} else { var FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_princ__=FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_princ_;}}
    else
    {if(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_secon > 0 && FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_secon <0 ){ var FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_princ__=(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_secon_*FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_princ_)/FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_secon_;} else { var FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_princ__=FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_princ_;}
        if(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_princ > 0 && FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_princ <0 ){ var FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_secon__=(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_princ__*FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_secon_)/FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_princ_;} else { var FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_secon__=FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_secon_;}
    }



    if(Math.abs(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_princ)/Math.abs(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_princ)>=Math.abs(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_secon)/Math.abs(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_secon))
    { if(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_princ > 0 && FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_princ <0 ){ var FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_secon__=(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_princ_*FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_secon_)/FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_princ_;} else { var FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_secon__=FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_secon_;}
        if(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_secon > 0 && FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_secon <0 ){ var FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_princ__=(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_secon__*FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_princ_)/FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_secon_;} else { var FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_princ__=FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_princ_;}}
    else
    {if(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_secon > 0 && FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_secon <0 ){ var FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_princ__=(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_secon_*FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_princ_)/FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_secon_;} else { var FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_princ__=FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_princ_;}
        if(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_princ > 0 && FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_princ <0 ){ var FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_secon__=(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_princ__*FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_secon_)/FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_princ_;} else { var FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_secon__=FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_secon_;}
    }



    var GRAFICO_FSE_RESULT_MENSAL_COMP_034=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_034').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_034=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_034, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label: 'Otr. Energia(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   data: [
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JANEIRO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_FEVEREIRO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MARCO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_ABRIL_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MAIO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JUNHO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JULHO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_AGOSTO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_SETEMBRO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_OUTUBRO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_NOVEMBRO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_DEZEMBRO_ACUM,
                   ],
                   type: 'line'


               },
                              {
                                  label: 'Otr. Energia(ac) ' + ANO_VERSAO_ANTE_,
                                  yAxisID: 'A',
                                  //backgroundColor: 'rgb(201, 10, 10)',
                                  borderColor: 'rgb(0,221,0)',
                                  data: [
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JANEIRO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_MARCO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_ABRIL_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_MAIO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JUNHO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JULHO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_AGOSTO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_SETEMBRO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_OUTUBRO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_DEZEMBRO_ACUM,
                                  ],
                                  type: 'line'


                              },
                {
                    label:  'Otr. Energia(m) ' + ANO_VERSAO_REAL_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(250 , 83 , 0, 0.5)',
                    borderColor: 'rgba(250 , 83 , 0, 0.5)',
                    data: [
                  FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JANEIRO ,
                  FSE_OUTROS_ENERG_FLUIDOS_ANO_N_FEVEREIRO ,
                  FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MARCO ,
                  FSE_OUTROS_ENERG_FLUIDOS_ANO_N_ABRIL,
                  FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MAIO ,
                  FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JUNHO ,
                  FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JULHO ,
                  FSE_OUTROS_ENERG_FLUIDOS_ANO_N_AGOSTO ,
                  FSE_OUTROS_ENERG_FLUIDOS_ANO_N_SETEMBRO ,
                  FSE_OUTROS_ENERG_FLUIDOS_ANO_N_OUTUBRO ,
                  FSE_OUTROS_ENERG_FLUIDOS_ANO_N_NOVEMBRO ,
                  FSE_OUTROS_ENERG_FLUIDOS_ANO_N_DEZEMBRO ,
                    ],
                },
                {
                    label:  'Otr. Energia(m) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(0,221,0, 0.4)',
                    borderColor: 'rgba(0,221,0, 0.4)',
                    data: [
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JANEIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_FEVEREIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_MARCO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_ABRIL"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_MAIO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JUNHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JULHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_AGOSTO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_SETEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_OUTUBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_NOVEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_DEZEMBRO"]))),
                    ],
                },


            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_OUTROS_ENERG_FLUIDOS_MENSAL_1',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                min:  Math.round(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_princ__,0),
                                                max:  Math.round(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString();
                                                }
                                            }
                                        },

                    { id: 'B',
                        type: 'linear',
                        position: 'right',
                        ticks: {
                            min: Math.round(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_secon__,0),
                            max:  Math.round(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_secon__,0),
                            beginAtZero: false,
                            callback: function(value, index, values) {
                                return value.toLocaleString();
                            }
                        }
                    },






                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_035-----------------------------------------------------------*@
<script>

    var IND_VN_ANO_N_JANEIRO_ACUM = IND_VN_ANO_N_JANEIRO;
    var IND_VN_ANO_N_FEVEREIRO_ACUM = IND_VN_ANO_N_FEVEREIRO + IND_VN_ANO_N_JANEIRO_ACUM;
    var IND_VN_ANO_N_MARCO_ACUM = IND_VN_ANO_N_MARCO + IND_VN_ANO_N_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_ABRIL_ACUM = IND_VN_ANO_N_ABRIL + IND_VN_ANO_N_MARCO_ACUM;
    var IND_VN_ANO_N_MAIO_ACUM = IND_VN_ANO_N_MAIO + IND_VN_ANO_N_ABRIL_ACUM;
    var IND_VN_ANO_N_JUNHO_ACUM = IND_VN_ANO_N_JUNHO + IND_VN_ANO_N_MAIO_ACUM;
    var IND_VN_ANO_N_JULHO_ACUM = IND_VN_ANO_N_JULHO + IND_VN_ANO_N_JUNHO_ACUM;
    var IND_VN_ANO_N_AGOSTO_ACUM = IND_VN_ANO_N_AGOSTO + IND_VN_ANO_N_JULHO_ACUM;
    var IND_VN_ANO_N_SETEMBRO_ACUM = IND_VN_ANO_N_SETEMBRO + IND_VN_ANO_N_AGOSTO_ACUM;
    var IND_VN_ANO_N_OUTUBRO_ACUM = IND_VN_ANO_N_OUTUBRO + IND_VN_ANO_N_SETEMBRO_ACUM;
    var IND_VN_ANO_N_NOVEMBRO_ACUM = IND_VN_ANO_N_NOVEMBRO + IND_VN_ANO_N_OUTUBRO_ACUM;
    var IND_VN_ANO_N_DEZEMBRO_ACUM = IND_VN_ANO_N_DEZEMBRO + IND_VN_ANO_N_NOVEMBRO_ACUM;



    var IND_VN_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JANEIRO"])));
    var IND_VN_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_FEVEREIRO"]))) + IND_VN_ANO_N_1_JANEIRO_ACUM;
    var IND_VN_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MARCO"]))) + IND_VN_ANO_N_1_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_ABRIL"]))) + IND_VN_ANO_N_1_MARCO_ACUM;
    var IND_VN_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MAIO"]))) + IND_VN_ANO_N_1_ABRIL_ACUM;
    var IND_VN_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JUNHO"]))) + IND_VN_ANO_N_1_MAIO_ACUM;
    var IND_VN_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JULHO"]))) + IND_VN_ANO_N_1_JUNHO_ACUM;
    var IND_VN_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_AGOSTO"]))) + IND_VN_ANO_N_1_JULHO_ACUM;
    var IND_VN_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_SETEMBRO"]))) + IND_VN_ANO_N_1_AGOSTO_ACUM;
    var IND_VN_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_OUTUBRO"]))) + IND_VN_ANO_N_1_SETEMBRO_ACUM;
    var IND_VN_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_NOVEMBRO"]))) + IND_VN_ANO_N_1_OUTUBRO_ACUM;
    var IND_VN_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_DEZEMBRO"]))) + IND_VN_ANO_N_1_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_JANEIRO_ACUM = 'nd'; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_JANEIRO_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JANEIRO_ACUM/IND_VN_ANO_N_JANEIRO_ACUM*100; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_FEVEREIRO_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_FEVEREIRO_ACUM/IND_VN_ANO_N_FEVEREIRO_ACUM*100; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_MARCO_ACUM = 'nd'; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_MARCO_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MARCO_ACUM/IND_VN_ANO_N_MARCO_ACUM*100; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_MARCO_ACUM_MAX_MIN = PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_ABRIL_ACUM = 'nd'; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_ABRIL_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_ABRIL_ACUM/IND_VN_ANO_N_ABRIL_ACUM*100; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_ABRIL_ACUM_MAX_MIN = PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_MAIO_ACUM = 'nd'; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_MAIO_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MAIO_ACUM/IND_VN_ANO_N_MAIO_ACUM*100; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_MAIO_ACUM_MAX_MIN = PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_JUNHO_ACUM = 'nd'; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_JUNHO_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JUNHO_ACUM/IND_VN_ANO_N_JUNHO_ACUM*100; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_JUNHO_ACUM_MAX_MIN = PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_JULHO_ACUM = 'nd'; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_JULHO_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JULHO_ACUM/IND_VN_ANO_N_JULHO_ACUM*100; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_JULHO_ACUM_MAX_MIN = PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_AGOSTO_ACUM = 'nd'; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_AGOSTO_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_AGOSTO_ACUM/IND_VN_ANO_N_AGOSTO_ACUM*100; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_SETEMBRO_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_SETEMBRO_ACUM/IND_VN_ANO_N_SETEMBRO_ACUM*100; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_OUTUBRO_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_OUTUBRO_ACUM/IND_VN_ANO_N_OUTUBRO_ACUM*100; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_NOVEMBRO_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_NOVEMBRO_ACUM/IND_VN_ANO_N_NOVEMBRO_ACUM*100; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_DEZEMBRO_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_DEZEMBRO_ACUM/IND_VN_ANO_N_DEZEMBRO_ACUM*100; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_JANEIRO_ACUM = 'nd'; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_JANEIRO_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JANEIRO_ACUM/IND_VN_ANO_N_1_JANEIRO_ACUM*100; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_FEVEREIRO_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_FEVEREIRO_ACUM/IND_VN_ANO_N_1_FEVEREIRO_ACUM*100; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_MARCO_ACUM = 'nd'; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_MARCO_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_MARCO_ACUM/IND_VN_ANO_N_1_MARCO_ACUM*100; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_ABRIL_ACUM = 'nd'; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_ABRIL_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_ABRIL_ACUM/IND_VN_ANO_N_1_ABRIL_ACUM*100; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_MAIO_ACUM = 'nd'; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_MAIO_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_MAIO_ACUM/IND_VN_ANO_N_1_MAIO_ACUM*100; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_JUNHO_ACUM = 'nd'; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_JUNHO_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JUNHO_ACUM/IND_VN_ANO_N_1_JUNHO_ACUM*100; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_JULHO_ACUM = 'nd'; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_JULHO_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JULHO_ACUM/IND_VN_ANO_N_1_JULHO_ACUM*100; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_AGOSTO_ACUM = 'nd'; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_AGOSTO_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_AGOSTO_ACUM/IND_VN_ANO_N_1_AGOSTO_ACUM*100; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_SETEMBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_SETEMBRO_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_SETEMBRO_ACUM/IND_VN_ANO_N_1_SETEMBRO_ACUM*100; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_OUTUBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_OUTUBRO_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_OUTUBRO_ACUM/IND_VN_ANO_N_1_OUTUBRO_ACUM*100; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_NOVEMBRO_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_NOVEMBRO_ACUM/IND_VN_ANO_N_1_NOVEMBRO_ACUM*100; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_DEZEMBRO_ACUM= FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_DEZEMBRO_ACUM/IND_VN_ANO_N_1_DEZEMBRO_ACUM*100; var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_VN_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JANEIRO_ACUM= ((IND_VN_ANO_N_JANEIRO_ACUM-IND_VN_ANO_N_1_JANEIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_JANEIRO_ACUM))*100; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_FEVEREIRO_ACUM= ((IND_VN_ANO_N_FEVEREIRO_ACUM-IND_VN_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_VN_ANO_N_MARCO_ACUM = 'nd'; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MARCO_ACUM= ((IND_VN_ANO_N_MARCO_ACUM-IND_VN_ANO_N_1_MARCO_ACUM)/Math.abs(IND_VN_ANO_N_1_MARCO_ACUM))*100; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = VAR_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_VN_ANO_N_ABRIL_ACUM = 'nd'; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_ABRIL_ACUM= ((IND_VN_ANO_N_ABRIL_ACUM-IND_VN_ANO_N_1_ABRIL_ACUM)/Math.abs(IND_VN_ANO_N_1_ABRIL_ACUM))*100; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_VN_ANO_N_MAIO_ACUM = 'nd'; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MAIO_ACUM= ((IND_VN_ANO_N_MAIO_ACUM-IND_VN_ANO_N_1_MAIO_ACUM)/Math.abs(IND_VN_ANO_N_1_MAIO_ACUM))*100; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = VAR_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_VN_ANO_N_JUNHO_ACUM = 'nd'; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JUNHO_ACUM= ((IND_VN_ANO_N_JUNHO_ACUM-IND_VN_ANO_N_1_JUNHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JUNHO_ACUM))*100; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_VN_ANO_N_JULHO_ACUM = 'nd'; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JULHO_ACUM= ((IND_VN_ANO_N_JULHO_ACUM-IND_VN_ANO_N_1_JULHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JULHO_ACUM))*100; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_VN_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_AGOSTO_ACUM= ((IND_VN_ANO_N_AGOSTO_ACUM-IND_VN_ANO_N_1_AGOSTO_ACUM)/Math.abs(IND_VN_ANO_N_1_AGOSTO_ACUM))*100; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_SETEMBRO_ACUM= ((IND_VN_ANO_N_SETEMBRO_ACUM-IND_VN_ANO_N_1_SETEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_OUTUBRO_ACUM= ((IND_VN_ANO_N_OUTUBRO_ACUM-IND_VN_ANO_N_1_OUTUBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_NOVEMBRO_ACUM= ((IND_VN_ANO_N_NOVEMBRO_ACUM-IND_VN_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_DEZEMBRO_ACUM= ((IND_VN_ANO_N_DEZEMBRO_ACUM-IND_VN_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JANEIRO_ACUM= ((FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JANEIRO_ACUM-FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JANEIRO_ACUM)/Math.abs(FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JANEIRO_ACUM))*100; var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_FEVEREIRO_ACUM= ((FSE_OUTROS_ENERG_FLUIDOS_ANO_N_FEVEREIRO_ACUM-FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MARCO_ACUM = 'nd'; var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MARCO_ACUM= ((FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MARCO_ACUM-FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_MARCO_ACUM)/Math.abs(FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_MARCO_ACUM))*100; var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MARCO_ACUM_MAX_MIN = VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_ABRIL_ACUM = 'nd'; var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_ABRIL_ACUM= ((FSE_OUTROS_ENERG_FLUIDOS_ANO_N_ABRIL_ACUM-FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_ABRIL_ACUM)/Math.abs(FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_ABRIL_ACUM))*100; var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MAIO_ACUM = 'nd'; var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MAIO_ACUM= ((FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MAIO_ACUM-FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_MAIO_ACUM)/Math.abs(FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_MAIO_ACUM))*100; var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MAIO_ACUM_MAX_MIN = VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JUNHO_ACUM = 'nd'; var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JUNHO_ACUM= ((FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JUNHO_ACUM-FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JUNHO_ACUM)/Math.abs(FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JUNHO_ACUM))*100; var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JULHO_ACUM = 'nd'; var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JULHO_ACUM= ((FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JULHO_ACUM-FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JULHO_ACUM)/Math.abs(FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_JULHO_ACUM))*100; var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JULHO_ACUM_MAX_MIN = VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_AGOSTO_ACUM= ((FSE_OUTROS_ENERG_FLUIDOS_ANO_N_AGOSTO_ACUM-FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_AGOSTO_ACUM)/Math.abs(FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_AGOSTO_ACUM))*100; var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_SETEMBRO_ACUM= ((FSE_OUTROS_ENERG_FLUIDOS_ANO_N_SETEMBRO_ACUM-FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_SETEMBRO_ACUM)/Math.abs(FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_OUTUBRO_ACUM= ((FSE_OUTROS_ENERG_FLUIDOS_ANO_N_OUTUBRO_ACUM-FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_OUTUBRO_ACUM)/Math.abs(FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_NOVEMBRO_ACUM= ((FSE_OUTROS_ENERG_FLUIDOS_ANO_N_NOVEMBRO_ACUM-FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_DEZEMBRO_ACUM= ((FSE_OUTROS_ENERG_FLUIDOS_ANO_N_DEZEMBRO_ACUM-FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(FSE_OUTROS_ENERG_FLUIDOS_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_DEZEMBRO_ACUM };

    if( PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_JANEIRO_ACUM > PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_JANEIRO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JANEIRO_ACUM=PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_JANEIRO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JANEIRO_ACUM=PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_JANEIRO_ACUM ; }
    if( PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_FEVEREIRO_ACUM > PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_FEVEREIRO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_FEVEREIRO_ACUM=PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_FEVEREIRO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_FEVEREIRO_ACUM=PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_FEVEREIRO_ACUM ; }
    if( PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_MARCO_ACUM > PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_MARCO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MARCO_ACUM=PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_MARCO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MARCO_ACUM=PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_MARCO_ACUM ; }
    if( PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_ABRIL_ACUM > PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_ABRIL_ACUM) { var  INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_ABRIL_ACUM=PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_ABRIL_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_ABRIL_ACUM=PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_ABRIL_ACUM ; }
    if( PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_MAIO_ACUM > PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_MAIO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MAIO_ACUM=PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_MAIO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MAIO_ACUM=PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_MAIO_ACUM ; }
    if( PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_JUNHO_ACUM > PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_JUNHO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JUNHO_ACUM=PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_JUNHO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JUNHO_ACUM=PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_JUNHO_ACUM ; }
    if( PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_JULHO_ACUM > PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_JULHO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JULHO_ACUM=PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_JULHO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JULHO_ACUM=PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_JULHO_ACUM ; }
    if( PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_AGOSTO_ACUM > PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_AGOSTO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_AGOSTO_ACUM=PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_AGOSTO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_AGOSTO_ACUM=PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_AGOSTO_ACUM ; }
    if( PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_SETEMBRO_ACUM > PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_SETEMBRO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_SETEMBRO_ACUM=PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_SETEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_SETEMBRO_ACUM=PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_SETEMBRO_ACUM ; }
    if( PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_OUTUBRO_ACUM > PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_OUTUBRO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_OUTUBRO_ACUM=PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_OUTUBRO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_OUTUBRO_ACUM=PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_OUTUBRO_ACUM ; }
    if( PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_NOVEMBRO_ACUM > PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_NOVEMBRO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_NOVEMBRO_ACUM=PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_NOVEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_NOVEMBRO_ACUM=PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_NOVEMBRO_ACUM ; }
    if( PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_DEZEMBRO_ACUM > PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_DEZEMBRO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_DEZEMBRO_ACUM=PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_DEZEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_DEZEMBRO_ACUM=PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_DEZEMBRO_ACUM ; }



    var fillBetweenLinesPlugin = {
        afterDatasetsDraw: function (chart) {
            var ctx = chart.chart.ctx;
            var xaxis = chart.scales['x-axis-0'];
            var yaxis = chart.scales['y-axis-0'];
            var datasets = chart.data.datasets;
            ctx.save();

            for (var d = 0; d < datasets.length; d++) {
                var dataset = datasets[d];
                if (dataset.fillBetweenSet == undefined) {
                    continue;
                }

                // get meta for both data sets
                var meta1 = chart.getDatasetMeta(d);
                var meta2 = chart.getDatasetMeta(dataset.fillBetweenSet);

                // do not draw fill if one of the datasets is hidden
                if (meta1.hidden || meta2.hidden) continue;

                // create fill areas in pairs
                for (var p = 0; p < meta1.data.length-1;p++) {
                    // if null skip
                    if (dataset.data[p] == null || dataset.data[p+1] == null) continue;

                    ctx.beginPath();

                    // trace line 1
                    var curr = meta1.data[p];
                    var next = meta1.data[p+1];
                    ctx.moveTo(curr._view.x, curr._view.y);
                    ctx.lineTo(curr._view.x, curr._view.y);
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(next._view.x, curr._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        ctx.bezierCurveTo(
                          curr._view.controlPointNextX,
                          curr._view.controlPointNextY,
                          next._view.controlPointPreviousX,
                          next._view.controlPointPreviousY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // connect dataset1 to dataset2
                    var curr = meta2.data[p+1];
                    var next = meta2.data[p];
                    ctx.lineTo(curr._view.x, curr._view.y);

                    // trace BACKWORDS set2 to complete the box
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(curr._view.x, next._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        // reverse bezier
                        ctx.bezierCurveTo(
                          curr._view.controlPointPreviousX,
                          curr._view.controlPointPreviousY,
                          next._view.controlPointNextX,
                          next._view.controlPointNextY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // close the loop and fill with shading
                    ctx.closePath();
                    ctx.fillStyle = dataset.fillBetweenColor || "rgba(0,0,0,0.1)";
                    ctx.fill();
                } // end for p loop
            }
        } // end afterDatasetsDraw
    }; // end fillBetweenLinesPlugin

    Chart.pluginService.register(fillBetweenLinesPlugin);



    var GRAFICO_FSE_RESULT_MENSAL_COMP_035=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_035').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_035=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_035, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label:  'Peso Otr. EnergiavsVN(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   //borderColor: "#F00",
                   fill: false,
                   steppedLine: false,
                   tension: 0.5,
                   fillBetweenSet: 1,
                   fillBetweenColor: "rgba(0, 221, 0, 0.1)",
                   data: [
                   PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_JANEIRO_ACUM,
                   PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_FEVEREIRO_ACUM,
                   PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_MARCO_ACUM,
                   PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_ABRIL_ACUM,
                   PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_MAIO_ACUM,
                   PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_JUNHO_ACUM,
                   PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_JULHO_ACUM,
                   PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_AGOSTO_ACUM,
                   PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_SETEMBRO_ACUM,
                   PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_OUTUBRO_ACUM,
                   PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_NOVEMBRO_ACUM,
                   PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_DEZEMBRO_ACUM,

                   ],
                   type: 'line'


               },
                {
                    label: 'Peso Otr. EnergiavsVN(ac) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'A',
                    //backgroundColor: 'rgb(17, 121, 240)',
                    borderColor: 'rgb(0,221,0)',
                    //borderColor: "#00F",
                    fill: false,
                    steppedLine: false,
                    tension: 0.5,
                    data: [
                   PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_JANEIRO_ACUM,
                   PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_FEVEREIRO_ACUM,
                   PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_MARCO_ACUM,
                   PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_ABRIL_ACUM,
                   PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_MAIO_ACUM,
                   PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_JUNHO_ACUM,
                   PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_JULHO_ACUM,
                   PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_AGOSTO_ACUM,
                   PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_SETEMBRO_ACUM,
                   PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_OUTUBRO_ACUM,
                   PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_NOVEMBRO_ACUM,
                   PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANO_N_1_DEZEMBRO_ACUM,
                    ],
                    type: 'line'
                },
    {
        label: 'Ineficiência',
        yAxisID: 'A',
        backgroundColor: "rgba(255, 0, 0, 0.2)",
        borderColor: 'rgba(255, 255, 255, 0.1)',
        //borderColor: "#0D0",
        fill: false,
        steppedLine: false,
        tension: 0.5,
        fillBetweenSet: 1,
        fillBetweenColor: "rgba(255, 0, 0, 0.2)",
        data: [
    INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JANEIRO_ACUM,
    INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_FEVEREIRO_ACUM,
    INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MARCO_ACUM,
    INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_ABRIL_ACUM,
    INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_MAIO_ACUM,
    INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JUNHO_ACUM,
    INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_JULHO_ACUM,
    INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_AGOSTO_ACUM,
    INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_SETEMBRO_ACUM,
    INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_OUTUBRO_ACUM,
    INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_NOVEMBRO_ACUM,
    INEFICIENCIA_FSE_OUTROS_ENERG_FLUIDOS_ANO_N_DEZEMBRO_ACUM,
        ],
        type: 'line'
    },

            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_OUTROS_ENERG_FLUIDOS COMP',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                //min:  Math.round(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_min_princ__,0),
                                                //max:  Math.round(FSE_OUTROS_ENERG_FLUIDOS_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString()+ "%";
                                                }
                                            }
                                        },







                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_036-----------------------------------------------------------*@
<script>

    if(@ViewData["MES_ACUM_REAL"]<1){ var IND_VN_ANO_N_JANEIRO = 'nd'; var IND_VN_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JANEIRO"]))); var IND_VN_ANO_N_JANEIRO_MAX_MIN = IND_VN_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var IND_VN_ANO_N_FEVEREIRO = 'nd'; var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_FEVEREIRO"]))); var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = IND_VN_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var IND_VN_ANO_N_MARCO = 'nd'; var IND_VN_ANO_N_MARCO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MARCO"]))); var IND_VN_ANO_N_MARCO_MAX_MIN = IND_VN_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var IND_VN_ANO_N_ABRIL = 'nd'; var IND_VN_ANO_N_ABRIL_MAX_MIN = 0;  } else { var IND_VN_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_ABRIL"]))); var IND_VN_ANO_N_ABRIL_MAX_MIN = IND_VN_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var IND_VN_ANO_N_MAIO = 'nd'; var IND_VN_ANO_N_MAIO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MAIO"]))); var IND_VN_ANO_N_MAIO_MAX_MIN = IND_VN_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var IND_VN_ANO_N_JUNHO = 'nd'; var IND_VN_ANO_N_JUNHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JUNHO"]))); var IND_VN_ANO_N_JUNHO_MAX_MIN = IND_VN_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var IND_VN_ANO_N_JULHO = 'nd'; var IND_VN_ANO_N_JULHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JULHO"]))); var IND_VN_ANO_N_JULHO_MAX_MIN = IND_VN_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var IND_VN_ANO_N_AGOSTO = 'nd'; var IND_VN_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_AGOSTO"]))); var IND_VN_ANO_N_AGOSTO_MAX_MIN = IND_VN_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var IND_VN_ANO_N_SETEMBRO = 'nd'; var IND_VN_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_SETEMBRO"]))); var IND_VN_ANO_N_SETEMBRO_MAX_MIN = IND_VN_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var IND_VN_ANO_N_OUTUBRO = 'nd'; var IND_VN_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_OUTUBRO"]))); var IND_VN_ANO_N_OUTUBRO_MAX_MIN = IND_VN_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var IND_VN_ANO_N_NOVEMBRO = 'nd'; var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_NOVEMBRO"]))); var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = IND_VN_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var IND_VN_ANO_N_DEZEMBRO = 'nd'; var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_DEZEMBRO"]))); var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = IND_VN_ANO_N_DEZEMBRO };

    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_DESLOC_ESTADAS_ANO_N_JANEIRO = 'nd'; var FSE_DESLOC_ESTADAS_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var FSE_DESLOC_ESTADAS_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_JANEIRO"]))); var FSE_DESLOC_ESTADAS_ANO_N_JANEIRO_MAX_MIN = FSE_DESLOC_ESTADAS_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_DESLOC_ESTADAS_ANO_N_FEVEREIRO = 'nd'; var FSE_DESLOC_ESTADAS_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var FSE_DESLOC_ESTADAS_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_FEVEREIRO"]))); var FSE_DESLOC_ESTADAS_ANO_N_FEVEREIRO_MAX_MIN = FSE_DESLOC_ESTADAS_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_DESLOC_ESTADAS_ANO_N_MARCO = 'nd'; var FSE_DESLOC_ESTADAS_ANO_N_MARCO_MAX_MIN = 0;  } else { var FSE_DESLOC_ESTADAS_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_MARCO"]))); var FSE_DESLOC_ESTADAS_ANO_N_MARCO_MAX_MIN = FSE_DESLOC_ESTADAS_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_DESLOC_ESTADAS_ANO_N_ABRIL = 'nd'; var FSE_DESLOC_ESTADAS_ANO_N_ABRIL_MAX_MIN = 0;  } else { var FSE_DESLOC_ESTADAS_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_ABRIL"]))); var FSE_DESLOC_ESTADAS_ANO_N_ABRIL_MAX_MIN = FSE_DESLOC_ESTADAS_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_DESLOC_ESTADAS_ANO_N_MAIO = 'nd'; var FSE_DESLOC_ESTADAS_ANO_N_MAIO_MAX_MIN = 0;  } else { var FSE_DESLOC_ESTADAS_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_MAIO"]))); var FSE_DESLOC_ESTADAS_ANO_N_MAIO_MAX_MIN = FSE_DESLOC_ESTADAS_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_DESLOC_ESTADAS_ANO_N_JUNHO = 'nd'; var FSE_DESLOC_ESTADAS_ANO_N_JUNHO_MAX_MIN = 0;  } else { var FSE_DESLOC_ESTADAS_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_JUNHO"]))); var FSE_DESLOC_ESTADAS_ANO_N_JUNHO_MAX_MIN = FSE_DESLOC_ESTADAS_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_DESLOC_ESTADAS_ANO_N_JULHO = 'nd'; var FSE_DESLOC_ESTADAS_ANO_N_JULHO_MAX_MIN = 0;  } else { var FSE_DESLOC_ESTADAS_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_JULHO"]))); var FSE_DESLOC_ESTADAS_ANO_N_JULHO_MAX_MIN = FSE_DESLOC_ESTADAS_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_DESLOC_ESTADAS_ANO_N_AGOSTO = 'nd'; var FSE_DESLOC_ESTADAS_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var FSE_DESLOC_ESTADAS_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_AGOSTO"]))); var FSE_DESLOC_ESTADAS_ANO_N_AGOSTO_MAX_MIN = FSE_DESLOC_ESTADAS_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_DESLOC_ESTADAS_ANO_N_SETEMBRO = 'nd'; var FSE_DESLOC_ESTADAS_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var FSE_DESLOC_ESTADAS_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_SETEMBRO"]))); var FSE_DESLOC_ESTADAS_ANO_N_SETEMBRO_MAX_MIN = FSE_DESLOC_ESTADAS_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_DESLOC_ESTADAS_ANO_N_OUTUBRO = 'nd'; var FSE_DESLOC_ESTADAS_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var FSE_DESLOC_ESTADAS_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_OUTUBRO"]))); var FSE_DESLOC_ESTADAS_ANO_N_OUTUBRO_MAX_MIN = FSE_DESLOC_ESTADAS_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_DESLOC_ESTADAS_ANO_N_NOVEMBRO = 'nd'; var FSE_DESLOC_ESTADAS_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var FSE_DESLOC_ESTADAS_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_NOVEMBRO"]))); var FSE_DESLOC_ESTADAS_ANO_N_NOVEMBRO_MAX_MIN = FSE_DESLOC_ESTADAS_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_DESLOC_ESTADAS_ANO_N_DEZEMBRO = 'nd'; var FSE_DESLOC_ESTADAS_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var FSE_DESLOC_ESTADAS_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_DEZEMBRO"]))); var FSE_DESLOC_ESTADAS_ANO_N_DEZEMBRO_MAX_MIN = FSE_DESLOC_ESTADAS_ANO_N_DEZEMBRO };


    var FSE_DESLOC_ESTADAS_ANO_N_JANEIRO_ACUM = FSE_DESLOC_ESTADAS_ANO_N_JANEIRO;
    var FSE_DESLOC_ESTADAS_ANO_N_FEVEREIRO_ACUM = FSE_DESLOC_ESTADAS_ANO_N_FEVEREIRO + FSE_DESLOC_ESTADAS_ANO_N_JANEIRO_ACUM;
    var FSE_DESLOC_ESTADAS_ANO_N_MARCO_ACUM = FSE_DESLOC_ESTADAS_ANO_N_MARCO + FSE_DESLOC_ESTADAS_ANO_N_FEVEREIRO_ACUM;
    var FSE_DESLOC_ESTADAS_ANO_N_ABRIL_ACUM = FSE_DESLOC_ESTADAS_ANO_N_ABRIL + FSE_DESLOC_ESTADAS_ANO_N_MARCO_ACUM;
    var FSE_DESLOC_ESTADAS_ANO_N_MAIO_ACUM = FSE_DESLOC_ESTADAS_ANO_N_MAIO + FSE_DESLOC_ESTADAS_ANO_N_ABRIL_ACUM;
    var FSE_DESLOC_ESTADAS_ANO_N_JUNHO_ACUM = FSE_DESLOC_ESTADAS_ANO_N_JUNHO + FSE_DESLOC_ESTADAS_ANO_N_MAIO_ACUM;
    var FSE_DESLOC_ESTADAS_ANO_N_JULHO_ACUM = FSE_DESLOC_ESTADAS_ANO_N_JULHO + FSE_DESLOC_ESTADAS_ANO_N_JUNHO_ACUM;
    var FSE_DESLOC_ESTADAS_ANO_N_AGOSTO_ACUM = FSE_DESLOC_ESTADAS_ANO_N_AGOSTO + FSE_DESLOC_ESTADAS_ANO_N_JULHO_ACUM;
    var FSE_DESLOC_ESTADAS_ANO_N_SETEMBRO_ACUM = FSE_DESLOC_ESTADAS_ANO_N_SETEMBRO + FSE_DESLOC_ESTADAS_ANO_N_AGOSTO_ACUM;
    var FSE_DESLOC_ESTADAS_ANO_N_OUTUBRO_ACUM = FSE_DESLOC_ESTADAS_ANO_N_OUTUBRO + FSE_DESLOC_ESTADAS_ANO_N_SETEMBRO_ACUM;
    var FSE_DESLOC_ESTADAS_ANO_N_NOVEMBRO_ACUM = FSE_DESLOC_ESTADAS_ANO_N_NOVEMBRO + FSE_DESLOC_ESTADAS_ANO_N_OUTUBRO_ACUM;
    var FSE_DESLOC_ESTADAS_ANO_N_DEZEMBRO_ACUM = FSE_DESLOC_ESTADAS_ANO_N_DEZEMBRO + FSE_DESLOC_ESTADAS_ANO_N_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_DESLOC_ESTADAS_ANO_N_JANEIRO_ACUM = 'nd'; var FSE_DESLOC_ESTADAS_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var FSE_DESLOC_ESTADAS_ANO_N_JANEIRO_ACUM= FSE_DESLOC_ESTADAS_ANO_N_JANEIRO_ACUM; var FSE_DESLOC_ESTADAS_ANO_N_JANEIRO_ACUM_MAX_MIN = FSE_DESLOC_ESTADAS_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_DESLOC_ESTADAS_ANO_N_FEVEREIRO_ACUM = 'nd'; var FSE_DESLOC_ESTADAS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var FSE_DESLOC_ESTADAS_ANO_N_FEVEREIRO_ACUM= FSE_DESLOC_ESTADAS_ANO_N_FEVEREIRO_ACUM; var FSE_DESLOC_ESTADAS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = FSE_DESLOC_ESTADAS_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_DESLOC_ESTADAS_ANO_N_MARCO_ACUM = 'nd'; var FSE_DESLOC_ESTADAS_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var FSE_DESLOC_ESTADAS_ANO_N_MARCO_ACUM= FSE_DESLOC_ESTADAS_ANO_N_MARCO_ACUM; var FSE_DESLOC_ESTADAS_ANO_N_MARCO_ACUM_MAX_MIN = FSE_DESLOC_ESTADAS_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_DESLOC_ESTADAS_ANO_N_ABRIL_ACUM = 'nd'; var FSE_DESLOC_ESTADAS_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var FSE_DESLOC_ESTADAS_ANO_N_ABRIL_ACUM= FSE_DESLOC_ESTADAS_ANO_N_ABRIL_ACUM; var FSE_DESLOC_ESTADAS_ANO_N_ABRIL_ACUM_MAX_MIN = FSE_DESLOC_ESTADAS_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_DESLOC_ESTADAS_ANO_N_MAIO_ACUM = 'nd'; var FSE_DESLOC_ESTADAS_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var FSE_DESLOC_ESTADAS_ANO_N_MAIO_ACUM= FSE_DESLOC_ESTADAS_ANO_N_MAIO_ACUM; var FSE_DESLOC_ESTADAS_ANO_N_MAIO_ACUM_MAX_MIN = FSE_DESLOC_ESTADAS_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_DESLOC_ESTADAS_ANO_N_JUNHO_ACUM = 'nd'; var FSE_DESLOC_ESTADAS_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var FSE_DESLOC_ESTADAS_ANO_N_JUNHO_ACUM= FSE_DESLOC_ESTADAS_ANO_N_JUNHO_ACUM; var FSE_DESLOC_ESTADAS_ANO_N_JUNHO_ACUM_MAX_MIN = FSE_DESLOC_ESTADAS_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_DESLOC_ESTADAS_ANO_N_JULHO_ACUM = 'nd'; var FSE_DESLOC_ESTADAS_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var FSE_DESLOC_ESTADAS_ANO_N_JULHO_ACUM= FSE_DESLOC_ESTADAS_ANO_N_JULHO_ACUM; var FSE_DESLOC_ESTADAS_ANO_N_JULHO_ACUM_MAX_MIN = FSE_DESLOC_ESTADAS_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_DESLOC_ESTADAS_ANO_N_AGOSTO_ACUM = 'nd'; var FSE_DESLOC_ESTADAS_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var FSE_DESLOC_ESTADAS_ANO_N_AGOSTO_ACUM= FSE_DESLOC_ESTADAS_ANO_N_AGOSTO_ACUM; var FSE_DESLOC_ESTADAS_ANO_N_AGOSTO_ACUM_MAX_MIN = FSE_DESLOC_ESTADAS_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_DESLOC_ESTADAS_ANO_N_SETEMBRO_ACUM = 'nd'; var FSE_DESLOC_ESTADAS_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_DESLOC_ESTADAS_ANO_N_SETEMBRO_ACUM= FSE_DESLOC_ESTADAS_ANO_N_SETEMBRO_ACUM; var FSE_DESLOC_ESTADAS_ANO_N_SETEMBRO_ACUM_MAX_MIN = FSE_DESLOC_ESTADAS_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_DESLOC_ESTADAS_ANO_N_OUTUBRO_ACUM = 'nd'; var FSE_DESLOC_ESTADAS_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var FSE_DESLOC_ESTADAS_ANO_N_OUTUBRO_ACUM= FSE_DESLOC_ESTADAS_ANO_N_OUTUBRO_ACUM; var FSE_DESLOC_ESTADAS_ANO_N_OUTUBRO_ACUM_MAX_MIN = FSE_DESLOC_ESTADAS_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_DESLOC_ESTADAS_ANO_N_NOVEMBRO_ACUM = 'nd'; var FSE_DESLOC_ESTADAS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_DESLOC_ESTADAS_ANO_N_NOVEMBRO_ACUM= FSE_DESLOC_ESTADAS_ANO_N_NOVEMBRO_ACUM; var FSE_DESLOC_ESTADAS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = FSE_DESLOC_ESTADAS_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_DESLOC_ESTADAS_ANO_N_DEZEMBRO_ACUM = 'nd'; var FSE_DESLOC_ESTADAS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_DESLOC_ESTADAS_ANO_N_DEZEMBRO_ACUM= FSE_DESLOC_ESTADAS_ANO_N_DEZEMBRO_ACUM; var FSE_DESLOC_ESTADAS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = FSE_DESLOC_ESTADAS_ANO_N_DEZEMBRO_ACUM };




    var FSE_DESLOC_ESTADAS_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_JANEIRO"])));
    var FSE_DESLOC_ESTADAS_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_FEVEREIRO"]))) + FSE_DESLOC_ESTADAS_ANO_N_1_JANEIRO_ACUM;
    var FSE_DESLOC_ESTADAS_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_MARCO"]))) + FSE_DESLOC_ESTADAS_ANO_N_1_FEVEREIRO_ACUM;
    var FSE_DESLOC_ESTADAS_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_ABRIL"]))) + FSE_DESLOC_ESTADAS_ANO_N_1_MARCO_ACUM;
    var FSE_DESLOC_ESTADAS_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_MAIO"]))) + FSE_DESLOC_ESTADAS_ANO_N_1_ABRIL_ACUM;
    var FSE_DESLOC_ESTADAS_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_JUNHO"]))) + FSE_DESLOC_ESTADAS_ANO_N_1_MAIO_ACUM;
    var FSE_DESLOC_ESTADAS_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_JULHO"]))) + FSE_DESLOC_ESTADAS_ANO_N_1_JUNHO_ACUM;
    var FSE_DESLOC_ESTADAS_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_AGOSTO"]))) + FSE_DESLOC_ESTADAS_ANO_N_1_JULHO_ACUM;
    var FSE_DESLOC_ESTADAS_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_SETEMBRO"]))) + FSE_DESLOC_ESTADAS_ANO_N_1_AGOSTO_ACUM;
    var FSE_DESLOC_ESTADAS_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_OUTUBRO"]))) + FSE_DESLOC_ESTADAS_ANO_N_1_SETEMBRO_ACUM;
    var FSE_DESLOC_ESTADAS_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_NOVEMBRO"]))) + FSE_DESLOC_ESTADAS_ANO_N_1_OUTUBRO_ACUM;
    var FSE_DESLOC_ESTADAS_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_DEZEMBRO"]))) + FSE_DESLOC_ESTADAS_ANO_N_1_NOVEMBRO_ACUM;


    var FSE_DESLOC_ESTADAS_Mensal_Eixo_max_princ= Math.max(
                       FSE_DESLOC_ESTADAS_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_DESLOC_ESTADAS_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_DESLOC_ESTADAS_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_DESLOC_ESTADAS_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_DESLOC_ESTADAS_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_DESLOC_ESTADAS_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_DESLOC_ESTADAS_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_DESLOC_ESTADAS_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_DESLOC_ESTADAS_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_DESLOC_ESTADAS_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_DESLOC_ESTADAS_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_DESLOC_ESTADAS_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_DESLOC_ESTADAS_ANO_N_1_JANEIRO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_1_MARCO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_1_ABRIL_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_1_MAIO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_1_JUNHO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_1_JULHO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_1_AGOSTO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_1_SETEMBRO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_1_OUTUBRO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_1_DEZEMBRO_ACUM
                             );
    var FSE_DESLOC_ESTADAS_Mensal_Eixo_min_princ= Math.min(

                       FSE_DESLOC_ESTADAS_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_DESLOC_ESTADAS_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_DESLOC_ESTADAS_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_DESLOC_ESTADAS_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_DESLOC_ESTADAS_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_DESLOC_ESTADAS_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_DESLOC_ESTADAS_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_DESLOC_ESTADAS_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_DESLOC_ESTADAS_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_DESLOC_ESTADAS_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_DESLOC_ESTADAS_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_DESLOC_ESTADAS_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_DESLOC_ESTADAS_ANO_N_1_JANEIRO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_1_MARCO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_1_ABRIL_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_1_MAIO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_1_JUNHO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_1_JULHO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_1_AGOSTO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_1_SETEMBRO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_1_OUTUBRO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_1_DEZEMBRO_ACUM
                           );
    var FSE_DESLOC_ESTADAS_Mensal_Eixo_max_secon= Math.max(
                       FSE_DESLOC_ESTADAS_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_DESLOC_ESTADAS_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_DESLOC_ESTADAS_ANO_N_MARCO_MAX_MIN ,
                       FSE_DESLOC_ESTADAS_ANO_N_ABRIL_MAX_MIN ,
                       FSE_DESLOC_ESTADAS_ANO_N_MAIO_MAX_MIN ,
                       FSE_DESLOC_ESTADAS_ANO_N_JUNHO_MAX_MIN ,
                       FSE_DESLOC_ESTADAS_ANO_N_JULHO_MAX_MIN ,
                       FSE_DESLOC_ESTADAS_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_DESLOC_ESTADAS_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_DESLOC_ESTADAS_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_DESLOC_ESTADAS_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_DESLOC_ESTADAS_ANO_N_DEZEMBRO_MAX_MIN ,



                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_DEZEMBRO"])))

                            );
    var FSE_DESLOC_ESTADAS_Mensal_Eixo_min_secon= Math.min(
                       FSE_DESLOC_ESTADAS_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_DESLOC_ESTADAS_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_DESLOC_ESTADAS_ANO_N_MARCO_MAX_MIN ,
                       FSE_DESLOC_ESTADAS_ANO_N_ABRIL_MAX_MIN ,
                       FSE_DESLOC_ESTADAS_ANO_N_MAIO_MAX_MIN ,
                       FSE_DESLOC_ESTADAS_ANO_N_JUNHO_MAX_MIN ,
                       FSE_DESLOC_ESTADAS_ANO_N_JULHO_MAX_MIN ,
                       FSE_DESLOC_ESTADAS_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_DESLOC_ESTADAS_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_DESLOC_ESTADAS_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_DESLOC_ESTADAS_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_DESLOC_ESTADAS_ANO_N_DEZEMBRO_MAX_MIN ,


                           @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_DEZEMBRO"])))

                          );

    //NOTA TA: Aqui trato o minimo e o maximo do eixo principal
    if(Math.abs(FSE_DESLOC_ESTADAS_Mensal_Eixo_max_princ)>=Math.abs(FSE_DESLOC_ESTADAS_Mensal_Eixo_min_princ))
    {
        var FSE_DESLOC_ESTADAS_Mensal_Eixo_max_princ_=(Math.ceil(FSE_DESLOC_ESTADAS_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_DESLOC_ESTADAS_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_DESLOC_ESTADAS_Mensal_Eixo_max_princ),0).toString().length-1);
        var FSE_DESLOC_ESTADAS_Mensal_Eixo_min_princ_= (Math.floor(FSE_DESLOC_ESTADAS_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_DESLOC_ESTADAS_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_DESLOC_ESTADAS_Mensal_Eixo_max_princ),0).toString().length-1);
        //alert(FSE_DESLOC_ESTADAS_Mensal_Eixo_max_princ_);
        //alert(FSE_DESLOC_ESTADAS_Mensal_Eixo_min_princ_);
    }
    else
    {
        var FSE_DESLOC_ESTADAS_Mensal_Eixo_max_princ_=(Math.ceil(FSE_DESLOC_ESTADAS_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_DESLOC_ESTADAS_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_DESLOC_ESTADAS_Mensal_Eixo_min_princ),0).toString().length-1);
        var FSE_DESLOC_ESTADAS_Mensal_Eixo_min_princ_= (Math.floor(FSE_DESLOC_ESTADAS_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_DESLOC_ESTADAS_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_DESLOC_ESTADAS_Mensal_Eixo_min_princ),0).toString().length-1);}

    //NOTA TA: Aqui trato o minimo e o maximo do eixo secundario

    if(Math.abs(FSE_DESLOC_ESTADAS_Mensal_Eixo_max_secon)>=Math.abs(FSE_DESLOC_ESTADAS_Mensal_Eixo_min_secon))
    {
        var FSE_DESLOC_ESTADAS_Mensal_Eixo_max_secon_=(Math.ceil(FSE_DESLOC_ESTADAS_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_DESLOC_ESTADAS_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_DESLOC_ESTADAS_Mensal_Eixo_max_secon),0).toString().length-1);
        var FSE_DESLOC_ESTADAS_Mensal_Eixo_min_secon_= (Math.floor(FSE_DESLOC_ESTADAS_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_DESLOC_ESTADAS_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_DESLOC_ESTADAS_Mensal_Eixo_max_secon),0).toString().length-1);
        //alert(FSE_DESLOC_ESTADAS_Mensal_Eixo_max_secon_);
        //alert(FSE_DESLOC_ESTADAS_Mensal_Eixo_min_secon_);
    }
    else
    {
        var FSE_DESLOC_ESTADAS_Mensal_Eixo_max_secon_=(Math.ceil(FSE_DESLOC_ESTADAS_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_DESLOC_ESTADAS_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_DESLOC_ESTADAS_Mensal_Eixo_min_secon),0).toString().length-1);
        var FSE_DESLOC_ESTADAS_Mensal_Eixo_min_secon_= (Math.floor(FSE_DESLOC_ESTADAS_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_DESLOC_ESTADAS_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_DESLOC_ESTADAS_Mensal_Eixo_min_secon),0).toString().length-1);}


    if(Math.abs(FSE_DESLOC_ESTADAS_Mensal_Eixo_min_princ)/Math.abs(FSE_DESLOC_ESTADAS_Mensal_Eixo_max_princ)>=Math.abs(FSE_DESLOC_ESTADAS_Mensal_Eixo_min_secon)/Math.abs(FSE_DESLOC_ESTADAS_Mensal_Eixo_max_secon))
    { if(FSE_DESLOC_ESTADAS_Mensal_Eixo_max_princ > 0 && FSE_DESLOC_ESTADAS_Mensal_Eixo_min_princ <0 ){ var FSE_DESLOC_ESTADAS_Mensal_Eixo_min_secon__=(FSE_DESLOC_ESTADAS_Mensal_Eixo_min_princ_*FSE_DESLOC_ESTADAS_Mensal_Eixo_max_secon_)/FSE_DESLOC_ESTADAS_Mensal_Eixo_max_princ_;} else { var FSE_DESLOC_ESTADAS_Mensal_Eixo_min_secon__=FSE_DESLOC_ESTADAS_Mensal_Eixo_min_secon_;}
        if(FSE_DESLOC_ESTADAS_Mensal_Eixo_max_secon > 0 && FSE_DESLOC_ESTADAS_Mensal_Eixo_min_secon <0 ){ var FSE_DESLOC_ESTADAS_Mensal_Eixo_min_princ__=(FSE_DESLOC_ESTADAS_Mensal_Eixo_min_secon__*FSE_DESLOC_ESTADAS_Mensal_Eixo_max_princ_)/FSE_DESLOC_ESTADAS_Mensal_Eixo_max_secon_;} else { var FSE_DESLOC_ESTADAS_Mensal_Eixo_min_princ__=FSE_DESLOC_ESTADAS_Mensal_Eixo_min_princ_;}}
    else
    {if(FSE_DESLOC_ESTADAS_Mensal_Eixo_max_secon > 0 && FSE_DESLOC_ESTADAS_Mensal_Eixo_min_secon <0 ){ var FSE_DESLOC_ESTADAS_Mensal_Eixo_min_princ__=(FSE_DESLOC_ESTADAS_Mensal_Eixo_min_secon_*FSE_DESLOC_ESTADAS_Mensal_Eixo_max_princ_)/FSE_DESLOC_ESTADAS_Mensal_Eixo_max_secon_;} else { var FSE_DESLOC_ESTADAS_Mensal_Eixo_min_princ__=FSE_DESLOC_ESTADAS_Mensal_Eixo_min_princ_;}
        if(FSE_DESLOC_ESTADAS_Mensal_Eixo_max_princ > 0 && FSE_DESLOC_ESTADAS_Mensal_Eixo_min_princ <0 ){ var FSE_DESLOC_ESTADAS_Mensal_Eixo_min_secon__=(FSE_DESLOC_ESTADAS_Mensal_Eixo_min_princ__*FSE_DESLOC_ESTADAS_Mensal_Eixo_max_secon_)/FSE_DESLOC_ESTADAS_Mensal_Eixo_max_princ_;} else { var FSE_DESLOC_ESTADAS_Mensal_Eixo_min_secon__=FSE_DESLOC_ESTADAS_Mensal_Eixo_min_secon_;}
    }



    if(Math.abs(FSE_DESLOC_ESTADAS_Mensal_Eixo_max_princ)/Math.abs(FSE_DESLOC_ESTADAS_Mensal_Eixo_min_princ)>=Math.abs(FSE_DESLOC_ESTADAS_Mensal_Eixo_max_secon)/Math.abs(FSE_DESLOC_ESTADAS_Mensal_Eixo_min_secon))
    { if(FSE_DESLOC_ESTADAS_Mensal_Eixo_min_princ > 0 && FSE_DESLOC_ESTADAS_Mensal_Eixo_max_princ <0 ){ var FSE_DESLOC_ESTADAS_Mensal_Eixo_max_secon__=(FSE_DESLOC_ESTADAS_Mensal_Eixo_max_princ_*FSE_DESLOC_ESTADAS_Mensal_Eixo_min_secon_)/FSE_DESLOC_ESTADAS_Mensal_Eixo_min_princ_;} else { var FSE_DESLOC_ESTADAS_Mensal_Eixo_max_secon__=FSE_DESLOC_ESTADAS_Mensal_Eixo_max_secon_;}
        if(FSE_DESLOC_ESTADAS_Mensal_Eixo_min_secon > 0 && FSE_DESLOC_ESTADAS_Mensal_Eixo_max_secon <0 ){ var FSE_DESLOC_ESTADAS_Mensal_Eixo_max_princ__=(FSE_DESLOC_ESTADAS_Mensal_Eixo_max_secon__*FSE_DESLOC_ESTADAS_Mensal_Eixo_min_princ_)/FSE_DESLOC_ESTADAS_Mensal_Eixo_min_secon_;} else { var FSE_DESLOC_ESTADAS_Mensal_Eixo_max_princ__=FSE_DESLOC_ESTADAS_Mensal_Eixo_max_princ_;}}
    else
    {if(FSE_DESLOC_ESTADAS_Mensal_Eixo_min_secon > 0 && FSE_DESLOC_ESTADAS_Mensal_Eixo_max_secon <0 ){ var FSE_DESLOC_ESTADAS_Mensal_Eixo_max_princ__=(FSE_DESLOC_ESTADAS_Mensal_Eixo_max_secon_*FSE_DESLOC_ESTADAS_Mensal_Eixo_min_princ_)/FSE_DESLOC_ESTADAS_Mensal_Eixo_min_secon_;} else { var FSE_DESLOC_ESTADAS_Mensal_Eixo_max_princ__=FSE_DESLOC_ESTADAS_Mensal_Eixo_max_princ_;}
        if(FSE_DESLOC_ESTADAS_Mensal_Eixo_min_princ > 0 && FSE_DESLOC_ESTADAS_Mensal_Eixo_max_princ <0 ){ var FSE_DESLOC_ESTADAS_Mensal_Eixo_max_secon__=(FSE_DESLOC_ESTADAS_Mensal_Eixo_max_princ__*FSE_DESLOC_ESTADAS_Mensal_Eixo_min_secon_)/FSE_DESLOC_ESTADAS_Mensal_Eixo_min_princ_;} else { var FSE_DESLOC_ESTADAS_Mensal_Eixo_max_secon__=FSE_DESLOC_ESTADAS_Mensal_Eixo_max_secon_;}
    }



    var GRAFICO_FSE_RESULT_MENSAL_COMP_036=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_036').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_036=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_036, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label: 'Desl. Estad.(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   data: [
                       FSE_DESLOC_ESTADAS_ANO_N_JANEIRO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_FEVEREIRO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_MARCO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_ABRIL_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_MAIO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_JUNHO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_JULHO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_AGOSTO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_SETEMBRO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_OUTUBRO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_NOVEMBRO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_DEZEMBRO_ACUM,
                   ],
                   type: 'line'


               },
                              {
                                  label: 'Desl. Estad.(ac) ' + ANO_VERSAO_ANTE_,
                                  yAxisID: 'A',
                                  //backgroundColor: 'rgb(201, 10, 10)',
                                  borderColor: 'rgb(0,221,0)',
                                  data: [
                       FSE_DESLOC_ESTADAS_ANO_N_1_JANEIRO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_1_MARCO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_1_ABRIL_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_1_MAIO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_1_JUNHO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_1_JULHO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_1_AGOSTO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_1_SETEMBRO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_1_OUTUBRO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_DESLOC_ESTADAS_ANO_N_1_DEZEMBRO_ACUM,
                                  ],
                                  type: 'line'


                              },
                {
                    label:  'Desl. Estad.(m) ' + ANO_VERSAO_REAL_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(250 , 83 , 0, 0.5)',
                    borderColor: 'rgba(250 , 83 , 0, 0.5)',
                    data: [
                  FSE_DESLOC_ESTADAS_ANO_N_JANEIRO ,
                  FSE_DESLOC_ESTADAS_ANO_N_FEVEREIRO ,
                  FSE_DESLOC_ESTADAS_ANO_N_MARCO ,
                  FSE_DESLOC_ESTADAS_ANO_N_ABRIL,
                  FSE_DESLOC_ESTADAS_ANO_N_MAIO ,
                  FSE_DESLOC_ESTADAS_ANO_N_JUNHO ,
                  FSE_DESLOC_ESTADAS_ANO_N_JULHO ,
                  FSE_DESLOC_ESTADAS_ANO_N_AGOSTO ,
                  FSE_DESLOC_ESTADAS_ANO_N_SETEMBRO ,
                  FSE_DESLOC_ESTADAS_ANO_N_OUTUBRO ,
                  FSE_DESLOC_ESTADAS_ANO_N_NOVEMBRO ,
                  FSE_DESLOC_ESTADAS_ANO_N_DEZEMBRO ,
                    ],
                },
                {
                    label:  'Desl. Estad.(m) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(0,221,0, 0.4)',
                    borderColor: 'rgba(0,221,0, 0.4)',
                    data: [
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_JANEIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_FEVEREIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_MARCO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_ABRIL"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_MAIO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_JUNHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_JULHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_AGOSTO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_SETEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_OUTUBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_NOVEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANO_N_1_DEZEMBRO"]))),
                    ],
                },


            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_DESLOC_ESTADAS_MENSAL_1',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                min:  Math.round(FSE_DESLOC_ESTADAS_Mensal_Eixo_min_princ__,0),
                                                max:  Math.round(FSE_DESLOC_ESTADAS_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString();
                                                }
                                            }
                                        },

                    { id: 'B',
                        type: 'linear',
                        position: 'right',
                        ticks: {
                            min: Math.round(FSE_DESLOC_ESTADAS_Mensal_Eixo_min_secon__,0),
                            max:  Math.round(FSE_DESLOC_ESTADAS_Mensal_Eixo_max_secon__,0),
                            beginAtZero: false,
                            callback: function(value, index, values) {
                                return value.toLocaleString();
                            }
                        }
                    },






                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_037-----------------------------------------------------------*@
<script>

    var IND_VN_ANO_N_JANEIRO_ACUM = IND_VN_ANO_N_JANEIRO;
    var IND_VN_ANO_N_FEVEREIRO_ACUM = IND_VN_ANO_N_FEVEREIRO + IND_VN_ANO_N_JANEIRO_ACUM;
    var IND_VN_ANO_N_MARCO_ACUM = IND_VN_ANO_N_MARCO + IND_VN_ANO_N_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_ABRIL_ACUM = IND_VN_ANO_N_ABRIL + IND_VN_ANO_N_MARCO_ACUM;
    var IND_VN_ANO_N_MAIO_ACUM = IND_VN_ANO_N_MAIO + IND_VN_ANO_N_ABRIL_ACUM;
    var IND_VN_ANO_N_JUNHO_ACUM = IND_VN_ANO_N_JUNHO + IND_VN_ANO_N_MAIO_ACUM;
    var IND_VN_ANO_N_JULHO_ACUM = IND_VN_ANO_N_JULHO + IND_VN_ANO_N_JUNHO_ACUM;
    var IND_VN_ANO_N_AGOSTO_ACUM = IND_VN_ANO_N_AGOSTO + IND_VN_ANO_N_JULHO_ACUM;
    var IND_VN_ANO_N_SETEMBRO_ACUM = IND_VN_ANO_N_SETEMBRO + IND_VN_ANO_N_AGOSTO_ACUM;
    var IND_VN_ANO_N_OUTUBRO_ACUM = IND_VN_ANO_N_OUTUBRO + IND_VN_ANO_N_SETEMBRO_ACUM;
    var IND_VN_ANO_N_NOVEMBRO_ACUM = IND_VN_ANO_N_NOVEMBRO + IND_VN_ANO_N_OUTUBRO_ACUM;
    var IND_VN_ANO_N_DEZEMBRO_ACUM = IND_VN_ANO_N_DEZEMBRO + IND_VN_ANO_N_NOVEMBRO_ACUM;



    var IND_VN_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JANEIRO"])));
    var IND_VN_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_FEVEREIRO"]))) + IND_VN_ANO_N_1_JANEIRO_ACUM;
    var IND_VN_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MARCO"]))) + IND_VN_ANO_N_1_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_ABRIL"]))) + IND_VN_ANO_N_1_MARCO_ACUM;
    var IND_VN_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MAIO"]))) + IND_VN_ANO_N_1_ABRIL_ACUM;
    var IND_VN_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JUNHO"]))) + IND_VN_ANO_N_1_MAIO_ACUM;
    var IND_VN_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JULHO"]))) + IND_VN_ANO_N_1_JUNHO_ACUM;
    var IND_VN_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_AGOSTO"]))) + IND_VN_ANO_N_1_JULHO_ACUM;
    var IND_VN_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_SETEMBRO"]))) + IND_VN_ANO_N_1_AGOSTO_ACUM;
    var IND_VN_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_OUTUBRO"]))) + IND_VN_ANO_N_1_SETEMBRO_ACUM;
    var IND_VN_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_NOVEMBRO"]))) + IND_VN_ANO_N_1_OUTUBRO_ACUM;
    var IND_VN_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_DEZEMBRO"]))) + IND_VN_ANO_N_1_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_JANEIRO_ACUM = 'nd'; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_JANEIRO_ACUM= FSE_DESLOC_ESTADAS_ANO_N_JANEIRO_ACUM/IND_VN_ANO_N_JANEIRO_ACUM*100; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_FEVEREIRO_ACUM= FSE_DESLOC_ESTADAS_ANO_N_FEVEREIRO_ACUM/IND_VN_ANO_N_FEVEREIRO_ACUM*100; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_MARCO_ACUM = 'nd'; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_MARCO_ACUM= FSE_DESLOC_ESTADAS_ANO_N_MARCO_ACUM/IND_VN_ANO_N_MARCO_ACUM*100; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_MARCO_ACUM_MAX_MIN = PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_ABRIL_ACUM = 'nd'; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_ABRIL_ACUM= FSE_DESLOC_ESTADAS_ANO_N_ABRIL_ACUM/IND_VN_ANO_N_ABRIL_ACUM*100; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_ABRIL_ACUM_MAX_MIN = PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_MAIO_ACUM = 'nd'; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_MAIO_ACUM= FSE_DESLOC_ESTADAS_ANO_N_MAIO_ACUM/IND_VN_ANO_N_MAIO_ACUM*100; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_MAIO_ACUM_MAX_MIN = PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_JUNHO_ACUM = 'nd'; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_JUNHO_ACUM= FSE_DESLOC_ESTADAS_ANO_N_JUNHO_ACUM/IND_VN_ANO_N_JUNHO_ACUM*100; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_JUNHO_ACUM_MAX_MIN = PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_JULHO_ACUM = 'nd'; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_JULHO_ACUM= FSE_DESLOC_ESTADAS_ANO_N_JULHO_ACUM/IND_VN_ANO_N_JULHO_ACUM*100; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_JULHO_ACUM_MAX_MIN = PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_AGOSTO_ACUM = 'nd'; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_AGOSTO_ACUM= FSE_DESLOC_ESTADAS_ANO_N_AGOSTO_ACUM/IND_VN_ANO_N_AGOSTO_ACUM*100; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_SETEMBRO_ACUM= FSE_DESLOC_ESTADAS_ANO_N_SETEMBRO_ACUM/IND_VN_ANO_N_SETEMBRO_ACUM*100; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_OUTUBRO_ACUM= FSE_DESLOC_ESTADAS_ANO_N_OUTUBRO_ACUM/IND_VN_ANO_N_OUTUBRO_ACUM*100; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_NOVEMBRO_ACUM= FSE_DESLOC_ESTADAS_ANO_N_NOVEMBRO_ACUM/IND_VN_ANO_N_NOVEMBRO_ACUM*100; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_DEZEMBRO_ACUM= FSE_DESLOC_ESTADAS_ANO_N_DEZEMBRO_ACUM/IND_VN_ANO_N_DEZEMBRO_ACUM*100; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_JANEIRO_ACUM = 'nd'; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_JANEIRO_ACUM= FSE_DESLOC_ESTADAS_ANO_N_1_JANEIRO_ACUM/IND_VN_ANO_N_1_JANEIRO_ACUM*100; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_FEVEREIRO_ACUM= FSE_DESLOC_ESTADAS_ANO_N_1_FEVEREIRO_ACUM/IND_VN_ANO_N_1_FEVEREIRO_ACUM*100; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_MARCO_ACUM = 'nd'; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_MARCO_ACUM= FSE_DESLOC_ESTADAS_ANO_N_1_MARCO_ACUM/IND_VN_ANO_N_1_MARCO_ACUM*100; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_ABRIL_ACUM = 'nd'; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_ABRIL_ACUM= FSE_DESLOC_ESTADAS_ANO_N_1_ABRIL_ACUM/IND_VN_ANO_N_1_ABRIL_ACUM*100; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_MAIO_ACUM = 'nd'; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_MAIO_ACUM= FSE_DESLOC_ESTADAS_ANO_N_1_MAIO_ACUM/IND_VN_ANO_N_1_MAIO_ACUM*100; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_JUNHO_ACUM = 'nd'; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_JUNHO_ACUM= FSE_DESLOC_ESTADAS_ANO_N_1_JUNHO_ACUM/IND_VN_ANO_N_1_JUNHO_ACUM*100; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_JULHO_ACUM = 'nd'; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_JULHO_ACUM= FSE_DESLOC_ESTADAS_ANO_N_1_JULHO_ACUM/IND_VN_ANO_N_1_JULHO_ACUM*100; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_AGOSTO_ACUM = 'nd'; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_AGOSTO_ACUM= FSE_DESLOC_ESTADAS_ANO_N_1_AGOSTO_ACUM/IND_VN_ANO_N_1_AGOSTO_ACUM*100; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_SETEMBRO_ACUM = 'nd'; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_SETEMBRO_ACUM= FSE_DESLOC_ESTADAS_ANO_N_1_SETEMBRO_ACUM/IND_VN_ANO_N_1_SETEMBRO_ACUM*100; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_OUTUBRO_ACUM = 'nd'; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_OUTUBRO_ACUM= FSE_DESLOC_ESTADAS_ANO_N_1_OUTUBRO_ACUM/IND_VN_ANO_N_1_OUTUBRO_ACUM*100; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_NOVEMBRO_ACUM= FSE_DESLOC_ESTADAS_ANO_N_1_NOVEMBRO_ACUM/IND_VN_ANO_N_1_NOVEMBRO_ACUM*100; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_DEZEMBRO_ACUM= FSE_DESLOC_ESTADAS_ANO_N_1_DEZEMBRO_ACUM/IND_VN_ANO_N_1_DEZEMBRO_ACUM*100; var PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_VN_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JANEIRO_ACUM= ((IND_VN_ANO_N_JANEIRO_ACUM-IND_VN_ANO_N_1_JANEIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_JANEIRO_ACUM))*100; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_FEVEREIRO_ACUM= ((IND_VN_ANO_N_FEVEREIRO_ACUM-IND_VN_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_VN_ANO_N_MARCO_ACUM = 'nd'; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MARCO_ACUM= ((IND_VN_ANO_N_MARCO_ACUM-IND_VN_ANO_N_1_MARCO_ACUM)/Math.abs(IND_VN_ANO_N_1_MARCO_ACUM))*100; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = VAR_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_VN_ANO_N_ABRIL_ACUM = 'nd'; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_ABRIL_ACUM= ((IND_VN_ANO_N_ABRIL_ACUM-IND_VN_ANO_N_1_ABRIL_ACUM)/Math.abs(IND_VN_ANO_N_1_ABRIL_ACUM))*100; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_VN_ANO_N_MAIO_ACUM = 'nd'; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MAIO_ACUM= ((IND_VN_ANO_N_MAIO_ACUM-IND_VN_ANO_N_1_MAIO_ACUM)/Math.abs(IND_VN_ANO_N_1_MAIO_ACUM))*100; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = VAR_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_VN_ANO_N_JUNHO_ACUM = 'nd'; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JUNHO_ACUM= ((IND_VN_ANO_N_JUNHO_ACUM-IND_VN_ANO_N_1_JUNHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JUNHO_ACUM))*100; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_VN_ANO_N_JULHO_ACUM = 'nd'; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JULHO_ACUM= ((IND_VN_ANO_N_JULHO_ACUM-IND_VN_ANO_N_1_JULHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JULHO_ACUM))*100; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_VN_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_AGOSTO_ACUM= ((IND_VN_ANO_N_AGOSTO_ACUM-IND_VN_ANO_N_1_AGOSTO_ACUM)/Math.abs(IND_VN_ANO_N_1_AGOSTO_ACUM))*100; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_SETEMBRO_ACUM= ((IND_VN_ANO_N_SETEMBRO_ACUM-IND_VN_ANO_N_1_SETEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_OUTUBRO_ACUM= ((IND_VN_ANO_N_OUTUBRO_ACUM-IND_VN_ANO_N_1_OUTUBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_NOVEMBRO_ACUM= ((IND_VN_ANO_N_NOVEMBRO_ACUM-IND_VN_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_DEZEMBRO_ACUM= ((IND_VN_ANO_N_DEZEMBRO_ACUM-IND_VN_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_FSE_DESLOC_ESTADAS_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_FSE_DESLOC_ESTADAS_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_DESLOC_ESTADAS_ANO_N_JANEIRO_ACUM= ((FSE_DESLOC_ESTADAS_ANO_N_JANEIRO_ACUM-FSE_DESLOC_ESTADAS_ANO_N_1_JANEIRO_ACUM)/Math.abs(FSE_DESLOC_ESTADAS_ANO_N_1_JANEIRO_ACUM))*100; var VAR_FSE_DESLOC_ESTADAS_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_FSE_DESLOC_ESTADAS_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_FSE_DESLOC_ESTADAS_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_FSE_DESLOC_ESTADAS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_DESLOC_ESTADAS_ANO_N_FEVEREIRO_ACUM= ((FSE_DESLOC_ESTADAS_ANO_N_FEVEREIRO_ACUM-FSE_DESLOC_ESTADAS_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(FSE_DESLOC_ESTADAS_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_FSE_DESLOC_ESTADAS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_FSE_DESLOC_ESTADAS_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_FSE_DESLOC_ESTADAS_ANO_N_MARCO_ACUM = 'nd'; var VAR_FSE_DESLOC_ESTADAS_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_DESLOC_ESTADAS_ANO_N_MARCO_ACUM= ((FSE_DESLOC_ESTADAS_ANO_N_MARCO_ACUM-FSE_DESLOC_ESTADAS_ANO_N_1_MARCO_ACUM)/Math.abs(FSE_DESLOC_ESTADAS_ANO_N_1_MARCO_ACUM))*100; var VAR_FSE_DESLOC_ESTADAS_ANO_N_MARCO_ACUM_MAX_MIN = VAR_FSE_DESLOC_ESTADAS_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_FSE_DESLOC_ESTADAS_ANO_N_ABRIL_ACUM = 'nd'; var VAR_FSE_DESLOC_ESTADAS_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_DESLOC_ESTADAS_ANO_N_ABRIL_ACUM= ((FSE_DESLOC_ESTADAS_ANO_N_ABRIL_ACUM-FSE_DESLOC_ESTADAS_ANO_N_1_ABRIL_ACUM)/Math.abs(FSE_DESLOC_ESTADAS_ANO_N_1_ABRIL_ACUM))*100; var VAR_FSE_DESLOC_ESTADAS_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_FSE_DESLOC_ESTADAS_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_FSE_DESLOC_ESTADAS_ANO_N_MAIO_ACUM = 'nd'; var VAR_FSE_DESLOC_ESTADAS_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_DESLOC_ESTADAS_ANO_N_MAIO_ACUM= ((FSE_DESLOC_ESTADAS_ANO_N_MAIO_ACUM-FSE_DESLOC_ESTADAS_ANO_N_1_MAIO_ACUM)/Math.abs(FSE_DESLOC_ESTADAS_ANO_N_1_MAIO_ACUM))*100; var VAR_FSE_DESLOC_ESTADAS_ANO_N_MAIO_ACUM_MAX_MIN = VAR_FSE_DESLOC_ESTADAS_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_FSE_DESLOC_ESTADAS_ANO_N_JUNHO_ACUM = 'nd'; var VAR_FSE_DESLOC_ESTADAS_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_DESLOC_ESTADAS_ANO_N_JUNHO_ACUM= ((FSE_DESLOC_ESTADAS_ANO_N_JUNHO_ACUM-FSE_DESLOC_ESTADAS_ANO_N_1_JUNHO_ACUM)/Math.abs(FSE_DESLOC_ESTADAS_ANO_N_1_JUNHO_ACUM))*100; var VAR_FSE_DESLOC_ESTADAS_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_FSE_DESLOC_ESTADAS_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_FSE_DESLOC_ESTADAS_ANO_N_JULHO_ACUM = 'nd'; var VAR_FSE_DESLOC_ESTADAS_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_DESLOC_ESTADAS_ANO_N_JULHO_ACUM= ((FSE_DESLOC_ESTADAS_ANO_N_JULHO_ACUM-FSE_DESLOC_ESTADAS_ANO_N_1_JULHO_ACUM)/Math.abs(FSE_DESLOC_ESTADAS_ANO_N_1_JULHO_ACUM))*100; var VAR_FSE_DESLOC_ESTADAS_ANO_N_JULHO_ACUM_MAX_MIN = VAR_FSE_DESLOC_ESTADAS_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_FSE_DESLOC_ESTADAS_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_FSE_DESLOC_ESTADAS_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_DESLOC_ESTADAS_ANO_N_AGOSTO_ACUM= ((FSE_DESLOC_ESTADAS_ANO_N_AGOSTO_ACUM-FSE_DESLOC_ESTADAS_ANO_N_1_AGOSTO_ACUM)/Math.abs(FSE_DESLOC_ESTADAS_ANO_N_1_AGOSTO_ACUM))*100; var VAR_FSE_DESLOC_ESTADAS_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_FSE_DESLOC_ESTADAS_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_FSE_DESLOC_ESTADAS_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_FSE_DESLOC_ESTADAS_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_DESLOC_ESTADAS_ANO_N_SETEMBRO_ACUM= ((FSE_DESLOC_ESTADAS_ANO_N_SETEMBRO_ACUM-FSE_DESLOC_ESTADAS_ANO_N_1_SETEMBRO_ACUM)/Math.abs(FSE_DESLOC_ESTADAS_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_FSE_DESLOC_ESTADAS_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_FSE_DESLOC_ESTADAS_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_FSE_DESLOC_ESTADAS_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_FSE_DESLOC_ESTADAS_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_DESLOC_ESTADAS_ANO_N_OUTUBRO_ACUM= ((FSE_DESLOC_ESTADAS_ANO_N_OUTUBRO_ACUM-FSE_DESLOC_ESTADAS_ANO_N_1_OUTUBRO_ACUM)/Math.abs(FSE_DESLOC_ESTADAS_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_FSE_DESLOC_ESTADAS_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_FSE_DESLOC_ESTADAS_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_FSE_DESLOC_ESTADAS_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_FSE_DESLOC_ESTADAS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_DESLOC_ESTADAS_ANO_N_NOVEMBRO_ACUM= ((FSE_DESLOC_ESTADAS_ANO_N_NOVEMBRO_ACUM-FSE_DESLOC_ESTADAS_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(FSE_DESLOC_ESTADAS_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_FSE_DESLOC_ESTADAS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_FSE_DESLOC_ESTADAS_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_FSE_DESLOC_ESTADAS_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_FSE_DESLOC_ESTADAS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_DESLOC_ESTADAS_ANO_N_DEZEMBRO_ACUM= ((FSE_DESLOC_ESTADAS_ANO_N_DEZEMBRO_ACUM-FSE_DESLOC_ESTADAS_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(FSE_DESLOC_ESTADAS_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_FSE_DESLOC_ESTADAS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_FSE_DESLOC_ESTADAS_ANO_N_DEZEMBRO_ACUM };

    if( PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_JANEIRO_ACUM > PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_JANEIRO_ACUM) { var  INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_JANEIRO_ACUM=PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_JANEIRO_ACUM ; } else { var  INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_JANEIRO_ACUM=PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_JANEIRO_ACUM ; }
    if( PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_FEVEREIRO_ACUM > PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_FEVEREIRO_ACUM) { var  INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_FEVEREIRO_ACUM=PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_FEVEREIRO_ACUM ; } else { var  INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_FEVEREIRO_ACUM=PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_FEVEREIRO_ACUM ; }
    if( PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_MARCO_ACUM > PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_MARCO_ACUM) { var  INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_MARCO_ACUM=PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_MARCO_ACUM ; } else { var  INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_MARCO_ACUM=PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_MARCO_ACUM ; }
    if( PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_ABRIL_ACUM > PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_ABRIL_ACUM) { var  INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_ABRIL_ACUM=PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_ABRIL_ACUM ; } else { var  INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_ABRIL_ACUM=PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_ABRIL_ACUM ; }
    if( PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_MAIO_ACUM > PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_MAIO_ACUM) { var  INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_MAIO_ACUM=PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_MAIO_ACUM ; } else { var  INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_MAIO_ACUM=PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_MAIO_ACUM ; }
    if( PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_JUNHO_ACUM > PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_JUNHO_ACUM) { var  INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_JUNHO_ACUM=PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_JUNHO_ACUM ; } else { var  INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_JUNHO_ACUM=PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_JUNHO_ACUM ; }
    if( PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_JULHO_ACUM > PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_JULHO_ACUM) { var  INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_JULHO_ACUM=PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_JULHO_ACUM ; } else { var  INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_JULHO_ACUM=PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_JULHO_ACUM ; }
    if( PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_AGOSTO_ACUM > PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_AGOSTO_ACUM) { var  INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_AGOSTO_ACUM=PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_AGOSTO_ACUM ; } else { var  INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_AGOSTO_ACUM=PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_AGOSTO_ACUM ; }
    if( PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_SETEMBRO_ACUM > PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_SETEMBRO_ACUM) { var  INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_SETEMBRO_ACUM=PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_SETEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_SETEMBRO_ACUM=PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_SETEMBRO_ACUM ; }
    if( PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_OUTUBRO_ACUM > PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_OUTUBRO_ACUM) { var  INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_OUTUBRO_ACUM=PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_OUTUBRO_ACUM ; } else { var  INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_OUTUBRO_ACUM=PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_OUTUBRO_ACUM ; }
    if( PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_NOVEMBRO_ACUM > PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_NOVEMBRO_ACUM) { var  INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_NOVEMBRO_ACUM=PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_NOVEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_NOVEMBRO_ACUM=PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_NOVEMBRO_ACUM ; }
    if( PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_DEZEMBRO_ACUM > PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_DEZEMBRO_ACUM) { var  INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_DEZEMBRO_ACUM=PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_DEZEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_DEZEMBRO_ACUM=PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_DEZEMBRO_ACUM ; }



    var fillBetweenLinesPlugin = {
        afterDatasetsDraw: function (chart) {
            var ctx = chart.chart.ctx;
            var xaxis = chart.scales['x-axis-0'];
            var yaxis = chart.scales['y-axis-0'];
            var datasets = chart.data.datasets;
            ctx.save();

            for (var d = 0; d < datasets.length; d++) {
                var dataset = datasets[d];
                if (dataset.fillBetweenSet == undefined) {
                    continue;
                }

                // get meta for both data sets
                var meta1 = chart.getDatasetMeta(d);
                var meta2 = chart.getDatasetMeta(dataset.fillBetweenSet);

                // do not draw fill if one of the datasets is hidden
                if (meta1.hidden || meta2.hidden) continue;

                // create fill areas in pairs
                for (var p = 0; p < meta1.data.length-1;p++) {
                    // if null skip
                    if (dataset.data[p] == null || dataset.data[p+1] == null) continue;

                    ctx.beginPath();

                    // trace line 1
                    var curr = meta1.data[p];
                    var next = meta1.data[p+1];
                    ctx.moveTo(curr._view.x, curr._view.y);
                    ctx.lineTo(curr._view.x, curr._view.y);
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(next._view.x, curr._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        ctx.bezierCurveTo(
                          curr._view.controlPointNextX,
                          curr._view.controlPointNextY,
                          next._view.controlPointPreviousX,
                          next._view.controlPointPreviousY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // connect dataset1 to dataset2
                    var curr = meta2.data[p+1];
                    var next = meta2.data[p];
                    ctx.lineTo(curr._view.x, curr._view.y);

                    // trace BACKWORDS set2 to complete the box
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(curr._view.x, next._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        // reverse bezier
                        ctx.bezierCurveTo(
                          curr._view.controlPointPreviousX,
                          curr._view.controlPointPreviousY,
                          next._view.controlPointNextX,
                          next._view.controlPointNextY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // close the loop and fill with shading
                    ctx.closePath();
                    ctx.fillStyle = dataset.fillBetweenColor || "rgba(0,0,0,0.1)";
                    ctx.fill();
                } // end for p loop
            }
        } // end afterDatasetsDraw
    }; // end fillBetweenLinesPlugin

    Chart.pluginService.register(fillBetweenLinesPlugin);



    var GRAFICO_FSE_RESULT_MENSAL_COMP_037=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_037').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_037=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_037, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label:  'Peso Desl. Estad.vsVN(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   //borderColor: "#F00",
                   fill: false,
                   steppedLine: false,
                   tension: 0.5,
                   fillBetweenSet: 1,
                   fillBetweenColor: "rgba(0, 221, 0, 0.1)",
                   data: [
                   PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_JANEIRO_ACUM,
                   PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_FEVEREIRO_ACUM,
                   PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_MARCO_ACUM,
                   PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_ABRIL_ACUM,
                   PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_MAIO_ACUM,
                   PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_JUNHO_ACUM,
                   PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_JULHO_ACUM,
                   PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_AGOSTO_ACUM,
                   PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_SETEMBRO_ACUM,
                   PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_OUTUBRO_ACUM,
                   PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_NOVEMBRO_ACUM,
                   PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_DEZEMBRO_ACUM,

                   ],
                   type: 'line'


               },
                {
                    label: 'Peso Desl. Estad.vsVN(ac) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'A',
                    //backgroundColor: 'rgb(17, 121, 240)',
                    borderColor: 'rgb(0,221,0)',
                    //borderColor: "#00F",
                    fill: false,
                    steppedLine: false,
                    tension: 0.5,
                    data: [
                   PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_JANEIRO_ACUM,
                   PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_FEVEREIRO_ACUM,
                   PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_MARCO_ACUM,
                   PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_ABRIL_ACUM,
                   PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_MAIO_ACUM,
                   PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_JUNHO_ACUM,
                   PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_JULHO_ACUM,
                   PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_AGOSTO_ACUM,
                   PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_SETEMBRO_ACUM,
                   PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_OUTUBRO_ACUM,
                   PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_NOVEMBRO_ACUM,
                   PESO_FSE_DESLOC_ESTADAS_VN_ANO_N_1_DEZEMBRO_ACUM,
                    ],
                    type: 'line'
                },
    {
        label: 'Ineficiência',
        yAxisID: 'A',
        backgroundColor: "rgba(255, 0, 0, 0.2)",
        borderColor: 'rgba(255, 255, 255, 0.1)',
        //borderColor: "#0D0",
        fill: false,
        steppedLine: false,
        tension: 0.5,
        fillBetweenSet: 1,
        fillBetweenColor: "rgba(255, 0, 0, 0.2)",
        data: [
    INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_JANEIRO_ACUM,
    INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_FEVEREIRO_ACUM,
    INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_MARCO_ACUM,
    INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_ABRIL_ACUM,
    INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_MAIO_ACUM,
    INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_JUNHO_ACUM,
    INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_JULHO_ACUM,
    INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_AGOSTO_ACUM,
    INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_SETEMBRO_ACUM,
    INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_OUTUBRO_ACUM,
    INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_NOVEMBRO_ACUM,
    INEFICIENCIA_FSE_DESLOC_ESTADAS_ANO_N_DEZEMBRO_ACUM,
        ],
        type: 'line'
    },

            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_DESLOC_ESTADAS COMP',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                //min:  Math.round(FSE_DESLOC_ESTADAS_Mensal_Eixo_min_princ__,0),
                                                //max:  Math.round(FSE_DESLOC_ESTADAS_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString()+ "%";
                                                }
                                            }
                                        },







                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_038-----------------------------------------------------------*@
<script>

    if(@ViewData["MES_ACUM_REAL"]<1){ var IND_VN_ANO_N_JANEIRO = 'nd'; var IND_VN_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JANEIRO"]))); var IND_VN_ANO_N_JANEIRO_MAX_MIN = IND_VN_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var IND_VN_ANO_N_FEVEREIRO = 'nd'; var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_FEVEREIRO"]))); var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = IND_VN_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var IND_VN_ANO_N_MARCO = 'nd'; var IND_VN_ANO_N_MARCO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MARCO"]))); var IND_VN_ANO_N_MARCO_MAX_MIN = IND_VN_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var IND_VN_ANO_N_ABRIL = 'nd'; var IND_VN_ANO_N_ABRIL_MAX_MIN = 0;  } else { var IND_VN_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_ABRIL"]))); var IND_VN_ANO_N_ABRIL_MAX_MIN = IND_VN_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var IND_VN_ANO_N_MAIO = 'nd'; var IND_VN_ANO_N_MAIO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MAIO"]))); var IND_VN_ANO_N_MAIO_MAX_MIN = IND_VN_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var IND_VN_ANO_N_JUNHO = 'nd'; var IND_VN_ANO_N_JUNHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JUNHO"]))); var IND_VN_ANO_N_JUNHO_MAX_MIN = IND_VN_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var IND_VN_ANO_N_JULHO = 'nd'; var IND_VN_ANO_N_JULHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JULHO"]))); var IND_VN_ANO_N_JULHO_MAX_MIN = IND_VN_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var IND_VN_ANO_N_AGOSTO = 'nd'; var IND_VN_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_AGOSTO"]))); var IND_VN_ANO_N_AGOSTO_MAX_MIN = IND_VN_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var IND_VN_ANO_N_SETEMBRO = 'nd'; var IND_VN_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_SETEMBRO"]))); var IND_VN_ANO_N_SETEMBRO_MAX_MIN = IND_VN_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var IND_VN_ANO_N_OUTUBRO = 'nd'; var IND_VN_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_OUTUBRO"]))); var IND_VN_ANO_N_OUTUBRO_MAX_MIN = IND_VN_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var IND_VN_ANO_N_NOVEMBRO = 'nd'; var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_NOVEMBRO"]))); var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = IND_VN_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var IND_VN_ANO_N_DEZEMBRO = 'nd'; var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_DEZEMBRO"]))); var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = IND_VN_ANO_N_DEZEMBRO };

    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_TRANSPORT_PESSOAL_ANO_N_JANEIRO = 'nd'; var FSE_TRANSPORT_PESSOAL_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var FSE_TRANSPORT_PESSOAL_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_JANEIRO"]))); var FSE_TRANSPORT_PESSOAL_ANO_N_JANEIRO_MAX_MIN = FSE_TRANSPORT_PESSOAL_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_TRANSPORT_PESSOAL_ANO_N_FEVEREIRO = 'nd'; var FSE_TRANSPORT_PESSOAL_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var FSE_TRANSPORT_PESSOAL_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_FEVEREIRO"]))); var FSE_TRANSPORT_PESSOAL_ANO_N_FEVEREIRO_MAX_MIN = FSE_TRANSPORT_PESSOAL_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_TRANSPORT_PESSOAL_ANO_N_MARCO = 'nd'; var FSE_TRANSPORT_PESSOAL_ANO_N_MARCO_MAX_MIN = 0;  } else { var FSE_TRANSPORT_PESSOAL_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_MARCO"]))); var FSE_TRANSPORT_PESSOAL_ANO_N_MARCO_MAX_MIN = FSE_TRANSPORT_PESSOAL_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_TRANSPORT_PESSOAL_ANO_N_ABRIL = 'nd'; var FSE_TRANSPORT_PESSOAL_ANO_N_ABRIL_MAX_MIN = 0;  } else { var FSE_TRANSPORT_PESSOAL_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_ABRIL"]))); var FSE_TRANSPORT_PESSOAL_ANO_N_ABRIL_MAX_MIN = FSE_TRANSPORT_PESSOAL_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_TRANSPORT_PESSOAL_ANO_N_MAIO = 'nd'; var FSE_TRANSPORT_PESSOAL_ANO_N_MAIO_MAX_MIN = 0;  } else { var FSE_TRANSPORT_PESSOAL_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_MAIO"]))); var FSE_TRANSPORT_PESSOAL_ANO_N_MAIO_MAX_MIN = FSE_TRANSPORT_PESSOAL_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_TRANSPORT_PESSOAL_ANO_N_JUNHO = 'nd'; var FSE_TRANSPORT_PESSOAL_ANO_N_JUNHO_MAX_MIN = 0;  } else { var FSE_TRANSPORT_PESSOAL_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_JUNHO"]))); var FSE_TRANSPORT_PESSOAL_ANO_N_JUNHO_MAX_MIN = FSE_TRANSPORT_PESSOAL_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_TRANSPORT_PESSOAL_ANO_N_JULHO = 'nd'; var FSE_TRANSPORT_PESSOAL_ANO_N_JULHO_MAX_MIN = 0;  } else { var FSE_TRANSPORT_PESSOAL_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_JULHO"]))); var FSE_TRANSPORT_PESSOAL_ANO_N_JULHO_MAX_MIN = FSE_TRANSPORT_PESSOAL_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_TRANSPORT_PESSOAL_ANO_N_AGOSTO = 'nd'; var FSE_TRANSPORT_PESSOAL_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var FSE_TRANSPORT_PESSOAL_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_AGOSTO"]))); var FSE_TRANSPORT_PESSOAL_ANO_N_AGOSTO_MAX_MIN = FSE_TRANSPORT_PESSOAL_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_TRANSPORT_PESSOAL_ANO_N_SETEMBRO = 'nd'; var FSE_TRANSPORT_PESSOAL_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var FSE_TRANSPORT_PESSOAL_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_SETEMBRO"]))); var FSE_TRANSPORT_PESSOAL_ANO_N_SETEMBRO_MAX_MIN = FSE_TRANSPORT_PESSOAL_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_TRANSPORT_PESSOAL_ANO_N_OUTUBRO = 'nd'; var FSE_TRANSPORT_PESSOAL_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var FSE_TRANSPORT_PESSOAL_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_OUTUBRO"]))); var FSE_TRANSPORT_PESSOAL_ANO_N_OUTUBRO_MAX_MIN = FSE_TRANSPORT_PESSOAL_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_TRANSPORT_PESSOAL_ANO_N_NOVEMBRO = 'nd'; var FSE_TRANSPORT_PESSOAL_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var FSE_TRANSPORT_PESSOAL_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_NOVEMBRO"]))); var FSE_TRANSPORT_PESSOAL_ANO_N_NOVEMBRO_MAX_MIN = FSE_TRANSPORT_PESSOAL_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_TRANSPORT_PESSOAL_ANO_N_DEZEMBRO = 'nd'; var FSE_TRANSPORT_PESSOAL_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var FSE_TRANSPORT_PESSOAL_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_DEZEMBRO"]))); var FSE_TRANSPORT_PESSOAL_ANO_N_DEZEMBRO_MAX_MIN = FSE_TRANSPORT_PESSOAL_ANO_N_DEZEMBRO };


    var FSE_TRANSPORT_PESSOAL_ANO_N_JANEIRO_ACUM = FSE_TRANSPORT_PESSOAL_ANO_N_JANEIRO;
    var FSE_TRANSPORT_PESSOAL_ANO_N_FEVEREIRO_ACUM = FSE_TRANSPORT_PESSOAL_ANO_N_FEVEREIRO + FSE_TRANSPORT_PESSOAL_ANO_N_JANEIRO_ACUM;
    var FSE_TRANSPORT_PESSOAL_ANO_N_MARCO_ACUM = FSE_TRANSPORT_PESSOAL_ANO_N_MARCO + FSE_TRANSPORT_PESSOAL_ANO_N_FEVEREIRO_ACUM;
    var FSE_TRANSPORT_PESSOAL_ANO_N_ABRIL_ACUM = FSE_TRANSPORT_PESSOAL_ANO_N_ABRIL + FSE_TRANSPORT_PESSOAL_ANO_N_MARCO_ACUM;
    var FSE_TRANSPORT_PESSOAL_ANO_N_MAIO_ACUM = FSE_TRANSPORT_PESSOAL_ANO_N_MAIO + FSE_TRANSPORT_PESSOAL_ANO_N_ABRIL_ACUM;
    var FSE_TRANSPORT_PESSOAL_ANO_N_JUNHO_ACUM = FSE_TRANSPORT_PESSOAL_ANO_N_JUNHO + FSE_TRANSPORT_PESSOAL_ANO_N_MAIO_ACUM;
    var FSE_TRANSPORT_PESSOAL_ANO_N_JULHO_ACUM = FSE_TRANSPORT_PESSOAL_ANO_N_JULHO + FSE_TRANSPORT_PESSOAL_ANO_N_JUNHO_ACUM;
    var FSE_TRANSPORT_PESSOAL_ANO_N_AGOSTO_ACUM = FSE_TRANSPORT_PESSOAL_ANO_N_AGOSTO + FSE_TRANSPORT_PESSOAL_ANO_N_JULHO_ACUM;
    var FSE_TRANSPORT_PESSOAL_ANO_N_SETEMBRO_ACUM = FSE_TRANSPORT_PESSOAL_ANO_N_SETEMBRO + FSE_TRANSPORT_PESSOAL_ANO_N_AGOSTO_ACUM;
    var FSE_TRANSPORT_PESSOAL_ANO_N_OUTUBRO_ACUM = FSE_TRANSPORT_PESSOAL_ANO_N_OUTUBRO + FSE_TRANSPORT_PESSOAL_ANO_N_SETEMBRO_ACUM;
    var FSE_TRANSPORT_PESSOAL_ANO_N_NOVEMBRO_ACUM = FSE_TRANSPORT_PESSOAL_ANO_N_NOVEMBRO + FSE_TRANSPORT_PESSOAL_ANO_N_OUTUBRO_ACUM;
    var FSE_TRANSPORT_PESSOAL_ANO_N_DEZEMBRO_ACUM = FSE_TRANSPORT_PESSOAL_ANO_N_DEZEMBRO + FSE_TRANSPORT_PESSOAL_ANO_N_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_TRANSPORT_PESSOAL_ANO_N_JANEIRO_ACUM = 'nd'; var FSE_TRANSPORT_PESSOAL_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var FSE_TRANSPORT_PESSOAL_ANO_N_JANEIRO_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_JANEIRO_ACUM; var FSE_TRANSPORT_PESSOAL_ANO_N_JANEIRO_ACUM_MAX_MIN = FSE_TRANSPORT_PESSOAL_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_TRANSPORT_PESSOAL_ANO_N_FEVEREIRO_ACUM = 'nd'; var FSE_TRANSPORT_PESSOAL_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var FSE_TRANSPORT_PESSOAL_ANO_N_FEVEREIRO_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_FEVEREIRO_ACUM; var FSE_TRANSPORT_PESSOAL_ANO_N_FEVEREIRO_ACUM_MAX_MIN = FSE_TRANSPORT_PESSOAL_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_TRANSPORT_PESSOAL_ANO_N_MARCO_ACUM = 'nd'; var FSE_TRANSPORT_PESSOAL_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var FSE_TRANSPORT_PESSOAL_ANO_N_MARCO_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_MARCO_ACUM; var FSE_TRANSPORT_PESSOAL_ANO_N_MARCO_ACUM_MAX_MIN = FSE_TRANSPORT_PESSOAL_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_TRANSPORT_PESSOAL_ANO_N_ABRIL_ACUM = 'nd'; var FSE_TRANSPORT_PESSOAL_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var FSE_TRANSPORT_PESSOAL_ANO_N_ABRIL_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_ABRIL_ACUM; var FSE_TRANSPORT_PESSOAL_ANO_N_ABRIL_ACUM_MAX_MIN = FSE_TRANSPORT_PESSOAL_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_TRANSPORT_PESSOAL_ANO_N_MAIO_ACUM = 'nd'; var FSE_TRANSPORT_PESSOAL_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var FSE_TRANSPORT_PESSOAL_ANO_N_MAIO_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_MAIO_ACUM; var FSE_TRANSPORT_PESSOAL_ANO_N_MAIO_ACUM_MAX_MIN = FSE_TRANSPORT_PESSOAL_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_TRANSPORT_PESSOAL_ANO_N_JUNHO_ACUM = 'nd'; var FSE_TRANSPORT_PESSOAL_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var FSE_TRANSPORT_PESSOAL_ANO_N_JUNHO_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_JUNHO_ACUM; var FSE_TRANSPORT_PESSOAL_ANO_N_JUNHO_ACUM_MAX_MIN = FSE_TRANSPORT_PESSOAL_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_TRANSPORT_PESSOAL_ANO_N_JULHO_ACUM = 'nd'; var FSE_TRANSPORT_PESSOAL_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var FSE_TRANSPORT_PESSOAL_ANO_N_JULHO_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_JULHO_ACUM; var FSE_TRANSPORT_PESSOAL_ANO_N_JULHO_ACUM_MAX_MIN = FSE_TRANSPORT_PESSOAL_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_TRANSPORT_PESSOAL_ANO_N_AGOSTO_ACUM = 'nd'; var FSE_TRANSPORT_PESSOAL_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var FSE_TRANSPORT_PESSOAL_ANO_N_AGOSTO_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_AGOSTO_ACUM; var FSE_TRANSPORT_PESSOAL_ANO_N_AGOSTO_ACUM_MAX_MIN = FSE_TRANSPORT_PESSOAL_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_TRANSPORT_PESSOAL_ANO_N_SETEMBRO_ACUM = 'nd'; var FSE_TRANSPORT_PESSOAL_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_TRANSPORT_PESSOAL_ANO_N_SETEMBRO_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_SETEMBRO_ACUM; var FSE_TRANSPORT_PESSOAL_ANO_N_SETEMBRO_ACUM_MAX_MIN = FSE_TRANSPORT_PESSOAL_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_TRANSPORT_PESSOAL_ANO_N_OUTUBRO_ACUM = 'nd'; var FSE_TRANSPORT_PESSOAL_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var FSE_TRANSPORT_PESSOAL_ANO_N_OUTUBRO_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_OUTUBRO_ACUM; var FSE_TRANSPORT_PESSOAL_ANO_N_OUTUBRO_ACUM_MAX_MIN = FSE_TRANSPORT_PESSOAL_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_TRANSPORT_PESSOAL_ANO_N_NOVEMBRO_ACUM = 'nd'; var FSE_TRANSPORT_PESSOAL_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_TRANSPORT_PESSOAL_ANO_N_NOVEMBRO_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_NOVEMBRO_ACUM; var FSE_TRANSPORT_PESSOAL_ANO_N_NOVEMBRO_ACUM_MAX_MIN = FSE_TRANSPORT_PESSOAL_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_TRANSPORT_PESSOAL_ANO_N_DEZEMBRO_ACUM = 'nd'; var FSE_TRANSPORT_PESSOAL_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_TRANSPORT_PESSOAL_ANO_N_DEZEMBRO_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_DEZEMBRO_ACUM; var FSE_TRANSPORT_PESSOAL_ANO_N_DEZEMBRO_ACUM_MAX_MIN = FSE_TRANSPORT_PESSOAL_ANO_N_DEZEMBRO_ACUM };




    var FSE_TRANSPORT_PESSOAL_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_JANEIRO"])));
    var FSE_TRANSPORT_PESSOAL_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_FEVEREIRO"]))) + FSE_TRANSPORT_PESSOAL_ANO_N_1_JANEIRO_ACUM;
    var FSE_TRANSPORT_PESSOAL_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_MARCO"]))) + FSE_TRANSPORT_PESSOAL_ANO_N_1_FEVEREIRO_ACUM;
    var FSE_TRANSPORT_PESSOAL_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_ABRIL"]))) + FSE_TRANSPORT_PESSOAL_ANO_N_1_MARCO_ACUM;
    var FSE_TRANSPORT_PESSOAL_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_MAIO"]))) + FSE_TRANSPORT_PESSOAL_ANO_N_1_ABRIL_ACUM;
    var FSE_TRANSPORT_PESSOAL_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_JUNHO"]))) + FSE_TRANSPORT_PESSOAL_ANO_N_1_MAIO_ACUM;
    var FSE_TRANSPORT_PESSOAL_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_JULHO"]))) + FSE_TRANSPORT_PESSOAL_ANO_N_1_JUNHO_ACUM;
    var FSE_TRANSPORT_PESSOAL_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_AGOSTO"]))) + FSE_TRANSPORT_PESSOAL_ANO_N_1_JULHO_ACUM;
    var FSE_TRANSPORT_PESSOAL_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_SETEMBRO"]))) + FSE_TRANSPORT_PESSOAL_ANO_N_1_AGOSTO_ACUM;
    var FSE_TRANSPORT_PESSOAL_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_OUTUBRO"]))) + FSE_TRANSPORT_PESSOAL_ANO_N_1_SETEMBRO_ACUM;
    var FSE_TRANSPORT_PESSOAL_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_NOVEMBRO"]))) + FSE_TRANSPORT_PESSOAL_ANO_N_1_OUTUBRO_ACUM;
    var FSE_TRANSPORT_PESSOAL_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_DEZEMBRO"]))) + FSE_TRANSPORT_PESSOAL_ANO_N_1_NOVEMBRO_ACUM;


    var FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_princ= Math.max(
                       FSE_TRANSPORT_PESSOAL_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_PESSOAL_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_PESSOAL_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_PESSOAL_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_TRANSPORT_PESSOAL_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_PESSOAL_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_PESSOAL_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_PESSOAL_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_PESSOAL_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_PESSOAL_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_PESSOAL_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_PESSOAL_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_TRANSPORT_PESSOAL_ANO_N_1_JANEIRO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_1_MARCO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_1_ABRIL_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_1_MAIO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_1_JUNHO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_1_JULHO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_1_AGOSTO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_1_SETEMBRO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_1_OUTUBRO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_1_DEZEMBRO_ACUM
                             );
    var FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_princ= Math.min(

                       FSE_TRANSPORT_PESSOAL_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_PESSOAL_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_PESSOAL_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_PESSOAL_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_TRANSPORT_PESSOAL_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_PESSOAL_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_PESSOAL_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_PESSOAL_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_PESSOAL_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_PESSOAL_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_PESSOAL_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_PESSOAL_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_TRANSPORT_PESSOAL_ANO_N_1_JANEIRO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_1_MARCO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_1_ABRIL_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_1_MAIO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_1_JUNHO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_1_JULHO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_1_AGOSTO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_1_SETEMBRO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_1_OUTUBRO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_1_DEZEMBRO_ACUM
                           );
    var FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_secon= Math.max(
                       FSE_TRANSPORT_PESSOAL_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_TRANSPORT_PESSOAL_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_TRANSPORT_PESSOAL_ANO_N_MARCO_MAX_MIN ,
                       FSE_TRANSPORT_PESSOAL_ANO_N_ABRIL_MAX_MIN ,
                       FSE_TRANSPORT_PESSOAL_ANO_N_MAIO_MAX_MIN ,
                       FSE_TRANSPORT_PESSOAL_ANO_N_JUNHO_MAX_MIN ,
                       FSE_TRANSPORT_PESSOAL_ANO_N_JULHO_MAX_MIN ,
                       FSE_TRANSPORT_PESSOAL_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_TRANSPORT_PESSOAL_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_TRANSPORT_PESSOAL_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_TRANSPORT_PESSOAL_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_TRANSPORT_PESSOAL_ANO_N_DEZEMBRO_MAX_MIN ,



                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_DEZEMBRO"])))

                            );
    var FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_secon= Math.min(
                       FSE_TRANSPORT_PESSOAL_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_TRANSPORT_PESSOAL_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_TRANSPORT_PESSOAL_ANO_N_MARCO_MAX_MIN ,
                       FSE_TRANSPORT_PESSOAL_ANO_N_ABRIL_MAX_MIN ,
                       FSE_TRANSPORT_PESSOAL_ANO_N_MAIO_MAX_MIN ,
                       FSE_TRANSPORT_PESSOAL_ANO_N_JUNHO_MAX_MIN ,
                       FSE_TRANSPORT_PESSOAL_ANO_N_JULHO_MAX_MIN ,
                       FSE_TRANSPORT_PESSOAL_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_TRANSPORT_PESSOAL_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_TRANSPORT_PESSOAL_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_TRANSPORT_PESSOAL_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_TRANSPORT_PESSOAL_ANO_N_DEZEMBRO_MAX_MIN ,


                           @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_DEZEMBRO"])))

                          );

    //NOTA TA: Aqui trato o minimo e o maximo do eixo principal
    if(Math.abs(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_princ)>=Math.abs(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_princ))
    {
        var FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_princ_=(Math.ceil(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_princ),0).toString().length-1);
        var FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_princ_= (Math.floor(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_princ),0).toString().length-1);
        //alert(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_princ_);
        //alert(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_princ_);
    }
    else
    {
        var FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_princ_=(Math.ceil(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_princ),0).toString().length-1);
        var FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_princ_= (Math.floor(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_princ),0).toString().length-1);}

    //NOTA TA: Aqui trato o minimo e o maximo do eixo secundario

    if(Math.abs(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_secon)>=Math.abs(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_secon))
    {
        var FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_secon_=(Math.ceil(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_secon),0).toString().length-1);
        var FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_secon_= (Math.floor(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_secon),0).toString().length-1);
        //alert(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_secon_);
        //alert(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_secon_);
    }
    else
    {
        var FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_secon_=(Math.ceil(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_secon),0).toString().length-1);
        var FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_secon_= (Math.floor(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_secon),0).toString().length-1);}


    if(Math.abs(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_princ)/Math.abs(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_princ)>=Math.abs(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_secon)/Math.abs(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_secon))
    { if(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_princ > 0 && FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_princ <0 ){ var FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_secon__=(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_princ_*FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_secon_)/FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_princ_;} else { var FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_secon__=FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_secon_;}
        if(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_secon > 0 && FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_secon <0 ){ var FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_princ__=(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_secon__*FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_princ_)/FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_secon_;} else { var FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_princ__=FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_princ_;}}
    else
    {if(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_secon > 0 && FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_secon <0 ){ var FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_princ__=(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_secon_*FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_princ_)/FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_secon_;} else { var FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_princ__=FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_princ_;}
        if(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_princ > 0 && FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_princ <0 ){ var FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_secon__=(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_princ__*FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_secon_)/FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_princ_;} else { var FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_secon__=FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_secon_;}
    }



    if(Math.abs(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_princ)/Math.abs(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_princ)>=Math.abs(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_secon)/Math.abs(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_secon))
    { if(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_princ > 0 && FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_princ <0 ){ var FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_secon__=(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_princ_*FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_secon_)/FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_princ_;} else { var FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_secon__=FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_secon_;}
        if(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_secon > 0 && FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_secon <0 ){ var FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_princ__=(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_secon__*FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_princ_)/FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_secon_;} else { var FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_princ__=FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_princ_;}}
    else
    {if(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_secon > 0 && FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_secon <0 ){ var FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_princ__=(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_secon_*FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_princ_)/FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_secon_;} else { var FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_princ__=FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_princ_;}
        if(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_princ > 0 && FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_princ <0 ){ var FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_secon__=(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_princ__*FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_secon_)/FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_princ_;} else { var FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_secon__=FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_secon_;}
    }



    var GRAFICO_FSE_RESULT_MENSAL_COMP_038=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_038').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_038=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_038, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label: 'Transp. Pess.(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   data: [
                       FSE_TRANSPORT_PESSOAL_ANO_N_JANEIRO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_FEVEREIRO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_MARCO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_ABRIL_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_MAIO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_JUNHO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_JULHO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_AGOSTO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_SETEMBRO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_OUTUBRO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_NOVEMBRO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_DEZEMBRO_ACUM,
                   ],
                   type: 'line'


               },
                              {
                                  label: 'Transp. Pess.(ac) ' + ANO_VERSAO_ANTE_,
                                  yAxisID: 'A',
                                  //backgroundColor: 'rgb(201, 10, 10)',
                                  borderColor: 'rgb(0,221,0)',
                                  data: [
                       FSE_TRANSPORT_PESSOAL_ANO_N_1_JANEIRO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_1_MARCO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_1_ABRIL_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_1_MAIO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_1_JUNHO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_1_JULHO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_1_AGOSTO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_1_SETEMBRO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_1_OUTUBRO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_TRANSPORT_PESSOAL_ANO_N_1_DEZEMBRO_ACUM,
                                  ],
                                  type: 'line'


                              },
                {
                    label:  'Transp. Pess.(m) ' + ANO_VERSAO_REAL_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(250 , 83 , 0, 0.5)',
                    borderColor: 'rgba(250 , 83 , 0, 0.5)',
                    data: [
                  FSE_TRANSPORT_PESSOAL_ANO_N_JANEIRO ,
                  FSE_TRANSPORT_PESSOAL_ANO_N_FEVEREIRO ,
                  FSE_TRANSPORT_PESSOAL_ANO_N_MARCO ,
                  FSE_TRANSPORT_PESSOAL_ANO_N_ABRIL,
                  FSE_TRANSPORT_PESSOAL_ANO_N_MAIO ,
                  FSE_TRANSPORT_PESSOAL_ANO_N_JUNHO ,
                  FSE_TRANSPORT_PESSOAL_ANO_N_JULHO ,
                  FSE_TRANSPORT_PESSOAL_ANO_N_AGOSTO ,
                  FSE_TRANSPORT_PESSOAL_ANO_N_SETEMBRO ,
                  FSE_TRANSPORT_PESSOAL_ANO_N_OUTUBRO ,
                  FSE_TRANSPORT_PESSOAL_ANO_N_NOVEMBRO ,
                  FSE_TRANSPORT_PESSOAL_ANO_N_DEZEMBRO ,
                    ],
                },
                {
                    label:  'Transp. Pess.(m) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(0,221,0, 0.4)',
                    borderColor: 'rgba(0,221,0, 0.4)',
                    data: [
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_JANEIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_FEVEREIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_MARCO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_ABRIL"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_MAIO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_JUNHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_JULHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_AGOSTO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_SETEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_OUTUBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_NOVEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANO_N_1_DEZEMBRO"]))),
                    ],
                },


            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_TRANSPORT_PESSOAL_MENSAL_1',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                min:  Math.round(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_princ__,0),
                                                max:  Math.round(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString();
                                                }
                                            }
                                        },

                    { id: 'B',
                        type: 'linear',
                        position: 'right',
                        ticks: {
                            min: Math.round(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_secon__,0),
                            max:  Math.round(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_secon__,0),
                            beginAtZero: false,
                            callback: function(value, index, values) {
                                return value.toLocaleString();
                            }
                        }
                    },






                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_039-----------------------------------------------------------*@
<script>

    var IND_VN_ANO_N_JANEIRO_ACUM = IND_VN_ANO_N_JANEIRO;
    var IND_VN_ANO_N_FEVEREIRO_ACUM = IND_VN_ANO_N_FEVEREIRO + IND_VN_ANO_N_JANEIRO_ACUM;
    var IND_VN_ANO_N_MARCO_ACUM = IND_VN_ANO_N_MARCO + IND_VN_ANO_N_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_ABRIL_ACUM = IND_VN_ANO_N_ABRIL + IND_VN_ANO_N_MARCO_ACUM;
    var IND_VN_ANO_N_MAIO_ACUM = IND_VN_ANO_N_MAIO + IND_VN_ANO_N_ABRIL_ACUM;
    var IND_VN_ANO_N_JUNHO_ACUM = IND_VN_ANO_N_JUNHO + IND_VN_ANO_N_MAIO_ACUM;
    var IND_VN_ANO_N_JULHO_ACUM = IND_VN_ANO_N_JULHO + IND_VN_ANO_N_JUNHO_ACUM;
    var IND_VN_ANO_N_AGOSTO_ACUM = IND_VN_ANO_N_AGOSTO + IND_VN_ANO_N_JULHO_ACUM;
    var IND_VN_ANO_N_SETEMBRO_ACUM = IND_VN_ANO_N_SETEMBRO + IND_VN_ANO_N_AGOSTO_ACUM;
    var IND_VN_ANO_N_OUTUBRO_ACUM = IND_VN_ANO_N_OUTUBRO + IND_VN_ANO_N_SETEMBRO_ACUM;
    var IND_VN_ANO_N_NOVEMBRO_ACUM = IND_VN_ANO_N_NOVEMBRO + IND_VN_ANO_N_OUTUBRO_ACUM;
    var IND_VN_ANO_N_DEZEMBRO_ACUM = IND_VN_ANO_N_DEZEMBRO + IND_VN_ANO_N_NOVEMBRO_ACUM;



    var IND_VN_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JANEIRO"])));
    var IND_VN_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_FEVEREIRO"]))) + IND_VN_ANO_N_1_JANEIRO_ACUM;
    var IND_VN_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MARCO"]))) + IND_VN_ANO_N_1_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_ABRIL"]))) + IND_VN_ANO_N_1_MARCO_ACUM;
    var IND_VN_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MAIO"]))) + IND_VN_ANO_N_1_ABRIL_ACUM;
    var IND_VN_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JUNHO"]))) + IND_VN_ANO_N_1_MAIO_ACUM;
    var IND_VN_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JULHO"]))) + IND_VN_ANO_N_1_JUNHO_ACUM;
    var IND_VN_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_AGOSTO"]))) + IND_VN_ANO_N_1_JULHO_ACUM;
    var IND_VN_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_SETEMBRO"]))) + IND_VN_ANO_N_1_AGOSTO_ACUM;
    var IND_VN_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_OUTUBRO"]))) + IND_VN_ANO_N_1_SETEMBRO_ACUM;
    var IND_VN_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_NOVEMBRO"]))) + IND_VN_ANO_N_1_OUTUBRO_ACUM;
    var IND_VN_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_DEZEMBRO"]))) + IND_VN_ANO_N_1_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_JANEIRO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_JANEIRO_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_JANEIRO_ACUM/IND_VN_ANO_N_JANEIRO_ACUM*100; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_FEVEREIRO_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_FEVEREIRO_ACUM/IND_VN_ANO_N_FEVEREIRO_ACUM*100; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_MARCO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_MARCO_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_MARCO_ACUM/IND_VN_ANO_N_MARCO_ACUM*100; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_MARCO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_ABRIL_ACUM = 'nd'; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_ABRIL_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_ABRIL_ACUM/IND_VN_ANO_N_ABRIL_ACUM*100; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_ABRIL_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_MAIO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_MAIO_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_MAIO_ACUM/IND_VN_ANO_N_MAIO_ACUM*100; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_MAIO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_JUNHO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_JUNHO_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_JUNHO_ACUM/IND_VN_ANO_N_JUNHO_ACUM*100; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_JUNHO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_JULHO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_JULHO_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_JULHO_ACUM/IND_VN_ANO_N_JULHO_ACUM*100; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_JULHO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_AGOSTO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_AGOSTO_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_AGOSTO_ACUM/IND_VN_ANO_N_AGOSTO_ACUM*100; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_SETEMBRO_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_SETEMBRO_ACUM/IND_VN_ANO_N_SETEMBRO_ACUM*100; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_OUTUBRO_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_OUTUBRO_ACUM/IND_VN_ANO_N_OUTUBRO_ACUM*100; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_NOVEMBRO_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_NOVEMBRO_ACUM/IND_VN_ANO_N_NOVEMBRO_ACUM*100; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_DEZEMBRO_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_DEZEMBRO_ACUM/IND_VN_ANO_N_DEZEMBRO_ACUM*100; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_JANEIRO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_JANEIRO_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_1_JANEIRO_ACUM/IND_VN_ANO_N_1_JANEIRO_ACUM*100; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_FEVEREIRO_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_1_FEVEREIRO_ACUM/IND_VN_ANO_N_1_FEVEREIRO_ACUM*100; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_MARCO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_MARCO_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_1_MARCO_ACUM/IND_VN_ANO_N_1_MARCO_ACUM*100; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_ABRIL_ACUM = 'nd'; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_ABRIL_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_1_ABRIL_ACUM/IND_VN_ANO_N_1_ABRIL_ACUM*100; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_MAIO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_MAIO_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_1_MAIO_ACUM/IND_VN_ANO_N_1_MAIO_ACUM*100; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_JUNHO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_JUNHO_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_1_JUNHO_ACUM/IND_VN_ANO_N_1_JUNHO_ACUM*100; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_JULHO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_JULHO_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_1_JULHO_ACUM/IND_VN_ANO_N_1_JULHO_ACUM*100; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_AGOSTO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_AGOSTO_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_1_AGOSTO_ACUM/IND_VN_ANO_N_1_AGOSTO_ACUM*100; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_SETEMBRO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_SETEMBRO_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_1_SETEMBRO_ACUM/IND_VN_ANO_N_1_SETEMBRO_ACUM*100; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_OUTUBRO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_OUTUBRO_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_1_OUTUBRO_ACUM/IND_VN_ANO_N_1_OUTUBRO_ACUM*100; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_NOVEMBRO_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_1_NOVEMBRO_ACUM/IND_VN_ANO_N_1_NOVEMBRO_ACUM*100; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_DEZEMBRO_ACUM= FSE_TRANSPORT_PESSOAL_ANO_N_1_DEZEMBRO_ACUM/IND_VN_ANO_N_1_DEZEMBRO_ACUM*100; var PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_VN_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JANEIRO_ACUM= ((IND_VN_ANO_N_JANEIRO_ACUM-IND_VN_ANO_N_1_JANEIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_JANEIRO_ACUM))*100; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_FEVEREIRO_ACUM= ((IND_VN_ANO_N_FEVEREIRO_ACUM-IND_VN_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_VN_ANO_N_MARCO_ACUM = 'nd'; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MARCO_ACUM= ((IND_VN_ANO_N_MARCO_ACUM-IND_VN_ANO_N_1_MARCO_ACUM)/Math.abs(IND_VN_ANO_N_1_MARCO_ACUM))*100; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = VAR_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_VN_ANO_N_ABRIL_ACUM = 'nd'; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_ABRIL_ACUM= ((IND_VN_ANO_N_ABRIL_ACUM-IND_VN_ANO_N_1_ABRIL_ACUM)/Math.abs(IND_VN_ANO_N_1_ABRIL_ACUM))*100; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_VN_ANO_N_MAIO_ACUM = 'nd'; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MAIO_ACUM= ((IND_VN_ANO_N_MAIO_ACUM-IND_VN_ANO_N_1_MAIO_ACUM)/Math.abs(IND_VN_ANO_N_1_MAIO_ACUM))*100; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = VAR_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_VN_ANO_N_JUNHO_ACUM = 'nd'; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JUNHO_ACUM= ((IND_VN_ANO_N_JUNHO_ACUM-IND_VN_ANO_N_1_JUNHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JUNHO_ACUM))*100; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_VN_ANO_N_JULHO_ACUM = 'nd'; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JULHO_ACUM= ((IND_VN_ANO_N_JULHO_ACUM-IND_VN_ANO_N_1_JULHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JULHO_ACUM))*100; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_VN_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_AGOSTO_ACUM= ((IND_VN_ANO_N_AGOSTO_ACUM-IND_VN_ANO_N_1_AGOSTO_ACUM)/Math.abs(IND_VN_ANO_N_1_AGOSTO_ACUM))*100; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_SETEMBRO_ACUM= ((IND_VN_ANO_N_SETEMBRO_ACUM-IND_VN_ANO_N_1_SETEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_OUTUBRO_ACUM= ((IND_VN_ANO_N_OUTUBRO_ACUM-IND_VN_ANO_N_1_OUTUBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_NOVEMBRO_ACUM= ((IND_VN_ANO_N_NOVEMBRO_ACUM-IND_VN_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_DEZEMBRO_ACUM= ((IND_VN_ANO_N_DEZEMBRO_ACUM-IND_VN_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_JANEIRO_ACUM= ((FSE_TRANSPORT_PESSOAL_ANO_N_JANEIRO_ACUM-FSE_TRANSPORT_PESSOAL_ANO_N_1_JANEIRO_ACUM)/Math.abs(FSE_TRANSPORT_PESSOAL_ANO_N_1_JANEIRO_ACUM))*100; var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_FSE_TRANSPORT_PESSOAL_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_FEVEREIRO_ACUM= ((FSE_TRANSPORT_PESSOAL_ANO_N_FEVEREIRO_ACUM-FSE_TRANSPORT_PESSOAL_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(FSE_TRANSPORT_PESSOAL_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_FSE_TRANSPORT_PESSOAL_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_MARCO_ACUM = 'nd'; var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_MARCO_ACUM= ((FSE_TRANSPORT_PESSOAL_ANO_N_MARCO_ACUM-FSE_TRANSPORT_PESSOAL_ANO_N_1_MARCO_ACUM)/Math.abs(FSE_TRANSPORT_PESSOAL_ANO_N_1_MARCO_ACUM))*100; var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_MARCO_ACUM_MAX_MIN = VAR_FSE_TRANSPORT_PESSOAL_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_ABRIL_ACUM = 'nd'; var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_ABRIL_ACUM= ((FSE_TRANSPORT_PESSOAL_ANO_N_ABRIL_ACUM-FSE_TRANSPORT_PESSOAL_ANO_N_1_ABRIL_ACUM)/Math.abs(FSE_TRANSPORT_PESSOAL_ANO_N_1_ABRIL_ACUM))*100; var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_FSE_TRANSPORT_PESSOAL_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_MAIO_ACUM = 'nd'; var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_MAIO_ACUM= ((FSE_TRANSPORT_PESSOAL_ANO_N_MAIO_ACUM-FSE_TRANSPORT_PESSOAL_ANO_N_1_MAIO_ACUM)/Math.abs(FSE_TRANSPORT_PESSOAL_ANO_N_1_MAIO_ACUM))*100; var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_MAIO_ACUM_MAX_MIN = VAR_FSE_TRANSPORT_PESSOAL_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_JUNHO_ACUM = 'nd'; var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_JUNHO_ACUM= ((FSE_TRANSPORT_PESSOAL_ANO_N_JUNHO_ACUM-FSE_TRANSPORT_PESSOAL_ANO_N_1_JUNHO_ACUM)/Math.abs(FSE_TRANSPORT_PESSOAL_ANO_N_1_JUNHO_ACUM))*100; var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_FSE_TRANSPORT_PESSOAL_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_JULHO_ACUM = 'nd'; var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_JULHO_ACUM= ((FSE_TRANSPORT_PESSOAL_ANO_N_JULHO_ACUM-FSE_TRANSPORT_PESSOAL_ANO_N_1_JULHO_ACUM)/Math.abs(FSE_TRANSPORT_PESSOAL_ANO_N_1_JULHO_ACUM))*100; var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_JULHO_ACUM_MAX_MIN = VAR_FSE_TRANSPORT_PESSOAL_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_AGOSTO_ACUM= ((FSE_TRANSPORT_PESSOAL_ANO_N_AGOSTO_ACUM-FSE_TRANSPORT_PESSOAL_ANO_N_1_AGOSTO_ACUM)/Math.abs(FSE_TRANSPORT_PESSOAL_ANO_N_1_AGOSTO_ACUM))*100; var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_FSE_TRANSPORT_PESSOAL_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_SETEMBRO_ACUM= ((FSE_TRANSPORT_PESSOAL_ANO_N_SETEMBRO_ACUM-FSE_TRANSPORT_PESSOAL_ANO_N_1_SETEMBRO_ACUM)/Math.abs(FSE_TRANSPORT_PESSOAL_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_FSE_TRANSPORT_PESSOAL_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_OUTUBRO_ACUM= ((FSE_TRANSPORT_PESSOAL_ANO_N_OUTUBRO_ACUM-FSE_TRANSPORT_PESSOAL_ANO_N_1_OUTUBRO_ACUM)/Math.abs(FSE_TRANSPORT_PESSOAL_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_FSE_TRANSPORT_PESSOAL_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_NOVEMBRO_ACUM= ((FSE_TRANSPORT_PESSOAL_ANO_N_NOVEMBRO_ACUM-FSE_TRANSPORT_PESSOAL_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(FSE_TRANSPORT_PESSOAL_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_FSE_TRANSPORT_PESSOAL_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_DEZEMBRO_ACUM= ((FSE_TRANSPORT_PESSOAL_ANO_N_DEZEMBRO_ACUM-FSE_TRANSPORT_PESSOAL_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(FSE_TRANSPORT_PESSOAL_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_FSE_TRANSPORT_PESSOAL_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_FSE_TRANSPORT_PESSOAL_ANO_N_DEZEMBRO_ACUM };

    if( PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_JANEIRO_ACUM > PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_JANEIRO_ACUM) { var  INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_JANEIRO_ACUM=PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_JANEIRO_ACUM ; } else { var  INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_JANEIRO_ACUM=PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_JANEIRO_ACUM ; }
    if( PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_FEVEREIRO_ACUM > PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_FEVEREIRO_ACUM) { var  INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_FEVEREIRO_ACUM=PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_FEVEREIRO_ACUM ; } else { var  INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_FEVEREIRO_ACUM=PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_FEVEREIRO_ACUM ; }
    if( PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_MARCO_ACUM > PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_MARCO_ACUM) { var  INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_MARCO_ACUM=PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_MARCO_ACUM ; } else { var  INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_MARCO_ACUM=PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_MARCO_ACUM ; }
    if( PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_ABRIL_ACUM > PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_ABRIL_ACUM) { var  INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_ABRIL_ACUM=PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_ABRIL_ACUM ; } else { var  INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_ABRIL_ACUM=PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_ABRIL_ACUM ; }
    if( PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_MAIO_ACUM > PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_MAIO_ACUM) { var  INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_MAIO_ACUM=PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_MAIO_ACUM ; } else { var  INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_MAIO_ACUM=PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_MAIO_ACUM ; }
    if( PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_JUNHO_ACUM > PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_JUNHO_ACUM) { var  INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_JUNHO_ACUM=PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_JUNHO_ACUM ; } else { var  INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_JUNHO_ACUM=PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_JUNHO_ACUM ; }
    if( PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_JULHO_ACUM > PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_JULHO_ACUM) { var  INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_JULHO_ACUM=PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_JULHO_ACUM ; } else { var  INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_JULHO_ACUM=PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_JULHO_ACUM ; }
    if( PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_AGOSTO_ACUM > PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_AGOSTO_ACUM) { var  INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_AGOSTO_ACUM=PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_AGOSTO_ACUM ; } else { var  INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_AGOSTO_ACUM=PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_AGOSTO_ACUM ; }
    if( PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_SETEMBRO_ACUM > PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_SETEMBRO_ACUM) { var  INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_SETEMBRO_ACUM=PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_SETEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_SETEMBRO_ACUM=PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_SETEMBRO_ACUM ; }
    if( PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_OUTUBRO_ACUM > PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_OUTUBRO_ACUM) { var  INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_OUTUBRO_ACUM=PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_OUTUBRO_ACUM ; } else { var  INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_OUTUBRO_ACUM=PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_OUTUBRO_ACUM ; }
    if( PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_NOVEMBRO_ACUM > PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_NOVEMBRO_ACUM) { var  INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_NOVEMBRO_ACUM=PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_NOVEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_NOVEMBRO_ACUM=PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_NOVEMBRO_ACUM ; }
    if( PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_DEZEMBRO_ACUM > PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_DEZEMBRO_ACUM) { var  INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_DEZEMBRO_ACUM=PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_DEZEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_DEZEMBRO_ACUM=PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_DEZEMBRO_ACUM ; }



    var fillBetweenLinesPlugin = {
        afterDatasetsDraw: function (chart) {
            var ctx = chart.chart.ctx;
            var xaxis = chart.scales['x-axis-0'];
            var yaxis = chart.scales['y-axis-0'];
            var datasets = chart.data.datasets;
            ctx.save();

            for (var d = 0; d < datasets.length; d++) {
                var dataset = datasets[d];
                if (dataset.fillBetweenSet == undefined) {
                    continue;
                }

                // get meta for both data sets
                var meta1 = chart.getDatasetMeta(d);
                var meta2 = chart.getDatasetMeta(dataset.fillBetweenSet);

                // do not draw fill if one of the datasets is hidden
                if (meta1.hidden || meta2.hidden) continue;

                // create fill areas in pairs
                for (var p = 0; p < meta1.data.length-1;p++) {
                    // if null skip
                    if (dataset.data[p] == null || dataset.data[p+1] == null) continue;

                    ctx.beginPath();

                    // trace line 1
                    var curr = meta1.data[p];
                    var next = meta1.data[p+1];
                    ctx.moveTo(curr._view.x, curr._view.y);
                    ctx.lineTo(curr._view.x, curr._view.y);
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(next._view.x, curr._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        ctx.bezierCurveTo(
                          curr._view.controlPointNextX,
                          curr._view.controlPointNextY,
                          next._view.controlPointPreviousX,
                          next._view.controlPointPreviousY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // connect dataset1 to dataset2
                    var curr = meta2.data[p+1];
                    var next = meta2.data[p];
                    ctx.lineTo(curr._view.x, curr._view.y);

                    // trace BACKWORDS set2 to complete the box
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(curr._view.x, next._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        // reverse bezier
                        ctx.bezierCurveTo(
                          curr._view.controlPointPreviousX,
                          curr._view.controlPointPreviousY,
                          next._view.controlPointNextX,
                          next._view.controlPointNextY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // close the loop and fill with shading
                    ctx.closePath();
                    ctx.fillStyle = dataset.fillBetweenColor || "rgba(0,0,0,0.1)";
                    ctx.fill();
                } // end for p loop
            }
        } // end afterDatasetsDraw
    }; // end fillBetweenLinesPlugin

    Chart.pluginService.register(fillBetweenLinesPlugin);



    var GRAFICO_FSE_RESULT_MENSAL_COMP_039=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_039').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_039=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_039, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label:  'Peso Transp. Pess.vsVN(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   //borderColor: "#F00",
                   fill: false,
                   steppedLine: false,
                   tension: 0.5,
                   fillBetweenSet: 1,
                   fillBetweenColor: "rgba(0, 221, 0, 0.1)",
                   data: [
                   PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_JANEIRO_ACUM,
                   PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_FEVEREIRO_ACUM,
                   PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_MARCO_ACUM,
                   PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_ABRIL_ACUM,
                   PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_MAIO_ACUM,
                   PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_JUNHO_ACUM,
                   PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_JULHO_ACUM,
                   PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_AGOSTO_ACUM,
                   PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_SETEMBRO_ACUM,
                   PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_OUTUBRO_ACUM,
                   PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_NOVEMBRO_ACUM,
                   PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_DEZEMBRO_ACUM,

                   ],
                   type: 'line'


               },
                {
                    label: 'Peso Transp. Pess.vsVN(ac) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'A',
                    //backgroundColor: 'rgb(17, 121, 240)',
                    borderColor: 'rgb(0,221,0)',
                    //borderColor: "#00F",
                    fill: false,
                    steppedLine: false,
                    tension: 0.5,
                    data: [
                   PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_JANEIRO_ACUM,
                   PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_FEVEREIRO_ACUM,
                   PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_MARCO_ACUM,
                   PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_ABRIL_ACUM,
                   PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_MAIO_ACUM,
                   PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_JUNHO_ACUM,
                   PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_JULHO_ACUM,
                   PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_AGOSTO_ACUM,
                   PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_SETEMBRO_ACUM,
                   PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_OUTUBRO_ACUM,
                   PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_NOVEMBRO_ACUM,
                   PESO_FSE_TRANSPORT_PESSOAL_VN_ANO_N_1_DEZEMBRO_ACUM,
                    ],
                    type: 'line'
                },
    {
        label: 'Ineficiência',
        yAxisID: 'A',
        backgroundColor: "rgba(255, 0, 0, 0.2)",
        borderColor: 'rgba(255, 255, 255, 0.1)',
        //borderColor: "#0D0",
        fill: false,
        steppedLine: false,
        tension: 0.5,
        fillBetweenSet: 1,
        fillBetweenColor: "rgba(255, 0, 0, 0.2)",
        data: [
    INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_JANEIRO_ACUM,
    INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_FEVEREIRO_ACUM,
    INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_MARCO_ACUM,
    INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_ABRIL_ACUM,
    INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_MAIO_ACUM,
    INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_JUNHO_ACUM,
    INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_JULHO_ACUM,
    INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_AGOSTO_ACUM,
    INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_SETEMBRO_ACUM,
    INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_OUTUBRO_ACUM,
    INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_NOVEMBRO_ACUM,
    INEFICIENCIA_FSE_TRANSPORT_PESSOAL_ANO_N_DEZEMBRO_ACUM,
        ],
        type: 'line'
    },

            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_TRANSPORT_PESSOAL COMP',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                //min:  Math.round(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_min_princ__,0),
                                                //max:  Math.round(FSE_TRANSPORT_PESSOAL_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString()+ "%";
                                                }
                                            }
                                        },







                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_040-----------------------------------------------------------*@
<script>

    if(@ViewData["MES_ACUM_REAL"]<1){ var IND_VN_ANO_N_JANEIRO = 'nd'; var IND_VN_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JANEIRO"]))); var IND_VN_ANO_N_JANEIRO_MAX_MIN = IND_VN_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var IND_VN_ANO_N_FEVEREIRO = 'nd'; var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_FEVEREIRO"]))); var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = IND_VN_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var IND_VN_ANO_N_MARCO = 'nd'; var IND_VN_ANO_N_MARCO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MARCO"]))); var IND_VN_ANO_N_MARCO_MAX_MIN = IND_VN_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var IND_VN_ANO_N_ABRIL = 'nd'; var IND_VN_ANO_N_ABRIL_MAX_MIN = 0;  } else { var IND_VN_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_ABRIL"]))); var IND_VN_ANO_N_ABRIL_MAX_MIN = IND_VN_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var IND_VN_ANO_N_MAIO = 'nd'; var IND_VN_ANO_N_MAIO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MAIO"]))); var IND_VN_ANO_N_MAIO_MAX_MIN = IND_VN_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var IND_VN_ANO_N_JUNHO = 'nd'; var IND_VN_ANO_N_JUNHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JUNHO"]))); var IND_VN_ANO_N_JUNHO_MAX_MIN = IND_VN_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var IND_VN_ANO_N_JULHO = 'nd'; var IND_VN_ANO_N_JULHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JULHO"]))); var IND_VN_ANO_N_JULHO_MAX_MIN = IND_VN_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var IND_VN_ANO_N_AGOSTO = 'nd'; var IND_VN_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_AGOSTO"]))); var IND_VN_ANO_N_AGOSTO_MAX_MIN = IND_VN_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var IND_VN_ANO_N_SETEMBRO = 'nd'; var IND_VN_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_SETEMBRO"]))); var IND_VN_ANO_N_SETEMBRO_MAX_MIN = IND_VN_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var IND_VN_ANO_N_OUTUBRO = 'nd'; var IND_VN_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_OUTUBRO"]))); var IND_VN_ANO_N_OUTUBRO_MAX_MIN = IND_VN_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var IND_VN_ANO_N_NOVEMBRO = 'nd'; var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_NOVEMBRO"]))); var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = IND_VN_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var IND_VN_ANO_N_DEZEMBRO = 'nd'; var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_DEZEMBRO"]))); var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = IND_VN_ANO_N_DEZEMBRO };

    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_TRANSPORT_MERCAD_ANO_N_JANEIRO = 'nd'; var FSE_TRANSPORT_MERCAD_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var FSE_TRANSPORT_MERCAD_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_JANEIRO"]))); var FSE_TRANSPORT_MERCAD_ANO_N_JANEIRO_MAX_MIN = FSE_TRANSPORT_MERCAD_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_TRANSPORT_MERCAD_ANO_N_FEVEREIRO = 'nd'; var FSE_TRANSPORT_MERCAD_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var FSE_TRANSPORT_MERCAD_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_FEVEREIRO"]))); var FSE_TRANSPORT_MERCAD_ANO_N_FEVEREIRO_MAX_MIN = FSE_TRANSPORT_MERCAD_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_TRANSPORT_MERCAD_ANO_N_MARCO = 'nd'; var FSE_TRANSPORT_MERCAD_ANO_N_MARCO_MAX_MIN = 0;  } else { var FSE_TRANSPORT_MERCAD_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_MARCO"]))); var FSE_TRANSPORT_MERCAD_ANO_N_MARCO_MAX_MIN = FSE_TRANSPORT_MERCAD_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_TRANSPORT_MERCAD_ANO_N_ABRIL = 'nd'; var FSE_TRANSPORT_MERCAD_ANO_N_ABRIL_MAX_MIN = 0;  } else { var FSE_TRANSPORT_MERCAD_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_ABRIL"]))); var FSE_TRANSPORT_MERCAD_ANO_N_ABRIL_MAX_MIN = FSE_TRANSPORT_MERCAD_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_TRANSPORT_MERCAD_ANO_N_MAIO = 'nd'; var FSE_TRANSPORT_MERCAD_ANO_N_MAIO_MAX_MIN = 0;  } else { var FSE_TRANSPORT_MERCAD_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_MAIO"]))); var FSE_TRANSPORT_MERCAD_ANO_N_MAIO_MAX_MIN = FSE_TRANSPORT_MERCAD_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_TRANSPORT_MERCAD_ANO_N_JUNHO = 'nd'; var FSE_TRANSPORT_MERCAD_ANO_N_JUNHO_MAX_MIN = 0;  } else { var FSE_TRANSPORT_MERCAD_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_JUNHO"]))); var FSE_TRANSPORT_MERCAD_ANO_N_JUNHO_MAX_MIN = FSE_TRANSPORT_MERCAD_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_TRANSPORT_MERCAD_ANO_N_JULHO = 'nd'; var FSE_TRANSPORT_MERCAD_ANO_N_JULHO_MAX_MIN = 0;  } else { var FSE_TRANSPORT_MERCAD_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_JULHO"]))); var FSE_TRANSPORT_MERCAD_ANO_N_JULHO_MAX_MIN = FSE_TRANSPORT_MERCAD_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_TRANSPORT_MERCAD_ANO_N_AGOSTO = 'nd'; var FSE_TRANSPORT_MERCAD_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var FSE_TRANSPORT_MERCAD_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_AGOSTO"]))); var FSE_TRANSPORT_MERCAD_ANO_N_AGOSTO_MAX_MIN = FSE_TRANSPORT_MERCAD_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_TRANSPORT_MERCAD_ANO_N_SETEMBRO = 'nd'; var FSE_TRANSPORT_MERCAD_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var FSE_TRANSPORT_MERCAD_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_SETEMBRO"]))); var FSE_TRANSPORT_MERCAD_ANO_N_SETEMBRO_MAX_MIN = FSE_TRANSPORT_MERCAD_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_TRANSPORT_MERCAD_ANO_N_OUTUBRO = 'nd'; var FSE_TRANSPORT_MERCAD_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var FSE_TRANSPORT_MERCAD_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_OUTUBRO"]))); var FSE_TRANSPORT_MERCAD_ANO_N_OUTUBRO_MAX_MIN = FSE_TRANSPORT_MERCAD_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_TRANSPORT_MERCAD_ANO_N_NOVEMBRO = 'nd'; var FSE_TRANSPORT_MERCAD_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var FSE_TRANSPORT_MERCAD_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_NOVEMBRO"]))); var FSE_TRANSPORT_MERCAD_ANO_N_NOVEMBRO_MAX_MIN = FSE_TRANSPORT_MERCAD_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_TRANSPORT_MERCAD_ANO_N_DEZEMBRO = 'nd'; var FSE_TRANSPORT_MERCAD_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var FSE_TRANSPORT_MERCAD_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_DEZEMBRO"]))); var FSE_TRANSPORT_MERCAD_ANO_N_DEZEMBRO_MAX_MIN = FSE_TRANSPORT_MERCAD_ANO_N_DEZEMBRO };


    var FSE_TRANSPORT_MERCAD_ANO_N_JANEIRO_ACUM = FSE_TRANSPORT_MERCAD_ANO_N_JANEIRO;
    var FSE_TRANSPORT_MERCAD_ANO_N_FEVEREIRO_ACUM = FSE_TRANSPORT_MERCAD_ANO_N_FEVEREIRO + FSE_TRANSPORT_MERCAD_ANO_N_JANEIRO_ACUM;
    var FSE_TRANSPORT_MERCAD_ANO_N_MARCO_ACUM = FSE_TRANSPORT_MERCAD_ANO_N_MARCO + FSE_TRANSPORT_MERCAD_ANO_N_FEVEREIRO_ACUM;
    var FSE_TRANSPORT_MERCAD_ANO_N_ABRIL_ACUM = FSE_TRANSPORT_MERCAD_ANO_N_ABRIL + FSE_TRANSPORT_MERCAD_ANO_N_MARCO_ACUM;
    var FSE_TRANSPORT_MERCAD_ANO_N_MAIO_ACUM = FSE_TRANSPORT_MERCAD_ANO_N_MAIO + FSE_TRANSPORT_MERCAD_ANO_N_ABRIL_ACUM;
    var FSE_TRANSPORT_MERCAD_ANO_N_JUNHO_ACUM = FSE_TRANSPORT_MERCAD_ANO_N_JUNHO + FSE_TRANSPORT_MERCAD_ANO_N_MAIO_ACUM;
    var FSE_TRANSPORT_MERCAD_ANO_N_JULHO_ACUM = FSE_TRANSPORT_MERCAD_ANO_N_JULHO + FSE_TRANSPORT_MERCAD_ANO_N_JUNHO_ACUM;
    var FSE_TRANSPORT_MERCAD_ANO_N_AGOSTO_ACUM = FSE_TRANSPORT_MERCAD_ANO_N_AGOSTO + FSE_TRANSPORT_MERCAD_ANO_N_JULHO_ACUM;
    var FSE_TRANSPORT_MERCAD_ANO_N_SETEMBRO_ACUM = FSE_TRANSPORT_MERCAD_ANO_N_SETEMBRO + FSE_TRANSPORT_MERCAD_ANO_N_AGOSTO_ACUM;
    var FSE_TRANSPORT_MERCAD_ANO_N_OUTUBRO_ACUM = FSE_TRANSPORT_MERCAD_ANO_N_OUTUBRO + FSE_TRANSPORT_MERCAD_ANO_N_SETEMBRO_ACUM;
    var FSE_TRANSPORT_MERCAD_ANO_N_NOVEMBRO_ACUM = FSE_TRANSPORT_MERCAD_ANO_N_NOVEMBRO + FSE_TRANSPORT_MERCAD_ANO_N_OUTUBRO_ACUM;
    var FSE_TRANSPORT_MERCAD_ANO_N_DEZEMBRO_ACUM = FSE_TRANSPORT_MERCAD_ANO_N_DEZEMBRO + FSE_TRANSPORT_MERCAD_ANO_N_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_TRANSPORT_MERCAD_ANO_N_JANEIRO_ACUM = 'nd'; var FSE_TRANSPORT_MERCAD_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var FSE_TRANSPORT_MERCAD_ANO_N_JANEIRO_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_JANEIRO_ACUM; var FSE_TRANSPORT_MERCAD_ANO_N_JANEIRO_ACUM_MAX_MIN = FSE_TRANSPORT_MERCAD_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_TRANSPORT_MERCAD_ANO_N_FEVEREIRO_ACUM = 'nd'; var FSE_TRANSPORT_MERCAD_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var FSE_TRANSPORT_MERCAD_ANO_N_FEVEREIRO_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_FEVEREIRO_ACUM; var FSE_TRANSPORT_MERCAD_ANO_N_FEVEREIRO_ACUM_MAX_MIN = FSE_TRANSPORT_MERCAD_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_TRANSPORT_MERCAD_ANO_N_MARCO_ACUM = 'nd'; var FSE_TRANSPORT_MERCAD_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var FSE_TRANSPORT_MERCAD_ANO_N_MARCO_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_MARCO_ACUM; var FSE_TRANSPORT_MERCAD_ANO_N_MARCO_ACUM_MAX_MIN = FSE_TRANSPORT_MERCAD_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_TRANSPORT_MERCAD_ANO_N_ABRIL_ACUM = 'nd'; var FSE_TRANSPORT_MERCAD_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var FSE_TRANSPORT_MERCAD_ANO_N_ABRIL_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_ABRIL_ACUM; var FSE_TRANSPORT_MERCAD_ANO_N_ABRIL_ACUM_MAX_MIN = FSE_TRANSPORT_MERCAD_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_TRANSPORT_MERCAD_ANO_N_MAIO_ACUM = 'nd'; var FSE_TRANSPORT_MERCAD_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var FSE_TRANSPORT_MERCAD_ANO_N_MAIO_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_MAIO_ACUM; var FSE_TRANSPORT_MERCAD_ANO_N_MAIO_ACUM_MAX_MIN = FSE_TRANSPORT_MERCAD_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_TRANSPORT_MERCAD_ANO_N_JUNHO_ACUM = 'nd'; var FSE_TRANSPORT_MERCAD_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var FSE_TRANSPORT_MERCAD_ANO_N_JUNHO_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_JUNHO_ACUM; var FSE_TRANSPORT_MERCAD_ANO_N_JUNHO_ACUM_MAX_MIN = FSE_TRANSPORT_MERCAD_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_TRANSPORT_MERCAD_ANO_N_JULHO_ACUM = 'nd'; var FSE_TRANSPORT_MERCAD_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var FSE_TRANSPORT_MERCAD_ANO_N_JULHO_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_JULHO_ACUM; var FSE_TRANSPORT_MERCAD_ANO_N_JULHO_ACUM_MAX_MIN = FSE_TRANSPORT_MERCAD_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_TRANSPORT_MERCAD_ANO_N_AGOSTO_ACUM = 'nd'; var FSE_TRANSPORT_MERCAD_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var FSE_TRANSPORT_MERCAD_ANO_N_AGOSTO_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_AGOSTO_ACUM; var FSE_TRANSPORT_MERCAD_ANO_N_AGOSTO_ACUM_MAX_MIN = FSE_TRANSPORT_MERCAD_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_TRANSPORT_MERCAD_ANO_N_SETEMBRO_ACUM = 'nd'; var FSE_TRANSPORT_MERCAD_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_TRANSPORT_MERCAD_ANO_N_SETEMBRO_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_SETEMBRO_ACUM; var FSE_TRANSPORT_MERCAD_ANO_N_SETEMBRO_ACUM_MAX_MIN = FSE_TRANSPORT_MERCAD_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_TRANSPORT_MERCAD_ANO_N_OUTUBRO_ACUM = 'nd'; var FSE_TRANSPORT_MERCAD_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var FSE_TRANSPORT_MERCAD_ANO_N_OUTUBRO_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_OUTUBRO_ACUM; var FSE_TRANSPORT_MERCAD_ANO_N_OUTUBRO_ACUM_MAX_MIN = FSE_TRANSPORT_MERCAD_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_TRANSPORT_MERCAD_ANO_N_NOVEMBRO_ACUM = 'nd'; var FSE_TRANSPORT_MERCAD_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_TRANSPORT_MERCAD_ANO_N_NOVEMBRO_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_NOVEMBRO_ACUM; var FSE_TRANSPORT_MERCAD_ANO_N_NOVEMBRO_ACUM_MAX_MIN = FSE_TRANSPORT_MERCAD_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_TRANSPORT_MERCAD_ANO_N_DEZEMBRO_ACUM = 'nd'; var FSE_TRANSPORT_MERCAD_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_TRANSPORT_MERCAD_ANO_N_DEZEMBRO_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_DEZEMBRO_ACUM; var FSE_TRANSPORT_MERCAD_ANO_N_DEZEMBRO_ACUM_MAX_MIN = FSE_TRANSPORT_MERCAD_ANO_N_DEZEMBRO_ACUM };




    var FSE_TRANSPORT_MERCAD_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_JANEIRO"])));
    var FSE_TRANSPORT_MERCAD_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_FEVEREIRO"]))) + FSE_TRANSPORT_MERCAD_ANO_N_1_JANEIRO_ACUM;
    var FSE_TRANSPORT_MERCAD_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_MARCO"]))) + FSE_TRANSPORT_MERCAD_ANO_N_1_FEVEREIRO_ACUM;
    var FSE_TRANSPORT_MERCAD_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_ABRIL"]))) + FSE_TRANSPORT_MERCAD_ANO_N_1_MARCO_ACUM;
    var FSE_TRANSPORT_MERCAD_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_MAIO"]))) + FSE_TRANSPORT_MERCAD_ANO_N_1_ABRIL_ACUM;
    var FSE_TRANSPORT_MERCAD_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_JUNHO"]))) + FSE_TRANSPORT_MERCAD_ANO_N_1_MAIO_ACUM;
    var FSE_TRANSPORT_MERCAD_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_JULHO"]))) + FSE_TRANSPORT_MERCAD_ANO_N_1_JUNHO_ACUM;
    var FSE_TRANSPORT_MERCAD_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_AGOSTO"]))) + FSE_TRANSPORT_MERCAD_ANO_N_1_JULHO_ACUM;
    var FSE_TRANSPORT_MERCAD_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_SETEMBRO"]))) + FSE_TRANSPORT_MERCAD_ANO_N_1_AGOSTO_ACUM;
    var FSE_TRANSPORT_MERCAD_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_OUTUBRO"]))) + FSE_TRANSPORT_MERCAD_ANO_N_1_SETEMBRO_ACUM;
    var FSE_TRANSPORT_MERCAD_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_NOVEMBRO"]))) + FSE_TRANSPORT_MERCAD_ANO_N_1_OUTUBRO_ACUM;
    var FSE_TRANSPORT_MERCAD_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_DEZEMBRO"]))) + FSE_TRANSPORT_MERCAD_ANO_N_1_NOVEMBRO_ACUM;


    var FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_princ= Math.max(
                       FSE_TRANSPORT_MERCAD_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_MERCAD_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_MERCAD_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_MERCAD_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_TRANSPORT_MERCAD_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_MERCAD_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_MERCAD_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_MERCAD_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_MERCAD_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_MERCAD_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_MERCAD_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_MERCAD_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_TRANSPORT_MERCAD_ANO_N_1_JANEIRO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_1_MARCO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_1_ABRIL_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_1_MAIO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_1_JUNHO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_1_JULHO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_1_AGOSTO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_1_SETEMBRO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_1_OUTUBRO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_1_DEZEMBRO_ACUM
                             );
    var FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_princ= Math.min(

                       FSE_TRANSPORT_MERCAD_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_MERCAD_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_MERCAD_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_MERCAD_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_TRANSPORT_MERCAD_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_MERCAD_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_MERCAD_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_MERCAD_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_MERCAD_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_MERCAD_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_MERCAD_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_TRANSPORT_MERCAD_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_TRANSPORT_MERCAD_ANO_N_1_JANEIRO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_1_MARCO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_1_ABRIL_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_1_MAIO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_1_JUNHO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_1_JULHO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_1_AGOSTO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_1_SETEMBRO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_1_OUTUBRO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_1_DEZEMBRO_ACUM
                           );
    var FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_secon= Math.max(
                       FSE_TRANSPORT_MERCAD_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_TRANSPORT_MERCAD_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_TRANSPORT_MERCAD_ANO_N_MARCO_MAX_MIN ,
                       FSE_TRANSPORT_MERCAD_ANO_N_ABRIL_MAX_MIN ,
                       FSE_TRANSPORT_MERCAD_ANO_N_MAIO_MAX_MIN ,
                       FSE_TRANSPORT_MERCAD_ANO_N_JUNHO_MAX_MIN ,
                       FSE_TRANSPORT_MERCAD_ANO_N_JULHO_MAX_MIN ,
                       FSE_TRANSPORT_MERCAD_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_TRANSPORT_MERCAD_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_TRANSPORT_MERCAD_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_TRANSPORT_MERCAD_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_TRANSPORT_MERCAD_ANO_N_DEZEMBRO_MAX_MIN ,



                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_DEZEMBRO"])))

                            );
    var FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_secon= Math.min(
                       FSE_TRANSPORT_MERCAD_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_TRANSPORT_MERCAD_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_TRANSPORT_MERCAD_ANO_N_MARCO_MAX_MIN ,
                       FSE_TRANSPORT_MERCAD_ANO_N_ABRIL_MAX_MIN ,
                       FSE_TRANSPORT_MERCAD_ANO_N_MAIO_MAX_MIN ,
                       FSE_TRANSPORT_MERCAD_ANO_N_JUNHO_MAX_MIN ,
                       FSE_TRANSPORT_MERCAD_ANO_N_JULHO_MAX_MIN ,
                       FSE_TRANSPORT_MERCAD_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_TRANSPORT_MERCAD_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_TRANSPORT_MERCAD_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_TRANSPORT_MERCAD_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_TRANSPORT_MERCAD_ANO_N_DEZEMBRO_MAX_MIN ,


                           @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_DEZEMBRO"])))

                          );

    //NOTA TA: Aqui trato o minimo e o maximo do eixo principal
    if(Math.abs(FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_princ)>=Math.abs(FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_princ))
    {
        var FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_princ_=(Math.ceil(FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_princ),0).toString().length-1);
        var FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_princ_= (Math.floor(FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_princ),0).toString().length-1);
        //alert(FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_princ_);
        //alert(FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_princ_);
    }
    else
    {
        var FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_princ_=(Math.ceil(FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_princ),0).toString().length-1);
        var FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_princ_= (Math.floor(FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_princ),0).toString().length-1);}

    //NOTA TA: Aqui trato o minimo e o maximo do eixo secundario

    if(Math.abs(FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_secon)>=Math.abs(FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_secon))
    {
        var FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_secon_=(Math.ceil(FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_secon),0).toString().length-1);
        var FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_secon_= (Math.floor(FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_secon),0).toString().length-1);
        //alert(FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_secon_);
        //alert(FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_secon_);
    }
    else
    {
        var FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_secon_=(Math.ceil(FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_secon),0).toString().length-1);
        var FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_secon_= (Math.floor(FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_secon),0).toString().length-1);}


    if(Math.abs(FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_princ)/Math.abs(FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_princ)>=Math.abs(FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_secon)/Math.abs(FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_secon))
    { if(FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_princ > 0 && FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_princ <0 ){ var FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_secon__=(FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_princ_*FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_secon_)/FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_princ_;} else { var FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_secon__=FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_secon_;}
        if(FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_secon > 0 && FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_secon <0 ){ var FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_princ__=(FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_secon__*FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_princ_)/FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_secon_;} else { var FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_princ__=FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_princ_;}}
    else
    {if(FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_secon > 0 && FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_secon <0 ){ var FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_princ__=(FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_secon_*FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_princ_)/FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_secon_;} else { var FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_princ__=FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_princ_;}
        if(FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_princ > 0 && FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_princ <0 ){ var FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_secon__=(FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_princ__*FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_secon_)/FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_princ_;} else { var FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_secon__=FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_secon_;}
    }



    if(Math.abs(FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_princ)/Math.abs(FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_princ)>=Math.abs(FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_secon)/Math.abs(FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_secon))
    { if(FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_princ > 0 && FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_princ <0 ){ var FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_secon__=(FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_princ_*FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_secon_)/FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_princ_;} else { var FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_secon__=FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_secon_;}
        if(FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_secon > 0 && FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_secon <0 ){ var FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_princ__=(FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_secon__*FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_princ_)/FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_secon_;} else { var FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_princ__=FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_princ_;}}
    else
    {if(FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_secon > 0 && FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_secon <0 ){ var FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_princ__=(FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_secon_*FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_princ_)/FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_secon_;} else { var FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_princ__=FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_princ_;}
        if(FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_princ > 0 && FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_princ <0 ){ var FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_secon__=(FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_princ__*FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_secon_)/FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_princ_;} else { var FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_secon__=FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_secon_;}
    }



    var GRAFICO_FSE_RESULT_MENSAL_COMP_040=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_040').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_040=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_040, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label: 'Transp. Merc.(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   data: [
                       FSE_TRANSPORT_MERCAD_ANO_N_JANEIRO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_FEVEREIRO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_MARCO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_ABRIL_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_MAIO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_JUNHO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_JULHO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_AGOSTO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_SETEMBRO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_OUTUBRO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_NOVEMBRO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_DEZEMBRO_ACUM,
                   ],
                   type: 'line'


               },
                              {
                                  label: 'Transp. Merc.(ac) ' + ANO_VERSAO_ANTE_,
                                  yAxisID: 'A',
                                  //backgroundColor: 'rgb(201, 10, 10)',
                                  borderColor: 'rgb(0,221,0)',
                                  data: [
                       FSE_TRANSPORT_MERCAD_ANO_N_1_JANEIRO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_1_MARCO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_1_ABRIL_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_1_MAIO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_1_JUNHO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_1_JULHO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_1_AGOSTO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_1_SETEMBRO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_1_OUTUBRO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_TRANSPORT_MERCAD_ANO_N_1_DEZEMBRO_ACUM,
                                  ],
                                  type: 'line'


                              },
                {
                    label:  'Transp. Merc.(m) ' + ANO_VERSAO_REAL_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(250 , 83 , 0, 0.5)',
                    borderColor: 'rgba(250 , 83 , 0, 0.5)',
                    data: [
                  FSE_TRANSPORT_MERCAD_ANO_N_JANEIRO ,
                  FSE_TRANSPORT_MERCAD_ANO_N_FEVEREIRO ,
                  FSE_TRANSPORT_MERCAD_ANO_N_MARCO ,
                  FSE_TRANSPORT_MERCAD_ANO_N_ABRIL,
                  FSE_TRANSPORT_MERCAD_ANO_N_MAIO ,
                  FSE_TRANSPORT_MERCAD_ANO_N_JUNHO ,
                  FSE_TRANSPORT_MERCAD_ANO_N_JULHO ,
                  FSE_TRANSPORT_MERCAD_ANO_N_AGOSTO ,
                  FSE_TRANSPORT_MERCAD_ANO_N_SETEMBRO ,
                  FSE_TRANSPORT_MERCAD_ANO_N_OUTUBRO ,
                  FSE_TRANSPORT_MERCAD_ANO_N_NOVEMBRO ,
                  FSE_TRANSPORT_MERCAD_ANO_N_DEZEMBRO ,
                    ],
                },
                {
                    label:  'Transp. Merc.(m) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(0,221,0, 0.4)',
                    borderColor: 'rgba(0,221,0, 0.4)',
                    data: [
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_JANEIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_FEVEREIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_MARCO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_ABRIL"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_MAIO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_JUNHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_JULHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_AGOSTO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_SETEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_OUTUBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_NOVEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANO_N_1_DEZEMBRO"]))),
                    ],
                },


            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_TRANSPORT_MERCAD_MENSAL_1',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                min:  Math.round(FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_princ__,0),
                                                max:  Math.round(FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString();
                                                }
                                            }
                                        },

                    { id: 'B',
                        type: 'linear',
                        position: 'right',
                        ticks: {
                            min: Math.round(FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_secon__,0),
                            max:  Math.round(FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_secon__,0),
                            beginAtZero: false,
                            callback: function(value, index, values) {
                                return value.toLocaleString();
                            }
                        }
                    },






                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_041-----------------------------------------------------------*@
<script>

    var IND_VN_ANO_N_JANEIRO_ACUM = IND_VN_ANO_N_JANEIRO;
    var IND_VN_ANO_N_FEVEREIRO_ACUM = IND_VN_ANO_N_FEVEREIRO + IND_VN_ANO_N_JANEIRO_ACUM;
    var IND_VN_ANO_N_MARCO_ACUM = IND_VN_ANO_N_MARCO + IND_VN_ANO_N_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_ABRIL_ACUM = IND_VN_ANO_N_ABRIL + IND_VN_ANO_N_MARCO_ACUM;
    var IND_VN_ANO_N_MAIO_ACUM = IND_VN_ANO_N_MAIO + IND_VN_ANO_N_ABRIL_ACUM;
    var IND_VN_ANO_N_JUNHO_ACUM = IND_VN_ANO_N_JUNHO + IND_VN_ANO_N_MAIO_ACUM;
    var IND_VN_ANO_N_JULHO_ACUM = IND_VN_ANO_N_JULHO + IND_VN_ANO_N_JUNHO_ACUM;
    var IND_VN_ANO_N_AGOSTO_ACUM = IND_VN_ANO_N_AGOSTO + IND_VN_ANO_N_JULHO_ACUM;
    var IND_VN_ANO_N_SETEMBRO_ACUM = IND_VN_ANO_N_SETEMBRO + IND_VN_ANO_N_AGOSTO_ACUM;
    var IND_VN_ANO_N_OUTUBRO_ACUM = IND_VN_ANO_N_OUTUBRO + IND_VN_ANO_N_SETEMBRO_ACUM;
    var IND_VN_ANO_N_NOVEMBRO_ACUM = IND_VN_ANO_N_NOVEMBRO + IND_VN_ANO_N_OUTUBRO_ACUM;
    var IND_VN_ANO_N_DEZEMBRO_ACUM = IND_VN_ANO_N_DEZEMBRO + IND_VN_ANO_N_NOVEMBRO_ACUM;



    var IND_VN_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JANEIRO"])));
    var IND_VN_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_FEVEREIRO"]))) + IND_VN_ANO_N_1_JANEIRO_ACUM;
    var IND_VN_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MARCO"]))) + IND_VN_ANO_N_1_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_ABRIL"]))) + IND_VN_ANO_N_1_MARCO_ACUM;
    var IND_VN_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MAIO"]))) + IND_VN_ANO_N_1_ABRIL_ACUM;
    var IND_VN_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JUNHO"]))) + IND_VN_ANO_N_1_MAIO_ACUM;
    var IND_VN_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JULHO"]))) + IND_VN_ANO_N_1_JUNHO_ACUM;
    var IND_VN_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_AGOSTO"]))) + IND_VN_ANO_N_1_JULHO_ACUM;
    var IND_VN_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_SETEMBRO"]))) + IND_VN_ANO_N_1_AGOSTO_ACUM;
    var IND_VN_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_OUTUBRO"]))) + IND_VN_ANO_N_1_SETEMBRO_ACUM;
    var IND_VN_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_NOVEMBRO"]))) + IND_VN_ANO_N_1_OUTUBRO_ACUM;
    var IND_VN_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_DEZEMBRO"]))) + IND_VN_ANO_N_1_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_JANEIRO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_JANEIRO_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_JANEIRO_ACUM/IND_VN_ANO_N_JANEIRO_ACUM*100; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_FEVEREIRO_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_FEVEREIRO_ACUM/IND_VN_ANO_N_FEVEREIRO_ACUM*100; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_MARCO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_MARCO_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_MARCO_ACUM/IND_VN_ANO_N_MARCO_ACUM*100; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_MARCO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_ABRIL_ACUM = 'nd'; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_ABRIL_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_ABRIL_ACUM/IND_VN_ANO_N_ABRIL_ACUM*100; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_ABRIL_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_MAIO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_MAIO_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_MAIO_ACUM/IND_VN_ANO_N_MAIO_ACUM*100; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_MAIO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_JUNHO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_JUNHO_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_JUNHO_ACUM/IND_VN_ANO_N_JUNHO_ACUM*100; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_JUNHO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_JULHO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_JULHO_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_JULHO_ACUM/IND_VN_ANO_N_JULHO_ACUM*100; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_JULHO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_AGOSTO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_AGOSTO_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_AGOSTO_ACUM/IND_VN_ANO_N_AGOSTO_ACUM*100; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_SETEMBRO_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_SETEMBRO_ACUM/IND_VN_ANO_N_SETEMBRO_ACUM*100; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_OUTUBRO_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_OUTUBRO_ACUM/IND_VN_ANO_N_OUTUBRO_ACUM*100; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_NOVEMBRO_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_NOVEMBRO_ACUM/IND_VN_ANO_N_NOVEMBRO_ACUM*100; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_DEZEMBRO_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_DEZEMBRO_ACUM/IND_VN_ANO_N_DEZEMBRO_ACUM*100; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_JANEIRO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_JANEIRO_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_1_JANEIRO_ACUM/IND_VN_ANO_N_1_JANEIRO_ACUM*100; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_FEVEREIRO_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_1_FEVEREIRO_ACUM/IND_VN_ANO_N_1_FEVEREIRO_ACUM*100; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_MARCO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_MARCO_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_1_MARCO_ACUM/IND_VN_ANO_N_1_MARCO_ACUM*100; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_ABRIL_ACUM = 'nd'; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_ABRIL_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_1_ABRIL_ACUM/IND_VN_ANO_N_1_ABRIL_ACUM*100; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_MAIO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_MAIO_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_1_MAIO_ACUM/IND_VN_ANO_N_1_MAIO_ACUM*100; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_JUNHO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_JUNHO_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_1_JUNHO_ACUM/IND_VN_ANO_N_1_JUNHO_ACUM*100; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_JULHO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_JULHO_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_1_JULHO_ACUM/IND_VN_ANO_N_1_JULHO_ACUM*100; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_AGOSTO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_AGOSTO_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_1_AGOSTO_ACUM/IND_VN_ANO_N_1_AGOSTO_ACUM*100; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_SETEMBRO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_SETEMBRO_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_1_SETEMBRO_ACUM/IND_VN_ANO_N_1_SETEMBRO_ACUM*100; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_OUTUBRO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_OUTUBRO_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_1_OUTUBRO_ACUM/IND_VN_ANO_N_1_OUTUBRO_ACUM*100; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_NOVEMBRO_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_1_NOVEMBRO_ACUM/IND_VN_ANO_N_1_NOVEMBRO_ACUM*100; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_DEZEMBRO_ACUM= FSE_TRANSPORT_MERCAD_ANO_N_1_DEZEMBRO_ACUM/IND_VN_ANO_N_1_DEZEMBRO_ACUM*100; var PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_VN_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JANEIRO_ACUM= ((IND_VN_ANO_N_JANEIRO_ACUM-IND_VN_ANO_N_1_JANEIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_JANEIRO_ACUM))*100; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_FEVEREIRO_ACUM= ((IND_VN_ANO_N_FEVEREIRO_ACUM-IND_VN_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_VN_ANO_N_MARCO_ACUM = 'nd'; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MARCO_ACUM= ((IND_VN_ANO_N_MARCO_ACUM-IND_VN_ANO_N_1_MARCO_ACUM)/Math.abs(IND_VN_ANO_N_1_MARCO_ACUM))*100; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = VAR_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_VN_ANO_N_ABRIL_ACUM = 'nd'; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_ABRIL_ACUM= ((IND_VN_ANO_N_ABRIL_ACUM-IND_VN_ANO_N_1_ABRIL_ACUM)/Math.abs(IND_VN_ANO_N_1_ABRIL_ACUM))*100; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_VN_ANO_N_MAIO_ACUM = 'nd'; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MAIO_ACUM= ((IND_VN_ANO_N_MAIO_ACUM-IND_VN_ANO_N_1_MAIO_ACUM)/Math.abs(IND_VN_ANO_N_1_MAIO_ACUM))*100; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = VAR_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_VN_ANO_N_JUNHO_ACUM = 'nd'; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JUNHO_ACUM= ((IND_VN_ANO_N_JUNHO_ACUM-IND_VN_ANO_N_1_JUNHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JUNHO_ACUM))*100; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_VN_ANO_N_JULHO_ACUM = 'nd'; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JULHO_ACUM= ((IND_VN_ANO_N_JULHO_ACUM-IND_VN_ANO_N_1_JULHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JULHO_ACUM))*100; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_VN_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_AGOSTO_ACUM= ((IND_VN_ANO_N_AGOSTO_ACUM-IND_VN_ANO_N_1_AGOSTO_ACUM)/Math.abs(IND_VN_ANO_N_1_AGOSTO_ACUM))*100; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_SETEMBRO_ACUM= ((IND_VN_ANO_N_SETEMBRO_ACUM-IND_VN_ANO_N_1_SETEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_OUTUBRO_ACUM= ((IND_VN_ANO_N_OUTUBRO_ACUM-IND_VN_ANO_N_1_OUTUBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_NOVEMBRO_ACUM= ((IND_VN_ANO_N_NOVEMBRO_ACUM-IND_VN_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_DEZEMBRO_ACUM= ((IND_VN_ANO_N_DEZEMBRO_ACUM-IND_VN_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_FSE_TRANSPORT_MERCAD_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_FSE_TRANSPORT_MERCAD_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRANSPORT_MERCAD_ANO_N_JANEIRO_ACUM= ((FSE_TRANSPORT_MERCAD_ANO_N_JANEIRO_ACUM-FSE_TRANSPORT_MERCAD_ANO_N_1_JANEIRO_ACUM)/Math.abs(FSE_TRANSPORT_MERCAD_ANO_N_1_JANEIRO_ACUM))*100; var VAR_FSE_TRANSPORT_MERCAD_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_FSE_TRANSPORT_MERCAD_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_FSE_TRANSPORT_MERCAD_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_FSE_TRANSPORT_MERCAD_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRANSPORT_MERCAD_ANO_N_FEVEREIRO_ACUM= ((FSE_TRANSPORT_MERCAD_ANO_N_FEVEREIRO_ACUM-FSE_TRANSPORT_MERCAD_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(FSE_TRANSPORT_MERCAD_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_FSE_TRANSPORT_MERCAD_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_FSE_TRANSPORT_MERCAD_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_FSE_TRANSPORT_MERCAD_ANO_N_MARCO_ACUM = 'nd'; var VAR_FSE_TRANSPORT_MERCAD_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRANSPORT_MERCAD_ANO_N_MARCO_ACUM= ((FSE_TRANSPORT_MERCAD_ANO_N_MARCO_ACUM-FSE_TRANSPORT_MERCAD_ANO_N_1_MARCO_ACUM)/Math.abs(FSE_TRANSPORT_MERCAD_ANO_N_1_MARCO_ACUM))*100; var VAR_FSE_TRANSPORT_MERCAD_ANO_N_MARCO_ACUM_MAX_MIN = VAR_FSE_TRANSPORT_MERCAD_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_FSE_TRANSPORT_MERCAD_ANO_N_ABRIL_ACUM = 'nd'; var VAR_FSE_TRANSPORT_MERCAD_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRANSPORT_MERCAD_ANO_N_ABRIL_ACUM= ((FSE_TRANSPORT_MERCAD_ANO_N_ABRIL_ACUM-FSE_TRANSPORT_MERCAD_ANO_N_1_ABRIL_ACUM)/Math.abs(FSE_TRANSPORT_MERCAD_ANO_N_1_ABRIL_ACUM))*100; var VAR_FSE_TRANSPORT_MERCAD_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_FSE_TRANSPORT_MERCAD_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_FSE_TRANSPORT_MERCAD_ANO_N_MAIO_ACUM = 'nd'; var VAR_FSE_TRANSPORT_MERCAD_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRANSPORT_MERCAD_ANO_N_MAIO_ACUM= ((FSE_TRANSPORT_MERCAD_ANO_N_MAIO_ACUM-FSE_TRANSPORT_MERCAD_ANO_N_1_MAIO_ACUM)/Math.abs(FSE_TRANSPORT_MERCAD_ANO_N_1_MAIO_ACUM))*100; var VAR_FSE_TRANSPORT_MERCAD_ANO_N_MAIO_ACUM_MAX_MIN = VAR_FSE_TRANSPORT_MERCAD_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_FSE_TRANSPORT_MERCAD_ANO_N_JUNHO_ACUM = 'nd'; var VAR_FSE_TRANSPORT_MERCAD_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRANSPORT_MERCAD_ANO_N_JUNHO_ACUM= ((FSE_TRANSPORT_MERCAD_ANO_N_JUNHO_ACUM-FSE_TRANSPORT_MERCAD_ANO_N_1_JUNHO_ACUM)/Math.abs(FSE_TRANSPORT_MERCAD_ANO_N_1_JUNHO_ACUM))*100; var VAR_FSE_TRANSPORT_MERCAD_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_FSE_TRANSPORT_MERCAD_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_FSE_TRANSPORT_MERCAD_ANO_N_JULHO_ACUM = 'nd'; var VAR_FSE_TRANSPORT_MERCAD_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRANSPORT_MERCAD_ANO_N_JULHO_ACUM= ((FSE_TRANSPORT_MERCAD_ANO_N_JULHO_ACUM-FSE_TRANSPORT_MERCAD_ANO_N_1_JULHO_ACUM)/Math.abs(FSE_TRANSPORT_MERCAD_ANO_N_1_JULHO_ACUM))*100; var VAR_FSE_TRANSPORT_MERCAD_ANO_N_JULHO_ACUM_MAX_MIN = VAR_FSE_TRANSPORT_MERCAD_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_FSE_TRANSPORT_MERCAD_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_FSE_TRANSPORT_MERCAD_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRANSPORT_MERCAD_ANO_N_AGOSTO_ACUM= ((FSE_TRANSPORT_MERCAD_ANO_N_AGOSTO_ACUM-FSE_TRANSPORT_MERCAD_ANO_N_1_AGOSTO_ACUM)/Math.abs(FSE_TRANSPORT_MERCAD_ANO_N_1_AGOSTO_ACUM))*100; var VAR_FSE_TRANSPORT_MERCAD_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_FSE_TRANSPORT_MERCAD_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_FSE_TRANSPORT_MERCAD_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_FSE_TRANSPORT_MERCAD_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRANSPORT_MERCAD_ANO_N_SETEMBRO_ACUM= ((FSE_TRANSPORT_MERCAD_ANO_N_SETEMBRO_ACUM-FSE_TRANSPORT_MERCAD_ANO_N_1_SETEMBRO_ACUM)/Math.abs(FSE_TRANSPORT_MERCAD_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_FSE_TRANSPORT_MERCAD_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_FSE_TRANSPORT_MERCAD_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_FSE_TRANSPORT_MERCAD_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_FSE_TRANSPORT_MERCAD_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRANSPORT_MERCAD_ANO_N_OUTUBRO_ACUM= ((FSE_TRANSPORT_MERCAD_ANO_N_OUTUBRO_ACUM-FSE_TRANSPORT_MERCAD_ANO_N_1_OUTUBRO_ACUM)/Math.abs(FSE_TRANSPORT_MERCAD_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_FSE_TRANSPORT_MERCAD_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_FSE_TRANSPORT_MERCAD_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_FSE_TRANSPORT_MERCAD_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_FSE_TRANSPORT_MERCAD_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRANSPORT_MERCAD_ANO_N_NOVEMBRO_ACUM= ((FSE_TRANSPORT_MERCAD_ANO_N_NOVEMBRO_ACUM-FSE_TRANSPORT_MERCAD_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(FSE_TRANSPORT_MERCAD_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_FSE_TRANSPORT_MERCAD_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_FSE_TRANSPORT_MERCAD_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_FSE_TRANSPORT_MERCAD_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_FSE_TRANSPORT_MERCAD_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRANSPORT_MERCAD_ANO_N_DEZEMBRO_ACUM= ((FSE_TRANSPORT_MERCAD_ANO_N_DEZEMBRO_ACUM-FSE_TRANSPORT_MERCAD_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(FSE_TRANSPORT_MERCAD_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_FSE_TRANSPORT_MERCAD_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_FSE_TRANSPORT_MERCAD_ANO_N_DEZEMBRO_ACUM };

    if( PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_JANEIRO_ACUM > PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_JANEIRO_ACUM) { var  INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_JANEIRO_ACUM=PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_JANEIRO_ACUM ; } else { var  INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_JANEIRO_ACUM=PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_JANEIRO_ACUM ; }
    if( PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_FEVEREIRO_ACUM > PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_FEVEREIRO_ACUM) { var  INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_FEVEREIRO_ACUM=PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_FEVEREIRO_ACUM ; } else { var  INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_FEVEREIRO_ACUM=PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_FEVEREIRO_ACUM ; }
    if( PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_MARCO_ACUM > PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_MARCO_ACUM) { var  INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_MARCO_ACUM=PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_MARCO_ACUM ; } else { var  INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_MARCO_ACUM=PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_MARCO_ACUM ; }
    if( PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_ABRIL_ACUM > PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_ABRIL_ACUM) { var  INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_ABRIL_ACUM=PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_ABRIL_ACUM ; } else { var  INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_ABRIL_ACUM=PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_ABRIL_ACUM ; }
    if( PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_MAIO_ACUM > PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_MAIO_ACUM) { var  INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_MAIO_ACUM=PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_MAIO_ACUM ; } else { var  INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_MAIO_ACUM=PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_MAIO_ACUM ; }
    if( PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_JUNHO_ACUM > PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_JUNHO_ACUM) { var  INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_JUNHO_ACUM=PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_JUNHO_ACUM ; } else { var  INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_JUNHO_ACUM=PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_JUNHO_ACUM ; }
    if( PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_JULHO_ACUM > PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_JULHO_ACUM) { var  INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_JULHO_ACUM=PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_JULHO_ACUM ; } else { var  INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_JULHO_ACUM=PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_JULHO_ACUM ; }
    if( PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_AGOSTO_ACUM > PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_AGOSTO_ACUM) { var  INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_AGOSTO_ACUM=PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_AGOSTO_ACUM ; } else { var  INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_AGOSTO_ACUM=PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_AGOSTO_ACUM ; }
    if( PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_SETEMBRO_ACUM > PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_SETEMBRO_ACUM) { var  INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_SETEMBRO_ACUM=PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_SETEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_SETEMBRO_ACUM=PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_SETEMBRO_ACUM ; }
    if( PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_OUTUBRO_ACUM > PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_OUTUBRO_ACUM) { var  INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_OUTUBRO_ACUM=PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_OUTUBRO_ACUM ; } else { var  INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_OUTUBRO_ACUM=PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_OUTUBRO_ACUM ; }
    if( PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_NOVEMBRO_ACUM > PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_NOVEMBRO_ACUM) { var  INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_NOVEMBRO_ACUM=PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_NOVEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_NOVEMBRO_ACUM=PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_NOVEMBRO_ACUM ; }
    if( PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_DEZEMBRO_ACUM > PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_DEZEMBRO_ACUM) { var  INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_DEZEMBRO_ACUM=PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_DEZEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_DEZEMBRO_ACUM=PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_DEZEMBRO_ACUM ; }



    var fillBetweenLinesPlugin = {
        afterDatasetsDraw: function (chart) {
            var ctx = chart.chart.ctx;
            var xaxis = chart.scales['x-axis-0'];
            var yaxis = chart.scales['y-axis-0'];
            var datasets = chart.data.datasets;
            ctx.save();

            for (var d = 0; d < datasets.length; d++) {
                var dataset = datasets[d];
                if (dataset.fillBetweenSet == undefined) {
                    continue;
                }

                // get meta for both data sets
                var meta1 = chart.getDatasetMeta(d);
                var meta2 = chart.getDatasetMeta(dataset.fillBetweenSet);

                // do not draw fill if one of the datasets is hidden
                if (meta1.hidden || meta2.hidden) continue;

                // create fill areas in pairs
                for (var p = 0; p < meta1.data.length-1;p++) {
                    // if null skip
                    if (dataset.data[p] == null || dataset.data[p+1] == null) continue;

                    ctx.beginPath();

                    // trace line 1
                    var curr = meta1.data[p];
                    var next = meta1.data[p+1];
                    ctx.moveTo(curr._view.x, curr._view.y);
                    ctx.lineTo(curr._view.x, curr._view.y);
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(next._view.x, curr._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        ctx.bezierCurveTo(
                          curr._view.controlPointNextX,
                          curr._view.controlPointNextY,
                          next._view.controlPointPreviousX,
                          next._view.controlPointPreviousY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // connect dataset1 to dataset2
                    var curr = meta2.data[p+1];
                    var next = meta2.data[p];
                    ctx.lineTo(curr._view.x, curr._view.y);

                    // trace BACKWORDS set2 to complete the box
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(curr._view.x, next._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        // reverse bezier
                        ctx.bezierCurveTo(
                          curr._view.controlPointPreviousX,
                          curr._view.controlPointPreviousY,
                          next._view.controlPointNextX,
                          next._view.controlPointNextY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // close the loop and fill with shading
                    ctx.closePath();
                    ctx.fillStyle = dataset.fillBetweenColor || "rgba(0,0,0,0.1)";
                    ctx.fill();
                } // end for p loop
            }
        } // end afterDatasetsDraw
    }; // end fillBetweenLinesPlugin

    Chart.pluginService.register(fillBetweenLinesPlugin);



    var GRAFICO_FSE_RESULT_MENSAL_COMP_041=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_041').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_041=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_041, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label:  'Peso Transp. Merc.vsVN(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   //borderColor: "#F00",
                   fill: false,
                   steppedLine: false,
                   tension: 0.5,
                   fillBetweenSet: 1,
                   fillBetweenColor: "rgba(0, 221, 0, 0.1)",
                   data: [
                   PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_JANEIRO_ACUM,
                   PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_FEVEREIRO_ACUM,
                   PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_MARCO_ACUM,
                   PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_ABRIL_ACUM,
                   PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_MAIO_ACUM,
                   PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_JUNHO_ACUM,
                   PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_JULHO_ACUM,
                   PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_AGOSTO_ACUM,
                   PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_SETEMBRO_ACUM,
                   PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_OUTUBRO_ACUM,
                   PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_NOVEMBRO_ACUM,
                   PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_DEZEMBRO_ACUM,

                   ],
                   type: 'line'


               },
                {
                    label: 'Peso Transp. Merc.vsVN(ac) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'A',
                    //backgroundColor: 'rgb(17, 121, 240)',
                    borderColor: 'rgb(0,221,0)',
                    //borderColor: "#00F",
                    fill: false,
                    steppedLine: false,
                    tension: 0.5,
                    data: [
                   PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_JANEIRO_ACUM,
                   PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_FEVEREIRO_ACUM,
                   PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_MARCO_ACUM,
                   PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_ABRIL_ACUM,
                   PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_MAIO_ACUM,
                   PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_JUNHO_ACUM,
                   PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_JULHO_ACUM,
                   PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_AGOSTO_ACUM,
                   PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_SETEMBRO_ACUM,
                   PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_OUTUBRO_ACUM,
                   PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_NOVEMBRO_ACUM,
                   PESO_FSE_TRANSPORT_MERCAD_VN_ANO_N_1_DEZEMBRO_ACUM,
                    ],
                    type: 'line'
                },
    {
        label: 'Ineficiência',
        yAxisID: 'A',
        backgroundColor: "rgba(255, 0, 0, 0.2)",
        borderColor: 'rgba(255, 255, 255, 0.1)',
        //borderColor: "#0D0",
        fill: false,
        steppedLine: false,
        tension: 0.5,
        fillBetweenSet: 1,
        fillBetweenColor: "rgba(255, 0, 0, 0.2)",
        data: [
    INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_JANEIRO_ACUM,
    INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_FEVEREIRO_ACUM,
    INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_MARCO_ACUM,
    INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_ABRIL_ACUM,
    INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_MAIO_ACUM,
    INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_JUNHO_ACUM,
    INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_JULHO_ACUM,
    INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_AGOSTO_ACUM,
    INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_SETEMBRO_ACUM,
    INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_OUTUBRO_ACUM,
    INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_NOVEMBRO_ACUM,
    INEFICIENCIA_FSE_TRANSPORT_MERCAD_ANO_N_DEZEMBRO_ACUM,
        ],
        type: 'line'
    },

            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_TRANSPORT_MERCAD COMP',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                //min:  Math.round(FSE_TRANSPORT_MERCAD_Mensal_Eixo_min_princ__,0),
                                                //max:  Math.round(FSE_TRANSPORT_MERCAD_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString()+ "%";
                                                }
                                            }
                                        },







                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_042-----------------------------------------------------------*@
<script>

    if(@ViewData["MES_ACUM_REAL"]<1){ var IND_VN_ANO_N_JANEIRO = 'nd'; var IND_VN_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JANEIRO"]))); var IND_VN_ANO_N_JANEIRO_MAX_MIN = IND_VN_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var IND_VN_ANO_N_FEVEREIRO = 'nd'; var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_FEVEREIRO"]))); var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = IND_VN_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var IND_VN_ANO_N_MARCO = 'nd'; var IND_VN_ANO_N_MARCO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MARCO"]))); var IND_VN_ANO_N_MARCO_MAX_MIN = IND_VN_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var IND_VN_ANO_N_ABRIL = 'nd'; var IND_VN_ANO_N_ABRIL_MAX_MIN = 0;  } else { var IND_VN_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_ABRIL"]))); var IND_VN_ANO_N_ABRIL_MAX_MIN = IND_VN_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var IND_VN_ANO_N_MAIO = 'nd'; var IND_VN_ANO_N_MAIO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MAIO"]))); var IND_VN_ANO_N_MAIO_MAX_MIN = IND_VN_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var IND_VN_ANO_N_JUNHO = 'nd'; var IND_VN_ANO_N_JUNHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JUNHO"]))); var IND_VN_ANO_N_JUNHO_MAX_MIN = IND_VN_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var IND_VN_ANO_N_JULHO = 'nd'; var IND_VN_ANO_N_JULHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JULHO"]))); var IND_VN_ANO_N_JULHO_MAX_MIN = IND_VN_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var IND_VN_ANO_N_AGOSTO = 'nd'; var IND_VN_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_AGOSTO"]))); var IND_VN_ANO_N_AGOSTO_MAX_MIN = IND_VN_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var IND_VN_ANO_N_SETEMBRO = 'nd'; var IND_VN_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_SETEMBRO"]))); var IND_VN_ANO_N_SETEMBRO_MAX_MIN = IND_VN_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var IND_VN_ANO_N_OUTUBRO = 'nd'; var IND_VN_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_OUTUBRO"]))); var IND_VN_ANO_N_OUTUBRO_MAX_MIN = IND_VN_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var IND_VN_ANO_N_NOVEMBRO = 'nd'; var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_NOVEMBRO"]))); var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = IND_VN_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var IND_VN_ANO_N_DEZEMBRO = 'nd'; var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_DEZEMBRO"]))); var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = IND_VN_ANO_N_DEZEMBRO };

    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JANEIRO = 'nd'; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JANEIRO"]))); var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JANEIRO_MAX_MIN = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_FEVEREIRO = 'nd'; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_FEVEREIRO"]))); var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_FEVEREIRO_MAX_MIN = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MARCO = 'nd'; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MARCO_MAX_MIN = 0;  } else { var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MARCO"]))); var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MARCO_MAX_MIN = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_ABRIL = 'nd'; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_ABRIL_MAX_MIN = 0;  } else { var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_ABRIL"]))); var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_ABRIL_MAX_MIN = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MAIO = 'nd'; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MAIO_MAX_MIN = 0;  } else { var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MAIO"]))); var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MAIO_MAX_MIN = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JUNHO = 'nd'; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JUNHO_MAX_MIN = 0;  } else { var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JUNHO"]))); var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JUNHO_MAX_MIN = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JULHO = 'nd'; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JULHO_MAX_MIN = 0;  } else { var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JULHO"]))); var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JULHO_MAX_MIN = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_AGOSTO = 'nd'; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_AGOSTO"]))); var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_AGOSTO_MAX_MIN = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_SETEMBRO = 'nd'; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_SETEMBRO"]))); var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_SETEMBRO_MAX_MIN = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_OUTUBRO = 'nd'; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_OUTUBRO"]))); var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_OUTUBRO_MAX_MIN = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_NOVEMBRO = 'nd'; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_NOVEMBRO"]))); var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_NOVEMBRO_MAX_MIN = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_DEZEMBRO = 'nd'; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_DEZEMBRO"]))); var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_DEZEMBRO_MAX_MIN = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_DEZEMBRO };


    var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JANEIRO_ACUM = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JANEIRO;
    var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_FEVEREIRO_ACUM = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_FEVEREIRO + FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JANEIRO_ACUM;
    var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MARCO_ACUM = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MARCO + FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_FEVEREIRO_ACUM;
    var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_ABRIL_ACUM = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_ABRIL + FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MARCO_ACUM;
    var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MAIO_ACUM = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MAIO + FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_ABRIL_ACUM;
    var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JUNHO_ACUM = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JUNHO + FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MAIO_ACUM;
    var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JULHO_ACUM = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JULHO + FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JUNHO_ACUM;
    var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_AGOSTO_ACUM = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_AGOSTO + FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JULHO_ACUM;
    var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_SETEMBRO_ACUM = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_SETEMBRO + FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_AGOSTO_ACUM;
    var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_OUTUBRO_ACUM = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_OUTUBRO + FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_SETEMBRO_ACUM;
    var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_NOVEMBRO_ACUM = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_NOVEMBRO + FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_OUTUBRO_ACUM;
    var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_DEZEMBRO_ACUM = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_DEZEMBRO + FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JANEIRO_ACUM = 'nd'; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JANEIRO_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JANEIRO_ACUM; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JANEIRO_ACUM_MAX_MIN = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_FEVEREIRO_ACUM = 'nd'; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_FEVEREIRO_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_FEVEREIRO_ACUM; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_FEVEREIRO_ACUM_MAX_MIN = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MARCO_ACUM = 'nd'; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MARCO_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MARCO_ACUM; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MARCO_ACUM_MAX_MIN = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_ABRIL_ACUM = 'nd'; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_ABRIL_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_ABRIL_ACUM; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_ABRIL_ACUM_MAX_MIN = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MAIO_ACUM = 'nd'; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MAIO_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MAIO_ACUM; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MAIO_ACUM_MAX_MIN = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JUNHO_ACUM = 'nd'; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JUNHO_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JUNHO_ACUM; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JUNHO_ACUM_MAX_MIN = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JULHO_ACUM = 'nd'; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JULHO_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JULHO_ACUM; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JULHO_ACUM_MAX_MIN = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_AGOSTO_ACUM = 'nd'; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_AGOSTO_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_AGOSTO_ACUM; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_AGOSTO_ACUM_MAX_MIN = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_SETEMBRO_ACUM = 'nd'; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_SETEMBRO_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_SETEMBRO_ACUM; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_SETEMBRO_ACUM_MAX_MIN = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_OUTUBRO_ACUM = 'nd'; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_OUTUBRO_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_OUTUBRO_ACUM; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_OUTUBRO_ACUM_MAX_MIN = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_NOVEMBRO_ACUM = 'nd'; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_NOVEMBRO_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_NOVEMBRO_ACUM; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_NOVEMBRO_ACUM_MAX_MIN = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_DEZEMBRO_ACUM = 'nd'; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_DEZEMBRO_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_DEZEMBRO_ACUM; var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_DEZEMBRO_ACUM_MAX_MIN = FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_DEZEMBRO_ACUM };




    var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JANEIRO"])));
    var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_FEVEREIRO"]))) + FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JANEIRO_ACUM;
    var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_MARCO"]))) + FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_FEVEREIRO_ACUM;
    var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_ABRIL"]))) + FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_MARCO_ACUM;
    var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_MAIO"]))) + FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_ABRIL_ACUM;
    var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JUNHO"]))) + FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_MAIO_ACUM;
    var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JULHO"]))) + FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JUNHO_ACUM;
    var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_AGOSTO"]))) + FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JULHO_ACUM;
    var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_SETEMBRO"]))) + FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_AGOSTO_ACUM;
    var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_OUTUBRO"]))) + FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_SETEMBRO_ACUM;
    var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_NOVEMBRO"]))) + FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_OUTUBRO_ACUM;
    var FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_DEZEMBRO"]))) + FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_NOVEMBRO_ACUM;


    var FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_princ= Math.max(
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JANEIRO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_MARCO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_ABRIL_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_MAIO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JUNHO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JULHO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_AGOSTO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_SETEMBRO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_OUTUBRO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_DEZEMBRO_ACUM
                             );
    var FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_princ= Math.min(

                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JANEIRO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_MARCO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_ABRIL_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_MAIO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JUNHO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JULHO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_AGOSTO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_SETEMBRO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_OUTUBRO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_DEZEMBRO_ACUM
                           );
    var FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_secon= Math.max(
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MARCO_MAX_MIN ,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_ABRIL_MAX_MIN ,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MAIO_MAX_MIN ,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JUNHO_MAX_MIN ,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JULHO_MAX_MIN ,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_DEZEMBRO_MAX_MIN ,



                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_DEZEMBRO"])))

                            );
    var FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_secon= Math.min(
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MARCO_MAX_MIN ,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_ABRIL_MAX_MIN ,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MAIO_MAX_MIN ,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JUNHO_MAX_MIN ,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JULHO_MAX_MIN ,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_DEZEMBRO_MAX_MIN ,


                           @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_DEZEMBRO"])))

                          );

    //NOTA TA: Aqui trato o minimo e o maximo do eixo principal
    if(Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_princ)>=Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_princ))
    {
        var FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_princ_=(Math.ceil(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_princ),0).toString().length-1);
        var FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_princ_= (Math.floor(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_princ),0).toString().length-1);
        //alert(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_princ_);
        //alert(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_princ_);
    }
    else
    {
        var FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_princ_=(Math.ceil(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_princ),0).toString().length-1);
        var FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_princ_= (Math.floor(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_princ),0).toString().length-1);}

    //NOTA TA: Aqui trato o minimo e o maximo do eixo secundario

    if(Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_secon)>=Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_secon))
    {
        var FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_secon_=(Math.ceil(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_secon),0).toString().length-1);
        var FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_secon_= (Math.floor(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_secon),0).toString().length-1);
        //alert(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_secon_);
        //alert(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_secon_);
    }
    else
    {
        var FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_secon_=(Math.ceil(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_secon),0).toString().length-1);
        var FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_secon_= (Math.floor(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_secon),0).toString().length-1);}


    if(Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_princ)/Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_princ)>=Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_secon)/Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_secon))
    { if(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_princ > 0 && FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_princ <0 ){ var FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_secon__=(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_princ_*FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_secon_)/FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_princ_;} else { var FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_secon__=FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_secon_;}
        if(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_secon > 0 && FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_secon <0 ){ var FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_princ__=(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_secon__*FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_princ_)/FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_secon_;} else { var FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_princ__=FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_princ_;}}
    else
    {if(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_secon > 0 && FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_secon <0 ){ var FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_princ__=(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_secon_*FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_princ_)/FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_secon_;} else { var FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_princ__=FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_princ_;}
        if(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_princ > 0 && FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_princ <0 ){ var FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_secon__=(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_princ__*FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_secon_)/FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_princ_;} else { var FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_secon__=FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_secon_;}
    }



    if(Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_princ)/Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_princ)>=Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_secon)/Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_secon))
    { if(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_princ > 0 && FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_princ <0 ){ var FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_secon__=(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_princ_*FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_secon_)/FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_princ_;} else { var FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_secon__=FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_secon_;}
        if(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_secon > 0 && FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_secon <0 ){ var FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_princ__=(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_secon__*FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_princ_)/FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_secon_;} else { var FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_princ__=FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_princ_;}}
    else
    {if(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_secon > 0 && FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_secon <0 ){ var FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_princ__=(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_secon_*FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_princ_)/FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_secon_;} else { var FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_princ__=FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_princ_;}
        if(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_princ > 0 && FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_princ <0 ){ var FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_secon__=(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_princ__*FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_secon_)/FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_princ_;} else { var FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_secon__=FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_secon_;}
    }



    var GRAFICO_FSE_RESULT_MENSAL_COMP_042=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_042').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_042=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_042, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label: 'Outr. Desl. Estad.(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   data: [
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JANEIRO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_FEVEREIRO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MARCO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_ABRIL_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MAIO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JUNHO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JULHO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_AGOSTO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_SETEMBRO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_OUTUBRO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_NOVEMBRO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_DEZEMBRO_ACUM,
                   ],
                   type: 'line'


               },
                              {
                                  label: 'Outr. Desl. Estad.(ac) ' + ANO_VERSAO_ANTE_,
                                  yAxisID: 'A',
                                  //backgroundColor: 'rgb(201, 10, 10)',
                                  borderColor: 'rgb(0,221,0)',
                                  data: [
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JANEIRO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_MARCO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_ABRIL_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_MAIO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JUNHO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JULHO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_AGOSTO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_SETEMBRO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_OUTUBRO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_DEZEMBRO_ACUM,
                                  ],
                                  type: 'line'


                              },
                {
                    label:  'Outr. Desl. Estad.(m) ' + ANO_VERSAO_REAL_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(250 , 83 , 0, 0.5)',
                    borderColor: 'rgba(250 , 83 , 0, 0.5)',
                    data: [
                  FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JANEIRO ,
                  FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_FEVEREIRO ,
                  FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MARCO ,
                  FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_ABRIL,
                  FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MAIO ,
                  FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JUNHO ,
                  FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JULHO ,
                  FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_AGOSTO ,
                  FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_SETEMBRO ,
                  FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_OUTUBRO ,
                  FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_NOVEMBRO ,
                  FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_DEZEMBRO ,
                    ],
                },
                {
                    label:  'Outr. Desl. Estad.(m) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(0,221,0, 0.4)',
                    borderColor: 'rgba(0,221,0, 0.4)',
                    data: [
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JANEIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_FEVEREIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_MARCO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_ABRIL"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_MAIO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JUNHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JULHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_AGOSTO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_SETEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_OUTUBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_NOVEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_DEZEMBRO"]))),
                    ],
                },


            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_OUTROS_DESL_ESTAD_TRANSPORT_MENSAL_1',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                min:  Math.round(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_princ__,0),
                                                max:  Math.round(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString();
                                                }
                                            }
                                        },

                    { id: 'B',
                        type: 'linear',
                        position: 'right',
                        ticks: {
                            min: Math.round(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_secon__,0),
                            max:  Math.round(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_secon__,0),
                            beginAtZero: false,
                            callback: function(value, index, values) {
                                return value.toLocaleString();
                            }
                        }
                    },






                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_043-----------------------------------------------------------*@
<script>

    var IND_VN_ANO_N_JANEIRO_ACUM = IND_VN_ANO_N_JANEIRO;
    var IND_VN_ANO_N_FEVEREIRO_ACUM = IND_VN_ANO_N_FEVEREIRO + IND_VN_ANO_N_JANEIRO_ACUM;
    var IND_VN_ANO_N_MARCO_ACUM = IND_VN_ANO_N_MARCO + IND_VN_ANO_N_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_ABRIL_ACUM = IND_VN_ANO_N_ABRIL + IND_VN_ANO_N_MARCO_ACUM;
    var IND_VN_ANO_N_MAIO_ACUM = IND_VN_ANO_N_MAIO + IND_VN_ANO_N_ABRIL_ACUM;
    var IND_VN_ANO_N_JUNHO_ACUM = IND_VN_ANO_N_JUNHO + IND_VN_ANO_N_MAIO_ACUM;
    var IND_VN_ANO_N_JULHO_ACUM = IND_VN_ANO_N_JULHO + IND_VN_ANO_N_JUNHO_ACUM;
    var IND_VN_ANO_N_AGOSTO_ACUM = IND_VN_ANO_N_AGOSTO + IND_VN_ANO_N_JULHO_ACUM;
    var IND_VN_ANO_N_SETEMBRO_ACUM = IND_VN_ANO_N_SETEMBRO + IND_VN_ANO_N_AGOSTO_ACUM;
    var IND_VN_ANO_N_OUTUBRO_ACUM = IND_VN_ANO_N_OUTUBRO + IND_VN_ANO_N_SETEMBRO_ACUM;
    var IND_VN_ANO_N_NOVEMBRO_ACUM = IND_VN_ANO_N_NOVEMBRO + IND_VN_ANO_N_OUTUBRO_ACUM;
    var IND_VN_ANO_N_DEZEMBRO_ACUM = IND_VN_ANO_N_DEZEMBRO + IND_VN_ANO_N_NOVEMBRO_ACUM;



    var IND_VN_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JANEIRO"])));
    var IND_VN_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_FEVEREIRO"]))) + IND_VN_ANO_N_1_JANEIRO_ACUM;
    var IND_VN_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MARCO"]))) + IND_VN_ANO_N_1_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_ABRIL"]))) + IND_VN_ANO_N_1_MARCO_ACUM;
    var IND_VN_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MAIO"]))) + IND_VN_ANO_N_1_ABRIL_ACUM;
    var IND_VN_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JUNHO"]))) + IND_VN_ANO_N_1_MAIO_ACUM;
    var IND_VN_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JULHO"]))) + IND_VN_ANO_N_1_JUNHO_ACUM;
    var IND_VN_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_AGOSTO"]))) + IND_VN_ANO_N_1_JULHO_ACUM;
    var IND_VN_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_SETEMBRO"]))) + IND_VN_ANO_N_1_AGOSTO_ACUM;
    var IND_VN_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_OUTUBRO"]))) + IND_VN_ANO_N_1_SETEMBRO_ACUM;
    var IND_VN_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_NOVEMBRO"]))) + IND_VN_ANO_N_1_OUTUBRO_ACUM;
    var IND_VN_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_DEZEMBRO"]))) + IND_VN_ANO_N_1_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_JANEIRO_ACUM = 'nd'; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_JANEIRO_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JANEIRO_ACUM/IND_VN_ANO_N_JANEIRO_ACUM*100; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_FEVEREIRO_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_FEVEREIRO_ACUM/IND_VN_ANO_N_FEVEREIRO_ACUM*100; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_MARCO_ACUM = 'nd'; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_MARCO_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MARCO_ACUM/IND_VN_ANO_N_MARCO_ACUM*100; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_MARCO_ACUM_MAX_MIN = PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_ABRIL_ACUM = 'nd'; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_ABRIL_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_ABRIL_ACUM/IND_VN_ANO_N_ABRIL_ACUM*100; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_ABRIL_ACUM_MAX_MIN = PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_MAIO_ACUM = 'nd'; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_MAIO_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MAIO_ACUM/IND_VN_ANO_N_MAIO_ACUM*100; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_MAIO_ACUM_MAX_MIN = PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_JUNHO_ACUM = 'nd'; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_JUNHO_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JUNHO_ACUM/IND_VN_ANO_N_JUNHO_ACUM*100; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_JUNHO_ACUM_MAX_MIN = PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_JULHO_ACUM = 'nd'; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_JULHO_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JULHO_ACUM/IND_VN_ANO_N_JULHO_ACUM*100; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_JULHO_ACUM_MAX_MIN = PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_AGOSTO_ACUM = 'nd'; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_AGOSTO_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_AGOSTO_ACUM/IND_VN_ANO_N_AGOSTO_ACUM*100; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_SETEMBRO_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_SETEMBRO_ACUM/IND_VN_ANO_N_SETEMBRO_ACUM*100; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_OUTUBRO_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_OUTUBRO_ACUM/IND_VN_ANO_N_OUTUBRO_ACUM*100; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_NOVEMBRO_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_NOVEMBRO_ACUM/IND_VN_ANO_N_NOVEMBRO_ACUM*100; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_DEZEMBRO_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_DEZEMBRO_ACUM/IND_VN_ANO_N_DEZEMBRO_ACUM*100; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_JANEIRO_ACUM = 'nd'; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_JANEIRO_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JANEIRO_ACUM/IND_VN_ANO_N_1_JANEIRO_ACUM*100; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_FEVEREIRO_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_FEVEREIRO_ACUM/IND_VN_ANO_N_1_FEVEREIRO_ACUM*100; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_MARCO_ACUM = 'nd'; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_MARCO_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_MARCO_ACUM/IND_VN_ANO_N_1_MARCO_ACUM*100; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_ABRIL_ACUM = 'nd'; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_ABRIL_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_ABRIL_ACUM/IND_VN_ANO_N_1_ABRIL_ACUM*100; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_MAIO_ACUM = 'nd'; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_MAIO_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_MAIO_ACUM/IND_VN_ANO_N_1_MAIO_ACUM*100; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_JUNHO_ACUM = 'nd'; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_JUNHO_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JUNHO_ACUM/IND_VN_ANO_N_1_JUNHO_ACUM*100; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_JULHO_ACUM = 'nd'; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_JULHO_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JULHO_ACUM/IND_VN_ANO_N_1_JULHO_ACUM*100; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_AGOSTO_ACUM = 'nd'; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_AGOSTO_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_AGOSTO_ACUM/IND_VN_ANO_N_1_AGOSTO_ACUM*100; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_SETEMBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_SETEMBRO_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_SETEMBRO_ACUM/IND_VN_ANO_N_1_SETEMBRO_ACUM*100; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_OUTUBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_OUTUBRO_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_OUTUBRO_ACUM/IND_VN_ANO_N_1_OUTUBRO_ACUM*100; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_NOVEMBRO_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_NOVEMBRO_ACUM/IND_VN_ANO_N_1_NOVEMBRO_ACUM*100; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_DEZEMBRO_ACUM= FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_DEZEMBRO_ACUM/IND_VN_ANO_N_1_DEZEMBRO_ACUM*100; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_VN_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JANEIRO_ACUM= ((IND_VN_ANO_N_JANEIRO_ACUM-IND_VN_ANO_N_1_JANEIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_JANEIRO_ACUM))*100; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_FEVEREIRO_ACUM= ((IND_VN_ANO_N_FEVEREIRO_ACUM-IND_VN_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_VN_ANO_N_MARCO_ACUM = 'nd'; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MARCO_ACUM= ((IND_VN_ANO_N_MARCO_ACUM-IND_VN_ANO_N_1_MARCO_ACUM)/Math.abs(IND_VN_ANO_N_1_MARCO_ACUM))*100; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = VAR_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_VN_ANO_N_ABRIL_ACUM = 'nd'; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_ABRIL_ACUM= ((IND_VN_ANO_N_ABRIL_ACUM-IND_VN_ANO_N_1_ABRIL_ACUM)/Math.abs(IND_VN_ANO_N_1_ABRIL_ACUM))*100; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_VN_ANO_N_MAIO_ACUM = 'nd'; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MAIO_ACUM= ((IND_VN_ANO_N_MAIO_ACUM-IND_VN_ANO_N_1_MAIO_ACUM)/Math.abs(IND_VN_ANO_N_1_MAIO_ACUM))*100; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = VAR_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_VN_ANO_N_JUNHO_ACUM = 'nd'; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JUNHO_ACUM= ((IND_VN_ANO_N_JUNHO_ACUM-IND_VN_ANO_N_1_JUNHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JUNHO_ACUM))*100; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_VN_ANO_N_JULHO_ACUM = 'nd'; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JULHO_ACUM= ((IND_VN_ANO_N_JULHO_ACUM-IND_VN_ANO_N_1_JULHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JULHO_ACUM))*100; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_VN_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_AGOSTO_ACUM= ((IND_VN_ANO_N_AGOSTO_ACUM-IND_VN_ANO_N_1_AGOSTO_ACUM)/Math.abs(IND_VN_ANO_N_1_AGOSTO_ACUM))*100; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_SETEMBRO_ACUM= ((IND_VN_ANO_N_SETEMBRO_ACUM-IND_VN_ANO_N_1_SETEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_OUTUBRO_ACUM= ((IND_VN_ANO_N_OUTUBRO_ACUM-IND_VN_ANO_N_1_OUTUBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_NOVEMBRO_ACUM= ((IND_VN_ANO_N_NOVEMBRO_ACUM-IND_VN_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_DEZEMBRO_ACUM= ((IND_VN_ANO_N_DEZEMBRO_ACUM-IND_VN_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JANEIRO_ACUM= ((FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JANEIRO_ACUM-FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JANEIRO_ACUM)/Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JANEIRO_ACUM))*100; var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_FEVEREIRO_ACUM= ((FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_FEVEREIRO_ACUM-FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MARCO_ACUM = 'nd'; var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MARCO_ACUM= ((FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MARCO_ACUM-FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_MARCO_ACUM)/Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_MARCO_ACUM))*100; var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MARCO_ACUM_MAX_MIN = VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_ABRIL_ACUM = 'nd'; var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_ABRIL_ACUM= ((FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_ABRIL_ACUM-FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_ABRIL_ACUM)/Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_ABRIL_ACUM))*100; var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MAIO_ACUM = 'nd'; var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MAIO_ACUM= ((FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MAIO_ACUM-FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_MAIO_ACUM)/Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_MAIO_ACUM))*100; var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MAIO_ACUM_MAX_MIN = VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JUNHO_ACUM = 'nd'; var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JUNHO_ACUM= ((FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JUNHO_ACUM-FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JUNHO_ACUM)/Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JUNHO_ACUM))*100; var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JULHO_ACUM = 'nd'; var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JULHO_ACUM= ((FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JULHO_ACUM-FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JULHO_ACUM)/Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_JULHO_ACUM))*100; var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JULHO_ACUM_MAX_MIN = VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_AGOSTO_ACUM= ((FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_AGOSTO_ACUM-FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_AGOSTO_ACUM)/Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_AGOSTO_ACUM))*100; var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_SETEMBRO_ACUM= ((FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_SETEMBRO_ACUM-FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_SETEMBRO_ACUM)/Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_OUTUBRO_ACUM= ((FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_OUTUBRO_ACUM-FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_OUTUBRO_ACUM)/Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_NOVEMBRO_ACUM= ((FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_NOVEMBRO_ACUM-FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_DEZEMBRO_ACUM= ((FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_DEZEMBRO_ACUM-FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_DEZEMBRO_ACUM };

    if( PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_JANEIRO_ACUM > PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_JANEIRO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JANEIRO_ACUM=PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_JANEIRO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JANEIRO_ACUM=PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_JANEIRO_ACUM ; }
    if( PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_FEVEREIRO_ACUM > PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_FEVEREIRO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_FEVEREIRO_ACUM=PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_FEVEREIRO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_FEVEREIRO_ACUM=PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_FEVEREIRO_ACUM ; }
    if( PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_MARCO_ACUM > PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_MARCO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MARCO_ACUM=PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_MARCO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MARCO_ACUM=PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_MARCO_ACUM ; }
    if( PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_ABRIL_ACUM > PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_ABRIL_ACUM) { var  INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_ABRIL_ACUM=PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_ABRIL_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_ABRIL_ACUM=PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_ABRIL_ACUM ; }
    if( PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_MAIO_ACUM > PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_MAIO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MAIO_ACUM=PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_MAIO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MAIO_ACUM=PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_MAIO_ACUM ; }
    if( PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_JUNHO_ACUM > PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_JUNHO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JUNHO_ACUM=PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_JUNHO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JUNHO_ACUM=PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_JUNHO_ACUM ; }
    if( PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_JULHO_ACUM > PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_JULHO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JULHO_ACUM=PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_JULHO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JULHO_ACUM=PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_JULHO_ACUM ; }
    if( PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_AGOSTO_ACUM > PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_AGOSTO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_AGOSTO_ACUM=PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_AGOSTO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_AGOSTO_ACUM=PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_AGOSTO_ACUM ; }
    if( PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_SETEMBRO_ACUM > PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_SETEMBRO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_SETEMBRO_ACUM=PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_SETEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_SETEMBRO_ACUM=PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_SETEMBRO_ACUM ; }
    if( PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_OUTUBRO_ACUM > PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_OUTUBRO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_OUTUBRO_ACUM=PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_OUTUBRO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_OUTUBRO_ACUM=PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_OUTUBRO_ACUM ; }
    if( PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_NOVEMBRO_ACUM > PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_NOVEMBRO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_NOVEMBRO_ACUM=PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_NOVEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_NOVEMBRO_ACUM=PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_NOVEMBRO_ACUM ; }
    if( PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_DEZEMBRO_ACUM > PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_DEZEMBRO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_DEZEMBRO_ACUM=PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_DEZEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_DEZEMBRO_ACUM=PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_DEZEMBRO_ACUM ; }



    var fillBetweenLinesPlugin = {
        afterDatasetsDraw: function (chart) {
            var ctx = chart.chart.ctx;
            var xaxis = chart.scales['x-axis-0'];
            var yaxis = chart.scales['y-axis-0'];
            var datasets = chart.data.datasets;
            ctx.save();

            for (var d = 0; d < datasets.length; d++) {
                var dataset = datasets[d];
                if (dataset.fillBetweenSet == undefined) {
                    continue;
                }

                // get meta for both data sets
                var meta1 = chart.getDatasetMeta(d);
                var meta2 = chart.getDatasetMeta(dataset.fillBetweenSet);

                // do not draw fill if one of the datasets is hidden
                if (meta1.hidden || meta2.hidden) continue;

                // create fill areas in pairs
                for (var p = 0; p < meta1.data.length-1;p++) {
                    // if null skip
                    if (dataset.data[p] == null || dataset.data[p+1] == null) continue;

                    ctx.beginPath();

                    // trace line 1
                    var curr = meta1.data[p];
                    var next = meta1.data[p+1];
                    ctx.moveTo(curr._view.x, curr._view.y);
                    ctx.lineTo(curr._view.x, curr._view.y);
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(next._view.x, curr._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        ctx.bezierCurveTo(
                          curr._view.controlPointNextX,
                          curr._view.controlPointNextY,
                          next._view.controlPointPreviousX,
                          next._view.controlPointPreviousY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // connect dataset1 to dataset2
                    var curr = meta2.data[p+1];
                    var next = meta2.data[p];
                    ctx.lineTo(curr._view.x, curr._view.y);

                    // trace BACKWORDS set2 to complete the box
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(curr._view.x, next._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        // reverse bezier
                        ctx.bezierCurveTo(
                          curr._view.controlPointPreviousX,
                          curr._view.controlPointPreviousY,
                          next._view.controlPointNextX,
                          next._view.controlPointNextY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // close the loop and fill with shading
                    ctx.closePath();
                    ctx.fillStyle = dataset.fillBetweenColor || "rgba(0,0,0,0.1)";
                    ctx.fill();
                } // end for p loop
            }
        } // end afterDatasetsDraw
    }; // end fillBetweenLinesPlugin

    Chart.pluginService.register(fillBetweenLinesPlugin);



    var GRAFICO_FSE_RESULT_MENSAL_COMP_043=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_043').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_043=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_043, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label:  'Peso Outr. Desl. Estad.vsVN(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   //borderColor: "#F00",
                   fill: false,
                   steppedLine: false,
                   tension: 0.5,
                   fillBetweenSet: 1,
                   fillBetweenColor: "rgba(0, 221, 0, 0.1)",
                   data: [
                   PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_JANEIRO_ACUM,
                   PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_FEVEREIRO_ACUM,
                   PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_MARCO_ACUM,
                   PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_ABRIL_ACUM,
                   PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_MAIO_ACUM,
                   PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_JUNHO_ACUM,
                   PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_JULHO_ACUM,
                   PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_AGOSTO_ACUM,
                   PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_SETEMBRO_ACUM,
                   PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_OUTUBRO_ACUM,
                   PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_NOVEMBRO_ACUM,
                   PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_DEZEMBRO_ACUM,

                   ],
                   type: 'line'


               },
                {
                    label: 'Peso Outr. Desl. Estad.vsVN(ac) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'A',
                    //backgroundColor: 'rgb(17, 121, 240)',
                    borderColor: 'rgb(0,221,0)',
                    //borderColor: "#00F",
                    fill: false,
                    steppedLine: false,
                    tension: 0.5,
                    data: [
                   PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_JANEIRO_ACUM,
                   PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_FEVEREIRO_ACUM,
                   PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_MARCO_ACUM,
                   PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_ABRIL_ACUM,
                   PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_MAIO_ACUM,
                   PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_JUNHO_ACUM,
                   PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_JULHO_ACUM,
                   PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_AGOSTO_ACUM,
                   PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_SETEMBRO_ACUM,
                   PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_OUTUBRO_ACUM,
                   PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_NOVEMBRO_ACUM,
                   PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANO_N_1_DEZEMBRO_ACUM,
                    ],
                    type: 'line'
                },
    {
        label: 'Ineficiência',
        yAxisID: 'A',
        backgroundColor: "rgba(255, 0, 0, 0.2)",
        borderColor: 'rgba(255, 255, 255, 0.1)',
        //borderColor: "#0D0",
        fill: false,
        steppedLine: false,
        tension: 0.5,
        fillBetweenSet: 1,
        fillBetweenColor: "rgba(255, 0, 0, 0.2)",
        data: [
    INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JANEIRO_ACUM,
    INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_FEVEREIRO_ACUM,
    INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MARCO_ACUM,
    INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_ABRIL_ACUM,
    INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_MAIO_ACUM,
    INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JUNHO_ACUM,
    INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_JULHO_ACUM,
    INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_AGOSTO_ACUM,
    INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_SETEMBRO_ACUM,
    INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_OUTUBRO_ACUM,
    INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_NOVEMBRO_ACUM,
    INEFICIENCIA_FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANO_N_DEZEMBRO_ACUM,
        ],
        type: 'line'
    },

            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_OUTROS_DESL_ESTAD_TRANSPORT COMP',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                //min:  Math.round(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_min_princ__,0),
                                                //max:  Math.round(FSE_OUTROS_DESL_ESTAD_TRANSPORT_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString()+ "%";
                                                }
                                            }
                                        },







                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_044-----------------------------------------------------------*@
<script>

    if(@ViewData["MES_ACUM_REAL"]<1){ var IND_VN_ANO_N_JANEIRO = 'nd'; var IND_VN_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JANEIRO"]))); var IND_VN_ANO_N_JANEIRO_MAX_MIN = IND_VN_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var IND_VN_ANO_N_FEVEREIRO = 'nd'; var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_FEVEREIRO"]))); var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = IND_VN_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var IND_VN_ANO_N_MARCO = 'nd'; var IND_VN_ANO_N_MARCO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MARCO"]))); var IND_VN_ANO_N_MARCO_MAX_MIN = IND_VN_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var IND_VN_ANO_N_ABRIL = 'nd'; var IND_VN_ANO_N_ABRIL_MAX_MIN = 0;  } else { var IND_VN_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_ABRIL"]))); var IND_VN_ANO_N_ABRIL_MAX_MIN = IND_VN_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var IND_VN_ANO_N_MAIO = 'nd'; var IND_VN_ANO_N_MAIO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MAIO"]))); var IND_VN_ANO_N_MAIO_MAX_MIN = IND_VN_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var IND_VN_ANO_N_JUNHO = 'nd'; var IND_VN_ANO_N_JUNHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JUNHO"]))); var IND_VN_ANO_N_JUNHO_MAX_MIN = IND_VN_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var IND_VN_ANO_N_JULHO = 'nd'; var IND_VN_ANO_N_JULHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JULHO"]))); var IND_VN_ANO_N_JULHO_MAX_MIN = IND_VN_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var IND_VN_ANO_N_AGOSTO = 'nd'; var IND_VN_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_AGOSTO"]))); var IND_VN_ANO_N_AGOSTO_MAX_MIN = IND_VN_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var IND_VN_ANO_N_SETEMBRO = 'nd'; var IND_VN_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_SETEMBRO"]))); var IND_VN_ANO_N_SETEMBRO_MAX_MIN = IND_VN_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var IND_VN_ANO_N_OUTUBRO = 'nd'; var IND_VN_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_OUTUBRO"]))); var IND_VN_ANO_N_OUTUBRO_MAX_MIN = IND_VN_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var IND_VN_ANO_N_NOVEMBRO = 'nd'; var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_NOVEMBRO"]))); var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = IND_VN_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var IND_VN_ANO_N_DEZEMBRO = 'nd'; var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_DEZEMBRO"]))); var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = IND_VN_ANO_N_DEZEMBRO };

    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_RENDAS_ALUGUERES_ANO_N_JANEIRO = 'nd'; var FSE_RENDAS_ALUGUERES_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var FSE_RENDAS_ALUGUERES_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_JANEIRO"]))); var FSE_RENDAS_ALUGUERES_ANO_N_JANEIRO_MAX_MIN = FSE_RENDAS_ALUGUERES_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_RENDAS_ALUGUERES_ANO_N_FEVEREIRO = 'nd'; var FSE_RENDAS_ALUGUERES_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var FSE_RENDAS_ALUGUERES_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_FEVEREIRO"]))); var FSE_RENDAS_ALUGUERES_ANO_N_FEVEREIRO_MAX_MIN = FSE_RENDAS_ALUGUERES_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_RENDAS_ALUGUERES_ANO_N_MARCO = 'nd'; var FSE_RENDAS_ALUGUERES_ANO_N_MARCO_MAX_MIN = 0;  } else { var FSE_RENDAS_ALUGUERES_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_MARCO"]))); var FSE_RENDAS_ALUGUERES_ANO_N_MARCO_MAX_MIN = FSE_RENDAS_ALUGUERES_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_RENDAS_ALUGUERES_ANO_N_ABRIL = 'nd'; var FSE_RENDAS_ALUGUERES_ANO_N_ABRIL_MAX_MIN = 0;  } else { var FSE_RENDAS_ALUGUERES_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_ABRIL"]))); var FSE_RENDAS_ALUGUERES_ANO_N_ABRIL_MAX_MIN = FSE_RENDAS_ALUGUERES_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_RENDAS_ALUGUERES_ANO_N_MAIO = 'nd'; var FSE_RENDAS_ALUGUERES_ANO_N_MAIO_MAX_MIN = 0;  } else { var FSE_RENDAS_ALUGUERES_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_MAIO"]))); var FSE_RENDAS_ALUGUERES_ANO_N_MAIO_MAX_MIN = FSE_RENDAS_ALUGUERES_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_RENDAS_ALUGUERES_ANO_N_JUNHO = 'nd'; var FSE_RENDAS_ALUGUERES_ANO_N_JUNHO_MAX_MIN = 0;  } else { var FSE_RENDAS_ALUGUERES_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_JUNHO"]))); var FSE_RENDAS_ALUGUERES_ANO_N_JUNHO_MAX_MIN = FSE_RENDAS_ALUGUERES_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_RENDAS_ALUGUERES_ANO_N_JULHO = 'nd'; var FSE_RENDAS_ALUGUERES_ANO_N_JULHO_MAX_MIN = 0;  } else { var FSE_RENDAS_ALUGUERES_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_JULHO"]))); var FSE_RENDAS_ALUGUERES_ANO_N_JULHO_MAX_MIN = FSE_RENDAS_ALUGUERES_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_RENDAS_ALUGUERES_ANO_N_AGOSTO = 'nd'; var FSE_RENDAS_ALUGUERES_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var FSE_RENDAS_ALUGUERES_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_AGOSTO"]))); var FSE_RENDAS_ALUGUERES_ANO_N_AGOSTO_MAX_MIN = FSE_RENDAS_ALUGUERES_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_RENDAS_ALUGUERES_ANO_N_SETEMBRO = 'nd'; var FSE_RENDAS_ALUGUERES_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var FSE_RENDAS_ALUGUERES_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_SETEMBRO"]))); var FSE_RENDAS_ALUGUERES_ANO_N_SETEMBRO_MAX_MIN = FSE_RENDAS_ALUGUERES_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_RENDAS_ALUGUERES_ANO_N_OUTUBRO = 'nd'; var FSE_RENDAS_ALUGUERES_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var FSE_RENDAS_ALUGUERES_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_OUTUBRO"]))); var FSE_RENDAS_ALUGUERES_ANO_N_OUTUBRO_MAX_MIN = FSE_RENDAS_ALUGUERES_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_RENDAS_ALUGUERES_ANO_N_NOVEMBRO = 'nd'; var FSE_RENDAS_ALUGUERES_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var FSE_RENDAS_ALUGUERES_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_NOVEMBRO"]))); var FSE_RENDAS_ALUGUERES_ANO_N_NOVEMBRO_MAX_MIN = FSE_RENDAS_ALUGUERES_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_RENDAS_ALUGUERES_ANO_N_DEZEMBRO = 'nd'; var FSE_RENDAS_ALUGUERES_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var FSE_RENDAS_ALUGUERES_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_DEZEMBRO"]))); var FSE_RENDAS_ALUGUERES_ANO_N_DEZEMBRO_MAX_MIN = FSE_RENDAS_ALUGUERES_ANO_N_DEZEMBRO };


    var FSE_RENDAS_ALUGUERES_ANO_N_JANEIRO_ACUM = FSE_RENDAS_ALUGUERES_ANO_N_JANEIRO;
    var FSE_RENDAS_ALUGUERES_ANO_N_FEVEREIRO_ACUM = FSE_RENDAS_ALUGUERES_ANO_N_FEVEREIRO + FSE_RENDAS_ALUGUERES_ANO_N_JANEIRO_ACUM;
    var FSE_RENDAS_ALUGUERES_ANO_N_MARCO_ACUM = FSE_RENDAS_ALUGUERES_ANO_N_MARCO + FSE_RENDAS_ALUGUERES_ANO_N_FEVEREIRO_ACUM;
    var FSE_RENDAS_ALUGUERES_ANO_N_ABRIL_ACUM = FSE_RENDAS_ALUGUERES_ANO_N_ABRIL + FSE_RENDAS_ALUGUERES_ANO_N_MARCO_ACUM;
    var FSE_RENDAS_ALUGUERES_ANO_N_MAIO_ACUM = FSE_RENDAS_ALUGUERES_ANO_N_MAIO + FSE_RENDAS_ALUGUERES_ANO_N_ABRIL_ACUM;
    var FSE_RENDAS_ALUGUERES_ANO_N_JUNHO_ACUM = FSE_RENDAS_ALUGUERES_ANO_N_JUNHO + FSE_RENDAS_ALUGUERES_ANO_N_MAIO_ACUM;
    var FSE_RENDAS_ALUGUERES_ANO_N_JULHO_ACUM = FSE_RENDAS_ALUGUERES_ANO_N_JULHO + FSE_RENDAS_ALUGUERES_ANO_N_JUNHO_ACUM;
    var FSE_RENDAS_ALUGUERES_ANO_N_AGOSTO_ACUM = FSE_RENDAS_ALUGUERES_ANO_N_AGOSTO + FSE_RENDAS_ALUGUERES_ANO_N_JULHO_ACUM;
    var FSE_RENDAS_ALUGUERES_ANO_N_SETEMBRO_ACUM = FSE_RENDAS_ALUGUERES_ANO_N_SETEMBRO + FSE_RENDAS_ALUGUERES_ANO_N_AGOSTO_ACUM;
    var FSE_RENDAS_ALUGUERES_ANO_N_OUTUBRO_ACUM = FSE_RENDAS_ALUGUERES_ANO_N_OUTUBRO + FSE_RENDAS_ALUGUERES_ANO_N_SETEMBRO_ACUM;
    var FSE_RENDAS_ALUGUERES_ANO_N_NOVEMBRO_ACUM = FSE_RENDAS_ALUGUERES_ANO_N_NOVEMBRO + FSE_RENDAS_ALUGUERES_ANO_N_OUTUBRO_ACUM;
    var FSE_RENDAS_ALUGUERES_ANO_N_DEZEMBRO_ACUM = FSE_RENDAS_ALUGUERES_ANO_N_DEZEMBRO + FSE_RENDAS_ALUGUERES_ANO_N_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_RENDAS_ALUGUERES_ANO_N_JANEIRO_ACUM = 'nd'; var FSE_RENDAS_ALUGUERES_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var FSE_RENDAS_ALUGUERES_ANO_N_JANEIRO_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_JANEIRO_ACUM; var FSE_RENDAS_ALUGUERES_ANO_N_JANEIRO_ACUM_MAX_MIN = FSE_RENDAS_ALUGUERES_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_RENDAS_ALUGUERES_ANO_N_FEVEREIRO_ACUM = 'nd'; var FSE_RENDAS_ALUGUERES_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var FSE_RENDAS_ALUGUERES_ANO_N_FEVEREIRO_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_FEVEREIRO_ACUM; var FSE_RENDAS_ALUGUERES_ANO_N_FEVEREIRO_ACUM_MAX_MIN = FSE_RENDAS_ALUGUERES_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_RENDAS_ALUGUERES_ANO_N_MARCO_ACUM = 'nd'; var FSE_RENDAS_ALUGUERES_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var FSE_RENDAS_ALUGUERES_ANO_N_MARCO_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_MARCO_ACUM; var FSE_RENDAS_ALUGUERES_ANO_N_MARCO_ACUM_MAX_MIN = FSE_RENDAS_ALUGUERES_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_RENDAS_ALUGUERES_ANO_N_ABRIL_ACUM = 'nd'; var FSE_RENDAS_ALUGUERES_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var FSE_RENDAS_ALUGUERES_ANO_N_ABRIL_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_ABRIL_ACUM; var FSE_RENDAS_ALUGUERES_ANO_N_ABRIL_ACUM_MAX_MIN = FSE_RENDAS_ALUGUERES_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_RENDAS_ALUGUERES_ANO_N_MAIO_ACUM = 'nd'; var FSE_RENDAS_ALUGUERES_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var FSE_RENDAS_ALUGUERES_ANO_N_MAIO_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_MAIO_ACUM; var FSE_RENDAS_ALUGUERES_ANO_N_MAIO_ACUM_MAX_MIN = FSE_RENDAS_ALUGUERES_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_RENDAS_ALUGUERES_ANO_N_JUNHO_ACUM = 'nd'; var FSE_RENDAS_ALUGUERES_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var FSE_RENDAS_ALUGUERES_ANO_N_JUNHO_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_JUNHO_ACUM; var FSE_RENDAS_ALUGUERES_ANO_N_JUNHO_ACUM_MAX_MIN = FSE_RENDAS_ALUGUERES_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_RENDAS_ALUGUERES_ANO_N_JULHO_ACUM = 'nd'; var FSE_RENDAS_ALUGUERES_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var FSE_RENDAS_ALUGUERES_ANO_N_JULHO_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_JULHO_ACUM; var FSE_RENDAS_ALUGUERES_ANO_N_JULHO_ACUM_MAX_MIN = FSE_RENDAS_ALUGUERES_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_RENDAS_ALUGUERES_ANO_N_AGOSTO_ACUM = 'nd'; var FSE_RENDAS_ALUGUERES_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var FSE_RENDAS_ALUGUERES_ANO_N_AGOSTO_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_AGOSTO_ACUM; var FSE_RENDAS_ALUGUERES_ANO_N_AGOSTO_ACUM_MAX_MIN = FSE_RENDAS_ALUGUERES_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_RENDAS_ALUGUERES_ANO_N_SETEMBRO_ACUM = 'nd'; var FSE_RENDAS_ALUGUERES_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_RENDAS_ALUGUERES_ANO_N_SETEMBRO_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_SETEMBRO_ACUM; var FSE_RENDAS_ALUGUERES_ANO_N_SETEMBRO_ACUM_MAX_MIN = FSE_RENDAS_ALUGUERES_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_RENDAS_ALUGUERES_ANO_N_OUTUBRO_ACUM = 'nd'; var FSE_RENDAS_ALUGUERES_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var FSE_RENDAS_ALUGUERES_ANO_N_OUTUBRO_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_OUTUBRO_ACUM; var FSE_RENDAS_ALUGUERES_ANO_N_OUTUBRO_ACUM_MAX_MIN = FSE_RENDAS_ALUGUERES_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_RENDAS_ALUGUERES_ANO_N_NOVEMBRO_ACUM = 'nd'; var FSE_RENDAS_ALUGUERES_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_RENDAS_ALUGUERES_ANO_N_NOVEMBRO_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_NOVEMBRO_ACUM; var FSE_RENDAS_ALUGUERES_ANO_N_NOVEMBRO_ACUM_MAX_MIN = FSE_RENDAS_ALUGUERES_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_RENDAS_ALUGUERES_ANO_N_DEZEMBRO_ACUM = 'nd'; var FSE_RENDAS_ALUGUERES_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_RENDAS_ALUGUERES_ANO_N_DEZEMBRO_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_DEZEMBRO_ACUM; var FSE_RENDAS_ALUGUERES_ANO_N_DEZEMBRO_ACUM_MAX_MIN = FSE_RENDAS_ALUGUERES_ANO_N_DEZEMBRO_ACUM };




    var FSE_RENDAS_ALUGUERES_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_JANEIRO"])));
    var FSE_RENDAS_ALUGUERES_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_FEVEREIRO"]))) + FSE_RENDAS_ALUGUERES_ANO_N_1_JANEIRO_ACUM;
    var FSE_RENDAS_ALUGUERES_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_MARCO"]))) + FSE_RENDAS_ALUGUERES_ANO_N_1_FEVEREIRO_ACUM;
    var FSE_RENDAS_ALUGUERES_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_ABRIL"]))) + FSE_RENDAS_ALUGUERES_ANO_N_1_MARCO_ACUM;
    var FSE_RENDAS_ALUGUERES_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_MAIO"]))) + FSE_RENDAS_ALUGUERES_ANO_N_1_ABRIL_ACUM;
    var FSE_RENDAS_ALUGUERES_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_JUNHO"]))) + FSE_RENDAS_ALUGUERES_ANO_N_1_MAIO_ACUM;
    var FSE_RENDAS_ALUGUERES_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_JULHO"]))) + FSE_RENDAS_ALUGUERES_ANO_N_1_JUNHO_ACUM;
    var FSE_RENDAS_ALUGUERES_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_AGOSTO"]))) + FSE_RENDAS_ALUGUERES_ANO_N_1_JULHO_ACUM;
    var FSE_RENDAS_ALUGUERES_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_SETEMBRO"]))) + FSE_RENDAS_ALUGUERES_ANO_N_1_AGOSTO_ACUM;
    var FSE_RENDAS_ALUGUERES_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_OUTUBRO"]))) + FSE_RENDAS_ALUGUERES_ANO_N_1_SETEMBRO_ACUM;
    var FSE_RENDAS_ALUGUERES_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_NOVEMBRO"]))) + FSE_RENDAS_ALUGUERES_ANO_N_1_OUTUBRO_ACUM;
    var FSE_RENDAS_ALUGUERES_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_DEZEMBRO"]))) + FSE_RENDAS_ALUGUERES_ANO_N_1_NOVEMBRO_ACUM;


    var FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_princ= Math.max(
                       FSE_RENDAS_ALUGUERES_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_RENDAS_ALUGUERES_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_RENDAS_ALUGUERES_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_RENDAS_ALUGUERES_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_RENDAS_ALUGUERES_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_RENDAS_ALUGUERES_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_RENDAS_ALUGUERES_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_RENDAS_ALUGUERES_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_RENDAS_ALUGUERES_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_RENDAS_ALUGUERES_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_RENDAS_ALUGUERES_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_RENDAS_ALUGUERES_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_RENDAS_ALUGUERES_ANO_N_1_JANEIRO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_1_MARCO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_1_ABRIL_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_1_MAIO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_1_JUNHO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_1_JULHO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_1_AGOSTO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_1_SETEMBRO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_1_OUTUBRO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_1_DEZEMBRO_ACUM
                             );
    var FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_princ= Math.min(

                       FSE_RENDAS_ALUGUERES_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_RENDAS_ALUGUERES_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_RENDAS_ALUGUERES_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_RENDAS_ALUGUERES_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_RENDAS_ALUGUERES_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_RENDAS_ALUGUERES_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_RENDAS_ALUGUERES_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_RENDAS_ALUGUERES_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_RENDAS_ALUGUERES_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_RENDAS_ALUGUERES_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_RENDAS_ALUGUERES_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_RENDAS_ALUGUERES_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_RENDAS_ALUGUERES_ANO_N_1_JANEIRO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_1_MARCO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_1_ABRIL_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_1_MAIO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_1_JUNHO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_1_JULHO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_1_AGOSTO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_1_SETEMBRO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_1_OUTUBRO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_1_DEZEMBRO_ACUM
                           );
    var FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_secon= Math.max(
                       FSE_RENDAS_ALUGUERES_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_RENDAS_ALUGUERES_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_RENDAS_ALUGUERES_ANO_N_MARCO_MAX_MIN ,
                       FSE_RENDAS_ALUGUERES_ANO_N_ABRIL_MAX_MIN ,
                       FSE_RENDAS_ALUGUERES_ANO_N_MAIO_MAX_MIN ,
                       FSE_RENDAS_ALUGUERES_ANO_N_JUNHO_MAX_MIN ,
                       FSE_RENDAS_ALUGUERES_ANO_N_JULHO_MAX_MIN ,
                       FSE_RENDAS_ALUGUERES_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_RENDAS_ALUGUERES_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_RENDAS_ALUGUERES_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_RENDAS_ALUGUERES_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_RENDAS_ALUGUERES_ANO_N_DEZEMBRO_MAX_MIN ,



                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_DEZEMBRO"])))

                            );
    var FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_secon= Math.min(
                       FSE_RENDAS_ALUGUERES_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_RENDAS_ALUGUERES_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_RENDAS_ALUGUERES_ANO_N_MARCO_MAX_MIN ,
                       FSE_RENDAS_ALUGUERES_ANO_N_ABRIL_MAX_MIN ,
                       FSE_RENDAS_ALUGUERES_ANO_N_MAIO_MAX_MIN ,
                       FSE_RENDAS_ALUGUERES_ANO_N_JUNHO_MAX_MIN ,
                       FSE_RENDAS_ALUGUERES_ANO_N_JULHO_MAX_MIN ,
                       FSE_RENDAS_ALUGUERES_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_RENDAS_ALUGUERES_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_RENDAS_ALUGUERES_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_RENDAS_ALUGUERES_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_RENDAS_ALUGUERES_ANO_N_DEZEMBRO_MAX_MIN ,


                           @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_DEZEMBRO"])))

                          );

    //NOTA TA: Aqui trato o minimo e o maximo do eixo principal
    if(Math.abs(FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_princ)>=Math.abs(FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_princ))
    {
        var FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_princ_=(Math.ceil(FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_princ),0).toString().length-1);
        var FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_princ_= (Math.floor(FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_princ),0).toString().length-1);
        //alert(FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_princ_);
        //alert(FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_princ_);
    }
    else
    {
        var FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_princ_=(Math.ceil(FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_princ),0).toString().length-1);
        var FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_princ_= (Math.floor(FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_princ),0).toString().length-1);}

    //NOTA TA: Aqui trato o minimo e o maximo do eixo secundario

    if(Math.abs(FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_secon)>=Math.abs(FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_secon))
    {
        var FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_secon_=(Math.ceil(FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_secon),0).toString().length-1);
        var FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_secon_= (Math.floor(FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_secon),0).toString().length-1);
        //alert(FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_secon_);
        //alert(FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_secon_);
    }
    else
    {
        var FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_secon_=(Math.ceil(FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_secon),0).toString().length-1);
        var FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_secon_= (Math.floor(FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_secon),0).toString().length-1);}


    if(Math.abs(FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_princ)/Math.abs(FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_princ)>=Math.abs(FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_secon)/Math.abs(FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_secon))
    { if(FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_princ > 0 && FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_princ <0 ){ var FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_secon__=(FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_princ_*FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_secon_)/FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_princ_;} else { var FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_secon__=FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_secon_;}
        if(FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_secon > 0 && FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_secon <0 ){ var FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_princ__=(FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_secon__*FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_princ_)/FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_secon_;} else { var FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_princ__=FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_princ_;}}
    else
    {if(FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_secon > 0 && FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_secon <0 ){ var FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_princ__=(FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_secon_*FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_princ_)/FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_secon_;} else { var FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_princ__=FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_princ_;}
        if(FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_princ > 0 && FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_princ <0 ){ var FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_secon__=(FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_princ__*FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_secon_)/FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_princ_;} else { var FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_secon__=FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_secon_;}
    }



    if(Math.abs(FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_princ)/Math.abs(FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_princ)>=Math.abs(FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_secon)/Math.abs(FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_secon))
    { if(FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_princ > 0 && FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_princ <0 ){ var FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_secon__=(FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_princ_*FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_secon_)/FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_princ_;} else { var FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_secon__=FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_secon_;}
        if(FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_secon > 0 && FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_secon <0 ){ var FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_princ__=(FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_secon__*FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_princ_)/FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_secon_;} else { var FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_princ__=FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_princ_;}}
    else
    {if(FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_secon > 0 && FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_secon <0 ){ var FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_princ__=(FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_secon_*FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_princ_)/FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_secon_;} else { var FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_princ__=FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_princ_;}
        if(FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_princ > 0 && FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_princ <0 ){ var FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_secon__=(FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_princ__*FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_secon_)/FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_princ_;} else { var FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_secon__=FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_secon_;}
    }



    var GRAFICO_FSE_RESULT_MENSAL_COMP_044=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_044').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_044=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_044, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label: 'Rend. Alug.(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   data: [
                       FSE_RENDAS_ALUGUERES_ANO_N_JANEIRO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_FEVEREIRO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_MARCO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_ABRIL_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_MAIO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_JUNHO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_JULHO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_AGOSTO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_SETEMBRO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_OUTUBRO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_NOVEMBRO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_DEZEMBRO_ACUM,
                   ],
                   type: 'line'


               },
                              {
                                  label: 'Rend. Alug.(ac) ' + ANO_VERSAO_ANTE_,
                                  yAxisID: 'A',
                                  //backgroundColor: 'rgb(201, 10, 10)',
                                  borderColor: 'rgb(0,221,0)',
                                  data: [
                       FSE_RENDAS_ALUGUERES_ANO_N_1_JANEIRO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_1_MARCO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_1_ABRIL_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_1_MAIO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_1_JUNHO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_1_JULHO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_1_AGOSTO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_1_SETEMBRO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_1_OUTUBRO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_RENDAS_ALUGUERES_ANO_N_1_DEZEMBRO_ACUM,
                                  ],
                                  type: 'line'


                              },
                {
                    label:  'Rend. Alug.(m) ' + ANO_VERSAO_REAL_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(250 , 83 , 0, 0.5)',
                    borderColor: 'rgba(250 , 83 , 0, 0.5)',
                    data: [
                  FSE_RENDAS_ALUGUERES_ANO_N_JANEIRO ,
                  FSE_RENDAS_ALUGUERES_ANO_N_FEVEREIRO ,
                  FSE_RENDAS_ALUGUERES_ANO_N_MARCO ,
                  FSE_RENDAS_ALUGUERES_ANO_N_ABRIL,
                  FSE_RENDAS_ALUGUERES_ANO_N_MAIO ,
                  FSE_RENDAS_ALUGUERES_ANO_N_JUNHO ,
                  FSE_RENDAS_ALUGUERES_ANO_N_JULHO ,
                  FSE_RENDAS_ALUGUERES_ANO_N_AGOSTO ,
                  FSE_RENDAS_ALUGUERES_ANO_N_SETEMBRO ,
                  FSE_RENDAS_ALUGUERES_ANO_N_OUTUBRO ,
                  FSE_RENDAS_ALUGUERES_ANO_N_NOVEMBRO ,
                  FSE_RENDAS_ALUGUERES_ANO_N_DEZEMBRO ,
                    ],
                },
                {
                    label:  'Rend. Alug.(m) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(0,221,0, 0.4)',
                    borderColor: 'rgba(0,221,0, 0.4)',
                    data: [
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_JANEIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_FEVEREIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_MARCO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_ABRIL"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_MAIO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_JUNHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_JULHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_AGOSTO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_SETEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_OUTUBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_NOVEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANO_N_1_DEZEMBRO"]))),
                    ],
                },


            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_RENDAS_ALUGUERES_MENSAL_1',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                min:  Math.round(FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_princ__,0),
                                                max:  Math.round(FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString();
                                                }
                                            }
                                        },

                    { id: 'B',
                        type: 'linear',
                        position: 'right',
                        ticks: {
                            min: Math.round(FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_secon__,0),
                            max:  Math.round(FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_secon__,0),
                            beginAtZero: false,
                            callback: function(value, index, values) {
                                return value.toLocaleString();
                            }
                        }
                    },






                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_045-----------------------------------------------------------*@
<script>

    var IND_VN_ANO_N_JANEIRO_ACUM = IND_VN_ANO_N_JANEIRO;
    var IND_VN_ANO_N_FEVEREIRO_ACUM = IND_VN_ANO_N_FEVEREIRO + IND_VN_ANO_N_JANEIRO_ACUM;
    var IND_VN_ANO_N_MARCO_ACUM = IND_VN_ANO_N_MARCO + IND_VN_ANO_N_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_ABRIL_ACUM = IND_VN_ANO_N_ABRIL + IND_VN_ANO_N_MARCO_ACUM;
    var IND_VN_ANO_N_MAIO_ACUM = IND_VN_ANO_N_MAIO + IND_VN_ANO_N_ABRIL_ACUM;
    var IND_VN_ANO_N_JUNHO_ACUM = IND_VN_ANO_N_JUNHO + IND_VN_ANO_N_MAIO_ACUM;
    var IND_VN_ANO_N_JULHO_ACUM = IND_VN_ANO_N_JULHO + IND_VN_ANO_N_JUNHO_ACUM;
    var IND_VN_ANO_N_AGOSTO_ACUM = IND_VN_ANO_N_AGOSTO + IND_VN_ANO_N_JULHO_ACUM;
    var IND_VN_ANO_N_SETEMBRO_ACUM = IND_VN_ANO_N_SETEMBRO + IND_VN_ANO_N_AGOSTO_ACUM;
    var IND_VN_ANO_N_OUTUBRO_ACUM = IND_VN_ANO_N_OUTUBRO + IND_VN_ANO_N_SETEMBRO_ACUM;
    var IND_VN_ANO_N_NOVEMBRO_ACUM = IND_VN_ANO_N_NOVEMBRO + IND_VN_ANO_N_OUTUBRO_ACUM;
    var IND_VN_ANO_N_DEZEMBRO_ACUM = IND_VN_ANO_N_DEZEMBRO + IND_VN_ANO_N_NOVEMBRO_ACUM;



    var IND_VN_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JANEIRO"])));
    var IND_VN_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_FEVEREIRO"]))) + IND_VN_ANO_N_1_JANEIRO_ACUM;
    var IND_VN_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MARCO"]))) + IND_VN_ANO_N_1_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_ABRIL"]))) + IND_VN_ANO_N_1_MARCO_ACUM;
    var IND_VN_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MAIO"]))) + IND_VN_ANO_N_1_ABRIL_ACUM;
    var IND_VN_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JUNHO"]))) + IND_VN_ANO_N_1_MAIO_ACUM;
    var IND_VN_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JULHO"]))) + IND_VN_ANO_N_1_JUNHO_ACUM;
    var IND_VN_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_AGOSTO"]))) + IND_VN_ANO_N_1_JULHO_ACUM;
    var IND_VN_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_SETEMBRO"]))) + IND_VN_ANO_N_1_AGOSTO_ACUM;
    var IND_VN_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_OUTUBRO"]))) + IND_VN_ANO_N_1_SETEMBRO_ACUM;
    var IND_VN_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_NOVEMBRO"]))) + IND_VN_ANO_N_1_OUTUBRO_ACUM;
    var IND_VN_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_DEZEMBRO"]))) + IND_VN_ANO_N_1_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_JANEIRO_ACUM = 'nd'; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_JANEIRO_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_JANEIRO_ACUM/IND_VN_ANO_N_JANEIRO_ACUM*100; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_FEVEREIRO_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_FEVEREIRO_ACUM/IND_VN_ANO_N_FEVEREIRO_ACUM*100; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_MARCO_ACUM = 'nd'; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_MARCO_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_MARCO_ACUM/IND_VN_ANO_N_MARCO_ACUM*100; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_MARCO_ACUM_MAX_MIN = PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_ABRIL_ACUM = 'nd'; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_ABRIL_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_ABRIL_ACUM/IND_VN_ANO_N_ABRIL_ACUM*100; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_ABRIL_ACUM_MAX_MIN = PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_MAIO_ACUM = 'nd'; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_MAIO_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_MAIO_ACUM/IND_VN_ANO_N_MAIO_ACUM*100; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_MAIO_ACUM_MAX_MIN = PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_JUNHO_ACUM = 'nd'; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_JUNHO_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_JUNHO_ACUM/IND_VN_ANO_N_JUNHO_ACUM*100; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_JUNHO_ACUM_MAX_MIN = PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_JULHO_ACUM = 'nd'; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_JULHO_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_JULHO_ACUM/IND_VN_ANO_N_JULHO_ACUM*100; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_JULHO_ACUM_MAX_MIN = PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_AGOSTO_ACUM = 'nd'; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_AGOSTO_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_AGOSTO_ACUM/IND_VN_ANO_N_AGOSTO_ACUM*100; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_SETEMBRO_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_SETEMBRO_ACUM/IND_VN_ANO_N_SETEMBRO_ACUM*100; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_OUTUBRO_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_OUTUBRO_ACUM/IND_VN_ANO_N_OUTUBRO_ACUM*100; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_NOVEMBRO_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_NOVEMBRO_ACUM/IND_VN_ANO_N_NOVEMBRO_ACUM*100; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_DEZEMBRO_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_DEZEMBRO_ACUM/IND_VN_ANO_N_DEZEMBRO_ACUM*100; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_JANEIRO_ACUM = 'nd'; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_JANEIRO_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_1_JANEIRO_ACUM/IND_VN_ANO_N_1_JANEIRO_ACUM*100; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_FEVEREIRO_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_1_FEVEREIRO_ACUM/IND_VN_ANO_N_1_FEVEREIRO_ACUM*100; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_MARCO_ACUM = 'nd'; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_MARCO_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_1_MARCO_ACUM/IND_VN_ANO_N_1_MARCO_ACUM*100; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_ABRIL_ACUM = 'nd'; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_ABRIL_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_1_ABRIL_ACUM/IND_VN_ANO_N_1_ABRIL_ACUM*100; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_MAIO_ACUM = 'nd'; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_MAIO_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_1_MAIO_ACUM/IND_VN_ANO_N_1_MAIO_ACUM*100; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_JUNHO_ACUM = 'nd'; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_JUNHO_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_1_JUNHO_ACUM/IND_VN_ANO_N_1_JUNHO_ACUM*100; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_JULHO_ACUM = 'nd'; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_JULHO_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_1_JULHO_ACUM/IND_VN_ANO_N_1_JULHO_ACUM*100; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_AGOSTO_ACUM = 'nd'; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_AGOSTO_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_1_AGOSTO_ACUM/IND_VN_ANO_N_1_AGOSTO_ACUM*100; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_SETEMBRO_ACUM = 'nd'; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_SETEMBRO_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_1_SETEMBRO_ACUM/IND_VN_ANO_N_1_SETEMBRO_ACUM*100; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_OUTUBRO_ACUM = 'nd'; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_OUTUBRO_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_1_OUTUBRO_ACUM/IND_VN_ANO_N_1_OUTUBRO_ACUM*100; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_NOVEMBRO_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_1_NOVEMBRO_ACUM/IND_VN_ANO_N_1_NOVEMBRO_ACUM*100; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_DEZEMBRO_ACUM= FSE_RENDAS_ALUGUERES_ANO_N_1_DEZEMBRO_ACUM/IND_VN_ANO_N_1_DEZEMBRO_ACUM*100; var PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_VN_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JANEIRO_ACUM= ((IND_VN_ANO_N_JANEIRO_ACUM-IND_VN_ANO_N_1_JANEIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_JANEIRO_ACUM))*100; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_FEVEREIRO_ACUM= ((IND_VN_ANO_N_FEVEREIRO_ACUM-IND_VN_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_VN_ANO_N_MARCO_ACUM = 'nd'; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MARCO_ACUM= ((IND_VN_ANO_N_MARCO_ACUM-IND_VN_ANO_N_1_MARCO_ACUM)/Math.abs(IND_VN_ANO_N_1_MARCO_ACUM))*100; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = VAR_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_VN_ANO_N_ABRIL_ACUM = 'nd'; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_ABRIL_ACUM= ((IND_VN_ANO_N_ABRIL_ACUM-IND_VN_ANO_N_1_ABRIL_ACUM)/Math.abs(IND_VN_ANO_N_1_ABRIL_ACUM))*100; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_VN_ANO_N_MAIO_ACUM = 'nd'; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MAIO_ACUM= ((IND_VN_ANO_N_MAIO_ACUM-IND_VN_ANO_N_1_MAIO_ACUM)/Math.abs(IND_VN_ANO_N_1_MAIO_ACUM))*100; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = VAR_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_VN_ANO_N_JUNHO_ACUM = 'nd'; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JUNHO_ACUM= ((IND_VN_ANO_N_JUNHO_ACUM-IND_VN_ANO_N_1_JUNHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JUNHO_ACUM))*100; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_VN_ANO_N_JULHO_ACUM = 'nd'; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JULHO_ACUM= ((IND_VN_ANO_N_JULHO_ACUM-IND_VN_ANO_N_1_JULHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JULHO_ACUM))*100; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_VN_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_AGOSTO_ACUM= ((IND_VN_ANO_N_AGOSTO_ACUM-IND_VN_ANO_N_1_AGOSTO_ACUM)/Math.abs(IND_VN_ANO_N_1_AGOSTO_ACUM))*100; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_SETEMBRO_ACUM= ((IND_VN_ANO_N_SETEMBRO_ACUM-IND_VN_ANO_N_1_SETEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_OUTUBRO_ACUM= ((IND_VN_ANO_N_OUTUBRO_ACUM-IND_VN_ANO_N_1_OUTUBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_NOVEMBRO_ACUM= ((IND_VN_ANO_N_NOVEMBRO_ACUM-IND_VN_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_DEZEMBRO_ACUM= ((IND_VN_ANO_N_DEZEMBRO_ACUM-IND_VN_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_FSE_RENDAS_ALUGUERES_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_FSE_RENDAS_ALUGUERES_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_RENDAS_ALUGUERES_ANO_N_JANEIRO_ACUM= ((FSE_RENDAS_ALUGUERES_ANO_N_JANEIRO_ACUM-FSE_RENDAS_ALUGUERES_ANO_N_1_JANEIRO_ACUM)/Math.abs(FSE_RENDAS_ALUGUERES_ANO_N_1_JANEIRO_ACUM))*100; var VAR_FSE_RENDAS_ALUGUERES_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_FSE_RENDAS_ALUGUERES_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_FSE_RENDAS_ALUGUERES_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_FSE_RENDAS_ALUGUERES_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_RENDAS_ALUGUERES_ANO_N_FEVEREIRO_ACUM= ((FSE_RENDAS_ALUGUERES_ANO_N_FEVEREIRO_ACUM-FSE_RENDAS_ALUGUERES_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(FSE_RENDAS_ALUGUERES_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_FSE_RENDAS_ALUGUERES_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_FSE_RENDAS_ALUGUERES_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_FSE_RENDAS_ALUGUERES_ANO_N_MARCO_ACUM = 'nd'; var VAR_FSE_RENDAS_ALUGUERES_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_RENDAS_ALUGUERES_ANO_N_MARCO_ACUM= ((FSE_RENDAS_ALUGUERES_ANO_N_MARCO_ACUM-FSE_RENDAS_ALUGUERES_ANO_N_1_MARCO_ACUM)/Math.abs(FSE_RENDAS_ALUGUERES_ANO_N_1_MARCO_ACUM))*100; var VAR_FSE_RENDAS_ALUGUERES_ANO_N_MARCO_ACUM_MAX_MIN = VAR_FSE_RENDAS_ALUGUERES_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_FSE_RENDAS_ALUGUERES_ANO_N_ABRIL_ACUM = 'nd'; var VAR_FSE_RENDAS_ALUGUERES_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_RENDAS_ALUGUERES_ANO_N_ABRIL_ACUM= ((FSE_RENDAS_ALUGUERES_ANO_N_ABRIL_ACUM-FSE_RENDAS_ALUGUERES_ANO_N_1_ABRIL_ACUM)/Math.abs(FSE_RENDAS_ALUGUERES_ANO_N_1_ABRIL_ACUM))*100; var VAR_FSE_RENDAS_ALUGUERES_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_FSE_RENDAS_ALUGUERES_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_FSE_RENDAS_ALUGUERES_ANO_N_MAIO_ACUM = 'nd'; var VAR_FSE_RENDAS_ALUGUERES_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_RENDAS_ALUGUERES_ANO_N_MAIO_ACUM= ((FSE_RENDAS_ALUGUERES_ANO_N_MAIO_ACUM-FSE_RENDAS_ALUGUERES_ANO_N_1_MAIO_ACUM)/Math.abs(FSE_RENDAS_ALUGUERES_ANO_N_1_MAIO_ACUM))*100; var VAR_FSE_RENDAS_ALUGUERES_ANO_N_MAIO_ACUM_MAX_MIN = VAR_FSE_RENDAS_ALUGUERES_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_FSE_RENDAS_ALUGUERES_ANO_N_JUNHO_ACUM = 'nd'; var VAR_FSE_RENDAS_ALUGUERES_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_RENDAS_ALUGUERES_ANO_N_JUNHO_ACUM= ((FSE_RENDAS_ALUGUERES_ANO_N_JUNHO_ACUM-FSE_RENDAS_ALUGUERES_ANO_N_1_JUNHO_ACUM)/Math.abs(FSE_RENDAS_ALUGUERES_ANO_N_1_JUNHO_ACUM))*100; var VAR_FSE_RENDAS_ALUGUERES_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_FSE_RENDAS_ALUGUERES_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_FSE_RENDAS_ALUGUERES_ANO_N_JULHO_ACUM = 'nd'; var VAR_FSE_RENDAS_ALUGUERES_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_RENDAS_ALUGUERES_ANO_N_JULHO_ACUM= ((FSE_RENDAS_ALUGUERES_ANO_N_JULHO_ACUM-FSE_RENDAS_ALUGUERES_ANO_N_1_JULHO_ACUM)/Math.abs(FSE_RENDAS_ALUGUERES_ANO_N_1_JULHO_ACUM))*100; var VAR_FSE_RENDAS_ALUGUERES_ANO_N_JULHO_ACUM_MAX_MIN = VAR_FSE_RENDAS_ALUGUERES_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_FSE_RENDAS_ALUGUERES_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_FSE_RENDAS_ALUGUERES_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_RENDAS_ALUGUERES_ANO_N_AGOSTO_ACUM= ((FSE_RENDAS_ALUGUERES_ANO_N_AGOSTO_ACUM-FSE_RENDAS_ALUGUERES_ANO_N_1_AGOSTO_ACUM)/Math.abs(FSE_RENDAS_ALUGUERES_ANO_N_1_AGOSTO_ACUM))*100; var VAR_FSE_RENDAS_ALUGUERES_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_FSE_RENDAS_ALUGUERES_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_FSE_RENDAS_ALUGUERES_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_FSE_RENDAS_ALUGUERES_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_RENDAS_ALUGUERES_ANO_N_SETEMBRO_ACUM= ((FSE_RENDAS_ALUGUERES_ANO_N_SETEMBRO_ACUM-FSE_RENDAS_ALUGUERES_ANO_N_1_SETEMBRO_ACUM)/Math.abs(FSE_RENDAS_ALUGUERES_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_FSE_RENDAS_ALUGUERES_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_FSE_RENDAS_ALUGUERES_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_FSE_RENDAS_ALUGUERES_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_FSE_RENDAS_ALUGUERES_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_RENDAS_ALUGUERES_ANO_N_OUTUBRO_ACUM= ((FSE_RENDAS_ALUGUERES_ANO_N_OUTUBRO_ACUM-FSE_RENDAS_ALUGUERES_ANO_N_1_OUTUBRO_ACUM)/Math.abs(FSE_RENDAS_ALUGUERES_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_FSE_RENDAS_ALUGUERES_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_FSE_RENDAS_ALUGUERES_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_FSE_RENDAS_ALUGUERES_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_FSE_RENDAS_ALUGUERES_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_RENDAS_ALUGUERES_ANO_N_NOVEMBRO_ACUM= ((FSE_RENDAS_ALUGUERES_ANO_N_NOVEMBRO_ACUM-FSE_RENDAS_ALUGUERES_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(FSE_RENDAS_ALUGUERES_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_FSE_RENDAS_ALUGUERES_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_FSE_RENDAS_ALUGUERES_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_FSE_RENDAS_ALUGUERES_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_FSE_RENDAS_ALUGUERES_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_RENDAS_ALUGUERES_ANO_N_DEZEMBRO_ACUM= ((FSE_RENDAS_ALUGUERES_ANO_N_DEZEMBRO_ACUM-FSE_RENDAS_ALUGUERES_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(FSE_RENDAS_ALUGUERES_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_FSE_RENDAS_ALUGUERES_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_FSE_RENDAS_ALUGUERES_ANO_N_DEZEMBRO_ACUM };

    if( PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_JANEIRO_ACUM > PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_JANEIRO_ACUM) { var  INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_JANEIRO_ACUM=PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_JANEIRO_ACUM ; } else { var  INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_JANEIRO_ACUM=PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_JANEIRO_ACUM ; }
    if( PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_FEVEREIRO_ACUM > PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_FEVEREIRO_ACUM) { var  INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_FEVEREIRO_ACUM=PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_FEVEREIRO_ACUM ; } else { var  INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_FEVEREIRO_ACUM=PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_FEVEREIRO_ACUM ; }
    if( PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_MARCO_ACUM > PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_MARCO_ACUM) { var  INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_MARCO_ACUM=PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_MARCO_ACUM ; } else { var  INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_MARCO_ACUM=PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_MARCO_ACUM ; }
    if( PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_ABRIL_ACUM > PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_ABRIL_ACUM) { var  INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_ABRIL_ACUM=PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_ABRIL_ACUM ; } else { var  INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_ABRIL_ACUM=PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_ABRIL_ACUM ; }
    if( PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_MAIO_ACUM > PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_MAIO_ACUM) { var  INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_MAIO_ACUM=PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_MAIO_ACUM ; } else { var  INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_MAIO_ACUM=PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_MAIO_ACUM ; }
    if( PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_JUNHO_ACUM > PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_JUNHO_ACUM) { var  INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_JUNHO_ACUM=PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_JUNHO_ACUM ; } else { var  INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_JUNHO_ACUM=PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_JUNHO_ACUM ; }
    if( PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_JULHO_ACUM > PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_JULHO_ACUM) { var  INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_JULHO_ACUM=PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_JULHO_ACUM ; } else { var  INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_JULHO_ACUM=PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_JULHO_ACUM ; }
    if( PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_AGOSTO_ACUM > PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_AGOSTO_ACUM) { var  INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_AGOSTO_ACUM=PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_AGOSTO_ACUM ; } else { var  INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_AGOSTO_ACUM=PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_AGOSTO_ACUM ; }
    if( PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_SETEMBRO_ACUM > PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_SETEMBRO_ACUM) { var  INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_SETEMBRO_ACUM=PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_SETEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_SETEMBRO_ACUM=PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_SETEMBRO_ACUM ; }
    if( PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_OUTUBRO_ACUM > PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_OUTUBRO_ACUM) { var  INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_OUTUBRO_ACUM=PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_OUTUBRO_ACUM ; } else { var  INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_OUTUBRO_ACUM=PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_OUTUBRO_ACUM ; }
    if( PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_NOVEMBRO_ACUM > PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_NOVEMBRO_ACUM) { var  INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_NOVEMBRO_ACUM=PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_NOVEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_NOVEMBRO_ACUM=PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_NOVEMBRO_ACUM ; }
    if( PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_DEZEMBRO_ACUM > PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_DEZEMBRO_ACUM) { var  INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_DEZEMBRO_ACUM=PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_DEZEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_DEZEMBRO_ACUM=PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_DEZEMBRO_ACUM ; }



    var fillBetweenLinesPlugin = {
        afterDatasetsDraw: function (chart) {
            var ctx = chart.chart.ctx;
            var xaxis = chart.scales['x-axis-0'];
            var yaxis = chart.scales['y-axis-0'];
            var datasets = chart.data.datasets;
            ctx.save();

            for (var d = 0; d < datasets.length; d++) {
                var dataset = datasets[d];
                if (dataset.fillBetweenSet == undefined) {
                    continue;
                }

                // get meta for both data sets
                var meta1 = chart.getDatasetMeta(d);
                var meta2 = chart.getDatasetMeta(dataset.fillBetweenSet);

                // do not draw fill if one of the datasets is hidden
                if (meta1.hidden || meta2.hidden) continue;

                // create fill areas in pairs
                for (var p = 0; p < meta1.data.length-1;p++) {
                    // if null skip
                    if (dataset.data[p] == null || dataset.data[p+1] == null) continue;

                    ctx.beginPath();

                    // trace line 1
                    var curr = meta1.data[p];
                    var next = meta1.data[p+1];
                    ctx.moveTo(curr._view.x, curr._view.y);
                    ctx.lineTo(curr._view.x, curr._view.y);
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(next._view.x, curr._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        ctx.bezierCurveTo(
                          curr._view.controlPointNextX,
                          curr._view.controlPointNextY,
                          next._view.controlPointPreviousX,
                          next._view.controlPointPreviousY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // connect dataset1 to dataset2
                    var curr = meta2.data[p+1];
                    var next = meta2.data[p];
                    ctx.lineTo(curr._view.x, curr._view.y);

                    // trace BACKWORDS set2 to complete the box
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(curr._view.x, next._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        // reverse bezier
                        ctx.bezierCurveTo(
                          curr._view.controlPointPreviousX,
                          curr._view.controlPointPreviousY,
                          next._view.controlPointNextX,
                          next._view.controlPointNextY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // close the loop and fill with shading
                    ctx.closePath();
                    ctx.fillStyle = dataset.fillBetweenColor || "rgba(0,0,0,0.1)";
                    ctx.fill();
                } // end for p loop
            }
        } // end afterDatasetsDraw
    }; // end fillBetweenLinesPlugin

    Chart.pluginService.register(fillBetweenLinesPlugin);



    var GRAFICO_FSE_RESULT_MENSAL_COMP_045=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_045').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_045=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_045, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label:  'Peso Rend. Alug.vsVN(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   //borderColor: "#F00",
                   fill: false,
                   steppedLine: false,
                   tension: 0.5,
                   fillBetweenSet: 1,
                   fillBetweenColor: "rgba(0, 221, 0, 0.1)",
                   data: [
                   PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_JANEIRO_ACUM,
                   PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_FEVEREIRO_ACUM,
                   PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_MARCO_ACUM,
                   PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_ABRIL_ACUM,
                   PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_MAIO_ACUM,
                   PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_JUNHO_ACUM,
                   PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_JULHO_ACUM,
                   PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_AGOSTO_ACUM,
                   PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_SETEMBRO_ACUM,
                   PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_OUTUBRO_ACUM,
                   PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_NOVEMBRO_ACUM,
                   PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_DEZEMBRO_ACUM,

                   ],
                   type: 'line'


               },
                {
                    label: 'Peso Rend. Alug.vsVN(ac) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'A',
                    //backgroundColor: 'rgb(17, 121, 240)',
                    borderColor: 'rgb(0,221,0)',
                    //borderColor: "#00F",
                    fill: false,
                    steppedLine: false,
                    tension: 0.5,
                    data: [
                   PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_JANEIRO_ACUM,
                   PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_FEVEREIRO_ACUM,
                   PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_MARCO_ACUM,
                   PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_ABRIL_ACUM,
                   PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_MAIO_ACUM,
                   PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_JUNHO_ACUM,
                   PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_JULHO_ACUM,
                   PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_AGOSTO_ACUM,
                   PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_SETEMBRO_ACUM,
                   PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_OUTUBRO_ACUM,
                   PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_NOVEMBRO_ACUM,
                   PESO_FSE_RENDAS_ALUGUERES_VN_ANO_N_1_DEZEMBRO_ACUM,
                    ],
                    type: 'line'
                },
    {
        label: 'Ineficiência',
        yAxisID: 'A',
        backgroundColor: "rgba(255, 0, 0, 0.2)",
        borderColor: 'rgba(255, 255, 255, 0.1)',
        //borderColor: "#0D0",
        fill: false,
        steppedLine: false,
        tension: 0.5,
        fillBetweenSet: 1,
        fillBetweenColor: "rgba(255, 0, 0, 0.2)",
        data: [
    INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_JANEIRO_ACUM,
    INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_FEVEREIRO_ACUM,
    INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_MARCO_ACUM,
    INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_ABRIL_ACUM,
    INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_MAIO_ACUM,
    INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_JUNHO_ACUM,
    INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_JULHO_ACUM,
    INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_AGOSTO_ACUM,
    INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_SETEMBRO_ACUM,
    INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_OUTUBRO_ACUM,
    INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_NOVEMBRO_ACUM,
    INEFICIENCIA_FSE_RENDAS_ALUGUERES_ANO_N_DEZEMBRO_ACUM,
        ],
        type: 'line'
    },

            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_RENDAS_ALUGUERES COMP',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                //min:  Math.round(FSE_RENDAS_ALUGUERES_Mensal_Eixo_min_princ__,0),
                                                //max:  Math.round(FSE_RENDAS_ALUGUERES_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString()+ "%";
                                                }
                                            }
                                        },







                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_046-----------------------------------------------------------*@
<script>

    if(@ViewData["MES_ACUM_REAL"]<1){ var IND_VN_ANO_N_JANEIRO = 'nd'; var IND_VN_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JANEIRO"]))); var IND_VN_ANO_N_JANEIRO_MAX_MIN = IND_VN_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var IND_VN_ANO_N_FEVEREIRO = 'nd'; var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_FEVEREIRO"]))); var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = IND_VN_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var IND_VN_ANO_N_MARCO = 'nd'; var IND_VN_ANO_N_MARCO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MARCO"]))); var IND_VN_ANO_N_MARCO_MAX_MIN = IND_VN_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var IND_VN_ANO_N_ABRIL = 'nd'; var IND_VN_ANO_N_ABRIL_MAX_MIN = 0;  } else { var IND_VN_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_ABRIL"]))); var IND_VN_ANO_N_ABRIL_MAX_MIN = IND_VN_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var IND_VN_ANO_N_MAIO = 'nd'; var IND_VN_ANO_N_MAIO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MAIO"]))); var IND_VN_ANO_N_MAIO_MAX_MIN = IND_VN_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var IND_VN_ANO_N_JUNHO = 'nd'; var IND_VN_ANO_N_JUNHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JUNHO"]))); var IND_VN_ANO_N_JUNHO_MAX_MIN = IND_VN_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var IND_VN_ANO_N_JULHO = 'nd'; var IND_VN_ANO_N_JULHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JULHO"]))); var IND_VN_ANO_N_JULHO_MAX_MIN = IND_VN_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var IND_VN_ANO_N_AGOSTO = 'nd'; var IND_VN_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_AGOSTO"]))); var IND_VN_ANO_N_AGOSTO_MAX_MIN = IND_VN_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var IND_VN_ANO_N_SETEMBRO = 'nd'; var IND_VN_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_SETEMBRO"]))); var IND_VN_ANO_N_SETEMBRO_MAX_MIN = IND_VN_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var IND_VN_ANO_N_OUTUBRO = 'nd'; var IND_VN_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_OUTUBRO"]))); var IND_VN_ANO_N_OUTUBRO_MAX_MIN = IND_VN_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var IND_VN_ANO_N_NOVEMBRO = 'nd'; var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_NOVEMBRO"]))); var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = IND_VN_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var IND_VN_ANO_N_DEZEMBRO = 'nd'; var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_DEZEMBRO"]))); var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = IND_VN_ANO_N_DEZEMBRO };

    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_COMUNICACAO_ANO_N_JANEIRO = 'nd'; var FSE_COMUNICACAO_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var FSE_COMUNICACAO_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_JANEIRO"]))); var FSE_COMUNICACAO_ANO_N_JANEIRO_MAX_MIN = FSE_COMUNICACAO_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_COMUNICACAO_ANO_N_FEVEREIRO = 'nd'; var FSE_COMUNICACAO_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var FSE_COMUNICACAO_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_FEVEREIRO"]))); var FSE_COMUNICACAO_ANO_N_FEVEREIRO_MAX_MIN = FSE_COMUNICACAO_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_COMUNICACAO_ANO_N_MARCO = 'nd'; var FSE_COMUNICACAO_ANO_N_MARCO_MAX_MIN = 0;  } else { var FSE_COMUNICACAO_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_MARCO"]))); var FSE_COMUNICACAO_ANO_N_MARCO_MAX_MIN = FSE_COMUNICACAO_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_COMUNICACAO_ANO_N_ABRIL = 'nd'; var FSE_COMUNICACAO_ANO_N_ABRIL_MAX_MIN = 0;  } else { var FSE_COMUNICACAO_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_ABRIL"]))); var FSE_COMUNICACAO_ANO_N_ABRIL_MAX_MIN = FSE_COMUNICACAO_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_COMUNICACAO_ANO_N_MAIO = 'nd'; var FSE_COMUNICACAO_ANO_N_MAIO_MAX_MIN = 0;  } else { var FSE_COMUNICACAO_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_MAIO"]))); var FSE_COMUNICACAO_ANO_N_MAIO_MAX_MIN = FSE_COMUNICACAO_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_COMUNICACAO_ANO_N_JUNHO = 'nd'; var FSE_COMUNICACAO_ANO_N_JUNHO_MAX_MIN = 0;  } else { var FSE_COMUNICACAO_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_JUNHO"]))); var FSE_COMUNICACAO_ANO_N_JUNHO_MAX_MIN = FSE_COMUNICACAO_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_COMUNICACAO_ANO_N_JULHO = 'nd'; var FSE_COMUNICACAO_ANO_N_JULHO_MAX_MIN = 0;  } else { var FSE_COMUNICACAO_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_JULHO"]))); var FSE_COMUNICACAO_ANO_N_JULHO_MAX_MIN = FSE_COMUNICACAO_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_COMUNICACAO_ANO_N_AGOSTO = 'nd'; var FSE_COMUNICACAO_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var FSE_COMUNICACAO_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_AGOSTO"]))); var FSE_COMUNICACAO_ANO_N_AGOSTO_MAX_MIN = FSE_COMUNICACAO_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_COMUNICACAO_ANO_N_SETEMBRO = 'nd'; var FSE_COMUNICACAO_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var FSE_COMUNICACAO_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_SETEMBRO"]))); var FSE_COMUNICACAO_ANO_N_SETEMBRO_MAX_MIN = FSE_COMUNICACAO_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_COMUNICACAO_ANO_N_OUTUBRO = 'nd'; var FSE_COMUNICACAO_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var FSE_COMUNICACAO_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_OUTUBRO"]))); var FSE_COMUNICACAO_ANO_N_OUTUBRO_MAX_MIN = FSE_COMUNICACAO_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_COMUNICACAO_ANO_N_NOVEMBRO = 'nd'; var FSE_COMUNICACAO_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var FSE_COMUNICACAO_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_NOVEMBRO"]))); var FSE_COMUNICACAO_ANO_N_NOVEMBRO_MAX_MIN = FSE_COMUNICACAO_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_COMUNICACAO_ANO_N_DEZEMBRO = 'nd'; var FSE_COMUNICACAO_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var FSE_COMUNICACAO_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_DEZEMBRO"]))); var FSE_COMUNICACAO_ANO_N_DEZEMBRO_MAX_MIN = FSE_COMUNICACAO_ANO_N_DEZEMBRO };


    var FSE_COMUNICACAO_ANO_N_JANEIRO_ACUM = FSE_COMUNICACAO_ANO_N_JANEIRO;
    var FSE_COMUNICACAO_ANO_N_FEVEREIRO_ACUM = FSE_COMUNICACAO_ANO_N_FEVEREIRO + FSE_COMUNICACAO_ANO_N_JANEIRO_ACUM;
    var FSE_COMUNICACAO_ANO_N_MARCO_ACUM = FSE_COMUNICACAO_ANO_N_MARCO + FSE_COMUNICACAO_ANO_N_FEVEREIRO_ACUM;
    var FSE_COMUNICACAO_ANO_N_ABRIL_ACUM = FSE_COMUNICACAO_ANO_N_ABRIL + FSE_COMUNICACAO_ANO_N_MARCO_ACUM;
    var FSE_COMUNICACAO_ANO_N_MAIO_ACUM = FSE_COMUNICACAO_ANO_N_MAIO + FSE_COMUNICACAO_ANO_N_ABRIL_ACUM;
    var FSE_COMUNICACAO_ANO_N_JUNHO_ACUM = FSE_COMUNICACAO_ANO_N_JUNHO + FSE_COMUNICACAO_ANO_N_MAIO_ACUM;
    var FSE_COMUNICACAO_ANO_N_JULHO_ACUM = FSE_COMUNICACAO_ANO_N_JULHO + FSE_COMUNICACAO_ANO_N_JUNHO_ACUM;
    var FSE_COMUNICACAO_ANO_N_AGOSTO_ACUM = FSE_COMUNICACAO_ANO_N_AGOSTO + FSE_COMUNICACAO_ANO_N_JULHO_ACUM;
    var FSE_COMUNICACAO_ANO_N_SETEMBRO_ACUM = FSE_COMUNICACAO_ANO_N_SETEMBRO + FSE_COMUNICACAO_ANO_N_AGOSTO_ACUM;
    var FSE_COMUNICACAO_ANO_N_OUTUBRO_ACUM = FSE_COMUNICACAO_ANO_N_OUTUBRO + FSE_COMUNICACAO_ANO_N_SETEMBRO_ACUM;
    var FSE_COMUNICACAO_ANO_N_NOVEMBRO_ACUM = FSE_COMUNICACAO_ANO_N_NOVEMBRO + FSE_COMUNICACAO_ANO_N_OUTUBRO_ACUM;
    var FSE_COMUNICACAO_ANO_N_DEZEMBRO_ACUM = FSE_COMUNICACAO_ANO_N_DEZEMBRO + FSE_COMUNICACAO_ANO_N_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_COMUNICACAO_ANO_N_JANEIRO_ACUM = 'nd'; var FSE_COMUNICACAO_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var FSE_COMUNICACAO_ANO_N_JANEIRO_ACUM= FSE_COMUNICACAO_ANO_N_JANEIRO_ACUM; var FSE_COMUNICACAO_ANO_N_JANEIRO_ACUM_MAX_MIN = FSE_COMUNICACAO_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_COMUNICACAO_ANO_N_FEVEREIRO_ACUM = 'nd'; var FSE_COMUNICACAO_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var FSE_COMUNICACAO_ANO_N_FEVEREIRO_ACUM= FSE_COMUNICACAO_ANO_N_FEVEREIRO_ACUM; var FSE_COMUNICACAO_ANO_N_FEVEREIRO_ACUM_MAX_MIN = FSE_COMUNICACAO_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_COMUNICACAO_ANO_N_MARCO_ACUM = 'nd'; var FSE_COMUNICACAO_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var FSE_COMUNICACAO_ANO_N_MARCO_ACUM= FSE_COMUNICACAO_ANO_N_MARCO_ACUM; var FSE_COMUNICACAO_ANO_N_MARCO_ACUM_MAX_MIN = FSE_COMUNICACAO_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_COMUNICACAO_ANO_N_ABRIL_ACUM = 'nd'; var FSE_COMUNICACAO_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var FSE_COMUNICACAO_ANO_N_ABRIL_ACUM= FSE_COMUNICACAO_ANO_N_ABRIL_ACUM; var FSE_COMUNICACAO_ANO_N_ABRIL_ACUM_MAX_MIN = FSE_COMUNICACAO_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_COMUNICACAO_ANO_N_MAIO_ACUM = 'nd'; var FSE_COMUNICACAO_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var FSE_COMUNICACAO_ANO_N_MAIO_ACUM= FSE_COMUNICACAO_ANO_N_MAIO_ACUM; var FSE_COMUNICACAO_ANO_N_MAIO_ACUM_MAX_MIN = FSE_COMUNICACAO_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_COMUNICACAO_ANO_N_JUNHO_ACUM = 'nd'; var FSE_COMUNICACAO_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var FSE_COMUNICACAO_ANO_N_JUNHO_ACUM= FSE_COMUNICACAO_ANO_N_JUNHO_ACUM; var FSE_COMUNICACAO_ANO_N_JUNHO_ACUM_MAX_MIN = FSE_COMUNICACAO_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_COMUNICACAO_ANO_N_JULHO_ACUM = 'nd'; var FSE_COMUNICACAO_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var FSE_COMUNICACAO_ANO_N_JULHO_ACUM= FSE_COMUNICACAO_ANO_N_JULHO_ACUM; var FSE_COMUNICACAO_ANO_N_JULHO_ACUM_MAX_MIN = FSE_COMUNICACAO_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_COMUNICACAO_ANO_N_AGOSTO_ACUM = 'nd'; var FSE_COMUNICACAO_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var FSE_COMUNICACAO_ANO_N_AGOSTO_ACUM= FSE_COMUNICACAO_ANO_N_AGOSTO_ACUM; var FSE_COMUNICACAO_ANO_N_AGOSTO_ACUM_MAX_MIN = FSE_COMUNICACAO_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_COMUNICACAO_ANO_N_SETEMBRO_ACUM = 'nd'; var FSE_COMUNICACAO_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_COMUNICACAO_ANO_N_SETEMBRO_ACUM= FSE_COMUNICACAO_ANO_N_SETEMBRO_ACUM; var FSE_COMUNICACAO_ANO_N_SETEMBRO_ACUM_MAX_MIN = FSE_COMUNICACAO_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_COMUNICACAO_ANO_N_OUTUBRO_ACUM = 'nd'; var FSE_COMUNICACAO_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var FSE_COMUNICACAO_ANO_N_OUTUBRO_ACUM= FSE_COMUNICACAO_ANO_N_OUTUBRO_ACUM; var FSE_COMUNICACAO_ANO_N_OUTUBRO_ACUM_MAX_MIN = FSE_COMUNICACAO_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_COMUNICACAO_ANO_N_NOVEMBRO_ACUM = 'nd'; var FSE_COMUNICACAO_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_COMUNICACAO_ANO_N_NOVEMBRO_ACUM= FSE_COMUNICACAO_ANO_N_NOVEMBRO_ACUM; var FSE_COMUNICACAO_ANO_N_NOVEMBRO_ACUM_MAX_MIN = FSE_COMUNICACAO_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_COMUNICACAO_ANO_N_DEZEMBRO_ACUM = 'nd'; var FSE_COMUNICACAO_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_COMUNICACAO_ANO_N_DEZEMBRO_ACUM= FSE_COMUNICACAO_ANO_N_DEZEMBRO_ACUM; var FSE_COMUNICACAO_ANO_N_DEZEMBRO_ACUM_MAX_MIN = FSE_COMUNICACAO_ANO_N_DEZEMBRO_ACUM };




    var FSE_COMUNICACAO_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_JANEIRO"])));
    var FSE_COMUNICACAO_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_FEVEREIRO"]))) + FSE_COMUNICACAO_ANO_N_1_JANEIRO_ACUM;
    var FSE_COMUNICACAO_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_MARCO"]))) + FSE_COMUNICACAO_ANO_N_1_FEVEREIRO_ACUM;
    var FSE_COMUNICACAO_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_ABRIL"]))) + FSE_COMUNICACAO_ANO_N_1_MARCO_ACUM;
    var FSE_COMUNICACAO_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_MAIO"]))) + FSE_COMUNICACAO_ANO_N_1_ABRIL_ACUM;
    var FSE_COMUNICACAO_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_JUNHO"]))) + FSE_COMUNICACAO_ANO_N_1_MAIO_ACUM;
    var FSE_COMUNICACAO_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_JULHO"]))) + FSE_COMUNICACAO_ANO_N_1_JUNHO_ACUM;
    var FSE_COMUNICACAO_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_AGOSTO"]))) + FSE_COMUNICACAO_ANO_N_1_JULHO_ACUM;
    var FSE_COMUNICACAO_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_SETEMBRO"]))) + FSE_COMUNICACAO_ANO_N_1_AGOSTO_ACUM;
    var FSE_COMUNICACAO_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_OUTUBRO"]))) + FSE_COMUNICACAO_ANO_N_1_SETEMBRO_ACUM;
    var FSE_COMUNICACAO_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_NOVEMBRO"]))) + FSE_COMUNICACAO_ANO_N_1_OUTUBRO_ACUM;
    var FSE_COMUNICACAO_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_DEZEMBRO"]))) + FSE_COMUNICACAO_ANO_N_1_NOVEMBRO_ACUM;


    var FSE_COMUNICACAO_Mensal_Eixo_max_princ= Math.max(
                       FSE_COMUNICACAO_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_COMUNICACAO_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_COMUNICACAO_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_COMUNICACAO_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_COMUNICACAO_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_COMUNICACAO_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_COMUNICACAO_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_COMUNICACAO_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_COMUNICACAO_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_COMUNICACAO_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_COMUNICACAO_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_COMUNICACAO_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_COMUNICACAO_ANO_N_1_JANEIRO_ACUM,
                       FSE_COMUNICACAO_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_COMUNICACAO_ANO_N_1_MARCO_ACUM,
                       FSE_COMUNICACAO_ANO_N_1_ABRIL_ACUM,
                       FSE_COMUNICACAO_ANO_N_1_MAIO_ACUM,
                       FSE_COMUNICACAO_ANO_N_1_JUNHO_ACUM,
                       FSE_COMUNICACAO_ANO_N_1_JULHO_ACUM,
                       FSE_COMUNICACAO_ANO_N_1_AGOSTO_ACUM,
                       FSE_COMUNICACAO_ANO_N_1_SETEMBRO_ACUM,
                       FSE_COMUNICACAO_ANO_N_1_OUTUBRO_ACUM,
                       FSE_COMUNICACAO_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_COMUNICACAO_ANO_N_1_DEZEMBRO_ACUM
                             );
    var FSE_COMUNICACAO_Mensal_Eixo_min_princ= Math.min(

                       FSE_COMUNICACAO_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_COMUNICACAO_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_COMUNICACAO_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_COMUNICACAO_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_COMUNICACAO_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_COMUNICACAO_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_COMUNICACAO_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_COMUNICACAO_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_COMUNICACAO_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_COMUNICACAO_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_COMUNICACAO_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_COMUNICACAO_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_COMUNICACAO_ANO_N_1_JANEIRO_ACUM,
                       FSE_COMUNICACAO_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_COMUNICACAO_ANO_N_1_MARCO_ACUM,
                       FSE_COMUNICACAO_ANO_N_1_ABRIL_ACUM,
                       FSE_COMUNICACAO_ANO_N_1_MAIO_ACUM,
                       FSE_COMUNICACAO_ANO_N_1_JUNHO_ACUM,
                       FSE_COMUNICACAO_ANO_N_1_JULHO_ACUM,
                       FSE_COMUNICACAO_ANO_N_1_AGOSTO_ACUM,
                       FSE_COMUNICACAO_ANO_N_1_SETEMBRO_ACUM,
                       FSE_COMUNICACAO_ANO_N_1_OUTUBRO_ACUM,
                       FSE_COMUNICACAO_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_COMUNICACAO_ANO_N_1_DEZEMBRO_ACUM
                           );
    var FSE_COMUNICACAO_Mensal_Eixo_max_secon= Math.max(
                       FSE_COMUNICACAO_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_COMUNICACAO_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_COMUNICACAO_ANO_N_MARCO_MAX_MIN ,
                       FSE_COMUNICACAO_ANO_N_ABRIL_MAX_MIN ,
                       FSE_COMUNICACAO_ANO_N_MAIO_MAX_MIN ,
                       FSE_COMUNICACAO_ANO_N_JUNHO_MAX_MIN ,
                       FSE_COMUNICACAO_ANO_N_JULHO_MAX_MIN ,
                       FSE_COMUNICACAO_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_COMUNICACAO_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_COMUNICACAO_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_COMUNICACAO_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_COMUNICACAO_ANO_N_DEZEMBRO_MAX_MIN ,



                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_DEZEMBRO"])))

                            );
    var FSE_COMUNICACAO_Mensal_Eixo_min_secon= Math.min(
                       FSE_COMUNICACAO_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_COMUNICACAO_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_COMUNICACAO_ANO_N_MARCO_MAX_MIN ,
                       FSE_COMUNICACAO_ANO_N_ABRIL_MAX_MIN ,
                       FSE_COMUNICACAO_ANO_N_MAIO_MAX_MIN ,
                       FSE_COMUNICACAO_ANO_N_JUNHO_MAX_MIN ,
                       FSE_COMUNICACAO_ANO_N_JULHO_MAX_MIN ,
                       FSE_COMUNICACAO_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_COMUNICACAO_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_COMUNICACAO_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_COMUNICACAO_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_COMUNICACAO_ANO_N_DEZEMBRO_MAX_MIN ,


                           @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_DEZEMBRO"])))

                          );

    //NOTA TA: Aqui trato o minimo e o maximo do eixo principal
    if(Math.abs(FSE_COMUNICACAO_Mensal_Eixo_max_princ)>=Math.abs(FSE_COMUNICACAO_Mensal_Eixo_min_princ))
    {
        var FSE_COMUNICACAO_Mensal_Eixo_max_princ_=(Math.ceil(FSE_COMUNICACAO_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_COMUNICACAO_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_COMUNICACAO_Mensal_Eixo_max_princ),0).toString().length-1);
        var FSE_COMUNICACAO_Mensal_Eixo_min_princ_= (Math.floor(FSE_COMUNICACAO_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_COMUNICACAO_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_COMUNICACAO_Mensal_Eixo_max_princ),0).toString().length-1);
        //alert(FSE_COMUNICACAO_Mensal_Eixo_max_princ_);
        //alert(FSE_COMUNICACAO_Mensal_Eixo_min_princ_);
    }
    else
    {
        var FSE_COMUNICACAO_Mensal_Eixo_max_princ_=(Math.ceil(FSE_COMUNICACAO_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_COMUNICACAO_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_COMUNICACAO_Mensal_Eixo_min_princ),0).toString().length-1);
        var FSE_COMUNICACAO_Mensal_Eixo_min_princ_= (Math.floor(FSE_COMUNICACAO_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_COMUNICACAO_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_COMUNICACAO_Mensal_Eixo_min_princ),0).toString().length-1);}

    //NOTA TA: Aqui trato o minimo e o maximo do eixo secundario

    if(Math.abs(FSE_COMUNICACAO_Mensal_Eixo_max_secon)>=Math.abs(FSE_COMUNICACAO_Mensal_Eixo_min_secon))
    {
        var FSE_COMUNICACAO_Mensal_Eixo_max_secon_=(Math.ceil(FSE_COMUNICACAO_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_COMUNICACAO_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_COMUNICACAO_Mensal_Eixo_max_secon),0).toString().length-1);
        var FSE_COMUNICACAO_Mensal_Eixo_min_secon_= (Math.floor(FSE_COMUNICACAO_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_COMUNICACAO_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_COMUNICACAO_Mensal_Eixo_max_secon),0).toString().length-1);
        //alert(FSE_COMUNICACAO_Mensal_Eixo_max_secon_);
        //alert(FSE_COMUNICACAO_Mensal_Eixo_min_secon_);
    }
    else
    {
        var FSE_COMUNICACAO_Mensal_Eixo_max_secon_=(Math.ceil(FSE_COMUNICACAO_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_COMUNICACAO_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_COMUNICACAO_Mensal_Eixo_min_secon),0).toString().length-1);
        var FSE_COMUNICACAO_Mensal_Eixo_min_secon_= (Math.floor(FSE_COMUNICACAO_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_COMUNICACAO_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_COMUNICACAO_Mensal_Eixo_min_secon),0).toString().length-1);}


    if(Math.abs(FSE_COMUNICACAO_Mensal_Eixo_min_princ)/Math.abs(FSE_COMUNICACAO_Mensal_Eixo_max_princ)>=Math.abs(FSE_COMUNICACAO_Mensal_Eixo_min_secon)/Math.abs(FSE_COMUNICACAO_Mensal_Eixo_max_secon))
    { if(FSE_COMUNICACAO_Mensal_Eixo_max_princ > 0 && FSE_COMUNICACAO_Mensal_Eixo_min_princ <0 ){ var FSE_COMUNICACAO_Mensal_Eixo_min_secon__=(FSE_COMUNICACAO_Mensal_Eixo_min_princ_*FSE_COMUNICACAO_Mensal_Eixo_max_secon_)/FSE_COMUNICACAO_Mensal_Eixo_max_princ_;} else { var FSE_COMUNICACAO_Mensal_Eixo_min_secon__=FSE_COMUNICACAO_Mensal_Eixo_min_secon_;}
        if(FSE_COMUNICACAO_Mensal_Eixo_max_secon > 0 && FSE_COMUNICACAO_Mensal_Eixo_min_secon <0 ){ var FSE_COMUNICACAO_Mensal_Eixo_min_princ__=(FSE_COMUNICACAO_Mensal_Eixo_min_secon__*FSE_COMUNICACAO_Mensal_Eixo_max_princ_)/FSE_COMUNICACAO_Mensal_Eixo_max_secon_;} else { var FSE_COMUNICACAO_Mensal_Eixo_min_princ__=FSE_COMUNICACAO_Mensal_Eixo_min_princ_;}}
    else
    {if(FSE_COMUNICACAO_Mensal_Eixo_max_secon > 0 && FSE_COMUNICACAO_Mensal_Eixo_min_secon <0 ){ var FSE_COMUNICACAO_Mensal_Eixo_min_princ__=(FSE_COMUNICACAO_Mensal_Eixo_min_secon_*FSE_COMUNICACAO_Mensal_Eixo_max_princ_)/FSE_COMUNICACAO_Mensal_Eixo_max_secon_;} else { var FSE_COMUNICACAO_Mensal_Eixo_min_princ__=FSE_COMUNICACAO_Mensal_Eixo_min_princ_;}
        if(FSE_COMUNICACAO_Mensal_Eixo_max_princ > 0 && FSE_COMUNICACAO_Mensal_Eixo_min_princ <0 ){ var FSE_COMUNICACAO_Mensal_Eixo_min_secon__=(FSE_COMUNICACAO_Mensal_Eixo_min_princ__*FSE_COMUNICACAO_Mensal_Eixo_max_secon_)/FSE_COMUNICACAO_Mensal_Eixo_max_princ_;} else { var FSE_COMUNICACAO_Mensal_Eixo_min_secon__=FSE_COMUNICACAO_Mensal_Eixo_min_secon_;}
    }



    if(Math.abs(FSE_COMUNICACAO_Mensal_Eixo_max_princ)/Math.abs(FSE_COMUNICACAO_Mensal_Eixo_min_princ)>=Math.abs(FSE_COMUNICACAO_Mensal_Eixo_max_secon)/Math.abs(FSE_COMUNICACAO_Mensal_Eixo_min_secon))
    { if(FSE_COMUNICACAO_Mensal_Eixo_min_princ > 0 && FSE_COMUNICACAO_Mensal_Eixo_max_princ <0 ){ var FSE_COMUNICACAO_Mensal_Eixo_max_secon__=(FSE_COMUNICACAO_Mensal_Eixo_max_princ_*FSE_COMUNICACAO_Mensal_Eixo_min_secon_)/FSE_COMUNICACAO_Mensal_Eixo_min_princ_;} else { var FSE_COMUNICACAO_Mensal_Eixo_max_secon__=FSE_COMUNICACAO_Mensal_Eixo_max_secon_;}
        if(FSE_COMUNICACAO_Mensal_Eixo_min_secon > 0 && FSE_COMUNICACAO_Mensal_Eixo_max_secon <0 ){ var FSE_COMUNICACAO_Mensal_Eixo_max_princ__=(FSE_COMUNICACAO_Mensal_Eixo_max_secon__*FSE_COMUNICACAO_Mensal_Eixo_min_princ_)/FSE_COMUNICACAO_Mensal_Eixo_min_secon_;} else { var FSE_COMUNICACAO_Mensal_Eixo_max_princ__=FSE_COMUNICACAO_Mensal_Eixo_max_princ_;}}
    else
    {if(FSE_COMUNICACAO_Mensal_Eixo_min_secon > 0 && FSE_COMUNICACAO_Mensal_Eixo_max_secon <0 ){ var FSE_COMUNICACAO_Mensal_Eixo_max_princ__=(FSE_COMUNICACAO_Mensal_Eixo_max_secon_*FSE_COMUNICACAO_Mensal_Eixo_min_princ_)/FSE_COMUNICACAO_Mensal_Eixo_min_secon_;} else { var FSE_COMUNICACAO_Mensal_Eixo_max_princ__=FSE_COMUNICACAO_Mensal_Eixo_max_princ_;}
        if(FSE_COMUNICACAO_Mensal_Eixo_min_princ > 0 && FSE_COMUNICACAO_Mensal_Eixo_max_princ <0 ){ var FSE_COMUNICACAO_Mensal_Eixo_max_secon__=(FSE_COMUNICACAO_Mensal_Eixo_max_princ__*FSE_COMUNICACAO_Mensal_Eixo_min_secon_)/FSE_COMUNICACAO_Mensal_Eixo_min_princ_;} else { var FSE_COMUNICACAO_Mensal_Eixo_max_secon__=FSE_COMUNICACAO_Mensal_Eixo_max_secon_;}
    }



    var GRAFICO_FSE_RESULT_MENSAL_COMP_046=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_046').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_046=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_046, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label: 'Comunicação(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   data: [
                       FSE_COMUNICACAO_ANO_N_JANEIRO_ACUM,
                       FSE_COMUNICACAO_ANO_N_FEVEREIRO_ACUM,
                       FSE_COMUNICACAO_ANO_N_MARCO_ACUM,
                       FSE_COMUNICACAO_ANO_N_ABRIL_ACUM,
                       FSE_COMUNICACAO_ANO_N_MAIO_ACUM,
                       FSE_COMUNICACAO_ANO_N_JUNHO_ACUM,
                       FSE_COMUNICACAO_ANO_N_JULHO_ACUM,
                       FSE_COMUNICACAO_ANO_N_AGOSTO_ACUM,
                       FSE_COMUNICACAO_ANO_N_SETEMBRO_ACUM,
                       FSE_COMUNICACAO_ANO_N_OUTUBRO_ACUM,
                       FSE_COMUNICACAO_ANO_N_NOVEMBRO_ACUM,
                       FSE_COMUNICACAO_ANO_N_DEZEMBRO_ACUM,
                   ],
                   type: 'line'


               },
                              {
                                  label: 'Comunicação(ac) ' + ANO_VERSAO_ANTE_,
                                  yAxisID: 'A',
                                  //backgroundColor: 'rgb(201, 10, 10)',
                                  borderColor: 'rgb(0,221,0)',
                                  data: [
                       FSE_COMUNICACAO_ANO_N_1_JANEIRO_ACUM,
                       FSE_COMUNICACAO_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_COMUNICACAO_ANO_N_1_MARCO_ACUM,
                       FSE_COMUNICACAO_ANO_N_1_ABRIL_ACUM,
                       FSE_COMUNICACAO_ANO_N_1_MAIO_ACUM,
                       FSE_COMUNICACAO_ANO_N_1_JUNHO_ACUM,
                       FSE_COMUNICACAO_ANO_N_1_JULHO_ACUM,
                       FSE_COMUNICACAO_ANO_N_1_AGOSTO_ACUM,
                       FSE_COMUNICACAO_ANO_N_1_SETEMBRO_ACUM,
                       FSE_COMUNICACAO_ANO_N_1_OUTUBRO_ACUM,
                       FSE_COMUNICACAO_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_COMUNICACAO_ANO_N_1_DEZEMBRO_ACUM,
                                  ],
                                  type: 'line'


                              },
                {
                    label:  'Comunicação(m) ' + ANO_VERSAO_REAL_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(250 , 83 , 0, 0.5)',
                    borderColor: 'rgba(250 , 83 , 0, 0.5)',
                    data: [
                  FSE_COMUNICACAO_ANO_N_JANEIRO ,
                  FSE_COMUNICACAO_ANO_N_FEVEREIRO ,
                  FSE_COMUNICACAO_ANO_N_MARCO ,
                  FSE_COMUNICACAO_ANO_N_ABRIL,
                  FSE_COMUNICACAO_ANO_N_MAIO ,
                  FSE_COMUNICACAO_ANO_N_JUNHO ,
                  FSE_COMUNICACAO_ANO_N_JULHO ,
                  FSE_COMUNICACAO_ANO_N_AGOSTO ,
                  FSE_COMUNICACAO_ANO_N_SETEMBRO ,
                  FSE_COMUNICACAO_ANO_N_OUTUBRO ,
                  FSE_COMUNICACAO_ANO_N_NOVEMBRO ,
                  FSE_COMUNICACAO_ANO_N_DEZEMBRO ,
                    ],
                },
                {
                    label:  'Comunicação(m) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(0,221,0, 0.4)',
                    borderColor: 'rgba(0,221,0, 0.4)',
                    data: [
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_JANEIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_FEVEREIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_MARCO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_ABRIL"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_MAIO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_JUNHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_JULHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_AGOSTO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_SETEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_OUTUBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_NOVEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANO_N_1_DEZEMBRO"]))),
                    ],
                },


            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_COMUNICACAO_MENSAL_1',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                min:  Math.round(FSE_COMUNICACAO_Mensal_Eixo_min_princ__,0),
                                                max:  Math.round(FSE_COMUNICACAO_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString();
                                                }
                                            }
                                        },

                    { id: 'B',
                        type: 'linear',
                        position: 'right',
                        ticks: {
                            min: Math.round(FSE_COMUNICACAO_Mensal_Eixo_min_secon__,0),
                            max:  Math.round(FSE_COMUNICACAO_Mensal_Eixo_max_secon__,0),
                            beginAtZero: false,
                            callback: function(value, index, values) {
                                return value.toLocaleString();
                            }
                        }
                    },






                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_047-----------------------------------------------------------*@
<script>

    var IND_VN_ANO_N_JANEIRO_ACUM = IND_VN_ANO_N_JANEIRO;
    var IND_VN_ANO_N_FEVEREIRO_ACUM = IND_VN_ANO_N_FEVEREIRO + IND_VN_ANO_N_JANEIRO_ACUM;
    var IND_VN_ANO_N_MARCO_ACUM = IND_VN_ANO_N_MARCO + IND_VN_ANO_N_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_ABRIL_ACUM = IND_VN_ANO_N_ABRIL + IND_VN_ANO_N_MARCO_ACUM;
    var IND_VN_ANO_N_MAIO_ACUM = IND_VN_ANO_N_MAIO + IND_VN_ANO_N_ABRIL_ACUM;
    var IND_VN_ANO_N_JUNHO_ACUM = IND_VN_ANO_N_JUNHO + IND_VN_ANO_N_MAIO_ACUM;
    var IND_VN_ANO_N_JULHO_ACUM = IND_VN_ANO_N_JULHO + IND_VN_ANO_N_JUNHO_ACUM;
    var IND_VN_ANO_N_AGOSTO_ACUM = IND_VN_ANO_N_AGOSTO + IND_VN_ANO_N_JULHO_ACUM;
    var IND_VN_ANO_N_SETEMBRO_ACUM = IND_VN_ANO_N_SETEMBRO + IND_VN_ANO_N_AGOSTO_ACUM;
    var IND_VN_ANO_N_OUTUBRO_ACUM = IND_VN_ANO_N_OUTUBRO + IND_VN_ANO_N_SETEMBRO_ACUM;
    var IND_VN_ANO_N_NOVEMBRO_ACUM = IND_VN_ANO_N_NOVEMBRO + IND_VN_ANO_N_OUTUBRO_ACUM;
    var IND_VN_ANO_N_DEZEMBRO_ACUM = IND_VN_ANO_N_DEZEMBRO + IND_VN_ANO_N_NOVEMBRO_ACUM;



    var IND_VN_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JANEIRO"])));
    var IND_VN_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_FEVEREIRO"]))) + IND_VN_ANO_N_1_JANEIRO_ACUM;
    var IND_VN_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MARCO"]))) + IND_VN_ANO_N_1_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_ABRIL"]))) + IND_VN_ANO_N_1_MARCO_ACUM;
    var IND_VN_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MAIO"]))) + IND_VN_ANO_N_1_ABRIL_ACUM;
    var IND_VN_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JUNHO"]))) + IND_VN_ANO_N_1_MAIO_ACUM;
    var IND_VN_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JULHO"]))) + IND_VN_ANO_N_1_JUNHO_ACUM;
    var IND_VN_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_AGOSTO"]))) + IND_VN_ANO_N_1_JULHO_ACUM;
    var IND_VN_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_SETEMBRO"]))) + IND_VN_ANO_N_1_AGOSTO_ACUM;
    var IND_VN_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_OUTUBRO"]))) + IND_VN_ANO_N_1_SETEMBRO_ACUM;
    var IND_VN_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_NOVEMBRO"]))) + IND_VN_ANO_N_1_OUTUBRO_ACUM;
    var IND_VN_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_DEZEMBRO"]))) + IND_VN_ANO_N_1_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_COMUNICACAO_VN_ANO_N_JANEIRO_ACUM = 'nd'; var PESO_FSE_COMUNICACAO_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMUNICACAO_VN_ANO_N_JANEIRO_ACUM= FSE_COMUNICACAO_ANO_N_JANEIRO_ACUM/IND_VN_ANO_N_JANEIRO_ACUM*100; var PESO_FSE_COMUNICACAO_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = PESO_FSE_COMUNICACAO_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_COMUNICACAO_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_COMUNICACAO_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMUNICACAO_VN_ANO_N_FEVEREIRO_ACUM= FSE_COMUNICACAO_ANO_N_FEVEREIRO_ACUM/IND_VN_ANO_N_FEVEREIRO_ACUM*100; var PESO_FSE_COMUNICACAO_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_COMUNICACAO_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_COMUNICACAO_VN_ANO_N_MARCO_ACUM = 'nd'; var PESO_FSE_COMUNICACAO_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMUNICACAO_VN_ANO_N_MARCO_ACUM= FSE_COMUNICACAO_ANO_N_MARCO_ACUM/IND_VN_ANO_N_MARCO_ACUM*100; var PESO_FSE_COMUNICACAO_VN_ANO_N_MARCO_ACUM_MAX_MIN = PESO_FSE_COMUNICACAO_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_COMUNICACAO_VN_ANO_N_ABRIL_ACUM = 'nd'; var PESO_FSE_COMUNICACAO_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMUNICACAO_VN_ANO_N_ABRIL_ACUM= FSE_COMUNICACAO_ANO_N_ABRIL_ACUM/IND_VN_ANO_N_ABRIL_ACUM*100; var PESO_FSE_COMUNICACAO_VN_ANO_N_ABRIL_ACUM_MAX_MIN = PESO_FSE_COMUNICACAO_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_COMUNICACAO_VN_ANO_N_MAIO_ACUM = 'nd'; var PESO_FSE_COMUNICACAO_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMUNICACAO_VN_ANO_N_MAIO_ACUM= FSE_COMUNICACAO_ANO_N_MAIO_ACUM/IND_VN_ANO_N_MAIO_ACUM*100; var PESO_FSE_COMUNICACAO_VN_ANO_N_MAIO_ACUM_MAX_MIN = PESO_FSE_COMUNICACAO_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_COMUNICACAO_VN_ANO_N_JUNHO_ACUM = 'nd'; var PESO_FSE_COMUNICACAO_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMUNICACAO_VN_ANO_N_JUNHO_ACUM= FSE_COMUNICACAO_ANO_N_JUNHO_ACUM/IND_VN_ANO_N_JUNHO_ACUM*100; var PESO_FSE_COMUNICACAO_VN_ANO_N_JUNHO_ACUM_MAX_MIN = PESO_FSE_COMUNICACAO_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_COMUNICACAO_VN_ANO_N_JULHO_ACUM = 'nd'; var PESO_FSE_COMUNICACAO_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMUNICACAO_VN_ANO_N_JULHO_ACUM= FSE_COMUNICACAO_ANO_N_JULHO_ACUM/IND_VN_ANO_N_JULHO_ACUM*100; var PESO_FSE_COMUNICACAO_VN_ANO_N_JULHO_ACUM_MAX_MIN = PESO_FSE_COMUNICACAO_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_COMUNICACAO_VN_ANO_N_AGOSTO_ACUM = 'nd'; var PESO_FSE_COMUNICACAO_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMUNICACAO_VN_ANO_N_AGOSTO_ACUM= FSE_COMUNICACAO_ANO_N_AGOSTO_ACUM/IND_VN_ANO_N_AGOSTO_ACUM*100; var PESO_FSE_COMUNICACAO_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = PESO_FSE_COMUNICACAO_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_COMUNICACAO_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var PESO_FSE_COMUNICACAO_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMUNICACAO_VN_ANO_N_SETEMBRO_ACUM= FSE_COMUNICACAO_ANO_N_SETEMBRO_ACUM/IND_VN_ANO_N_SETEMBRO_ACUM*100; var PESO_FSE_COMUNICACAO_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_COMUNICACAO_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_COMUNICACAO_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var PESO_FSE_COMUNICACAO_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMUNICACAO_VN_ANO_N_OUTUBRO_ACUM= FSE_COMUNICACAO_ANO_N_OUTUBRO_ACUM/IND_VN_ANO_N_OUTUBRO_ACUM*100; var PESO_FSE_COMUNICACAO_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_COMUNICACAO_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_COMUNICACAO_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_COMUNICACAO_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMUNICACAO_VN_ANO_N_NOVEMBRO_ACUM= FSE_COMUNICACAO_ANO_N_NOVEMBRO_ACUM/IND_VN_ANO_N_NOVEMBRO_ACUM*100; var PESO_FSE_COMUNICACAO_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_COMUNICACAO_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_COMUNICACAO_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_COMUNICACAO_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMUNICACAO_VN_ANO_N_DEZEMBRO_ACUM= FSE_COMUNICACAO_ANO_N_DEZEMBRO_ACUM/IND_VN_ANO_N_DEZEMBRO_ACUM*100; var PESO_FSE_COMUNICACAO_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_COMUNICACAO_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_COMUNICACAO_VN_ANO_N_1_JANEIRO_ACUM = 'nd'; var PESO_FSE_COMUNICACAO_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMUNICACAO_VN_ANO_N_1_JANEIRO_ACUM= FSE_COMUNICACAO_ANO_N_1_JANEIRO_ACUM/IND_VN_ANO_N_1_JANEIRO_ACUM*100; var PESO_FSE_COMUNICACAO_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = PESO_FSE_COMUNICACAO_VN_ANO_N_1_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_COMUNICACAO_VN_ANO_N_1_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_COMUNICACAO_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMUNICACAO_VN_ANO_N_1_FEVEREIRO_ACUM= FSE_COMUNICACAO_ANO_N_1_FEVEREIRO_ACUM/IND_VN_ANO_N_1_FEVEREIRO_ACUM*100; var PESO_FSE_COMUNICACAO_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_COMUNICACAO_VN_ANO_N_1_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_COMUNICACAO_VN_ANO_N_1_MARCO_ACUM = 'nd'; var PESO_FSE_COMUNICACAO_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMUNICACAO_VN_ANO_N_1_MARCO_ACUM= FSE_COMUNICACAO_ANO_N_1_MARCO_ACUM/IND_VN_ANO_N_1_MARCO_ACUM*100; var PESO_FSE_COMUNICACAO_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = PESO_FSE_COMUNICACAO_VN_ANO_N_1_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_COMUNICACAO_VN_ANO_N_1_ABRIL_ACUM = 'nd'; var PESO_FSE_COMUNICACAO_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMUNICACAO_VN_ANO_N_1_ABRIL_ACUM= FSE_COMUNICACAO_ANO_N_1_ABRIL_ACUM/IND_VN_ANO_N_1_ABRIL_ACUM*100; var PESO_FSE_COMUNICACAO_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = PESO_FSE_COMUNICACAO_VN_ANO_N_1_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_COMUNICACAO_VN_ANO_N_1_MAIO_ACUM = 'nd'; var PESO_FSE_COMUNICACAO_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMUNICACAO_VN_ANO_N_1_MAIO_ACUM= FSE_COMUNICACAO_ANO_N_1_MAIO_ACUM/IND_VN_ANO_N_1_MAIO_ACUM*100; var PESO_FSE_COMUNICACAO_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = PESO_FSE_COMUNICACAO_VN_ANO_N_1_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_COMUNICACAO_VN_ANO_N_1_JUNHO_ACUM = 'nd'; var PESO_FSE_COMUNICACAO_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMUNICACAO_VN_ANO_N_1_JUNHO_ACUM= FSE_COMUNICACAO_ANO_N_1_JUNHO_ACUM/IND_VN_ANO_N_1_JUNHO_ACUM*100; var PESO_FSE_COMUNICACAO_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = PESO_FSE_COMUNICACAO_VN_ANO_N_1_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_COMUNICACAO_VN_ANO_N_1_JULHO_ACUM = 'nd'; var PESO_FSE_COMUNICACAO_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMUNICACAO_VN_ANO_N_1_JULHO_ACUM= FSE_COMUNICACAO_ANO_N_1_JULHO_ACUM/IND_VN_ANO_N_1_JULHO_ACUM*100; var PESO_FSE_COMUNICACAO_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = PESO_FSE_COMUNICACAO_VN_ANO_N_1_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_COMUNICACAO_VN_ANO_N_1_AGOSTO_ACUM = 'nd'; var PESO_FSE_COMUNICACAO_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMUNICACAO_VN_ANO_N_1_AGOSTO_ACUM= FSE_COMUNICACAO_ANO_N_1_AGOSTO_ACUM/IND_VN_ANO_N_1_AGOSTO_ACUM*100; var PESO_FSE_COMUNICACAO_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = PESO_FSE_COMUNICACAO_VN_ANO_N_1_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_COMUNICACAO_VN_ANO_N_1_SETEMBRO_ACUM = 'nd'; var PESO_FSE_COMUNICACAO_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMUNICACAO_VN_ANO_N_1_SETEMBRO_ACUM= FSE_COMUNICACAO_ANO_N_1_SETEMBRO_ACUM/IND_VN_ANO_N_1_SETEMBRO_ACUM*100; var PESO_FSE_COMUNICACAO_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_COMUNICACAO_VN_ANO_N_1_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_COMUNICACAO_VN_ANO_N_1_OUTUBRO_ACUM = 'nd'; var PESO_FSE_COMUNICACAO_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMUNICACAO_VN_ANO_N_1_OUTUBRO_ACUM= FSE_COMUNICACAO_ANO_N_1_OUTUBRO_ACUM/IND_VN_ANO_N_1_OUTUBRO_ACUM*100; var PESO_FSE_COMUNICACAO_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_COMUNICACAO_VN_ANO_N_1_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_COMUNICACAO_VN_ANO_N_1_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_COMUNICACAO_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMUNICACAO_VN_ANO_N_1_NOVEMBRO_ACUM= FSE_COMUNICACAO_ANO_N_1_NOVEMBRO_ACUM/IND_VN_ANO_N_1_NOVEMBRO_ACUM*100; var PESO_FSE_COMUNICACAO_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_COMUNICACAO_VN_ANO_N_1_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_COMUNICACAO_VN_ANO_N_1_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_COMUNICACAO_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMUNICACAO_VN_ANO_N_1_DEZEMBRO_ACUM= FSE_COMUNICACAO_ANO_N_1_DEZEMBRO_ACUM/IND_VN_ANO_N_1_DEZEMBRO_ACUM*100; var PESO_FSE_COMUNICACAO_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_COMUNICACAO_VN_ANO_N_1_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_VN_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JANEIRO_ACUM= ((IND_VN_ANO_N_JANEIRO_ACUM-IND_VN_ANO_N_1_JANEIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_JANEIRO_ACUM))*100; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_FEVEREIRO_ACUM= ((IND_VN_ANO_N_FEVEREIRO_ACUM-IND_VN_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_VN_ANO_N_MARCO_ACUM = 'nd'; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MARCO_ACUM= ((IND_VN_ANO_N_MARCO_ACUM-IND_VN_ANO_N_1_MARCO_ACUM)/Math.abs(IND_VN_ANO_N_1_MARCO_ACUM))*100; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = VAR_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_VN_ANO_N_ABRIL_ACUM = 'nd'; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_ABRIL_ACUM= ((IND_VN_ANO_N_ABRIL_ACUM-IND_VN_ANO_N_1_ABRIL_ACUM)/Math.abs(IND_VN_ANO_N_1_ABRIL_ACUM))*100; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_VN_ANO_N_MAIO_ACUM = 'nd'; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MAIO_ACUM= ((IND_VN_ANO_N_MAIO_ACUM-IND_VN_ANO_N_1_MAIO_ACUM)/Math.abs(IND_VN_ANO_N_1_MAIO_ACUM))*100; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = VAR_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_VN_ANO_N_JUNHO_ACUM = 'nd'; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JUNHO_ACUM= ((IND_VN_ANO_N_JUNHO_ACUM-IND_VN_ANO_N_1_JUNHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JUNHO_ACUM))*100; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_VN_ANO_N_JULHO_ACUM = 'nd'; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JULHO_ACUM= ((IND_VN_ANO_N_JULHO_ACUM-IND_VN_ANO_N_1_JULHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JULHO_ACUM))*100; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_VN_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_AGOSTO_ACUM= ((IND_VN_ANO_N_AGOSTO_ACUM-IND_VN_ANO_N_1_AGOSTO_ACUM)/Math.abs(IND_VN_ANO_N_1_AGOSTO_ACUM))*100; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_SETEMBRO_ACUM= ((IND_VN_ANO_N_SETEMBRO_ACUM-IND_VN_ANO_N_1_SETEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_OUTUBRO_ACUM= ((IND_VN_ANO_N_OUTUBRO_ACUM-IND_VN_ANO_N_1_OUTUBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_NOVEMBRO_ACUM= ((IND_VN_ANO_N_NOVEMBRO_ACUM-IND_VN_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_DEZEMBRO_ACUM= ((IND_VN_ANO_N_DEZEMBRO_ACUM-IND_VN_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_FSE_COMUNICACAO_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_FSE_COMUNICACAO_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMUNICACAO_ANO_N_JANEIRO_ACUM= ((FSE_COMUNICACAO_ANO_N_JANEIRO_ACUM-FSE_COMUNICACAO_ANO_N_1_JANEIRO_ACUM)/Math.abs(FSE_COMUNICACAO_ANO_N_1_JANEIRO_ACUM))*100; var VAR_FSE_COMUNICACAO_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_FSE_COMUNICACAO_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_FSE_COMUNICACAO_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_FSE_COMUNICACAO_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMUNICACAO_ANO_N_FEVEREIRO_ACUM= ((FSE_COMUNICACAO_ANO_N_FEVEREIRO_ACUM-FSE_COMUNICACAO_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(FSE_COMUNICACAO_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_FSE_COMUNICACAO_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_FSE_COMUNICACAO_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_FSE_COMUNICACAO_ANO_N_MARCO_ACUM = 'nd'; var VAR_FSE_COMUNICACAO_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMUNICACAO_ANO_N_MARCO_ACUM= ((FSE_COMUNICACAO_ANO_N_MARCO_ACUM-FSE_COMUNICACAO_ANO_N_1_MARCO_ACUM)/Math.abs(FSE_COMUNICACAO_ANO_N_1_MARCO_ACUM))*100; var VAR_FSE_COMUNICACAO_ANO_N_MARCO_ACUM_MAX_MIN = VAR_FSE_COMUNICACAO_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_FSE_COMUNICACAO_ANO_N_ABRIL_ACUM = 'nd'; var VAR_FSE_COMUNICACAO_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMUNICACAO_ANO_N_ABRIL_ACUM= ((FSE_COMUNICACAO_ANO_N_ABRIL_ACUM-FSE_COMUNICACAO_ANO_N_1_ABRIL_ACUM)/Math.abs(FSE_COMUNICACAO_ANO_N_1_ABRIL_ACUM))*100; var VAR_FSE_COMUNICACAO_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_FSE_COMUNICACAO_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_FSE_COMUNICACAO_ANO_N_MAIO_ACUM = 'nd'; var VAR_FSE_COMUNICACAO_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMUNICACAO_ANO_N_MAIO_ACUM= ((FSE_COMUNICACAO_ANO_N_MAIO_ACUM-FSE_COMUNICACAO_ANO_N_1_MAIO_ACUM)/Math.abs(FSE_COMUNICACAO_ANO_N_1_MAIO_ACUM))*100; var VAR_FSE_COMUNICACAO_ANO_N_MAIO_ACUM_MAX_MIN = VAR_FSE_COMUNICACAO_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_FSE_COMUNICACAO_ANO_N_JUNHO_ACUM = 'nd'; var VAR_FSE_COMUNICACAO_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMUNICACAO_ANO_N_JUNHO_ACUM= ((FSE_COMUNICACAO_ANO_N_JUNHO_ACUM-FSE_COMUNICACAO_ANO_N_1_JUNHO_ACUM)/Math.abs(FSE_COMUNICACAO_ANO_N_1_JUNHO_ACUM))*100; var VAR_FSE_COMUNICACAO_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_FSE_COMUNICACAO_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_FSE_COMUNICACAO_ANO_N_JULHO_ACUM = 'nd'; var VAR_FSE_COMUNICACAO_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMUNICACAO_ANO_N_JULHO_ACUM= ((FSE_COMUNICACAO_ANO_N_JULHO_ACUM-FSE_COMUNICACAO_ANO_N_1_JULHO_ACUM)/Math.abs(FSE_COMUNICACAO_ANO_N_1_JULHO_ACUM))*100; var VAR_FSE_COMUNICACAO_ANO_N_JULHO_ACUM_MAX_MIN = VAR_FSE_COMUNICACAO_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_FSE_COMUNICACAO_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_FSE_COMUNICACAO_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMUNICACAO_ANO_N_AGOSTO_ACUM= ((FSE_COMUNICACAO_ANO_N_AGOSTO_ACUM-FSE_COMUNICACAO_ANO_N_1_AGOSTO_ACUM)/Math.abs(FSE_COMUNICACAO_ANO_N_1_AGOSTO_ACUM))*100; var VAR_FSE_COMUNICACAO_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_FSE_COMUNICACAO_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_FSE_COMUNICACAO_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_FSE_COMUNICACAO_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMUNICACAO_ANO_N_SETEMBRO_ACUM= ((FSE_COMUNICACAO_ANO_N_SETEMBRO_ACUM-FSE_COMUNICACAO_ANO_N_1_SETEMBRO_ACUM)/Math.abs(FSE_COMUNICACAO_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_FSE_COMUNICACAO_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_FSE_COMUNICACAO_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_FSE_COMUNICACAO_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_FSE_COMUNICACAO_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMUNICACAO_ANO_N_OUTUBRO_ACUM= ((FSE_COMUNICACAO_ANO_N_OUTUBRO_ACUM-FSE_COMUNICACAO_ANO_N_1_OUTUBRO_ACUM)/Math.abs(FSE_COMUNICACAO_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_FSE_COMUNICACAO_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_FSE_COMUNICACAO_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_FSE_COMUNICACAO_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_FSE_COMUNICACAO_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMUNICACAO_ANO_N_NOVEMBRO_ACUM= ((FSE_COMUNICACAO_ANO_N_NOVEMBRO_ACUM-FSE_COMUNICACAO_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(FSE_COMUNICACAO_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_FSE_COMUNICACAO_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_FSE_COMUNICACAO_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_FSE_COMUNICACAO_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_FSE_COMUNICACAO_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMUNICACAO_ANO_N_DEZEMBRO_ACUM= ((FSE_COMUNICACAO_ANO_N_DEZEMBRO_ACUM-FSE_COMUNICACAO_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(FSE_COMUNICACAO_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_FSE_COMUNICACAO_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_FSE_COMUNICACAO_ANO_N_DEZEMBRO_ACUM };

    if( PESO_FSE_COMUNICACAO_VN_ANO_N_1_JANEIRO_ACUM > PESO_FSE_COMUNICACAO_VN_ANO_N_JANEIRO_ACUM) { var  INEFICIENCIA_FSE_COMUNICACAO_ANO_N_JANEIRO_ACUM=PESO_FSE_COMUNICACAO_VN_ANO_N_1_JANEIRO_ACUM ; } else { var  INEFICIENCIA_FSE_COMUNICACAO_ANO_N_JANEIRO_ACUM=PESO_FSE_COMUNICACAO_VN_ANO_N_JANEIRO_ACUM ; }
    if( PESO_FSE_COMUNICACAO_VN_ANO_N_1_FEVEREIRO_ACUM > PESO_FSE_COMUNICACAO_VN_ANO_N_FEVEREIRO_ACUM) { var  INEFICIENCIA_FSE_COMUNICACAO_ANO_N_FEVEREIRO_ACUM=PESO_FSE_COMUNICACAO_VN_ANO_N_1_FEVEREIRO_ACUM ; } else { var  INEFICIENCIA_FSE_COMUNICACAO_ANO_N_FEVEREIRO_ACUM=PESO_FSE_COMUNICACAO_VN_ANO_N_FEVEREIRO_ACUM ; }
    if( PESO_FSE_COMUNICACAO_VN_ANO_N_1_MARCO_ACUM > PESO_FSE_COMUNICACAO_VN_ANO_N_MARCO_ACUM) { var  INEFICIENCIA_FSE_COMUNICACAO_ANO_N_MARCO_ACUM=PESO_FSE_COMUNICACAO_VN_ANO_N_1_MARCO_ACUM ; } else { var  INEFICIENCIA_FSE_COMUNICACAO_ANO_N_MARCO_ACUM=PESO_FSE_COMUNICACAO_VN_ANO_N_MARCO_ACUM ; }
    if( PESO_FSE_COMUNICACAO_VN_ANO_N_1_ABRIL_ACUM > PESO_FSE_COMUNICACAO_VN_ANO_N_ABRIL_ACUM) { var  INEFICIENCIA_FSE_COMUNICACAO_ANO_N_ABRIL_ACUM=PESO_FSE_COMUNICACAO_VN_ANO_N_1_ABRIL_ACUM ; } else { var  INEFICIENCIA_FSE_COMUNICACAO_ANO_N_ABRIL_ACUM=PESO_FSE_COMUNICACAO_VN_ANO_N_ABRIL_ACUM ; }
    if( PESO_FSE_COMUNICACAO_VN_ANO_N_1_MAIO_ACUM > PESO_FSE_COMUNICACAO_VN_ANO_N_MAIO_ACUM) { var  INEFICIENCIA_FSE_COMUNICACAO_ANO_N_MAIO_ACUM=PESO_FSE_COMUNICACAO_VN_ANO_N_1_MAIO_ACUM ; } else { var  INEFICIENCIA_FSE_COMUNICACAO_ANO_N_MAIO_ACUM=PESO_FSE_COMUNICACAO_VN_ANO_N_MAIO_ACUM ; }
    if( PESO_FSE_COMUNICACAO_VN_ANO_N_1_JUNHO_ACUM > PESO_FSE_COMUNICACAO_VN_ANO_N_JUNHO_ACUM) { var  INEFICIENCIA_FSE_COMUNICACAO_ANO_N_JUNHO_ACUM=PESO_FSE_COMUNICACAO_VN_ANO_N_1_JUNHO_ACUM ; } else { var  INEFICIENCIA_FSE_COMUNICACAO_ANO_N_JUNHO_ACUM=PESO_FSE_COMUNICACAO_VN_ANO_N_JUNHO_ACUM ; }
    if( PESO_FSE_COMUNICACAO_VN_ANO_N_1_JULHO_ACUM > PESO_FSE_COMUNICACAO_VN_ANO_N_JULHO_ACUM) { var  INEFICIENCIA_FSE_COMUNICACAO_ANO_N_JULHO_ACUM=PESO_FSE_COMUNICACAO_VN_ANO_N_1_JULHO_ACUM ; } else { var  INEFICIENCIA_FSE_COMUNICACAO_ANO_N_JULHO_ACUM=PESO_FSE_COMUNICACAO_VN_ANO_N_JULHO_ACUM ; }
    if( PESO_FSE_COMUNICACAO_VN_ANO_N_1_AGOSTO_ACUM > PESO_FSE_COMUNICACAO_VN_ANO_N_AGOSTO_ACUM) { var  INEFICIENCIA_FSE_COMUNICACAO_ANO_N_AGOSTO_ACUM=PESO_FSE_COMUNICACAO_VN_ANO_N_1_AGOSTO_ACUM ; } else { var  INEFICIENCIA_FSE_COMUNICACAO_ANO_N_AGOSTO_ACUM=PESO_FSE_COMUNICACAO_VN_ANO_N_AGOSTO_ACUM ; }
    if( PESO_FSE_COMUNICACAO_VN_ANO_N_1_SETEMBRO_ACUM > PESO_FSE_COMUNICACAO_VN_ANO_N_SETEMBRO_ACUM) { var  INEFICIENCIA_FSE_COMUNICACAO_ANO_N_SETEMBRO_ACUM=PESO_FSE_COMUNICACAO_VN_ANO_N_1_SETEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_COMUNICACAO_ANO_N_SETEMBRO_ACUM=PESO_FSE_COMUNICACAO_VN_ANO_N_SETEMBRO_ACUM ; }
    if( PESO_FSE_COMUNICACAO_VN_ANO_N_1_OUTUBRO_ACUM > PESO_FSE_COMUNICACAO_VN_ANO_N_OUTUBRO_ACUM) { var  INEFICIENCIA_FSE_COMUNICACAO_ANO_N_OUTUBRO_ACUM=PESO_FSE_COMUNICACAO_VN_ANO_N_1_OUTUBRO_ACUM ; } else { var  INEFICIENCIA_FSE_COMUNICACAO_ANO_N_OUTUBRO_ACUM=PESO_FSE_COMUNICACAO_VN_ANO_N_OUTUBRO_ACUM ; }
    if( PESO_FSE_COMUNICACAO_VN_ANO_N_1_NOVEMBRO_ACUM > PESO_FSE_COMUNICACAO_VN_ANO_N_NOVEMBRO_ACUM) { var  INEFICIENCIA_FSE_COMUNICACAO_ANO_N_NOVEMBRO_ACUM=PESO_FSE_COMUNICACAO_VN_ANO_N_1_NOVEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_COMUNICACAO_ANO_N_NOVEMBRO_ACUM=PESO_FSE_COMUNICACAO_VN_ANO_N_NOVEMBRO_ACUM ; }
    if( PESO_FSE_COMUNICACAO_VN_ANO_N_1_DEZEMBRO_ACUM > PESO_FSE_COMUNICACAO_VN_ANO_N_DEZEMBRO_ACUM) { var  INEFICIENCIA_FSE_COMUNICACAO_ANO_N_DEZEMBRO_ACUM=PESO_FSE_COMUNICACAO_VN_ANO_N_1_DEZEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_COMUNICACAO_ANO_N_DEZEMBRO_ACUM=PESO_FSE_COMUNICACAO_VN_ANO_N_DEZEMBRO_ACUM ; }



    var fillBetweenLinesPlugin = {
        afterDatasetsDraw: function (chart) {
            var ctx = chart.chart.ctx;
            var xaxis = chart.scales['x-axis-0'];
            var yaxis = chart.scales['y-axis-0'];
            var datasets = chart.data.datasets;
            ctx.save();

            for (var d = 0; d < datasets.length; d++) {
                var dataset = datasets[d];
                if (dataset.fillBetweenSet == undefined) {
                    continue;
                }

                // get meta for both data sets
                var meta1 = chart.getDatasetMeta(d);
                var meta2 = chart.getDatasetMeta(dataset.fillBetweenSet);

                // do not draw fill if one of the datasets is hidden
                if (meta1.hidden || meta2.hidden) continue;

                // create fill areas in pairs
                for (var p = 0; p < meta1.data.length-1;p++) {
                    // if null skip
                    if (dataset.data[p] == null || dataset.data[p+1] == null) continue;

                    ctx.beginPath();

                    // trace line 1
                    var curr = meta1.data[p];
                    var next = meta1.data[p+1];
                    ctx.moveTo(curr._view.x, curr._view.y);
                    ctx.lineTo(curr._view.x, curr._view.y);
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(next._view.x, curr._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        ctx.bezierCurveTo(
                          curr._view.controlPointNextX,
                          curr._view.controlPointNextY,
                          next._view.controlPointPreviousX,
                          next._view.controlPointPreviousY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // connect dataset1 to dataset2
                    var curr = meta2.data[p+1];
                    var next = meta2.data[p];
                    ctx.lineTo(curr._view.x, curr._view.y);

                    // trace BACKWORDS set2 to complete the box
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(curr._view.x, next._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        // reverse bezier
                        ctx.bezierCurveTo(
                          curr._view.controlPointPreviousX,
                          curr._view.controlPointPreviousY,
                          next._view.controlPointNextX,
                          next._view.controlPointNextY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // close the loop and fill with shading
                    ctx.closePath();
                    ctx.fillStyle = dataset.fillBetweenColor || "rgba(0,0,0,0.1)";
                    ctx.fill();
                } // end for p loop
            }
        } // end afterDatasetsDraw
    }; // end fillBetweenLinesPlugin

    Chart.pluginService.register(fillBetweenLinesPlugin);



    var GRAFICO_FSE_RESULT_MENSAL_COMP_047=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_047').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_047=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_047, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label:  'Peso ComunicaçãovsVN(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   //borderColor: "#F00",
                   fill: false,
                   steppedLine: false,
                   tension: 0.5,
                   fillBetweenSet: 1,
                   fillBetweenColor: "rgba(0, 221, 0, 0.1)",
                   data: [
                   PESO_FSE_COMUNICACAO_VN_ANO_N_JANEIRO_ACUM,
                   PESO_FSE_COMUNICACAO_VN_ANO_N_FEVEREIRO_ACUM,
                   PESO_FSE_COMUNICACAO_VN_ANO_N_MARCO_ACUM,
                   PESO_FSE_COMUNICACAO_VN_ANO_N_ABRIL_ACUM,
                   PESO_FSE_COMUNICACAO_VN_ANO_N_MAIO_ACUM,
                   PESO_FSE_COMUNICACAO_VN_ANO_N_JUNHO_ACUM,
                   PESO_FSE_COMUNICACAO_VN_ANO_N_JULHO_ACUM,
                   PESO_FSE_COMUNICACAO_VN_ANO_N_AGOSTO_ACUM,
                   PESO_FSE_COMUNICACAO_VN_ANO_N_SETEMBRO_ACUM,
                   PESO_FSE_COMUNICACAO_VN_ANO_N_OUTUBRO_ACUM,
                   PESO_FSE_COMUNICACAO_VN_ANO_N_NOVEMBRO_ACUM,
                   PESO_FSE_COMUNICACAO_VN_ANO_N_DEZEMBRO_ACUM,

                   ],
                   type: 'line'


               },
                {
                    label: 'Peso ComunicaçãovsVN(ac) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'A',
                    //backgroundColor: 'rgb(17, 121, 240)',
                    borderColor: 'rgb(0,221,0)',
                    //borderColor: "#00F",
                    fill: false,
                    steppedLine: false,
                    tension: 0.5,
                    data: [
                   PESO_FSE_COMUNICACAO_VN_ANO_N_1_JANEIRO_ACUM,
                   PESO_FSE_COMUNICACAO_VN_ANO_N_1_FEVEREIRO_ACUM,
                   PESO_FSE_COMUNICACAO_VN_ANO_N_1_MARCO_ACUM,
                   PESO_FSE_COMUNICACAO_VN_ANO_N_1_ABRIL_ACUM,
                   PESO_FSE_COMUNICACAO_VN_ANO_N_1_MAIO_ACUM,
                   PESO_FSE_COMUNICACAO_VN_ANO_N_1_JUNHO_ACUM,
                   PESO_FSE_COMUNICACAO_VN_ANO_N_1_JULHO_ACUM,
                   PESO_FSE_COMUNICACAO_VN_ANO_N_1_AGOSTO_ACUM,
                   PESO_FSE_COMUNICACAO_VN_ANO_N_1_SETEMBRO_ACUM,
                   PESO_FSE_COMUNICACAO_VN_ANO_N_1_OUTUBRO_ACUM,
                   PESO_FSE_COMUNICACAO_VN_ANO_N_1_NOVEMBRO_ACUM,
                   PESO_FSE_COMUNICACAO_VN_ANO_N_1_DEZEMBRO_ACUM,
                    ],
                    type: 'line'
                },
    {
        label: 'Ineficiência',
        yAxisID: 'A',
        backgroundColor: "rgba(255, 0, 0, 0.2)",
        borderColor: 'rgba(255, 255, 255, 0.1)',
        //borderColor: "#0D0",
        fill: false,
        steppedLine: false,
        tension: 0.5,
        fillBetweenSet: 1,
        fillBetweenColor: "rgba(255, 0, 0, 0.2)",
        data: [
    INEFICIENCIA_FSE_COMUNICACAO_ANO_N_JANEIRO_ACUM,
    INEFICIENCIA_FSE_COMUNICACAO_ANO_N_FEVEREIRO_ACUM,
    INEFICIENCIA_FSE_COMUNICACAO_ANO_N_MARCO_ACUM,
    INEFICIENCIA_FSE_COMUNICACAO_ANO_N_ABRIL_ACUM,
    INEFICIENCIA_FSE_COMUNICACAO_ANO_N_MAIO_ACUM,
    INEFICIENCIA_FSE_COMUNICACAO_ANO_N_JUNHO_ACUM,
    INEFICIENCIA_FSE_COMUNICACAO_ANO_N_JULHO_ACUM,
    INEFICIENCIA_FSE_COMUNICACAO_ANO_N_AGOSTO_ACUM,
    INEFICIENCIA_FSE_COMUNICACAO_ANO_N_SETEMBRO_ACUM,
    INEFICIENCIA_FSE_COMUNICACAO_ANO_N_OUTUBRO_ACUM,
    INEFICIENCIA_FSE_COMUNICACAO_ANO_N_NOVEMBRO_ACUM,
    INEFICIENCIA_FSE_COMUNICACAO_ANO_N_DEZEMBRO_ACUM,
        ],
        type: 'line'
    },

            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_COMUNICACAO COMP',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                //min:  Math.round(FSE_COMUNICACAO_Mensal_Eixo_min_princ__,0),
                                                //max:  Math.round(FSE_COMUNICACAO_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString()+ "%";
                                                }
                                            }
                                        },







                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_048-----------------------------------------------------------*@
<script>

    if(@ViewData["MES_ACUM_REAL"]<1){ var IND_VN_ANO_N_JANEIRO = 'nd'; var IND_VN_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JANEIRO"]))); var IND_VN_ANO_N_JANEIRO_MAX_MIN = IND_VN_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var IND_VN_ANO_N_FEVEREIRO = 'nd'; var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_FEVEREIRO"]))); var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = IND_VN_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var IND_VN_ANO_N_MARCO = 'nd'; var IND_VN_ANO_N_MARCO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MARCO"]))); var IND_VN_ANO_N_MARCO_MAX_MIN = IND_VN_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var IND_VN_ANO_N_ABRIL = 'nd'; var IND_VN_ANO_N_ABRIL_MAX_MIN = 0;  } else { var IND_VN_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_ABRIL"]))); var IND_VN_ANO_N_ABRIL_MAX_MIN = IND_VN_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var IND_VN_ANO_N_MAIO = 'nd'; var IND_VN_ANO_N_MAIO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MAIO"]))); var IND_VN_ANO_N_MAIO_MAX_MIN = IND_VN_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var IND_VN_ANO_N_JUNHO = 'nd'; var IND_VN_ANO_N_JUNHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JUNHO"]))); var IND_VN_ANO_N_JUNHO_MAX_MIN = IND_VN_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var IND_VN_ANO_N_JULHO = 'nd'; var IND_VN_ANO_N_JULHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JULHO"]))); var IND_VN_ANO_N_JULHO_MAX_MIN = IND_VN_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var IND_VN_ANO_N_AGOSTO = 'nd'; var IND_VN_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_AGOSTO"]))); var IND_VN_ANO_N_AGOSTO_MAX_MIN = IND_VN_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var IND_VN_ANO_N_SETEMBRO = 'nd'; var IND_VN_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_SETEMBRO"]))); var IND_VN_ANO_N_SETEMBRO_MAX_MIN = IND_VN_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var IND_VN_ANO_N_OUTUBRO = 'nd'; var IND_VN_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_OUTUBRO"]))); var IND_VN_ANO_N_OUTUBRO_MAX_MIN = IND_VN_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var IND_VN_ANO_N_NOVEMBRO = 'nd'; var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_NOVEMBRO"]))); var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = IND_VN_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var IND_VN_ANO_N_DEZEMBRO = 'nd'; var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_DEZEMBRO"]))); var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = IND_VN_ANO_N_DEZEMBRO };

    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_SEGUROS_ANO_N_JANEIRO = 'nd'; var FSE_SEGUROS_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var FSE_SEGUROS_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_JANEIRO"]))); var FSE_SEGUROS_ANO_N_JANEIRO_MAX_MIN = FSE_SEGUROS_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_SEGUROS_ANO_N_FEVEREIRO = 'nd'; var FSE_SEGUROS_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var FSE_SEGUROS_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_FEVEREIRO"]))); var FSE_SEGUROS_ANO_N_FEVEREIRO_MAX_MIN = FSE_SEGUROS_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_SEGUROS_ANO_N_MARCO = 'nd'; var FSE_SEGUROS_ANO_N_MARCO_MAX_MIN = 0;  } else { var FSE_SEGUROS_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_MARCO"]))); var FSE_SEGUROS_ANO_N_MARCO_MAX_MIN = FSE_SEGUROS_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_SEGUROS_ANO_N_ABRIL = 'nd'; var FSE_SEGUROS_ANO_N_ABRIL_MAX_MIN = 0;  } else { var FSE_SEGUROS_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_ABRIL"]))); var FSE_SEGUROS_ANO_N_ABRIL_MAX_MIN = FSE_SEGUROS_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_SEGUROS_ANO_N_MAIO = 'nd'; var FSE_SEGUROS_ANO_N_MAIO_MAX_MIN = 0;  } else { var FSE_SEGUROS_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_MAIO"]))); var FSE_SEGUROS_ANO_N_MAIO_MAX_MIN = FSE_SEGUROS_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_SEGUROS_ANO_N_JUNHO = 'nd'; var FSE_SEGUROS_ANO_N_JUNHO_MAX_MIN = 0;  } else { var FSE_SEGUROS_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_JUNHO"]))); var FSE_SEGUROS_ANO_N_JUNHO_MAX_MIN = FSE_SEGUROS_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_SEGUROS_ANO_N_JULHO = 'nd'; var FSE_SEGUROS_ANO_N_JULHO_MAX_MIN = 0;  } else { var FSE_SEGUROS_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_JULHO"]))); var FSE_SEGUROS_ANO_N_JULHO_MAX_MIN = FSE_SEGUROS_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_SEGUROS_ANO_N_AGOSTO = 'nd'; var FSE_SEGUROS_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var FSE_SEGUROS_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_AGOSTO"]))); var FSE_SEGUROS_ANO_N_AGOSTO_MAX_MIN = FSE_SEGUROS_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_SEGUROS_ANO_N_SETEMBRO = 'nd'; var FSE_SEGUROS_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var FSE_SEGUROS_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_SETEMBRO"]))); var FSE_SEGUROS_ANO_N_SETEMBRO_MAX_MIN = FSE_SEGUROS_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_SEGUROS_ANO_N_OUTUBRO = 'nd'; var FSE_SEGUROS_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var FSE_SEGUROS_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_OUTUBRO"]))); var FSE_SEGUROS_ANO_N_OUTUBRO_MAX_MIN = FSE_SEGUROS_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_SEGUROS_ANO_N_NOVEMBRO = 'nd'; var FSE_SEGUROS_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var FSE_SEGUROS_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_NOVEMBRO"]))); var FSE_SEGUROS_ANO_N_NOVEMBRO_MAX_MIN = FSE_SEGUROS_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_SEGUROS_ANO_N_DEZEMBRO = 'nd'; var FSE_SEGUROS_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var FSE_SEGUROS_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_DEZEMBRO"]))); var FSE_SEGUROS_ANO_N_DEZEMBRO_MAX_MIN = FSE_SEGUROS_ANO_N_DEZEMBRO };


    var FSE_SEGUROS_ANO_N_JANEIRO_ACUM = FSE_SEGUROS_ANO_N_JANEIRO;
    var FSE_SEGUROS_ANO_N_FEVEREIRO_ACUM = FSE_SEGUROS_ANO_N_FEVEREIRO + FSE_SEGUROS_ANO_N_JANEIRO_ACUM;
    var FSE_SEGUROS_ANO_N_MARCO_ACUM = FSE_SEGUROS_ANO_N_MARCO + FSE_SEGUROS_ANO_N_FEVEREIRO_ACUM;
    var FSE_SEGUROS_ANO_N_ABRIL_ACUM = FSE_SEGUROS_ANO_N_ABRIL + FSE_SEGUROS_ANO_N_MARCO_ACUM;
    var FSE_SEGUROS_ANO_N_MAIO_ACUM = FSE_SEGUROS_ANO_N_MAIO + FSE_SEGUROS_ANO_N_ABRIL_ACUM;
    var FSE_SEGUROS_ANO_N_JUNHO_ACUM = FSE_SEGUROS_ANO_N_JUNHO + FSE_SEGUROS_ANO_N_MAIO_ACUM;
    var FSE_SEGUROS_ANO_N_JULHO_ACUM = FSE_SEGUROS_ANO_N_JULHO + FSE_SEGUROS_ANO_N_JUNHO_ACUM;
    var FSE_SEGUROS_ANO_N_AGOSTO_ACUM = FSE_SEGUROS_ANO_N_AGOSTO + FSE_SEGUROS_ANO_N_JULHO_ACUM;
    var FSE_SEGUROS_ANO_N_SETEMBRO_ACUM = FSE_SEGUROS_ANO_N_SETEMBRO + FSE_SEGUROS_ANO_N_AGOSTO_ACUM;
    var FSE_SEGUROS_ANO_N_OUTUBRO_ACUM = FSE_SEGUROS_ANO_N_OUTUBRO + FSE_SEGUROS_ANO_N_SETEMBRO_ACUM;
    var FSE_SEGUROS_ANO_N_NOVEMBRO_ACUM = FSE_SEGUROS_ANO_N_NOVEMBRO + FSE_SEGUROS_ANO_N_OUTUBRO_ACUM;
    var FSE_SEGUROS_ANO_N_DEZEMBRO_ACUM = FSE_SEGUROS_ANO_N_DEZEMBRO + FSE_SEGUROS_ANO_N_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_SEGUROS_ANO_N_JANEIRO_ACUM = 'nd'; var FSE_SEGUROS_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var FSE_SEGUROS_ANO_N_JANEIRO_ACUM= FSE_SEGUROS_ANO_N_JANEIRO_ACUM; var FSE_SEGUROS_ANO_N_JANEIRO_ACUM_MAX_MIN = FSE_SEGUROS_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_SEGUROS_ANO_N_FEVEREIRO_ACUM = 'nd'; var FSE_SEGUROS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var FSE_SEGUROS_ANO_N_FEVEREIRO_ACUM= FSE_SEGUROS_ANO_N_FEVEREIRO_ACUM; var FSE_SEGUROS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = FSE_SEGUROS_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_SEGUROS_ANO_N_MARCO_ACUM = 'nd'; var FSE_SEGUROS_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var FSE_SEGUROS_ANO_N_MARCO_ACUM= FSE_SEGUROS_ANO_N_MARCO_ACUM; var FSE_SEGUROS_ANO_N_MARCO_ACUM_MAX_MIN = FSE_SEGUROS_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_SEGUROS_ANO_N_ABRIL_ACUM = 'nd'; var FSE_SEGUROS_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var FSE_SEGUROS_ANO_N_ABRIL_ACUM= FSE_SEGUROS_ANO_N_ABRIL_ACUM; var FSE_SEGUROS_ANO_N_ABRIL_ACUM_MAX_MIN = FSE_SEGUROS_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_SEGUROS_ANO_N_MAIO_ACUM = 'nd'; var FSE_SEGUROS_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var FSE_SEGUROS_ANO_N_MAIO_ACUM= FSE_SEGUROS_ANO_N_MAIO_ACUM; var FSE_SEGUROS_ANO_N_MAIO_ACUM_MAX_MIN = FSE_SEGUROS_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_SEGUROS_ANO_N_JUNHO_ACUM = 'nd'; var FSE_SEGUROS_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var FSE_SEGUROS_ANO_N_JUNHO_ACUM= FSE_SEGUROS_ANO_N_JUNHO_ACUM; var FSE_SEGUROS_ANO_N_JUNHO_ACUM_MAX_MIN = FSE_SEGUROS_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_SEGUROS_ANO_N_JULHO_ACUM = 'nd'; var FSE_SEGUROS_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var FSE_SEGUROS_ANO_N_JULHO_ACUM= FSE_SEGUROS_ANO_N_JULHO_ACUM; var FSE_SEGUROS_ANO_N_JULHO_ACUM_MAX_MIN = FSE_SEGUROS_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_SEGUROS_ANO_N_AGOSTO_ACUM = 'nd'; var FSE_SEGUROS_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var FSE_SEGUROS_ANO_N_AGOSTO_ACUM= FSE_SEGUROS_ANO_N_AGOSTO_ACUM; var FSE_SEGUROS_ANO_N_AGOSTO_ACUM_MAX_MIN = FSE_SEGUROS_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_SEGUROS_ANO_N_SETEMBRO_ACUM = 'nd'; var FSE_SEGUROS_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_SEGUROS_ANO_N_SETEMBRO_ACUM= FSE_SEGUROS_ANO_N_SETEMBRO_ACUM; var FSE_SEGUROS_ANO_N_SETEMBRO_ACUM_MAX_MIN = FSE_SEGUROS_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_SEGUROS_ANO_N_OUTUBRO_ACUM = 'nd'; var FSE_SEGUROS_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var FSE_SEGUROS_ANO_N_OUTUBRO_ACUM= FSE_SEGUROS_ANO_N_OUTUBRO_ACUM; var FSE_SEGUROS_ANO_N_OUTUBRO_ACUM_MAX_MIN = FSE_SEGUROS_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_SEGUROS_ANO_N_NOVEMBRO_ACUM = 'nd'; var FSE_SEGUROS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_SEGUROS_ANO_N_NOVEMBRO_ACUM= FSE_SEGUROS_ANO_N_NOVEMBRO_ACUM; var FSE_SEGUROS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = FSE_SEGUROS_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_SEGUROS_ANO_N_DEZEMBRO_ACUM = 'nd'; var FSE_SEGUROS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_SEGUROS_ANO_N_DEZEMBRO_ACUM= FSE_SEGUROS_ANO_N_DEZEMBRO_ACUM; var FSE_SEGUROS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = FSE_SEGUROS_ANO_N_DEZEMBRO_ACUM };




    var FSE_SEGUROS_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_JANEIRO"])));
    var FSE_SEGUROS_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_FEVEREIRO"]))) + FSE_SEGUROS_ANO_N_1_JANEIRO_ACUM;
    var FSE_SEGUROS_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_MARCO"]))) + FSE_SEGUROS_ANO_N_1_FEVEREIRO_ACUM;
    var FSE_SEGUROS_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_ABRIL"]))) + FSE_SEGUROS_ANO_N_1_MARCO_ACUM;
    var FSE_SEGUROS_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_MAIO"]))) + FSE_SEGUROS_ANO_N_1_ABRIL_ACUM;
    var FSE_SEGUROS_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_JUNHO"]))) + FSE_SEGUROS_ANO_N_1_MAIO_ACUM;
    var FSE_SEGUROS_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_JULHO"]))) + FSE_SEGUROS_ANO_N_1_JUNHO_ACUM;
    var FSE_SEGUROS_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_AGOSTO"]))) + FSE_SEGUROS_ANO_N_1_JULHO_ACUM;
    var FSE_SEGUROS_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_SETEMBRO"]))) + FSE_SEGUROS_ANO_N_1_AGOSTO_ACUM;
    var FSE_SEGUROS_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_OUTUBRO"]))) + FSE_SEGUROS_ANO_N_1_SETEMBRO_ACUM;
    var FSE_SEGUROS_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_NOVEMBRO"]))) + FSE_SEGUROS_ANO_N_1_OUTUBRO_ACUM;
    var FSE_SEGUROS_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_DEZEMBRO"]))) + FSE_SEGUROS_ANO_N_1_NOVEMBRO_ACUM;


    var FSE_SEGUROS_Mensal_Eixo_max_princ= Math.max(
                       FSE_SEGUROS_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_SEGUROS_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_SEGUROS_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_SEGUROS_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_SEGUROS_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_SEGUROS_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_SEGUROS_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_SEGUROS_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_SEGUROS_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_SEGUROS_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_SEGUROS_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_SEGUROS_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_SEGUROS_ANO_N_1_JANEIRO_ACUM,
                       FSE_SEGUROS_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_SEGUROS_ANO_N_1_MARCO_ACUM,
                       FSE_SEGUROS_ANO_N_1_ABRIL_ACUM,
                       FSE_SEGUROS_ANO_N_1_MAIO_ACUM,
                       FSE_SEGUROS_ANO_N_1_JUNHO_ACUM,
                       FSE_SEGUROS_ANO_N_1_JULHO_ACUM,
                       FSE_SEGUROS_ANO_N_1_AGOSTO_ACUM,
                       FSE_SEGUROS_ANO_N_1_SETEMBRO_ACUM,
                       FSE_SEGUROS_ANO_N_1_OUTUBRO_ACUM,
                       FSE_SEGUROS_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_SEGUROS_ANO_N_1_DEZEMBRO_ACUM
                             );
    var FSE_SEGUROS_Mensal_Eixo_min_princ= Math.min(

                       FSE_SEGUROS_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_SEGUROS_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_SEGUROS_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_SEGUROS_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_SEGUROS_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_SEGUROS_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_SEGUROS_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_SEGUROS_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_SEGUROS_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_SEGUROS_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_SEGUROS_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_SEGUROS_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_SEGUROS_ANO_N_1_JANEIRO_ACUM,
                       FSE_SEGUROS_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_SEGUROS_ANO_N_1_MARCO_ACUM,
                       FSE_SEGUROS_ANO_N_1_ABRIL_ACUM,
                       FSE_SEGUROS_ANO_N_1_MAIO_ACUM,
                       FSE_SEGUROS_ANO_N_1_JUNHO_ACUM,
                       FSE_SEGUROS_ANO_N_1_JULHO_ACUM,
                       FSE_SEGUROS_ANO_N_1_AGOSTO_ACUM,
                       FSE_SEGUROS_ANO_N_1_SETEMBRO_ACUM,
                       FSE_SEGUROS_ANO_N_1_OUTUBRO_ACUM,
                       FSE_SEGUROS_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_SEGUROS_ANO_N_1_DEZEMBRO_ACUM
                           );
    var FSE_SEGUROS_Mensal_Eixo_max_secon= Math.max(
                       FSE_SEGUROS_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_SEGUROS_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_SEGUROS_ANO_N_MARCO_MAX_MIN ,
                       FSE_SEGUROS_ANO_N_ABRIL_MAX_MIN ,
                       FSE_SEGUROS_ANO_N_MAIO_MAX_MIN ,
                       FSE_SEGUROS_ANO_N_JUNHO_MAX_MIN ,
                       FSE_SEGUROS_ANO_N_JULHO_MAX_MIN ,
                       FSE_SEGUROS_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_SEGUROS_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_SEGUROS_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_SEGUROS_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_SEGUROS_ANO_N_DEZEMBRO_MAX_MIN ,



                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_DEZEMBRO"])))

                            );
    var FSE_SEGUROS_Mensal_Eixo_min_secon= Math.min(
                       FSE_SEGUROS_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_SEGUROS_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_SEGUROS_ANO_N_MARCO_MAX_MIN ,
                       FSE_SEGUROS_ANO_N_ABRIL_MAX_MIN ,
                       FSE_SEGUROS_ANO_N_MAIO_MAX_MIN ,
                       FSE_SEGUROS_ANO_N_JUNHO_MAX_MIN ,
                       FSE_SEGUROS_ANO_N_JULHO_MAX_MIN ,
                       FSE_SEGUROS_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_SEGUROS_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_SEGUROS_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_SEGUROS_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_SEGUROS_ANO_N_DEZEMBRO_MAX_MIN ,


                           @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_DEZEMBRO"])))

                          );

    //NOTA TA: Aqui trato o minimo e o maximo do eixo principal
    if(Math.abs(FSE_SEGUROS_Mensal_Eixo_max_princ)>=Math.abs(FSE_SEGUROS_Mensal_Eixo_min_princ))
    {
        var FSE_SEGUROS_Mensal_Eixo_max_princ_=(Math.ceil(FSE_SEGUROS_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_SEGUROS_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_SEGUROS_Mensal_Eixo_max_princ),0).toString().length-1);
        var FSE_SEGUROS_Mensal_Eixo_min_princ_= (Math.floor(FSE_SEGUROS_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_SEGUROS_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_SEGUROS_Mensal_Eixo_max_princ),0).toString().length-1);
        //alert(FSE_SEGUROS_Mensal_Eixo_max_princ_);
        //alert(FSE_SEGUROS_Mensal_Eixo_min_princ_);
    }
    else
    {
        var FSE_SEGUROS_Mensal_Eixo_max_princ_=(Math.ceil(FSE_SEGUROS_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_SEGUROS_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_SEGUROS_Mensal_Eixo_min_princ),0).toString().length-1);
        var FSE_SEGUROS_Mensal_Eixo_min_princ_= (Math.floor(FSE_SEGUROS_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_SEGUROS_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_SEGUROS_Mensal_Eixo_min_princ),0).toString().length-1);}

    //NOTA TA: Aqui trato o minimo e o maximo do eixo secundario

    if(Math.abs(FSE_SEGUROS_Mensal_Eixo_max_secon)>=Math.abs(FSE_SEGUROS_Mensal_Eixo_min_secon))
    {
        var FSE_SEGUROS_Mensal_Eixo_max_secon_=(Math.ceil(FSE_SEGUROS_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_SEGUROS_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_SEGUROS_Mensal_Eixo_max_secon),0).toString().length-1);
        var FSE_SEGUROS_Mensal_Eixo_min_secon_= (Math.floor(FSE_SEGUROS_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_SEGUROS_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_SEGUROS_Mensal_Eixo_max_secon),0).toString().length-1);
        //alert(FSE_SEGUROS_Mensal_Eixo_max_secon_);
        //alert(FSE_SEGUROS_Mensal_Eixo_min_secon_);
    }
    else
    {
        var FSE_SEGUROS_Mensal_Eixo_max_secon_=(Math.ceil(FSE_SEGUROS_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_SEGUROS_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_SEGUROS_Mensal_Eixo_min_secon),0).toString().length-1);
        var FSE_SEGUROS_Mensal_Eixo_min_secon_= (Math.floor(FSE_SEGUROS_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_SEGUROS_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_SEGUROS_Mensal_Eixo_min_secon),0).toString().length-1);}


    if(Math.abs(FSE_SEGUROS_Mensal_Eixo_min_princ)/Math.abs(FSE_SEGUROS_Mensal_Eixo_max_princ)>=Math.abs(FSE_SEGUROS_Mensal_Eixo_min_secon)/Math.abs(FSE_SEGUROS_Mensal_Eixo_max_secon))
    { if(FSE_SEGUROS_Mensal_Eixo_max_princ > 0 && FSE_SEGUROS_Mensal_Eixo_min_princ <0 ){ var FSE_SEGUROS_Mensal_Eixo_min_secon__=(FSE_SEGUROS_Mensal_Eixo_min_princ_*FSE_SEGUROS_Mensal_Eixo_max_secon_)/FSE_SEGUROS_Mensal_Eixo_max_princ_;} else { var FSE_SEGUROS_Mensal_Eixo_min_secon__=FSE_SEGUROS_Mensal_Eixo_min_secon_;}
        if(FSE_SEGUROS_Mensal_Eixo_max_secon > 0 && FSE_SEGUROS_Mensal_Eixo_min_secon <0 ){ var FSE_SEGUROS_Mensal_Eixo_min_princ__=(FSE_SEGUROS_Mensal_Eixo_min_secon__*FSE_SEGUROS_Mensal_Eixo_max_princ_)/FSE_SEGUROS_Mensal_Eixo_max_secon_;} else { var FSE_SEGUROS_Mensal_Eixo_min_princ__=FSE_SEGUROS_Mensal_Eixo_min_princ_;}}
    else
    {if(FSE_SEGUROS_Mensal_Eixo_max_secon > 0 && FSE_SEGUROS_Mensal_Eixo_min_secon <0 ){ var FSE_SEGUROS_Mensal_Eixo_min_princ__=(FSE_SEGUROS_Mensal_Eixo_min_secon_*FSE_SEGUROS_Mensal_Eixo_max_princ_)/FSE_SEGUROS_Mensal_Eixo_max_secon_;} else { var FSE_SEGUROS_Mensal_Eixo_min_princ__=FSE_SEGUROS_Mensal_Eixo_min_princ_;}
        if(FSE_SEGUROS_Mensal_Eixo_max_princ > 0 && FSE_SEGUROS_Mensal_Eixo_min_princ <0 ){ var FSE_SEGUROS_Mensal_Eixo_min_secon__=(FSE_SEGUROS_Mensal_Eixo_min_princ__*FSE_SEGUROS_Mensal_Eixo_max_secon_)/FSE_SEGUROS_Mensal_Eixo_max_princ_;} else { var FSE_SEGUROS_Mensal_Eixo_min_secon__=FSE_SEGUROS_Mensal_Eixo_min_secon_;}
    }



    if(Math.abs(FSE_SEGUROS_Mensal_Eixo_max_princ)/Math.abs(FSE_SEGUROS_Mensal_Eixo_min_princ)>=Math.abs(FSE_SEGUROS_Mensal_Eixo_max_secon)/Math.abs(FSE_SEGUROS_Mensal_Eixo_min_secon))
    { if(FSE_SEGUROS_Mensal_Eixo_min_princ > 0 && FSE_SEGUROS_Mensal_Eixo_max_princ <0 ){ var FSE_SEGUROS_Mensal_Eixo_max_secon__=(FSE_SEGUROS_Mensal_Eixo_max_princ_*FSE_SEGUROS_Mensal_Eixo_min_secon_)/FSE_SEGUROS_Mensal_Eixo_min_princ_;} else { var FSE_SEGUROS_Mensal_Eixo_max_secon__=FSE_SEGUROS_Mensal_Eixo_max_secon_;}
        if(FSE_SEGUROS_Mensal_Eixo_min_secon > 0 && FSE_SEGUROS_Mensal_Eixo_max_secon <0 ){ var FSE_SEGUROS_Mensal_Eixo_max_princ__=(FSE_SEGUROS_Mensal_Eixo_max_secon__*FSE_SEGUROS_Mensal_Eixo_min_princ_)/FSE_SEGUROS_Mensal_Eixo_min_secon_;} else { var FSE_SEGUROS_Mensal_Eixo_max_princ__=FSE_SEGUROS_Mensal_Eixo_max_princ_;}}
    else
    {if(FSE_SEGUROS_Mensal_Eixo_min_secon > 0 && FSE_SEGUROS_Mensal_Eixo_max_secon <0 ){ var FSE_SEGUROS_Mensal_Eixo_max_princ__=(FSE_SEGUROS_Mensal_Eixo_max_secon_*FSE_SEGUROS_Mensal_Eixo_min_princ_)/FSE_SEGUROS_Mensal_Eixo_min_secon_;} else { var FSE_SEGUROS_Mensal_Eixo_max_princ__=FSE_SEGUROS_Mensal_Eixo_max_princ_;}
        if(FSE_SEGUROS_Mensal_Eixo_min_princ > 0 && FSE_SEGUROS_Mensal_Eixo_max_princ <0 ){ var FSE_SEGUROS_Mensal_Eixo_max_secon__=(FSE_SEGUROS_Mensal_Eixo_max_princ__*FSE_SEGUROS_Mensal_Eixo_min_secon_)/FSE_SEGUROS_Mensal_Eixo_min_princ_;} else { var FSE_SEGUROS_Mensal_Eixo_max_secon__=FSE_SEGUROS_Mensal_Eixo_max_secon_;}
    }



    var GRAFICO_FSE_RESULT_MENSAL_COMP_048=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_048').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_048=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_048, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label: 'Seguros(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   data: [
                       FSE_SEGUROS_ANO_N_JANEIRO_ACUM,
                       FSE_SEGUROS_ANO_N_FEVEREIRO_ACUM,
                       FSE_SEGUROS_ANO_N_MARCO_ACUM,
                       FSE_SEGUROS_ANO_N_ABRIL_ACUM,
                       FSE_SEGUROS_ANO_N_MAIO_ACUM,
                       FSE_SEGUROS_ANO_N_JUNHO_ACUM,
                       FSE_SEGUROS_ANO_N_JULHO_ACUM,
                       FSE_SEGUROS_ANO_N_AGOSTO_ACUM,
                       FSE_SEGUROS_ANO_N_SETEMBRO_ACUM,
                       FSE_SEGUROS_ANO_N_OUTUBRO_ACUM,
                       FSE_SEGUROS_ANO_N_NOVEMBRO_ACUM,
                       FSE_SEGUROS_ANO_N_DEZEMBRO_ACUM,
                   ],
                   type: 'line'


               },
                              {
                                  label: 'Seguros(ac) ' + ANO_VERSAO_ANTE_,
                                  yAxisID: 'A',
                                  //backgroundColor: 'rgb(201, 10, 10)',
                                  borderColor: 'rgb(0,221,0)',
                                  data: [
                       FSE_SEGUROS_ANO_N_1_JANEIRO_ACUM,
                       FSE_SEGUROS_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_SEGUROS_ANO_N_1_MARCO_ACUM,
                       FSE_SEGUROS_ANO_N_1_ABRIL_ACUM,
                       FSE_SEGUROS_ANO_N_1_MAIO_ACUM,
                       FSE_SEGUROS_ANO_N_1_JUNHO_ACUM,
                       FSE_SEGUROS_ANO_N_1_JULHO_ACUM,
                       FSE_SEGUROS_ANO_N_1_AGOSTO_ACUM,
                       FSE_SEGUROS_ANO_N_1_SETEMBRO_ACUM,
                       FSE_SEGUROS_ANO_N_1_OUTUBRO_ACUM,
                       FSE_SEGUROS_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_SEGUROS_ANO_N_1_DEZEMBRO_ACUM,
                                  ],
                                  type: 'line'


                              },
                {
                    label:  'Seguros(m) ' + ANO_VERSAO_REAL_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(250 , 83 , 0, 0.5)',
                    borderColor: 'rgba(250 , 83 , 0, 0.5)',
                    data: [
                  FSE_SEGUROS_ANO_N_JANEIRO ,
                  FSE_SEGUROS_ANO_N_FEVEREIRO ,
                  FSE_SEGUROS_ANO_N_MARCO ,
                  FSE_SEGUROS_ANO_N_ABRIL,
                  FSE_SEGUROS_ANO_N_MAIO ,
                  FSE_SEGUROS_ANO_N_JUNHO ,
                  FSE_SEGUROS_ANO_N_JULHO ,
                  FSE_SEGUROS_ANO_N_AGOSTO ,
                  FSE_SEGUROS_ANO_N_SETEMBRO ,
                  FSE_SEGUROS_ANO_N_OUTUBRO ,
                  FSE_SEGUROS_ANO_N_NOVEMBRO ,
                  FSE_SEGUROS_ANO_N_DEZEMBRO ,
                    ],
                },
                {
                    label:  'Seguros(m) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(0,221,0, 0.4)',
                    borderColor: 'rgba(0,221,0, 0.4)',
                    data: [
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_JANEIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_FEVEREIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_MARCO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_ABRIL"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_MAIO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_JUNHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_JULHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_AGOSTO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_SETEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_OUTUBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_NOVEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANO_N_1_DEZEMBRO"]))),
                    ],
                },


            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_SEGUROS_MENSAL_1',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                min:  Math.round(FSE_SEGUROS_Mensal_Eixo_min_princ__,0),
                                                max:  Math.round(FSE_SEGUROS_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString();
                                                }
                                            }
                                        },

                    { id: 'B',
                        type: 'linear',
                        position: 'right',
                        ticks: {
                            min: Math.round(FSE_SEGUROS_Mensal_Eixo_min_secon__,0),
                            max:  Math.round(FSE_SEGUROS_Mensal_Eixo_max_secon__,0),
                            beginAtZero: false,
                            callback: function(value, index, values) {
                                return value.toLocaleString();
                            }
                        }
                    },






                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_049-----------------------------------------------------------*@
<script>

    var IND_VN_ANO_N_JANEIRO_ACUM = IND_VN_ANO_N_JANEIRO;
    var IND_VN_ANO_N_FEVEREIRO_ACUM = IND_VN_ANO_N_FEVEREIRO + IND_VN_ANO_N_JANEIRO_ACUM;
    var IND_VN_ANO_N_MARCO_ACUM = IND_VN_ANO_N_MARCO + IND_VN_ANO_N_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_ABRIL_ACUM = IND_VN_ANO_N_ABRIL + IND_VN_ANO_N_MARCO_ACUM;
    var IND_VN_ANO_N_MAIO_ACUM = IND_VN_ANO_N_MAIO + IND_VN_ANO_N_ABRIL_ACUM;
    var IND_VN_ANO_N_JUNHO_ACUM = IND_VN_ANO_N_JUNHO + IND_VN_ANO_N_MAIO_ACUM;
    var IND_VN_ANO_N_JULHO_ACUM = IND_VN_ANO_N_JULHO + IND_VN_ANO_N_JUNHO_ACUM;
    var IND_VN_ANO_N_AGOSTO_ACUM = IND_VN_ANO_N_AGOSTO + IND_VN_ANO_N_JULHO_ACUM;
    var IND_VN_ANO_N_SETEMBRO_ACUM = IND_VN_ANO_N_SETEMBRO + IND_VN_ANO_N_AGOSTO_ACUM;
    var IND_VN_ANO_N_OUTUBRO_ACUM = IND_VN_ANO_N_OUTUBRO + IND_VN_ANO_N_SETEMBRO_ACUM;
    var IND_VN_ANO_N_NOVEMBRO_ACUM = IND_VN_ANO_N_NOVEMBRO + IND_VN_ANO_N_OUTUBRO_ACUM;
    var IND_VN_ANO_N_DEZEMBRO_ACUM = IND_VN_ANO_N_DEZEMBRO + IND_VN_ANO_N_NOVEMBRO_ACUM;



    var IND_VN_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JANEIRO"])));
    var IND_VN_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_FEVEREIRO"]))) + IND_VN_ANO_N_1_JANEIRO_ACUM;
    var IND_VN_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MARCO"]))) + IND_VN_ANO_N_1_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_ABRIL"]))) + IND_VN_ANO_N_1_MARCO_ACUM;
    var IND_VN_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MAIO"]))) + IND_VN_ANO_N_1_ABRIL_ACUM;
    var IND_VN_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JUNHO"]))) + IND_VN_ANO_N_1_MAIO_ACUM;
    var IND_VN_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JULHO"]))) + IND_VN_ANO_N_1_JUNHO_ACUM;
    var IND_VN_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_AGOSTO"]))) + IND_VN_ANO_N_1_JULHO_ACUM;
    var IND_VN_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_SETEMBRO"]))) + IND_VN_ANO_N_1_AGOSTO_ACUM;
    var IND_VN_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_OUTUBRO"]))) + IND_VN_ANO_N_1_SETEMBRO_ACUM;
    var IND_VN_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_NOVEMBRO"]))) + IND_VN_ANO_N_1_OUTUBRO_ACUM;
    var IND_VN_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_DEZEMBRO"]))) + IND_VN_ANO_N_1_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_SEGUROS_VN_ANO_N_JANEIRO_ACUM = 'nd'; var PESO_FSE_SEGUROS_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SEGUROS_VN_ANO_N_JANEIRO_ACUM= FSE_SEGUROS_ANO_N_JANEIRO_ACUM/IND_VN_ANO_N_JANEIRO_ACUM*100; var PESO_FSE_SEGUROS_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = PESO_FSE_SEGUROS_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_SEGUROS_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_SEGUROS_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SEGUROS_VN_ANO_N_FEVEREIRO_ACUM= FSE_SEGUROS_ANO_N_FEVEREIRO_ACUM/IND_VN_ANO_N_FEVEREIRO_ACUM*100; var PESO_FSE_SEGUROS_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_SEGUROS_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_SEGUROS_VN_ANO_N_MARCO_ACUM = 'nd'; var PESO_FSE_SEGUROS_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SEGUROS_VN_ANO_N_MARCO_ACUM= FSE_SEGUROS_ANO_N_MARCO_ACUM/IND_VN_ANO_N_MARCO_ACUM*100; var PESO_FSE_SEGUROS_VN_ANO_N_MARCO_ACUM_MAX_MIN = PESO_FSE_SEGUROS_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_SEGUROS_VN_ANO_N_ABRIL_ACUM = 'nd'; var PESO_FSE_SEGUROS_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SEGUROS_VN_ANO_N_ABRIL_ACUM= FSE_SEGUROS_ANO_N_ABRIL_ACUM/IND_VN_ANO_N_ABRIL_ACUM*100; var PESO_FSE_SEGUROS_VN_ANO_N_ABRIL_ACUM_MAX_MIN = PESO_FSE_SEGUROS_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_SEGUROS_VN_ANO_N_MAIO_ACUM = 'nd'; var PESO_FSE_SEGUROS_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SEGUROS_VN_ANO_N_MAIO_ACUM= FSE_SEGUROS_ANO_N_MAIO_ACUM/IND_VN_ANO_N_MAIO_ACUM*100; var PESO_FSE_SEGUROS_VN_ANO_N_MAIO_ACUM_MAX_MIN = PESO_FSE_SEGUROS_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_SEGUROS_VN_ANO_N_JUNHO_ACUM = 'nd'; var PESO_FSE_SEGUROS_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SEGUROS_VN_ANO_N_JUNHO_ACUM= FSE_SEGUROS_ANO_N_JUNHO_ACUM/IND_VN_ANO_N_JUNHO_ACUM*100; var PESO_FSE_SEGUROS_VN_ANO_N_JUNHO_ACUM_MAX_MIN = PESO_FSE_SEGUROS_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_SEGUROS_VN_ANO_N_JULHO_ACUM = 'nd'; var PESO_FSE_SEGUROS_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SEGUROS_VN_ANO_N_JULHO_ACUM= FSE_SEGUROS_ANO_N_JULHO_ACUM/IND_VN_ANO_N_JULHO_ACUM*100; var PESO_FSE_SEGUROS_VN_ANO_N_JULHO_ACUM_MAX_MIN = PESO_FSE_SEGUROS_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_SEGUROS_VN_ANO_N_AGOSTO_ACUM = 'nd'; var PESO_FSE_SEGUROS_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SEGUROS_VN_ANO_N_AGOSTO_ACUM= FSE_SEGUROS_ANO_N_AGOSTO_ACUM/IND_VN_ANO_N_AGOSTO_ACUM*100; var PESO_FSE_SEGUROS_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = PESO_FSE_SEGUROS_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_SEGUROS_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var PESO_FSE_SEGUROS_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SEGUROS_VN_ANO_N_SETEMBRO_ACUM= FSE_SEGUROS_ANO_N_SETEMBRO_ACUM/IND_VN_ANO_N_SETEMBRO_ACUM*100; var PESO_FSE_SEGUROS_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_SEGUROS_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_SEGUROS_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var PESO_FSE_SEGUROS_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SEGUROS_VN_ANO_N_OUTUBRO_ACUM= FSE_SEGUROS_ANO_N_OUTUBRO_ACUM/IND_VN_ANO_N_OUTUBRO_ACUM*100; var PESO_FSE_SEGUROS_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_SEGUROS_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_SEGUROS_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_SEGUROS_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SEGUROS_VN_ANO_N_NOVEMBRO_ACUM= FSE_SEGUROS_ANO_N_NOVEMBRO_ACUM/IND_VN_ANO_N_NOVEMBRO_ACUM*100; var PESO_FSE_SEGUROS_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_SEGUROS_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_SEGUROS_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_SEGUROS_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SEGUROS_VN_ANO_N_DEZEMBRO_ACUM= FSE_SEGUROS_ANO_N_DEZEMBRO_ACUM/IND_VN_ANO_N_DEZEMBRO_ACUM*100; var PESO_FSE_SEGUROS_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_SEGUROS_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_SEGUROS_VN_ANO_N_1_JANEIRO_ACUM = 'nd'; var PESO_FSE_SEGUROS_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SEGUROS_VN_ANO_N_1_JANEIRO_ACUM= FSE_SEGUROS_ANO_N_1_JANEIRO_ACUM/IND_VN_ANO_N_1_JANEIRO_ACUM*100; var PESO_FSE_SEGUROS_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = PESO_FSE_SEGUROS_VN_ANO_N_1_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_SEGUROS_VN_ANO_N_1_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_SEGUROS_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SEGUROS_VN_ANO_N_1_FEVEREIRO_ACUM= FSE_SEGUROS_ANO_N_1_FEVEREIRO_ACUM/IND_VN_ANO_N_1_FEVEREIRO_ACUM*100; var PESO_FSE_SEGUROS_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_SEGUROS_VN_ANO_N_1_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_SEGUROS_VN_ANO_N_1_MARCO_ACUM = 'nd'; var PESO_FSE_SEGUROS_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SEGUROS_VN_ANO_N_1_MARCO_ACUM= FSE_SEGUROS_ANO_N_1_MARCO_ACUM/IND_VN_ANO_N_1_MARCO_ACUM*100; var PESO_FSE_SEGUROS_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = PESO_FSE_SEGUROS_VN_ANO_N_1_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_SEGUROS_VN_ANO_N_1_ABRIL_ACUM = 'nd'; var PESO_FSE_SEGUROS_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SEGUROS_VN_ANO_N_1_ABRIL_ACUM= FSE_SEGUROS_ANO_N_1_ABRIL_ACUM/IND_VN_ANO_N_1_ABRIL_ACUM*100; var PESO_FSE_SEGUROS_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = PESO_FSE_SEGUROS_VN_ANO_N_1_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_SEGUROS_VN_ANO_N_1_MAIO_ACUM = 'nd'; var PESO_FSE_SEGUROS_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SEGUROS_VN_ANO_N_1_MAIO_ACUM= FSE_SEGUROS_ANO_N_1_MAIO_ACUM/IND_VN_ANO_N_1_MAIO_ACUM*100; var PESO_FSE_SEGUROS_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = PESO_FSE_SEGUROS_VN_ANO_N_1_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_SEGUROS_VN_ANO_N_1_JUNHO_ACUM = 'nd'; var PESO_FSE_SEGUROS_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SEGUROS_VN_ANO_N_1_JUNHO_ACUM= FSE_SEGUROS_ANO_N_1_JUNHO_ACUM/IND_VN_ANO_N_1_JUNHO_ACUM*100; var PESO_FSE_SEGUROS_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = PESO_FSE_SEGUROS_VN_ANO_N_1_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_SEGUROS_VN_ANO_N_1_JULHO_ACUM = 'nd'; var PESO_FSE_SEGUROS_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SEGUROS_VN_ANO_N_1_JULHO_ACUM= FSE_SEGUROS_ANO_N_1_JULHO_ACUM/IND_VN_ANO_N_1_JULHO_ACUM*100; var PESO_FSE_SEGUROS_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = PESO_FSE_SEGUROS_VN_ANO_N_1_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_SEGUROS_VN_ANO_N_1_AGOSTO_ACUM = 'nd'; var PESO_FSE_SEGUROS_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SEGUROS_VN_ANO_N_1_AGOSTO_ACUM= FSE_SEGUROS_ANO_N_1_AGOSTO_ACUM/IND_VN_ANO_N_1_AGOSTO_ACUM*100; var PESO_FSE_SEGUROS_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = PESO_FSE_SEGUROS_VN_ANO_N_1_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_SEGUROS_VN_ANO_N_1_SETEMBRO_ACUM = 'nd'; var PESO_FSE_SEGUROS_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SEGUROS_VN_ANO_N_1_SETEMBRO_ACUM= FSE_SEGUROS_ANO_N_1_SETEMBRO_ACUM/IND_VN_ANO_N_1_SETEMBRO_ACUM*100; var PESO_FSE_SEGUROS_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_SEGUROS_VN_ANO_N_1_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_SEGUROS_VN_ANO_N_1_OUTUBRO_ACUM = 'nd'; var PESO_FSE_SEGUROS_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SEGUROS_VN_ANO_N_1_OUTUBRO_ACUM= FSE_SEGUROS_ANO_N_1_OUTUBRO_ACUM/IND_VN_ANO_N_1_OUTUBRO_ACUM*100; var PESO_FSE_SEGUROS_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_SEGUROS_VN_ANO_N_1_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_SEGUROS_VN_ANO_N_1_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_SEGUROS_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SEGUROS_VN_ANO_N_1_NOVEMBRO_ACUM= FSE_SEGUROS_ANO_N_1_NOVEMBRO_ACUM/IND_VN_ANO_N_1_NOVEMBRO_ACUM*100; var PESO_FSE_SEGUROS_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_SEGUROS_VN_ANO_N_1_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_SEGUROS_VN_ANO_N_1_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_SEGUROS_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SEGUROS_VN_ANO_N_1_DEZEMBRO_ACUM= FSE_SEGUROS_ANO_N_1_DEZEMBRO_ACUM/IND_VN_ANO_N_1_DEZEMBRO_ACUM*100; var PESO_FSE_SEGUROS_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_SEGUROS_VN_ANO_N_1_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_VN_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JANEIRO_ACUM= ((IND_VN_ANO_N_JANEIRO_ACUM-IND_VN_ANO_N_1_JANEIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_JANEIRO_ACUM))*100; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_FEVEREIRO_ACUM= ((IND_VN_ANO_N_FEVEREIRO_ACUM-IND_VN_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_VN_ANO_N_MARCO_ACUM = 'nd'; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MARCO_ACUM= ((IND_VN_ANO_N_MARCO_ACUM-IND_VN_ANO_N_1_MARCO_ACUM)/Math.abs(IND_VN_ANO_N_1_MARCO_ACUM))*100; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = VAR_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_VN_ANO_N_ABRIL_ACUM = 'nd'; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_ABRIL_ACUM= ((IND_VN_ANO_N_ABRIL_ACUM-IND_VN_ANO_N_1_ABRIL_ACUM)/Math.abs(IND_VN_ANO_N_1_ABRIL_ACUM))*100; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_VN_ANO_N_MAIO_ACUM = 'nd'; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MAIO_ACUM= ((IND_VN_ANO_N_MAIO_ACUM-IND_VN_ANO_N_1_MAIO_ACUM)/Math.abs(IND_VN_ANO_N_1_MAIO_ACUM))*100; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = VAR_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_VN_ANO_N_JUNHO_ACUM = 'nd'; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JUNHO_ACUM= ((IND_VN_ANO_N_JUNHO_ACUM-IND_VN_ANO_N_1_JUNHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JUNHO_ACUM))*100; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_VN_ANO_N_JULHO_ACUM = 'nd'; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JULHO_ACUM= ((IND_VN_ANO_N_JULHO_ACUM-IND_VN_ANO_N_1_JULHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JULHO_ACUM))*100; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_VN_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_AGOSTO_ACUM= ((IND_VN_ANO_N_AGOSTO_ACUM-IND_VN_ANO_N_1_AGOSTO_ACUM)/Math.abs(IND_VN_ANO_N_1_AGOSTO_ACUM))*100; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_SETEMBRO_ACUM= ((IND_VN_ANO_N_SETEMBRO_ACUM-IND_VN_ANO_N_1_SETEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_OUTUBRO_ACUM= ((IND_VN_ANO_N_OUTUBRO_ACUM-IND_VN_ANO_N_1_OUTUBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_NOVEMBRO_ACUM= ((IND_VN_ANO_N_NOVEMBRO_ACUM-IND_VN_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_DEZEMBRO_ACUM= ((IND_VN_ANO_N_DEZEMBRO_ACUM-IND_VN_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_FSE_SEGUROS_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_FSE_SEGUROS_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_SEGUROS_ANO_N_JANEIRO_ACUM= ((FSE_SEGUROS_ANO_N_JANEIRO_ACUM-FSE_SEGUROS_ANO_N_1_JANEIRO_ACUM)/Math.abs(FSE_SEGUROS_ANO_N_1_JANEIRO_ACUM))*100; var VAR_FSE_SEGUROS_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_FSE_SEGUROS_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_FSE_SEGUROS_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_FSE_SEGUROS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_SEGUROS_ANO_N_FEVEREIRO_ACUM= ((FSE_SEGUROS_ANO_N_FEVEREIRO_ACUM-FSE_SEGUROS_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(FSE_SEGUROS_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_FSE_SEGUROS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_FSE_SEGUROS_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_FSE_SEGUROS_ANO_N_MARCO_ACUM = 'nd'; var VAR_FSE_SEGUROS_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_SEGUROS_ANO_N_MARCO_ACUM= ((FSE_SEGUROS_ANO_N_MARCO_ACUM-FSE_SEGUROS_ANO_N_1_MARCO_ACUM)/Math.abs(FSE_SEGUROS_ANO_N_1_MARCO_ACUM))*100; var VAR_FSE_SEGUROS_ANO_N_MARCO_ACUM_MAX_MIN = VAR_FSE_SEGUROS_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_FSE_SEGUROS_ANO_N_ABRIL_ACUM = 'nd'; var VAR_FSE_SEGUROS_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_SEGUROS_ANO_N_ABRIL_ACUM= ((FSE_SEGUROS_ANO_N_ABRIL_ACUM-FSE_SEGUROS_ANO_N_1_ABRIL_ACUM)/Math.abs(FSE_SEGUROS_ANO_N_1_ABRIL_ACUM))*100; var VAR_FSE_SEGUROS_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_FSE_SEGUROS_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_FSE_SEGUROS_ANO_N_MAIO_ACUM = 'nd'; var VAR_FSE_SEGUROS_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_SEGUROS_ANO_N_MAIO_ACUM= ((FSE_SEGUROS_ANO_N_MAIO_ACUM-FSE_SEGUROS_ANO_N_1_MAIO_ACUM)/Math.abs(FSE_SEGUROS_ANO_N_1_MAIO_ACUM))*100; var VAR_FSE_SEGUROS_ANO_N_MAIO_ACUM_MAX_MIN = VAR_FSE_SEGUROS_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_FSE_SEGUROS_ANO_N_JUNHO_ACUM = 'nd'; var VAR_FSE_SEGUROS_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_SEGUROS_ANO_N_JUNHO_ACUM= ((FSE_SEGUROS_ANO_N_JUNHO_ACUM-FSE_SEGUROS_ANO_N_1_JUNHO_ACUM)/Math.abs(FSE_SEGUROS_ANO_N_1_JUNHO_ACUM))*100; var VAR_FSE_SEGUROS_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_FSE_SEGUROS_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_FSE_SEGUROS_ANO_N_JULHO_ACUM = 'nd'; var VAR_FSE_SEGUROS_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_SEGUROS_ANO_N_JULHO_ACUM= ((FSE_SEGUROS_ANO_N_JULHO_ACUM-FSE_SEGUROS_ANO_N_1_JULHO_ACUM)/Math.abs(FSE_SEGUROS_ANO_N_1_JULHO_ACUM))*100; var VAR_FSE_SEGUROS_ANO_N_JULHO_ACUM_MAX_MIN = VAR_FSE_SEGUROS_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_FSE_SEGUROS_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_FSE_SEGUROS_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_SEGUROS_ANO_N_AGOSTO_ACUM= ((FSE_SEGUROS_ANO_N_AGOSTO_ACUM-FSE_SEGUROS_ANO_N_1_AGOSTO_ACUM)/Math.abs(FSE_SEGUROS_ANO_N_1_AGOSTO_ACUM))*100; var VAR_FSE_SEGUROS_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_FSE_SEGUROS_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_FSE_SEGUROS_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_FSE_SEGUROS_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_SEGUROS_ANO_N_SETEMBRO_ACUM= ((FSE_SEGUROS_ANO_N_SETEMBRO_ACUM-FSE_SEGUROS_ANO_N_1_SETEMBRO_ACUM)/Math.abs(FSE_SEGUROS_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_FSE_SEGUROS_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_FSE_SEGUROS_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_FSE_SEGUROS_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_FSE_SEGUROS_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_SEGUROS_ANO_N_OUTUBRO_ACUM= ((FSE_SEGUROS_ANO_N_OUTUBRO_ACUM-FSE_SEGUROS_ANO_N_1_OUTUBRO_ACUM)/Math.abs(FSE_SEGUROS_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_FSE_SEGUROS_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_FSE_SEGUROS_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_FSE_SEGUROS_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_FSE_SEGUROS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_SEGUROS_ANO_N_NOVEMBRO_ACUM= ((FSE_SEGUROS_ANO_N_NOVEMBRO_ACUM-FSE_SEGUROS_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(FSE_SEGUROS_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_FSE_SEGUROS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_FSE_SEGUROS_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_FSE_SEGUROS_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_FSE_SEGUROS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_SEGUROS_ANO_N_DEZEMBRO_ACUM= ((FSE_SEGUROS_ANO_N_DEZEMBRO_ACUM-FSE_SEGUROS_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(FSE_SEGUROS_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_FSE_SEGUROS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_FSE_SEGUROS_ANO_N_DEZEMBRO_ACUM };

    if( PESO_FSE_SEGUROS_VN_ANO_N_1_JANEIRO_ACUM > PESO_FSE_SEGUROS_VN_ANO_N_JANEIRO_ACUM) { var  INEFICIENCIA_FSE_SEGUROS_ANO_N_JANEIRO_ACUM=PESO_FSE_SEGUROS_VN_ANO_N_1_JANEIRO_ACUM ; } else { var  INEFICIENCIA_FSE_SEGUROS_ANO_N_JANEIRO_ACUM=PESO_FSE_SEGUROS_VN_ANO_N_JANEIRO_ACUM ; }
    if( PESO_FSE_SEGUROS_VN_ANO_N_1_FEVEREIRO_ACUM > PESO_FSE_SEGUROS_VN_ANO_N_FEVEREIRO_ACUM) { var  INEFICIENCIA_FSE_SEGUROS_ANO_N_FEVEREIRO_ACUM=PESO_FSE_SEGUROS_VN_ANO_N_1_FEVEREIRO_ACUM ; } else { var  INEFICIENCIA_FSE_SEGUROS_ANO_N_FEVEREIRO_ACUM=PESO_FSE_SEGUROS_VN_ANO_N_FEVEREIRO_ACUM ; }
    if( PESO_FSE_SEGUROS_VN_ANO_N_1_MARCO_ACUM > PESO_FSE_SEGUROS_VN_ANO_N_MARCO_ACUM) { var  INEFICIENCIA_FSE_SEGUROS_ANO_N_MARCO_ACUM=PESO_FSE_SEGUROS_VN_ANO_N_1_MARCO_ACUM ; } else { var  INEFICIENCIA_FSE_SEGUROS_ANO_N_MARCO_ACUM=PESO_FSE_SEGUROS_VN_ANO_N_MARCO_ACUM ; }
    if( PESO_FSE_SEGUROS_VN_ANO_N_1_ABRIL_ACUM > PESO_FSE_SEGUROS_VN_ANO_N_ABRIL_ACUM) { var  INEFICIENCIA_FSE_SEGUROS_ANO_N_ABRIL_ACUM=PESO_FSE_SEGUROS_VN_ANO_N_1_ABRIL_ACUM ; } else { var  INEFICIENCIA_FSE_SEGUROS_ANO_N_ABRIL_ACUM=PESO_FSE_SEGUROS_VN_ANO_N_ABRIL_ACUM ; }
    if( PESO_FSE_SEGUROS_VN_ANO_N_1_MAIO_ACUM > PESO_FSE_SEGUROS_VN_ANO_N_MAIO_ACUM) { var  INEFICIENCIA_FSE_SEGUROS_ANO_N_MAIO_ACUM=PESO_FSE_SEGUROS_VN_ANO_N_1_MAIO_ACUM ; } else { var  INEFICIENCIA_FSE_SEGUROS_ANO_N_MAIO_ACUM=PESO_FSE_SEGUROS_VN_ANO_N_MAIO_ACUM ; }
    if( PESO_FSE_SEGUROS_VN_ANO_N_1_JUNHO_ACUM > PESO_FSE_SEGUROS_VN_ANO_N_JUNHO_ACUM) { var  INEFICIENCIA_FSE_SEGUROS_ANO_N_JUNHO_ACUM=PESO_FSE_SEGUROS_VN_ANO_N_1_JUNHO_ACUM ; } else { var  INEFICIENCIA_FSE_SEGUROS_ANO_N_JUNHO_ACUM=PESO_FSE_SEGUROS_VN_ANO_N_JUNHO_ACUM ; }
    if( PESO_FSE_SEGUROS_VN_ANO_N_1_JULHO_ACUM > PESO_FSE_SEGUROS_VN_ANO_N_JULHO_ACUM) { var  INEFICIENCIA_FSE_SEGUROS_ANO_N_JULHO_ACUM=PESO_FSE_SEGUROS_VN_ANO_N_1_JULHO_ACUM ; } else { var  INEFICIENCIA_FSE_SEGUROS_ANO_N_JULHO_ACUM=PESO_FSE_SEGUROS_VN_ANO_N_JULHO_ACUM ; }
    if( PESO_FSE_SEGUROS_VN_ANO_N_1_AGOSTO_ACUM > PESO_FSE_SEGUROS_VN_ANO_N_AGOSTO_ACUM) { var  INEFICIENCIA_FSE_SEGUROS_ANO_N_AGOSTO_ACUM=PESO_FSE_SEGUROS_VN_ANO_N_1_AGOSTO_ACUM ; } else { var  INEFICIENCIA_FSE_SEGUROS_ANO_N_AGOSTO_ACUM=PESO_FSE_SEGUROS_VN_ANO_N_AGOSTO_ACUM ; }
    if( PESO_FSE_SEGUROS_VN_ANO_N_1_SETEMBRO_ACUM > PESO_FSE_SEGUROS_VN_ANO_N_SETEMBRO_ACUM) { var  INEFICIENCIA_FSE_SEGUROS_ANO_N_SETEMBRO_ACUM=PESO_FSE_SEGUROS_VN_ANO_N_1_SETEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_SEGUROS_ANO_N_SETEMBRO_ACUM=PESO_FSE_SEGUROS_VN_ANO_N_SETEMBRO_ACUM ; }
    if( PESO_FSE_SEGUROS_VN_ANO_N_1_OUTUBRO_ACUM > PESO_FSE_SEGUROS_VN_ANO_N_OUTUBRO_ACUM) { var  INEFICIENCIA_FSE_SEGUROS_ANO_N_OUTUBRO_ACUM=PESO_FSE_SEGUROS_VN_ANO_N_1_OUTUBRO_ACUM ; } else { var  INEFICIENCIA_FSE_SEGUROS_ANO_N_OUTUBRO_ACUM=PESO_FSE_SEGUROS_VN_ANO_N_OUTUBRO_ACUM ; }
    if( PESO_FSE_SEGUROS_VN_ANO_N_1_NOVEMBRO_ACUM > PESO_FSE_SEGUROS_VN_ANO_N_NOVEMBRO_ACUM) { var  INEFICIENCIA_FSE_SEGUROS_ANO_N_NOVEMBRO_ACUM=PESO_FSE_SEGUROS_VN_ANO_N_1_NOVEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_SEGUROS_ANO_N_NOVEMBRO_ACUM=PESO_FSE_SEGUROS_VN_ANO_N_NOVEMBRO_ACUM ; }
    if( PESO_FSE_SEGUROS_VN_ANO_N_1_DEZEMBRO_ACUM > PESO_FSE_SEGUROS_VN_ANO_N_DEZEMBRO_ACUM) { var  INEFICIENCIA_FSE_SEGUROS_ANO_N_DEZEMBRO_ACUM=PESO_FSE_SEGUROS_VN_ANO_N_1_DEZEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_SEGUROS_ANO_N_DEZEMBRO_ACUM=PESO_FSE_SEGUROS_VN_ANO_N_DEZEMBRO_ACUM ; }



    var fillBetweenLinesPlugin = {
        afterDatasetsDraw: function (chart) {
            var ctx = chart.chart.ctx;
            var xaxis = chart.scales['x-axis-0'];
            var yaxis = chart.scales['y-axis-0'];
            var datasets = chart.data.datasets;
            ctx.save();

            for (var d = 0; d < datasets.length; d++) {
                var dataset = datasets[d];
                if (dataset.fillBetweenSet == undefined) {
                    continue;
                }

                // get meta for both data sets
                var meta1 = chart.getDatasetMeta(d);
                var meta2 = chart.getDatasetMeta(dataset.fillBetweenSet);

                // do not draw fill if one of the datasets is hidden
                if (meta1.hidden || meta2.hidden) continue;

                // create fill areas in pairs
                for (var p = 0; p < meta1.data.length-1;p++) {
                    // if null skip
                    if (dataset.data[p] == null || dataset.data[p+1] == null) continue;

                    ctx.beginPath();

                    // trace line 1
                    var curr = meta1.data[p];
                    var next = meta1.data[p+1];
                    ctx.moveTo(curr._view.x, curr._view.y);
                    ctx.lineTo(curr._view.x, curr._view.y);
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(next._view.x, curr._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        ctx.bezierCurveTo(
                          curr._view.controlPointNextX,
                          curr._view.controlPointNextY,
                          next._view.controlPointPreviousX,
                          next._view.controlPointPreviousY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // connect dataset1 to dataset2
                    var curr = meta2.data[p+1];
                    var next = meta2.data[p];
                    ctx.lineTo(curr._view.x, curr._view.y);

                    // trace BACKWORDS set2 to complete the box
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(curr._view.x, next._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        // reverse bezier
                        ctx.bezierCurveTo(
                          curr._view.controlPointPreviousX,
                          curr._view.controlPointPreviousY,
                          next._view.controlPointNextX,
                          next._view.controlPointNextY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // close the loop and fill with shading
                    ctx.closePath();
                    ctx.fillStyle = dataset.fillBetweenColor || "rgba(0,0,0,0.1)";
                    ctx.fill();
                } // end for p loop
            }
        } // end afterDatasetsDraw
    }; // end fillBetweenLinesPlugin

    Chart.pluginService.register(fillBetweenLinesPlugin);



    var GRAFICO_FSE_RESULT_MENSAL_COMP_049=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_049').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_049=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_049, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label:  'Peso SegurosvsVN(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   //borderColor: "#F00",
                   fill: false,
                   steppedLine: false,
                   tension: 0.5,
                   fillBetweenSet: 1,
                   fillBetweenColor: "rgba(0, 221, 0, 0.1)",
                   data: [
                   PESO_FSE_SEGUROS_VN_ANO_N_JANEIRO_ACUM,
                   PESO_FSE_SEGUROS_VN_ANO_N_FEVEREIRO_ACUM,
                   PESO_FSE_SEGUROS_VN_ANO_N_MARCO_ACUM,
                   PESO_FSE_SEGUROS_VN_ANO_N_ABRIL_ACUM,
                   PESO_FSE_SEGUROS_VN_ANO_N_MAIO_ACUM,
                   PESO_FSE_SEGUROS_VN_ANO_N_JUNHO_ACUM,
                   PESO_FSE_SEGUROS_VN_ANO_N_JULHO_ACUM,
                   PESO_FSE_SEGUROS_VN_ANO_N_AGOSTO_ACUM,
                   PESO_FSE_SEGUROS_VN_ANO_N_SETEMBRO_ACUM,
                   PESO_FSE_SEGUROS_VN_ANO_N_OUTUBRO_ACUM,
                   PESO_FSE_SEGUROS_VN_ANO_N_NOVEMBRO_ACUM,
                   PESO_FSE_SEGUROS_VN_ANO_N_DEZEMBRO_ACUM,

                   ],
                   type: 'line'


               },
                {
                    label: 'Peso SegurosvsVN(ac) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'A',
                    //backgroundColor: 'rgb(17, 121, 240)',
                    borderColor: 'rgb(0,221,0)',
                    //borderColor: "#00F",
                    fill: false,
                    steppedLine: false,
                    tension: 0.5,
                    data: [
                   PESO_FSE_SEGUROS_VN_ANO_N_1_JANEIRO_ACUM,
                   PESO_FSE_SEGUROS_VN_ANO_N_1_FEVEREIRO_ACUM,
                   PESO_FSE_SEGUROS_VN_ANO_N_1_MARCO_ACUM,
                   PESO_FSE_SEGUROS_VN_ANO_N_1_ABRIL_ACUM,
                   PESO_FSE_SEGUROS_VN_ANO_N_1_MAIO_ACUM,
                   PESO_FSE_SEGUROS_VN_ANO_N_1_JUNHO_ACUM,
                   PESO_FSE_SEGUROS_VN_ANO_N_1_JULHO_ACUM,
                   PESO_FSE_SEGUROS_VN_ANO_N_1_AGOSTO_ACUM,
                   PESO_FSE_SEGUROS_VN_ANO_N_1_SETEMBRO_ACUM,
                   PESO_FSE_SEGUROS_VN_ANO_N_1_OUTUBRO_ACUM,
                   PESO_FSE_SEGUROS_VN_ANO_N_1_NOVEMBRO_ACUM,
                   PESO_FSE_SEGUROS_VN_ANO_N_1_DEZEMBRO_ACUM,
                    ],
                    type: 'line'
                },
    {
        label: 'Ineficiência',
        yAxisID: 'A',
        backgroundColor: "rgba(255, 0, 0, 0.2)",
        borderColor: 'rgba(255, 255, 255, 0.1)',
        //borderColor: "#0D0",
        fill: false,
        steppedLine: false,
        tension: 0.5,
        fillBetweenSet: 1,
        fillBetweenColor: "rgba(255, 0, 0, 0.2)",
        data: [
    INEFICIENCIA_FSE_SEGUROS_ANO_N_JANEIRO_ACUM,
    INEFICIENCIA_FSE_SEGUROS_ANO_N_FEVEREIRO_ACUM,
    INEFICIENCIA_FSE_SEGUROS_ANO_N_MARCO_ACUM,
    INEFICIENCIA_FSE_SEGUROS_ANO_N_ABRIL_ACUM,
    INEFICIENCIA_FSE_SEGUROS_ANO_N_MAIO_ACUM,
    INEFICIENCIA_FSE_SEGUROS_ANO_N_JUNHO_ACUM,
    INEFICIENCIA_FSE_SEGUROS_ANO_N_JULHO_ACUM,
    INEFICIENCIA_FSE_SEGUROS_ANO_N_AGOSTO_ACUM,
    INEFICIENCIA_FSE_SEGUROS_ANO_N_SETEMBRO_ACUM,
    INEFICIENCIA_FSE_SEGUROS_ANO_N_OUTUBRO_ACUM,
    INEFICIENCIA_FSE_SEGUROS_ANO_N_NOVEMBRO_ACUM,
    INEFICIENCIA_FSE_SEGUROS_ANO_N_DEZEMBRO_ACUM,
        ],
        type: 'line'
    },

            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_SEGUROS COMP',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                //min:  Math.round(FSE_SEGUROS_Mensal_Eixo_min_princ__,0),
                                                //max:  Math.round(FSE_SEGUROS_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString()+ "%";
                                                }
                                            }
                                        },







                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_050-----------------------------------------------------------*@
<script>

    if(@ViewData["MES_ACUM_REAL"]<1){ var IND_VN_ANO_N_JANEIRO = 'nd'; var IND_VN_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JANEIRO"]))); var IND_VN_ANO_N_JANEIRO_MAX_MIN = IND_VN_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var IND_VN_ANO_N_FEVEREIRO = 'nd'; var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_FEVEREIRO"]))); var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = IND_VN_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var IND_VN_ANO_N_MARCO = 'nd'; var IND_VN_ANO_N_MARCO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MARCO"]))); var IND_VN_ANO_N_MARCO_MAX_MIN = IND_VN_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var IND_VN_ANO_N_ABRIL = 'nd'; var IND_VN_ANO_N_ABRIL_MAX_MIN = 0;  } else { var IND_VN_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_ABRIL"]))); var IND_VN_ANO_N_ABRIL_MAX_MIN = IND_VN_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var IND_VN_ANO_N_MAIO = 'nd'; var IND_VN_ANO_N_MAIO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MAIO"]))); var IND_VN_ANO_N_MAIO_MAX_MIN = IND_VN_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var IND_VN_ANO_N_JUNHO = 'nd'; var IND_VN_ANO_N_JUNHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JUNHO"]))); var IND_VN_ANO_N_JUNHO_MAX_MIN = IND_VN_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var IND_VN_ANO_N_JULHO = 'nd'; var IND_VN_ANO_N_JULHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JULHO"]))); var IND_VN_ANO_N_JULHO_MAX_MIN = IND_VN_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var IND_VN_ANO_N_AGOSTO = 'nd'; var IND_VN_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_AGOSTO"]))); var IND_VN_ANO_N_AGOSTO_MAX_MIN = IND_VN_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var IND_VN_ANO_N_SETEMBRO = 'nd'; var IND_VN_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_SETEMBRO"]))); var IND_VN_ANO_N_SETEMBRO_MAX_MIN = IND_VN_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var IND_VN_ANO_N_OUTUBRO = 'nd'; var IND_VN_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_OUTUBRO"]))); var IND_VN_ANO_N_OUTUBRO_MAX_MIN = IND_VN_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var IND_VN_ANO_N_NOVEMBRO = 'nd'; var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_NOVEMBRO"]))); var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = IND_VN_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var IND_VN_ANO_N_DEZEMBRO = 'nd'; var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_DEZEMBRO"]))); var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = IND_VN_ANO_N_DEZEMBRO };

    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_ROYALITIES_ANO_N_JANEIRO = 'nd'; var FSE_ROYALITIES_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var FSE_ROYALITIES_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_JANEIRO"]))); var FSE_ROYALITIES_ANO_N_JANEIRO_MAX_MIN = FSE_ROYALITIES_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_ROYALITIES_ANO_N_FEVEREIRO = 'nd'; var FSE_ROYALITIES_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var FSE_ROYALITIES_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_FEVEREIRO"]))); var FSE_ROYALITIES_ANO_N_FEVEREIRO_MAX_MIN = FSE_ROYALITIES_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_ROYALITIES_ANO_N_MARCO = 'nd'; var FSE_ROYALITIES_ANO_N_MARCO_MAX_MIN = 0;  } else { var FSE_ROYALITIES_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_MARCO"]))); var FSE_ROYALITIES_ANO_N_MARCO_MAX_MIN = FSE_ROYALITIES_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_ROYALITIES_ANO_N_ABRIL = 'nd'; var FSE_ROYALITIES_ANO_N_ABRIL_MAX_MIN = 0;  } else { var FSE_ROYALITIES_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_ABRIL"]))); var FSE_ROYALITIES_ANO_N_ABRIL_MAX_MIN = FSE_ROYALITIES_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_ROYALITIES_ANO_N_MAIO = 'nd'; var FSE_ROYALITIES_ANO_N_MAIO_MAX_MIN = 0;  } else { var FSE_ROYALITIES_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_MAIO"]))); var FSE_ROYALITIES_ANO_N_MAIO_MAX_MIN = FSE_ROYALITIES_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_ROYALITIES_ANO_N_JUNHO = 'nd'; var FSE_ROYALITIES_ANO_N_JUNHO_MAX_MIN = 0;  } else { var FSE_ROYALITIES_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_JUNHO"]))); var FSE_ROYALITIES_ANO_N_JUNHO_MAX_MIN = FSE_ROYALITIES_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_ROYALITIES_ANO_N_JULHO = 'nd'; var FSE_ROYALITIES_ANO_N_JULHO_MAX_MIN = 0;  } else { var FSE_ROYALITIES_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_JULHO"]))); var FSE_ROYALITIES_ANO_N_JULHO_MAX_MIN = FSE_ROYALITIES_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_ROYALITIES_ANO_N_AGOSTO = 'nd'; var FSE_ROYALITIES_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var FSE_ROYALITIES_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_AGOSTO"]))); var FSE_ROYALITIES_ANO_N_AGOSTO_MAX_MIN = FSE_ROYALITIES_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_ROYALITIES_ANO_N_SETEMBRO = 'nd'; var FSE_ROYALITIES_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var FSE_ROYALITIES_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_SETEMBRO"]))); var FSE_ROYALITIES_ANO_N_SETEMBRO_MAX_MIN = FSE_ROYALITIES_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_ROYALITIES_ANO_N_OUTUBRO = 'nd'; var FSE_ROYALITIES_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var FSE_ROYALITIES_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_OUTUBRO"]))); var FSE_ROYALITIES_ANO_N_OUTUBRO_MAX_MIN = FSE_ROYALITIES_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_ROYALITIES_ANO_N_NOVEMBRO = 'nd'; var FSE_ROYALITIES_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var FSE_ROYALITIES_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_NOVEMBRO"]))); var FSE_ROYALITIES_ANO_N_NOVEMBRO_MAX_MIN = FSE_ROYALITIES_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_ROYALITIES_ANO_N_DEZEMBRO = 'nd'; var FSE_ROYALITIES_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var FSE_ROYALITIES_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_DEZEMBRO"]))); var FSE_ROYALITIES_ANO_N_DEZEMBRO_MAX_MIN = FSE_ROYALITIES_ANO_N_DEZEMBRO };


    var FSE_ROYALITIES_ANO_N_JANEIRO_ACUM = FSE_ROYALITIES_ANO_N_JANEIRO;
    var FSE_ROYALITIES_ANO_N_FEVEREIRO_ACUM = FSE_ROYALITIES_ANO_N_FEVEREIRO + FSE_ROYALITIES_ANO_N_JANEIRO_ACUM;
    var FSE_ROYALITIES_ANO_N_MARCO_ACUM = FSE_ROYALITIES_ANO_N_MARCO + FSE_ROYALITIES_ANO_N_FEVEREIRO_ACUM;
    var FSE_ROYALITIES_ANO_N_ABRIL_ACUM = FSE_ROYALITIES_ANO_N_ABRIL + FSE_ROYALITIES_ANO_N_MARCO_ACUM;
    var FSE_ROYALITIES_ANO_N_MAIO_ACUM = FSE_ROYALITIES_ANO_N_MAIO + FSE_ROYALITIES_ANO_N_ABRIL_ACUM;
    var FSE_ROYALITIES_ANO_N_JUNHO_ACUM = FSE_ROYALITIES_ANO_N_JUNHO + FSE_ROYALITIES_ANO_N_MAIO_ACUM;
    var FSE_ROYALITIES_ANO_N_JULHO_ACUM = FSE_ROYALITIES_ANO_N_JULHO + FSE_ROYALITIES_ANO_N_JUNHO_ACUM;
    var FSE_ROYALITIES_ANO_N_AGOSTO_ACUM = FSE_ROYALITIES_ANO_N_AGOSTO + FSE_ROYALITIES_ANO_N_JULHO_ACUM;
    var FSE_ROYALITIES_ANO_N_SETEMBRO_ACUM = FSE_ROYALITIES_ANO_N_SETEMBRO + FSE_ROYALITIES_ANO_N_AGOSTO_ACUM;
    var FSE_ROYALITIES_ANO_N_OUTUBRO_ACUM = FSE_ROYALITIES_ANO_N_OUTUBRO + FSE_ROYALITIES_ANO_N_SETEMBRO_ACUM;
    var FSE_ROYALITIES_ANO_N_NOVEMBRO_ACUM = FSE_ROYALITIES_ANO_N_NOVEMBRO + FSE_ROYALITIES_ANO_N_OUTUBRO_ACUM;
    var FSE_ROYALITIES_ANO_N_DEZEMBRO_ACUM = FSE_ROYALITIES_ANO_N_DEZEMBRO + FSE_ROYALITIES_ANO_N_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_ROYALITIES_ANO_N_JANEIRO_ACUM = 'nd'; var FSE_ROYALITIES_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var FSE_ROYALITIES_ANO_N_JANEIRO_ACUM= FSE_ROYALITIES_ANO_N_JANEIRO_ACUM; var FSE_ROYALITIES_ANO_N_JANEIRO_ACUM_MAX_MIN = FSE_ROYALITIES_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_ROYALITIES_ANO_N_FEVEREIRO_ACUM = 'nd'; var FSE_ROYALITIES_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var FSE_ROYALITIES_ANO_N_FEVEREIRO_ACUM= FSE_ROYALITIES_ANO_N_FEVEREIRO_ACUM; var FSE_ROYALITIES_ANO_N_FEVEREIRO_ACUM_MAX_MIN = FSE_ROYALITIES_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_ROYALITIES_ANO_N_MARCO_ACUM = 'nd'; var FSE_ROYALITIES_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var FSE_ROYALITIES_ANO_N_MARCO_ACUM= FSE_ROYALITIES_ANO_N_MARCO_ACUM; var FSE_ROYALITIES_ANO_N_MARCO_ACUM_MAX_MIN = FSE_ROYALITIES_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_ROYALITIES_ANO_N_ABRIL_ACUM = 'nd'; var FSE_ROYALITIES_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var FSE_ROYALITIES_ANO_N_ABRIL_ACUM= FSE_ROYALITIES_ANO_N_ABRIL_ACUM; var FSE_ROYALITIES_ANO_N_ABRIL_ACUM_MAX_MIN = FSE_ROYALITIES_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_ROYALITIES_ANO_N_MAIO_ACUM = 'nd'; var FSE_ROYALITIES_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var FSE_ROYALITIES_ANO_N_MAIO_ACUM= FSE_ROYALITIES_ANO_N_MAIO_ACUM; var FSE_ROYALITIES_ANO_N_MAIO_ACUM_MAX_MIN = FSE_ROYALITIES_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_ROYALITIES_ANO_N_JUNHO_ACUM = 'nd'; var FSE_ROYALITIES_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var FSE_ROYALITIES_ANO_N_JUNHO_ACUM= FSE_ROYALITIES_ANO_N_JUNHO_ACUM; var FSE_ROYALITIES_ANO_N_JUNHO_ACUM_MAX_MIN = FSE_ROYALITIES_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_ROYALITIES_ANO_N_JULHO_ACUM = 'nd'; var FSE_ROYALITIES_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var FSE_ROYALITIES_ANO_N_JULHO_ACUM= FSE_ROYALITIES_ANO_N_JULHO_ACUM; var FSE_ROYALITIES_ANO_N_JULHO_ACUM_MAX_MIN = FSE_ROYALITIES_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_ROYALITIES_ANO_N_AGOSTO_ACUM = 'nd'; var FSE_ROYALITIES_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var FSE_ROYALITIES_ANO_N_AGOSTO_ACUM= FSE_ROYALITIES_ANO_N_AGOSTO_ACUM; var FSE_ROYALITIES_ANO_N_AGOSTO_ACUM_MAX_MIN = FSE_ROYALITIES_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_ROYALITIES_ANO_N_SETEMBRO_ACUM = 'nd'; var FSE_ROYALITIES_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_ROYALITIES_ANO_N_SETEMBRO_ACUM= FSE_ROYALITIES_ANO_N_SETEMBRO_ACUM; var FSE_ROYALITIES_ANO_N_SETEMBRO_ACUM_MAX_MIN = FSE_ROYALITIES_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_ROYALITIES_ANO_N_OUTUBRO_ACUM = 'nd'; var FSE_ROYALITIES_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var FSE_ROYALITIES_ANO_N_OUTUBRO_ACUM= FSE_ROYALITIES_ANO_N_OUTUBRO_ACUM; var FSE_ROYALITIES_ANO_N_OUTUBRO_ACUM_MAX_MIN = FSE_ROYALITIES_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_ROYALITIES_ANO_N_NOVEMBRO_ACUM = 'nd'; var FSE_ROYALITIES_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_ROYALITIES_ANO_N_NOVEMBRO_ACUM= FSE_ROYALITIES_ANO_N_NOVEMBRO_ACUM; var FSE_ROYALITIES_ANO_N_NOVEMBRO_ACUM_MAX_MIN = FSE_ROYALITIES_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_ROYALITIES_ANO_N_DEZEMBRO_ACUM = 'nd'; var FSE_ROYALITIES_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_ROYALITIES_ANO_N_DEZEMBRO_ACUM= FSE_ROYALITIES_ANO_N_DEZEMBRO_ACUM; var FSE_ROYALITIES_ANO_N_DEZEMBRO_ACUM_MAX_MIN = FSE_ROYALITIES_ANO_N_DEZEMBRO_ACUM };




    var FSE_ROYALITIES_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_JANEIRO"])));
    var FSE_ROYALITIES_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_FEVEREIRO"]))) + FSE_ROYALITIES_ANO_N_1_JANEIRO_ACUM;
    var FSE_ROYALITIES_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_MARCO"]))) + FSE_ROYALITIES_ANO_N_1_FEVEREIRO_ACUM;
    var FSE_ROYALITIES_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_ABRIL"]))) + FSE_ROYALITIES_ANO_N_1_MARCO_ACUM;
    var FSE_ROYALITIES_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_MAIO"]))) + FSE_ROYALITIES_ANO_N_1_ABRIL_ACUM;
    var FSE_ROYALITIES_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_JUNHO"]))) + FSE_ROYALITIES_ANO_N_1_MAIO_ACUM;
    var FSE_ROYALITIES_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_JULHO"]))) + FSE_ROYALITIES_ANO_N_1_JUNHO_ACUM;
    var FSE_ROYALITIES_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_AGOSTO"]))) + FSE_ROYALITIES_ANO_N_1_JULHO_ACUM;
    var FSE_ROYALITIES_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_SETEMBRO"]))) + FSE_ROYALITIES_ANO_N_1_AGOSTO_ACUM;
    var FSE_ROYALITIES_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_OUTUBRO"]))) + FSE_ROYALITIES_ANO_N_1_SETEMBRO_ACUM;
    var FSE_ROYALITIES_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_NOVEMBRO"]))) + FSE_ROYALITIES_ANO_N_1_OUTUBRO_ACUM;
    var FSE_ROYALITIES_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_DEZEMBRO"]))) + FSE_ROYALITIES_ANO_N_1_NOVEMBRO_ACUM;


    var FSE_ROYALITIES_Mensal_Eixo_max_princ= Math.max(
                       FSE_ROYALITIES_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_ROYALITIES_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_ROYALITIES_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_ROYALITIES_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_ROYALITIES_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_ROYALITIES_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_ROYALITIES_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_ROYALITIES_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_ROYALITIES_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_ROYALITIES_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_ROYALITIES_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_ROYALITIES_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_ROYALITIES_ANO_N_1_JANEIRO_ACUM,
                       FSE_ROYALITIES_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_ROYALITIES_ANO_N_1_MARCO_ACUM,
                       FSE_ROYALITIES_ANO_N_1_ABRIL_ACUM,
                       FSE_ROYALITIES_ANO_N_1_MAIO_ACUM,
                       FSE_ROYALITIES_ANO_N_1_JUNHO_ACUM,
                       FSE_ROYALITIES_ANO_N_1_JULHO_ACUM,
                       FSE_ROYALITIES_ANO_N_1_AGOSTO_ACUM,
                       FSE_ROYALITIES_ANO_N_1_SETEMBRO_ACUM,
                       FSE_ROYALITIES_ANO_N_1_OUTUBRO_ACUM,
                       FSE_ROYALITIES_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_ROYALITIES_ANO_N_1_DEZEMBRO_ACUM
                             );
    var FSE_ROYALITIES_Mensal_Eixo_min_princ= Math.min(

                       FSE_ROYALITIES_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_ROYALITIES_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_ROYALITIES_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_ROYALITIES_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_ROYALITIES_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_ROYALITIES_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_ROYALITIES_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_ROYALITIES_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_ROYALITIES_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_ROYALITIES_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_ROYALITIES_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_ROYALITIES_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_ROYALITIES_ANO_N_1_JANEIRO_ACUM,
                       FSE_ROYALITIES_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_ROYALITIES_ANO_N_1_MARCO_ACUM,
                       FSE_ROYALITIES_ANO_N_1_ABRIL_ACUM,
                       FSE_ROYALITIES_ANO_N_1_MAIO_ACUM,
                       FSE_ROYALITIES_ANO_N_1_JUNHO_ACUM,
                       FSE_ROYALITIES_ANO_N_1_JULHO_ACUM,
                       FSE_ROYALITIES_ANO_N_1_AGOSTO_ACUM,
                       FSE_ROYALITIES_ANO_N_1_SETEMBRO_ACUM,
                       FSE_ROYALITIES_ANO_N_1_OUTUBRO_ACUM,
                       FSE_ROYALITIES_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_ROYALITIES_ANO_N_1_DEZEMBRO_ACUM
                           );
    var FSE_ROYALITIES_Mensal_Eixo_max_secon= Math.max(
                       FSE_ROYALITIES_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_ROYALITIES_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_ROYALITIES_ANO_N_MARCO_MAX_MIN ,
                       FSE_ROYALITIES_ANO_N_ABRIL_MAX_MIN ,
                       FSE_ROYALITIES_ANO_N_MAIO_MAX_MIN ,
                       FSE_ROYALITIES_ANO_N_JUNHO_MAX_MIN ,
                       FSE_ROYALITIES_ANO_N_JULHO_MAX_MIN ,
                       FSE_ROYALITIES_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_ROYALITIES_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_ROYALITIES_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_ROYALITIES_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_ROYALITIES_ANO_N_DEZEMBRO_MAX_MIN ,



                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_DEZEMBRO"])))

                            );
    var FSE_ROYALITIES_Mensal_Eixo_min_secon= Math.min(
                       FSE_ROYALITIES_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_ROYALITIES_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_ROYALITIES_ANO_N_MARCO_MAX_MIN ,
                       FSE_ROYALITIES_ANO_N_ABRIL_MAX_MIN ,
                       FSE_ROYALITIES_ANO_N_MAIO_MAX_MIN ,
                       FSE_ROYALITIES_ANO_N_JUNHO_MAX_MIN ,
                       FSE_ROYALITIES_ANO_N_JULHO_MAX_MIN ,
                       FSE_ROYALITIES_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_ROYALITIES_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_ROYALITIES_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_ROYALITIES_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_ROYALITIES_ANO_N_DEZEMBRO_MAX_MIN ,


                           @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_DEZEMBRO"])))

                          );

    //NOTA TA: Aqui trato o minimo e o maximo do eixo principal
    if(Math.abs(FSE_ROYALITIES_Mensal_Eixo_max_princ)>=Math.abs(FSE_ROYALITIES_Mensal_Eixo_min_princ))
    {
        var FSE_ROYALITIES_Mensal_Eixo_max_princ_=(Math.ceil(FSE_ROYALITIES_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_ROYALITIES_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_ROYALITIES_Mensal_Eixo_max_princ),0).toString().length-1);
        var FSE_ROYALITIES_Mensal_Eixo_min_princ_= (Math.floor(FSE_ROYALITIES_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_ROYALITIES_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_ROYALITIES_Mensal_Eixo_max_princ),0).toString().length-1);
        //alert(FSE_ROYALITIES_Mensal_Eixo_max_princ_);
        //alert(FSE_ROYALITIES_Mensal_Eixo_min_princ_);
    }
    else
    {
        var FSE_ROYALITIES_Mensal_Eixo_max_princ_=(Math.ceil(FSE_ROYALITIES_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_ROYALITIES_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_ROYALITIES_Mensal_Eixo_min_princ),0).toString().length-1);
        var FSE_ROYALITIES_Mensal_Eixo_min_princ_= (Math.floor(FSE_ROYALITIES_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_ROYALITIES_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_ROYALITIES_Mensal_Eixo_min_princ),0).toString().length-1);}

    //NOTA TA: Aqui trato o minimo e o maximo do eixo secundario

    if(Math.abs(FSE_ROYALITIES_Mensal_Eixo_max_secon)>=Math.abs(FSE_ROYALITIES_Mensal_Eixo_min_secon))
    {
        var FSE_ROYALITIES_Mensal_Eixo_max_secon_=(Math.ceil(FSE_ROYALITIES_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_ROYALITIES_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_ROYALITIES_Mensal_Eixo_max_secon),0).toString().length-1);
        var FSE_ROYALITIES_Mensal_Eixo_min_secon_= (Math.floor(FSE_ROYALITIES_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_ROYALITIES_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_ROYALITIES_Mensal_Eixo_max_secon),0).toString().length-1);
        //alert(FSE_ROYALITIES_Mensal_Eixo_max_secon_);
        //alert(FSE_ROYALITIES_Mensal_Eixo_min_secon_);
    }
    else
    {
        var FSE_ROYALITIES_Mensal_Eixo_max_secon_=(Math.ceil(FSE_ROYALITIES_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_ROYALITIES_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_ROYALITIES_Mensal_Eixo_min_secon),0).toString().length-1);
        var FSE_ROYALITIES_Mensal_Eixo_min_secon_= (Math.floor(FSE_ROYALITIES_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_ROYALITIES_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_ROYALITIES_Mensal_Eixo_min_secon),0).toString().length-1);}


    if(Math.abs(FSE_ROYALITIES_Mensal_Eixo_min_princ)/Math.abs(FSE_ROYALITIES_Mensal_Eixo_max_princ)>=Math.abs(FSE_ROYALITIES_Mensal_Eixo_min_secon)/Math.abs(FSE_ROYALITIES_Mensal_Eixo_max_secon))
    { if(FSE_ROYALITIES_Mensal_Eixo_max_princ > 0 && FSE_ROYALITIES_Mensal_Eixo_min_princ <0 ){ var FSE_ROYALITIES_Mensal_Eixo_min_secon__=(FSE_ROYALITIES_Mensal_Eixo_min_princ_*FSE_ROYALITIES_Mensal_Eixo_max_secon_)/FSE_ROYALITIES_Mensal_Eixo_max_princ_;} else { var FSE_ROYALITIES_Mensal_Eixo_min_secon__=FSE_ROYALITIES_Mensal_Eixo_min_secon_;}
        if(FSE_ROYALITIES_Mensal_Eixo_max_secon > 0 && FSE_ROYALITIES_Mensal_Eixo_min_secon <0 ){ var FSE_ROYALITIES_Mensal_Eixo_min_princ__=(FSE_ROYALITIES_Mensal_Eixo_min_secon__*FSE_ROYALITIES_Mensal_Eixo_max_princ_)/FSE_ROYALITIES_Mensal_Eixo_max_secon_;} else { var FSE_ROYALITIES_Mensal_Eixo_min_princ__=FSE_ROYALITIES_Mensal_Eixo_min_princ_;}}
    else
    {if(FSE_ROYALITIES_Mensal_Eixo_max_secon > 0 && FSE_ROYALITIES_Mensal_Eixo_min_secon <0 ){ var FSE_ROYALITIES_Mensal_Eixo_min_princ__=(FSE_ROYALITIES_Mensal_Eixo_min_secon_*FSE_ROYALITIES_Mensal_Eixo_max_princ_)/FSE_ROYALITIES_Mensal_Eixo_max_secon_;} else { var FSE_ROYALITIES_Mensal_Eixo_min_princ__=FSE_ROYALITIES_Mensal_Eixo_min_princ_;}
        if(FSE_ROYALITIES_Mensal_Eixo_max_princ > 0 && FSE_ROYALITIES_Mensal_Eixo_min_princ <0 ){ var FSE_ROYALITIES_Mensal_Eixo_min_secon__=(FSE_ROYALITIES_Mensal_Eixo_min_princ__*FSE_ROYALITIES_Mensal_Eixo_max_secon_)/FSE_ROYALITIES_Mensal_Eixo_max_princ_;} else { var FSE_ROYALITIES_Mensal_Eixo_min_secon__=FSE_ROYALITIES_Mensal_Eixo_min_secon_;}
    }



    if(Math.abs(FSE_ROYALITIES_Mensal_Eixo_max_princ)/Math.abs(FSE_ROYALITIES_Mensal_Eixo_min_princ)>=Math.abs(FSE_ROYALITIES_Mensal_Eixo_max_secon)/Math.abs(FSE_ROYALITIES_Mensal_Eixo_min_secon))
    { if(FSE_ROYALITIES_Mensal_Eixo_min_princ > 0 && FSE_ROYALITIES_Mensal_Eixo_max_princ <0 ){ var FSE_ROYALITIES_Mensal_Eixo_max_secon__=(FSE_ROYALITIES_Mensal_Eixo_max_princ_*FSE_ROYALITIES_Mensal_Eixo_min_secon_)/FSE_ROYALITIES_Mensal_Eixo_min_princ_;} else { var FSE_ROYALITIES_Mensal_Eixo_max_secon__=FSE_ROYALITIES_Mensal_Eixo_max_secon_;}
        if(FSE_ROYALITIES_Mensal_Eixo_min_secon > 0 && FSE_ROYALITIES_Mensal_Eixo_max_secon <0 ){ var FSE_ROYALITIES_Mensal_Eixo_max_princ__=(FSE_ROYALITIES_Mensal_Eixo_max_secon__*FSE_ROYALITIES_Mensal_Eixo_min_princ_)/FSE_ROYALITIES_Mensal_Eixo_min_secon_;} else { var FSE_ROYALITIES_Mensal_Eixo_max_princ__=FSE_ROYALITIES_Mensal_Eixo_max_princ_;}}
    else
    {if(FSE_ROYALITIES_Mensal_Eixo_min_secon > 0 && FSE_ROYALITIES_Mensal_Eixo_max_secon <0 ){ var FSE_ROYALITIES_Mensal_Eixo_max_princ__=(FSE_ROYALITIES_Mensal_Eixo_max_secon_*FSE_ROYALITIES_Mensal_Eixo_min_princ_)/FSE_ROYALITIES_Mensal_Eixo_min_secon_;} else { var FSE_ROYALITIES_Mensal_Eixo_max_princ__=FSE_ROYALITIES_Mensal_Eixo_max_princ_;}
        if(FSE_ROYALITIES_Mensal_Eixo_min_princ > 0 && FSE_ROYALITIES_Mensal_Eixo_max_princ <0 ){ var FSE_ROYALITIES_Mensal_Eixo_max_secon__=(FSE_ROYALITIES_Mensal_Eixo_max_princ__*FSE_ROYALITIES_Mensal_Eixo_min_secon_)/FSE_ROYALITIES_Mensal_Eixo_min_princ_;} else { var FSE_ROYALITIES_Mensal_Eixo_max_secon__=FSE_ROYALITIES_Mensal_Eixo_max_secon_;}
    }



    var GRAFICO_FSE_RESULT_MENSAL_COMP_050=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_050').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_050=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_050, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label: 'Royalities(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   data: [
                       FSE_ROYALITIES_ANO_N_JANEIRO_ACUM,
                       FSE_ROYALITIES_ANO_N_FEVEREIRO_ACUM,
                       FSE_ROYALITIES_ANO_N_MARCO_ACUM,
                       FSE_ROYALITIES_ANO_N_ABRIL_ACUM,
                       FSE_ROYALITIES_ANO_N_MAIO_ACUM,
                       FSE_ROYALITIES_ANO_N_JUNHO_ACUM,
                       FSE_ROYALITIES_ANO_N_JULHO_ACUM,
                       FSE_ROYALITIES_ANO_N_AGOSTO_ACUM,
                       FSE_ROYALITIES_ANO_N_SETEMBRO_ACUM,
                       FSE_ROYALITIES_ANO_N_OUTUBRO_ACUM,
                       FSE_ROYALITIES_ANO_N_NOVEMBRO_ACUM,
                       FSE_ROYALITIES_ANO_N_DEZEMBRO_ACUM,
                   ],
                   type: 'line'


               },
                              {
                                  label: 'Royalities(ac) ' + ANO_VERSAO_ANTE_,
                                  yAxisID: 'A',
                                  //backgroundColor: 'rgb(201, 10, 10)',
                                  borderColor: 'rgb(0,221,0)',
                                  data: [
                       FSE_ROYALITIES_ANO_N_1_JANEIRO_ACUM,
                       FSE_ROYALITIES_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_ROYALITIES_ANO_N_1_MARCO_ACUM,
                       FSE_ROYALITIES_ANO_N_1_ABRIL_ACUM,
                       FSE_ROYALITIES_ANO_N_1_MAIO_ACUM,
                       FSE_ROYALITIES_ANO_N_1_JUNHO_ACUM,
                       FSE_ROYALITIES_ANO_N_1_JULHO_ACUM,
                       FSE_ROYALITIES_ANO_N_1_AGOSTO_ACUM,
                       FSE_ROYALITIES_ANO_N_1_SETEMBRO_ACUM,
                       FSE_ROYALITIES_ANO_N_1_OUTUBRO_ACUM,
                       FSE_ROYALITIES_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_ROYALITIES_ANO_N_1_DEZEMBRO_ACUM,
                                  ],
                                  type: 'line'


                              },
                {
                    label:  'Royalities(m) ' + ANO_VERSAO_REAL_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(250 , 83 , 0, 0.5)',
                    borderColor: 'rgba(250 , 83 , 0, 0.5)',
                    data: [
                  FSE_ROYALITIES_ANO_N_JANEIRO ,
                  FSE_ROYALITIES_ANO_N_FEVEREIRO ,
                  FSE_ROYALITIES_ANO_N_MARCO ,
                  FSE_ROYALITIES_ANO_N_ABRIL,
                  FSE_ROYALITIES_ANO_N_MAIO ,
                  FSE_ROYALITIES_ANO_N_JUNHO ,
                  FSE_ROYALITIES_ANO_N_JULHO ,
                  FSE_ROYALITIES_ANO_N_AGOSTO ,
                  FSE_ROYALITIES_ANO_N_SETEMBRO ,
                  FSE_ROYALITIES_ANO_N_OUTUBRO ,
                  FSE_ROYALITIES_ANO_N_NOVEMBRO ,
                  FSE_ROYALITIES_ANO_N_DEZEMBRO ,
                    ],
                },
                {
                    label:  'Royalities(m) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(0,221,0, 0.4)',
                    borderColor: 'rgba(0,221,0, 0.4)',
                    data: [
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_JANEIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_FEVEREIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_MARCO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_ABRIL"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_MAIO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_JUNHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_JULHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_AGOSTO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_SETEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_OUTUBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_NOVEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANO_N_1_DEZEMBRO"]))),
                    ],
                },


            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_ROYALITIES_MENSAL_1',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                min:  Math.round(FSE_ROYALITIES_Mensal_Eixo_min_princ__,0),
                                                max:  Math.round(FSE_ROYALITIES_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString();
                                                }
                                            }
                                        },

                    { id: 'B',
                        type: 'linear',
                        position: 'right',
                        ticks: {
                            min: Math.round(FSE_ROYALITIES_Mensal_Eixo_min_secon__,0),
                            max:  Math.round(FSE_ROYALITIES_Mensal_Eixo_max_secon__,0),
                            beginAtZero: false,
                            callback: function(value, index, values) {
                                return value.toLocaleString();
                            }
                        }
                    },






                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_051-----------------------------------------------------------*@
<script>

    var IND_VN_ANO_N_JANEIRO_ACUM = IND_VN_ANO_N_JANEIRO;
    var IND_VN_ANO_N_FEVEREIRO_ACUM = IND_VN_ANO_N_FEVEREIRO + IND_VN_ANO_N_JANEIRO_ACUM;
    var IND_VN_ANO_N_MARCO_ACUM = IND_VN_ANO_N_MARCO + IND_VN_ANO_N_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_ABRIL_ACUM = IND_VN_ANO_N_ABRIL + IND_VN_ANO_N_MARCO_ACUM;
    var IND_VN_ANO_N_MAIO_ACUM = IND_VN_ANO_N_MAIO + IND_VN_ANO_N_ABRIL_ACUM;
    var IND_VN_ANO_N_JUNHO_ACUM = IND_VN_ANO_N_JUNHO + IND_VN_ANO_N_MAIO_ACUM;
    var IND_VN_ANO_N_JULHO_ACUM = IND_VN_ANO_N_JULHO + IND_VN_ANO_N_JUNHO_ACUM;
    var IND_VN_ANO_N_AGOSTO_ACUM = IND_VN_ANO_N_AGOSTO + IND_VN_ANO_N_JULHO_ACUM;
    var IND_VN_ANO_N_SETEMBRO_ACUM = IND_VN_ANO_N_SETEMBRO + IND_VN_ANO_N_AGOSTO_ACUM;
    var IND_VN_ANO_N_OUTUBRO_ACUM = IND_VN_ANO_N_OUTUBRO + IND_VN_ANO_N_SETEMBRO_ACUM;
    var IND_VN_ANO_N_NOVEMBRO_ACUM = IND_VN_ANO_N_NOVEMBRO + IND_VN_ANO_N_OUTUBRO_ACUM;
    var IND_VN_ANO_N_DEZEMBRO_ACUM = IND_VN_ANO_N_DEZEMBRO + IND_VN_ANO_N_NOVEMBRO_ACUM;



    var IND_VN_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JANEIRO"])));
    var IND_VN_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_FEVEREIRO"]))) + IND_VN_ANO_N_1_JANEIRO_ACUM;
    var IND_VN_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MARCO"]))) + IND_VN_ANO_N_1_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_ABRIL"]))) + IND_VN_ANO_N_1_MARCO_ACUM;
    var IND_VN_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MAIO"]))) + IND_VN_ANO_N_1_ABRIL_ACUM;
    var IND_VN_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JUNHO"]))) + IND_VN_ANO_N_1_MAIO_ACUM;
    var IND_VN_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JULHO"]))) + IND_VN_ANO_N_1_JUNHO_ACUM;
    var IND_VN_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_AGOSTO"]))) + IND_VN_ANO_N_1_JULHO_ACUM;
    var IND_VN_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_SETEMBRO"]))) + IND_VN_ANO_N_1_AGOSTO_ACUM;
    var IND_VN_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_OUTUBRO"]))) + IND_VN_ANO_N_1_SETEMBRO_ACUM;
    var IND_VN_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_NOVEMBRO"]))) + IND_VN_ANO_N_1_OUTUBRO_ACUM;
    var IND_VN_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_DEZEMBRO"]))) + IND_VN_ANO_N_1_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_ROYALITIES_VN_ANO_N_JANEIRO_ACUM = 'nd'; var PESO_FSE_ROYALITIES_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ROYALITIES_VN_ANO_N_JANEIRO_ACUM= FSE_ROYALITIES_ANO_N_JANEIRO_ACUM/IND_VN_ANO_N_JANEIRO_ACUM*100; var PESO_FSE_ROYALITIES_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = PESO_FSE_ROYALITIES_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_ROYALITIES_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_ROYALITIES_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ROYALITIES_VN_ANO_N_FEVEREIRO_ACUM= FSE_ROYALITIES_ANO_N_FEVEREIRO_ACUM/IND_VN_ANO_N_FEVEREIRO_ACUM*100; var PESO_FSE_ROYALITIES_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_ROYALITIES_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_ROYALITIES_VN_ANO_N_MARCO_ACUM = 'nd'; var PESO_FSE_ROYALITIES_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ROYALITIES_VN_ANO_N_MARCO_ACUM= FSE_ROYALITIES_ANO_N_MARCO_ACUM/IND_VN_ANO_N_MARCO_ACUM*100; var PESO_FSE_ROYALITIES_VN_ANO_N_MARCO_ACUM_MAX_MIN = PESO_FSE_ROYALITIES_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_ROYALITIES_VN_ANO_N_ABRIL_ACUM = 'nd'; var PESO_FSE_ROYALITIES_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ROYALITIES_VN_ANO_N_ABRIL_ACUM= FSE_ROYALITIES_ANO_N_ABRIL_ACUM/IND_VN_ANO_N_ABRIL_ACUM*100; var PESO_FSE_ROYALITIES_VN_ANO_N_ABRIL_ACUM_MAX_MIN = PESO_FSE_ROYALITIES_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_ROYALITIES_VN_ANO_N_MAIO_ACUM = 'nd'; var PESO_FSE_ROYALITIES_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ROYALITIES_VN_ANO_N_MAIO_ACUM= FSE_ROYALITIES_ANO_N_MAIO_ACUM/IND_VN_ANO_N_MAIO_ACUM*100; var PESO_FSE_ROYALITIES_VN_ANO_N_MAIO_ACUM_MAX_MIN = PESO_FSE_ROYALITIES_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_ROYALITIES_VN_ANO_N_JUNHO_ACUM = 'nd'; var PESO_FSE_ROYALITIES_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ROYALITIES_VN_ANO_N_JUNHO_ACUM= FSE_ROYALITIES_ANO_N_JUNHO_ACUM/IND_VN_ANO_N_JUNHO_ACUM*100; var PESO_FSE_ROYALITIES_VN_ANO_N_JUNHO_ACUM_MAX_MIN = PESO_FSE_ROYALITIES_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_ROYALITIES_VN_ANO_N_JULHO_ACUM = 'nd'; var PESO_FSE_ROYALITIES_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ROYALITIES_VN_ANO_N_JULHO_ACUM= FSE_ROYALITIES_ANO_N_JULHO_ACUM/IND_VN_ANO_N_JULHO_ACUM*100; var PESO_FSE_ROYALITIES_VN_ANO_N_JULHO_ACUM_MAX_MIN = PESO_FSE_ROYALITIES_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_ROYALITIES_VN_ANO_N_AGOSTO_ACUM = 'nd'; var PESO_FSE_ROYALITIES_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ROYALITIES_VN_ANO_N_AGOSTO_ACUM= FSE_ROYALITIES_ANO_N_AGOSTO_ACUM/IND_VN_ANO_N_AGOSTO_ACUM*100; var PESO_FSE_ROYALITIES_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = PESO_FSE_ROYALITIES_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_ROYALITIES_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var PESO_FSE_ROYALITIES_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ROYALITIES_VN_ANO_N_SETEMBRO_ACUM= FSE_ROYALITIES_ANO_N_SETEMBRO_ACUM/IND_VN_ANO_N_SETEMBRO_ACUM*100; var PESO_FSE_ROYALITIES_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_ROYALITIES_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_ROYALITIES_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var PESO_FSE_ROYALITIES_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ROYALITIES_VN_ANO_N_OUTUBRO_ACUM= FSE_ROYALITIES_ANO_N_OUTUBRO_ACUM/IND_VN_ANO_N_OUTUBRO_ACUM*100; var PESO_FSE_ROYALITIES_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_ROYALITIES_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_ROYALITIES_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_ROYALITIES_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ROYALITIES_VN_ANO_N_NOVEMBRO_ACUM= FSE_ROYALITIES_ANO_N_NOVEMBRO_ACUM/IND_VN_ANO_N_NOVEMBRO_ACUM*100; var PESO_FSE_ROYALITIES_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_ROYALITIES_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_ROYALITIES_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_ROYALITIES_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ROYALITIES_VN_ANO_N_DEZEMBRO_ACUM= FSE_ROYALITIES_ANO_N_DEZEMBRO_ACUM/IND_VN_ANO_N_DEZEMBRO_ACUM*100; var PESO_FSE_ROYALITIES_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_ROYALITIES_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_ROYALITIES_VN_ANO_N_1_JANEIRO_ACUM = 'nd'; var PESO_FSE_ROYALITIES_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ROYALITIES_VN_ANO_N_1_JANEIRO_ACUM= FSE_ROYALITIES_ANO_N_1_JANEIRO_ACUM/IND_VN_ANO_N_1_JANEIRO_ACUM*100; var PESO_FSE_ROYALITIES_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = PESO_FSE_ROYALITIES_VN_ANO_N_1_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_ROYALITIES_VN_ANO_N_1_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_ROYALITIES_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ROYALITIES_VN_ANO_N_1_FEVEREIRO_ACUM= FSE_ROYALITIES_ANO_N_1_FEVEREIRO_ACUM/IND_VN_ANO_N_1_FEVEREIRO_ACUM*100; var PESO_FSE_ROYALITIES_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_ROYALITIES_VN_ANO_N_1_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_ROYALITIES_VN_ANO_N_1_MARCO_ACUM = 'nd'; var PESO_FSE_ROYALITIES_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ROYALITIES_VN_ANO_N_1_MARCO_ACUM= FSE_ROYALITIES_ANO_N_1_MARCO_ACUM/IND_VN_ANO_N_1_MARCO_ACUM*100; var PESO_FSE_ROYALITIES_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = PESO_FSE_ROYALITIES_VN_ANO_N_1_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_ROYALITIES_VN_ANO_N_1_ABRIL_ACUM = 'nd'; var PESO_FSE_ROYALITIES_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ROYALITIES_VN_ANO_N_1_ABRIL_ACUM= FSE_ROYALITIES_ANO_N_1_ABRIL_ACUM/IND_VN_ANO_N_1_ABRIL_ACUM*100; var PESO_FSE_ROYALITIES_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = PESO_FSE_ROYALITIES_VN_ANO_N_1_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_ROYALITIES_VN_ANO_N_1_MAIO_ACUM = 'nd'; var PESO_FSE_ROYALITIES_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ROYALITIES_VN_ANO_N_1_MAIO_ACUM= FSE_ROYALITIES_ANO_N_1_MAIO_ACUM/IND_VN_ANO_N_1_MAIO_ACUM*100; var PESO_FSE_ROYALITIES_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = PESO_FSE_ROYALITIES_VN_ANO_N_1_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_ROYALITIES_VN_ANO_N_1_JUNHO_ACUM = 'nd'; var PESO_FSE_ROYALITIES_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ROYALITIES_VN_ANO_N_1_JUNHO_ACUM= FSE_ROYALITIES_ANO_N_1_JUNHO_ACUM/IND_VN_ANO_N_1_JUNHO_ACUM*100; var PESO_FSE_ROYALITIES_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = PESO_FSE_ROYALITIES_VN_ANO_N_1_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_ROYALITIES_VN_ANO_N_1_JULHO_ACUM = 'nd'; var PESO_FSE_ROYALITIES_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ROYALITIES_VN_ANO_N_1_JULHO_ACUM= FSE_ROYALITIES_ANO_N_1_JULHO_ACUM/IND_VN_ANO_N_1_JULHO_ACUM*100; var PESO_FSE_ROYALITIES_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = PESO_FSE_ROYALITIES_VN_ANO_N_1_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_ROYALITIES_VN_ANO_N_1_AGOSTO_ACUM = 'nd'; var PESO_FSE_ROYALITIES_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ROYALITIES_VN_ANO_N_1_AGOSTO_ACUM= FSE_ROYALITIES_ANO_N_1_AGOSTO_ACUM/IND_VN_ANO_N_1_AGOSTO_ACUM*100; var PESO_FSE_ROYALITIES_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = PESO_FSE_ROYALITIES_VN_ANO_N_1_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_ROYALITIES_VN_ANO_N_1_SETEMBRO_ACUM = 'nd'; var PESO_FSE_ROYALITIES_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ROYALITIES_VN_ANO_N_1_SETEMBRO_ACUM= FSE_ROYALITIES_ANO_N_1_SETEMBRO_ACUM/IND_VN_ANO_N_1_SETEMBRO_ACUM*100; var PESO_FSE_ROYALITIES_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_ROYALITIES_VN_ANO_N_1_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_ROYALITIES_VN_ANO_N_1_OUTUBRO_ACUM = 'nd'; var PESO_FSE_ROYALITIES_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ROYALITIES_VN_ANO_N_1_OUTUBRO_ACUM= FSE_ROYALITIES_ANO_N_1_OUTUBRO_ACUM/IND_VN_ANO_N_1_OUTUBRO_ACUM*100; var PESO_FSE_ROYALITIES_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_ROYALITIES_VN_ANO_N_1_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_ROYALITIES_VN_ANO_N_1_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_ROYALITIES_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ROYALITIES_VN_ANO_N_1_NOVEMBRO_ACUM= FSE_ROYALITIES_ANO_N_1_NOVEMBRO_ACUM/IND_VN_ANO_N_1_NOVEMBRO_ACUM*100; var PESO_FSE_ROYALITIES_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_ROYALITIES_VN_ANO_N_1_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_ROYALITIES_VN_ANO_N_1_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_ROYALITIES_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ROYALITIES_VN_ANO_N_1_DEZEMBRO_ACUM= FSE_ROYALITIES_ANO_N_1_DEZEMBRO_ACUM/IND_VN_ANO_N_1_DEZEMBRO_ACUM*100; var PESO_FSE_ROYALITIES_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_ROYALITIES_VN_ANO_N_1_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_VN_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JANEIRO_ACUM= ((IND_VN_ANO_N_JANEIRO_ACUM-IND_VN_ANO_N_1_JANEIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_JANEIRO_ACUM))*100; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_FEVEREIRO_ACUM= ((IND_VN_ANO_N_FEVEREIRO_ACUM-IND_VN_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_VN_ANO_N_MARCO_ACUM = 'nd'; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MARCO_ACUM= ((IND_VN_ANO_N_MARCO_ACUM-IND_VN_ANO_N_1_MARCO_ACUM)/Math.abs(IND_VN_ANO_N_1_MARCO_ACUM))*100; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = VAR_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_VN_ANO_N_ABRIL_ACUM = 'nd'; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_ABRIL_ACUM= ((IND_VN_ANO_N_ABRIL_ACUM-IND_VN_ANO_N_1_ABRIL_ACUM)/Math.abs(IND_VN_ANO_N_1_ABRIL_ACUM))*100; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_VN_ANO_N_MAIO_ACUM = 'nd'; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MAIO_ACUM= ((IND_VN_ANO_N_MAIO_ACUM-IND_VN_ANO_N_1_MAIO_ACUM)/Math.abs(IND_VN_ANO_N_1_MAIO_ACUM))*100; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = VAR_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_VN_ANO_N_JUNHO_ACUM = 'nd'; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JUNHO_ACUM= ((IND_VN_ANO_N_JUNHO_ACUM-IND_VN_ANO_N_1_JUNHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JUNHO_ACUM))*100; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_VN_ANO_N_JULHO_ACUM = 'nd'; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JULHO_ACUM= ((IND_VN_ANO_N_JULHO_ACUM-IND_VN_ANO_N_1_JULHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JULHO_ACUM))*100; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_VN_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_AGOSTO_ACUM= ((IND_VN_ANO_N_AGOSTO_ACUM-IND_VN_ANO_N_1_AGOSTO_ACUM)/Math.abs(IND_VN_ANO_N_1_AGOSTO_ACUM))*100; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_SETEMBRO_ACUM= ((IND_VN_ANO_N_SETEMBRO_ACUM-IND_VN_ANO_N_1_SETEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_OUTUBRO_ACUM= ((IND_VN_ANO_N_OUTUBRO_ACUM-IND_VN_ANO_N_1_OUTUBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_NOVEMBRO_ACUM= ((IND_VN_ANO_N_NOVEMBRO_ACUM-IND_VN_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_DEZEMBRO_ACUM= ((IND_VN_ANO_N_DEZEMBRO_ACUM-IND_VN_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_FSE_ROYALITIES_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_FSE_ROYALITIES_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ROYALITIES_ANO_N_JANEIRO_ACUM= ((FSE_ROYALITIES_ANO_N_JANEIRO_ACUM-FSE_ROYALITIES_ANO_N_1_JANEIRO_ACUM)/Math.abs(FSE_ROYALITIES_ANO_N_1_JANEIRO_ACUM))*100; var VAR_FSE_ROYALITIES_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_FSE_ROYALITIES_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_FSE_ROYALITIES_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_FSE_ROYALITIES_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ROYALITIES_ANO_N_FEVEREIRO_ACUM= ((FSE_ROYALITIES_ANO_N_FEVEREIRO_ACUM-FSE_ROYALITIES_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(FSE_ROYALITIES_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_FSE_ROYALITIES_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_FSE_ROYALITIES_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_FSE_ROYALITIES_ANO_N_MARCO_ACUM = 'nd'; var VAR_FSE_ROYALITIES_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ROYALITIES_ANO_N_MARCO_ACUM= ((FSE_ROYALITIES_ANO_N_MARCO_ACUM-FSE_ROYALITIES_ANO_N_1_MARCO_ACUM)/Math.abs(FSE_ROYALITIES_ANO_N_1_MARCO_ACUM))*100; var VAR_FSE_ROYALITIES_ANO_N_MARCO_ACUM_MAX_MIN = VAR_FSE_ROYALITIES_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_FSE_ROYALITIES_ANO_N_ABRIL_ACUM = 'nd'; var VAR_FSE_ROYALITIES_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ROYALITIES_ANO_N_ABRIL_ACUM= ((FSE_ROYALITIES_ANO_N_ABRIL_ACUM-FSE_ROYALITIES_ANO_N_1_ABRIL_ACUM)/Math.abs(FSE_ROYALITIES_ANO_N_1_ABRIL_ACUM))*100; var VAR_FSE_ROYALITIES_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_FSE_ROYALITIES_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_FSE_ROYALITIES_ANO_N_MAIO_ACUM = 'nd'; var VAR_FSE_ROYALITIES_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ROYALITIES_ANO_N_MAIO_ACUM= ((FSE_ROYALITIES_ANO_N_MAIO_ACUM-FSE_ROYALITIES_ANO_N_1_MAIO_ACUM)/Math.abs(FSE_ROYALITIES_ANO_N_1_MAIO_ACUM))*100; var VAR_FSE_ROYALITIES_ANO_N_MAIO_ACUM_MAX_MIN = VAR_FSE_ROYALITIES_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_FSE_ROYALITIES_ANO_N_JUNHO_ACUM = 'nd'; var VAR_FSE_ROYALITIES_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ROYALITIES_ANO_N_JUNHO_ACUM= ((FSE_ROYALITIES_ANO_N_JUNHO_ACUM-FSE_ROYALITIES_ANO_N_1_JUNHO_ACUM)/Math.abs(FSE_ROYALITIES_ANO_N_1_JUNHO_ACUM))*100; var VAR_FSE_ROYALITIES_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_FSE_ROYALITIES_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_FSE_ROYALITIES_ANO_N_JULHO_ACUM = 'nd'; var VAR_FSE_ROYALITIES_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ROYALITIES_ANO_N_JULHO_ACUM= ((FSE_ROYALITIES_ANO_N_JULHO_ACUM-FSE_ROYALITIES_ANO_N_1_JULHO_ACUM)/Math.abs(FSE_ROYALITIES_ANO_N_1_JULHO_ACUM))*100; var VAR_FSE_ROYALITIES_ANO_N_JULHO_ACUM_MAX_MIN = VAR_FSE_ROYALITIES_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_FSE_ROYALITIES_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_FSE_ROYALITIES_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ROYALITIES_ANO_N_AGOSTO_ACUM= ((FSE_ROYALITIES_ANO_N_AGOSTO_ACUM-FSE_ROYALITIES_ANO_N_1_AGOSTO_ACUM)/Math.abs(FSE_ROYALITIES_ANO_N_1_AGOSTO_ACUM))*100; var VAR_FSE_ROYALITIES_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_FSE_ROYALITIES_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_FSE_ROYALITIES_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_FSE_ROYALITIES_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ROYALITIES_ANO_N_SETEMBRO_ACUM= ((FSE_ROYALITIES_ANO_N_SETEMBRO_ACUM-FSE_ROYALITIES_ANO_N_1_SETEMBRO_ACUM)/Math.abs(FSE_ROYALITIES_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_FSE_ROYALITIES_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_FSE_ROYALITIES_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_FSE_ROYALITIES_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_FSE_ROYALITIES_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ROYALITIES_ANO_N_OUTUBRO_ACUM= ((FSE_ROYALITIES_ANO_N_OUTUBRO_ACUM-FSE_ROYALITIES_ANO_N_1_OUTUBRO_ACUM)/Math.abs(FSE_ROYALITIES_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_FSE_ROYALITIES_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_FSE_ROYALITIES_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_FSE_ROYALITIES_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_FSE_ROYALITIES_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ROYALITIES_ANO_N_NOVEMBRO_ACUM= ((FSE_ROYALITIES_ANO_N_NOVEMBRO_ACUM-FSE_ROYALITIES_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(FSE_ROYALITIES_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_FSE_ROYALITIES_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_FSE_ROYALITIES_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_FSE_ROYALITIES_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_FSE_ROYALITIES_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ROYALITIES_ANO_N_DEZEMBRO_ACUM= ((FSE_ROYALITIES_ANO_N_DEZEMBRO_ACUM-FSE_ROYALITIES_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(FSE_ROYALITIES_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_FSE_ROYALITIES_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_FSE_ROYALITIES_ANO_N_DEZEMBRO_ACUM };

    if( PESO_FSE_ROYALITIES_VN_ANO_N_1_JANEIRO_ACUM > PESO_FSE_ROYALITIES_VN_ANO_N_JANEIRO_ACUM) { var  INEFICIENCIA_FSE_ROYALITIES_ANO_N_JANEIRO_ACUM=PESO_FSE_ROYALITIES_VN_ANO_N_1_JANEIRO_ACUM ; } else { var  INEFICIENCIA_FSE_ROYALITIES_ANO_N_JANEIRO_ACUM=PESO_FSE_ROYALITIES_VN_ANO_N_JANEIRO_ACUM ; }
    if( PESO_FSE_ROYALITIES_VN_ANO_N_1_FEVEREIRO_ACUM > PESO_FSE_ROYALITIES_VN_ANO_N_FEVEREIRO_ACUM) { var  INEFICIENCIA_FSE_ROYALITIES_ANO_N_FEVEREIRO_ACUM=PESO_FSE_ROYALITIES_VN_ANO_N_1_FEVEREIRO_ACUM ; } else { var  INEFICIENCIA_FSE_ROYALITIES_ANO_N_FEVEREIRO_ACUM=PESO_FSE_ROYALITIES_VN_ANO_N_FEVEREIRO_ACUM ; }
    if( PESO_FSE_ROYALITIES_VN_ANO_N_1_MARCO_ACUM > PESO_FSE_ROYALITIES_VN_ANO_N_MARCO_ACUM) { var  INEFICIENCIA_FSE_ROYALITIES_ANO_N_MARCO_ACUM=PESO_FSE_ROYALITIES_VN_ANO_N_1_MARCO_ACUM ; } else { var  INEFICIENCIA_FSE_ROYALITIES_ANO_N_MARCO_ACUM=PESO_FSE_ROYALITIES_VN_ANO_N_MARCO_ACUM ; }
    if( PESO_FSE_ROYALITIES_VN_ANO_N_1_ABRIL_ACUM > PESO_FSE_ROYALITIES_VN_ANO_N_ABRIL_ACUM) { var  INEFICIENCIA_FSE_ROYALITIES_ANO_N_ABRIL_ACUM=PESO_FSE_ROYALITIES_VN_ANO_N_1_ABRIL_ACUM ; } else { var  INEFICIENCIA_FSE_ROYALITIES_ANO_N_ABRIL_ACUM=PESO_FSE_ROYALITIES_VN_ANO_N_ABRIL_ACUM ; }
    if( PESO_FSE_ROYALITIES_VN_ANO_N_1_MAIO_ACUM > PESO_FSE_ROYALITIES_VN_ANO_N_MAIO_ACUM) { var  INEFICIENCIA_FSE_ROYALITIES_ANO_N_MAIO_ACUM=PESO_FSE_ROYALITIES_VN_ANO_N_1_MAIO_ACUM ; } else { var  INEFICIENCIA_FSE_ROYALITIES_ANO_N_MAIO_ACUM=PESO_FSE_ROYALITIES_VN_ANO_N_MAIO_ACUM ; }
    if( PESO_FSE_ROYALITIES_VN_ANO_N_1_JUNHO_ACUM > PESO_FSE_ROYALITIES_VN_ANO_N_JUNHO_ACUM) { var  INEFICIENCIA_FSE_ROYALITIES_ANO_N_JUNHO_ACUM=PESO_FSE_ROYALITIES_VN_ANO_N_1_JUNHO_ACUM ; } else { var  INEFICIENCIA_FSE_ROYALITIES_ANO_N_JUNHO_ACUM=PESO_FSE_ROYALITIES_VN_ANO_N_JUNHO_ACUM ; }
    if( PESO_FSE_ROYALITIES_VN_ANO_N_1_JULHO_ACUM > PESO_FSE_ROYALITIES_VN_ANO_N_JULHO_ACUM) { var  INEFICIENCIA_FSE_ROYALITIES_ANO_N_JULHO_ACUM=PESO_FSE_ROYALITIES_VN_ANO_N_1_JULHO_ACUM ; } else { var  INEFICIENCIA_FSE_ROYALITIES_ANO_N_JULHO_ACUM=PESO_FSE_ROYALITIES_VN_ANO_N_JULHO_ACUM ; }
    if( PESO_FSE_ROYALITIES_VN_ANO_N_1_AGOSTO_ACUM > PESO_FSE_ROYALITIES_VN_ANO_N_AGOSTO_ACUM) { var  INEFICIENCIA_FSE_ROYALITIES_ANO_N_AGOSTO_ACUM=PESO_FSE_ROYALITIES_VN_ANO_N_1_AGOSTO_ACUM ; } else { var  INEFICIENCIA_FSE_ROYALITIES_ANO_N_AGOSTO_ACUM=PESO_FSE_ROYALITIES_VN_ANO_N_AGOSTO_ACUM ; }
    if( PESO_FSE_ROYALITIES_VN_ANO_N_1_SETEMBRO_ACUM > PESO_FSE_ROYALITIES_VN_ANO_N_SETEMBRO_ACUM) { var  INEFICIENCIA_FSE_ROYALITIES_ANO_N_SETEMBRO_ACUM=PESO_FSE_ROYALITIES_VN_ANO_N_1_SETEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_ROYALITIES_ANO_N_SETEMBRO_ACUM=PESO_FSE_ROYALITIES_VN_ANO_N_SETEMBRO_ACUM ; }
    if( PESO_FSE_ROYALITIES_VN_ANO_N_1_OUTUBRO_ACUM > PESO_FSE_ROYALITIES_VN_ANO_N_OUTUBRO_ACUM) { var  INEFICIENCIA_FSE_ROYALITIES_ANO_N_OUTUBRO_ACUM=PESO_FSE_ROYALITIES_VN_ANO_N_1_OUTUBRO_ACUM ; } else { var  INEFICIENCIA_FSE_ROYALITIES_ANO_N_OUTUBRO_ACUM=PESO_FSE_ROYALITIES_VN_ANO_N_OUTUBRO_ACUM ; }
    if( PESO_FSE_ROYALITIES_VN_ANO_N_1_NOVEMBRO_ACUM > PESO_FSE_ROYALITIES_VN_ANO_N_NOVEMBRO_ACUM) { var  INEFICIENCIA_FSE_ROYALITIES_ANO_N_NOVEMBRO_ACUM=PESO_FSE_ROYALITIES_VN_ANO_N_1_NOVEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_ROYALITIES_ANO_N_NOVEMBRO_ACUM=PESO_FSE_ROYALITIES_VN_ANO_N_NOVEMBRO_ACUM ; }
    if( PESO_FSE_ROYALITIES_VN_ANO_N_1_DEZEMBRO_ACUM > PESO_FSE_ROYALITIES_VN_ANO_N_DEZEMBRO_ACUM) { var  INEFICIENCIA_FSE_ROYALITIES_ANO_N_DEZEMBRO_ACUM=PESO_FSE_ROYALITIES_VN_ANO_N_1_DEZEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_ROYALITIES_ANO_N_DEZEMBRO_ACUM=PESO_FSE_ROYALITIES_VN_ANO_N_DEZEMBRO_ACUM ; }



    var fillBetweenLinesPlugin = {
        afterDatasetsDraw: function (chart) {
            var ctx = chart.chart.ctx;
            var xaxis = chart.scales['x-axis-0'];
            var yaxis = chart.scales['y-axis-0'];
            var datasets = chart.data.datasets;
            ctx.save();

            for (var d = 0; d < datasets.length; d++) {
                var dataset = datasets[d];
                if (dataset.fillBetweenSet == undefined) {
                    continue;
                }

                // get meta for both data sets
                var meta1 = chart.getDatasetMeta(d);
                var meta2 = chart.getDatasetMeta(dataset.fillBetweenSet);

                // do not draw fill if one of the datasets is hidden
                if (meta1.hidden || meta2.hidden) continue;

                // create fill areas in pairs
                for (var p = 0; p < meta1.data.length-1;p++) {
                    // if null skip
                    if (dataset.data[p] == null || dataset.data[p+1] == null) continue;

                    ctx.beginPath();

                    // trace line 1
                    var curr = meta1.data[p];
                    var next = meta1.data[p+1];
                    ctx.moveTo(curr._view.x, curr._view.y);
                    ctx.lineTo(curr._view.x, curr._view.y);
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(next._view.x, curr._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        ctx.bezierCurveTo(
                          curr._view.controlPointNextX,
                          curr._view.controlPointNextY,
                          next._view.controlPointPreviousX,
                          next._view.controlPointPreviousY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // connect dataset1 to dataset2
                    var curr = meta2.data[p+1];
                    var next = meta2.data[p];
                    ctx.lineTo(curr._view.x, curr._view.y);

                    // trace BACKWORDS set2 to complete the box
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(curr._view.x, next._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        // reverse bezier
                        ctx.bezierCurveTo(
                          curr._view.controlPointPreviousX,
                          curr._view.controlPointPreviousY,
                          next._view.controlPointNextX,
                          next._view.controlPointNextY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // close the loop and fill with shading
                    ctx.closePath();
                    ctx.fillStyle = dataset.fillBetweenColor || "rgba(0,0,0,0.1)";
                    ctx.fill();
                } // end for p loop
            }
        } // end afterDatasetsDraw
    }; // end fillBetweenLinesPlugin

    Chart.pluginService.register(fillBetweenLinesPlugin);



    var GRAFICO_FSE_RESULT_MENSAL_COMP_051=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_051').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_051=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_051, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label:  'Peso RoyalitiesvsVN(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   //borderColor: "#F00",
                   fill: false,
                   steppedLine: false,
                   tension: 0.5,
                   fillBetweenSet: 1,
                   fillBetweenColor: "rgba(0, 221, 0, 0.1)",
                   data: [
                   PESO_FSE_ROYALITIES_VN_ANO_N_JANEIRO_ACUM,
                   PESO_FSE_ROYALITIES_VN_ANO_N_FEVEREIRO_ACUM,
                   PESO_FSE_ROYALITIES_VN_ANO_N_MARCO_ACUM,
                   PESO_FSE_ROYALITIES_VN_ANO_N_ABRIL_ACUM,
                   PESO_FSE_ROYALITIES_VN_ANO_N_MAIO_ACUM,
                   PESO_FSE_ROYALITIES_VN_ANO_N_JUNHO_ACUM,
                   PESO_FSE_ROYALITIES_VN_ANO_N_JULHO_ACUM,
                   PESO_FSE_ROYALITIES_VN_ANO_N_AGOSTO_ACUM,
                   PESO_FSE_ROYALITIES_VN_ANO_N_SETEMBRO_ACUM,
                   PESO_FSE_ROYALITIES_VN_ANO_N_OUTUBRO_ACUM,
                   PESO_FSE_ROYALITIES_VN_ANO_N_NOVEMBRO_ACUM,
                   PESO_FSE_ROYALITIES_VN_ANO_N_DEZEMBRO_ACUM,

                   ],
                   type: 'line'


               },
                {
                    label: 'Peso RoyalitiesvsVN(ac) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'A',
                    //backgroundColor: 'rgb(17, 121, 240)',
                    borderColor: 'rgb(0,221,0)',
                    //borderColor: "#00F",
                    fill: false,
                    steppedLine: false,
                    tension: 0.5,
                    data: [
                   PESO_FSE_ROYALITIES_VN_ANO_N_1_JANEIRO_ACUM,
                   PESO_FSE_ROYALITIES_VN_ANO_N_1_FEVEREIRO_ACUM,
                   PESO_FSE_ROYALITIES_VN_ANO_N_1_MARCO_ACUM,
                   PESO_FSE_ROYALITIES_VN_ANO_N_1_ABRIL_ACUM,
                   PESO_FSE_ROYALITIES_VN_ANO_N_1_MAIO_ACUM,
                   PESO_FSE_ROYALITIES_VN_ANO_N_1_JUNHO_ACUM,
                   PESO_FSE_ROYALITIES_VN_ANO_N_1_JULHO_ACUM,
                   PESO_FSE_ROYALITIES_VN_ANO_N_1_AGOSTO_ACUM,
                   PESO_FSE_ROYALITIES_VN_ANO_N_1_SETEMBRO_ACUM,
                   PESO_FSE_ROYALITIES_VN_ANO_N_1_OUTUBRO_ACUM,
                   PESO_FSE_ROYALITIES_VN_ANO_N_1_NOVEMBRO_ACUM,
                   PESO_FSE_ROYALITIES_VN_ANO_N_1_DEZEMBRO_ACUM,
                    ],
                    type: 'line'
                },
    {
        label: 'Ineficiência',
        yAxisID: 'A',
        backgroundColor: "rgba(255, 0, 0, 0.2)",
        borderColor: 'rgba(255, 255, 255, 0.1)',
        //borderColor: "#0D0",
        fill: false,
        steppedLine: false,
        tension: 0.5,
        fillBetweenSet: 1,
        fillBetweenColor: "rgba(255, 0, 0, 0.2)",
        data: [
    INEFICIENCIA_FSE_ROYALITIES_ANO_N_JANEIRO_ACUM,
    INEFICIENCIA_FSE_ROYALITIES_ANO_N_FEVEREIRO_ACUM,
    INEFICIENCIA_FSE_ROYALITIES_ANO_N_MARCO_ACUM,
    INEFICIENCIA_FSE_ROYALITIES_ANO_N_ABRIL_ACUM,
    INEFICIENCIA_FSE_ROYALITIES_ANO_N_MAIO_ACUM,
    INEFICIENCIA_FSE_ROYALITIES_ANO_N_JUNHO_ACUM,
    INEFICIENCIA_FSE_ROYALITIES_ANO_N_JULHO_ACUM,
    INEFICIENCIA_FSE_ROYALITIES_ANO_N_AGOSTO_ACUM,
    INEFICIENCIA_FSE_ROYALITIES_ANO_N_SETEMBRO_ACUM,
    INEFICIENCIA_FSE_ROYALITIES_ANO_N_OUTUBRO_ACUM,
    INEFICIENCIA_FSE_ROYALITIES_ANO_N_NOVEMBRO_ACUM,
    INEFICIENCIA_FSE_ROYALITIES_ANO_N_DEZEMBRO_ACUM,
        ],
        type: 'line'
    },

            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_ROYALITIES COMP',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                //min:  Math.round(FSE_ROYALITIES_Mensal_Eixo_min_princ__,0),
                                                //max:  Math.round(FSE_ROYALITIES_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString()+ "%";
                                                }
                                            }
                                        },







                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_052-----------------------------------------------------------*@
<script>

    if(@ViewData["MES_ACUM_REAL"]<1){ var IND_VN_ANO_N_JANEIRO = 'nd'; var IND_VN_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JANEIRO"]))); var IND_VN_ANO_N_JANEIRO_MAX_MIN = IND_VN_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var IND_VN_ANO_N_FEVEREIRO = 'nd'; var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_FEVEREIRO"]))); var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = IND_VN_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var IND_VN_ANO_N_MARCO = 'nd'; var IND_VN_ANO_N_MARCO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MARCO"]))); var IND_VN_ANO_N_MARCO_MAX_MIN = IND_VN_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var IND_VN_ANO_N_ABRIL = 'nd'; var IND_VN_ANO_N_ABRIL_MAX_MIN = 0;  } else { var IND_VN_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_ABRIL"]))); var IND_VN_ANO_N_ABRIL_MAX_MIN = IND_VN_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var IND_VN_ANO_N_MAIO = 'nd'; var IND_VN_ANO_N_MAIO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MAIO"]))); var IND_VN_ANO_N_MAIO_MAX_MIN = IND_VN_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var IND_VN_ANO_N_JUNHO = 'nd'; var IND_VN_ANO_N_JUNHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JUNHO"]))); var IND_VN_ANO_N_JUNHO_MAX_MIN = IND_VN_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var IND_VN_ANO_N_JULHO = 'nd'; var IND_VN_ANO_N_JULHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JULHO"]))); var IND_VN_ANO_N_JULHO_MAX_MIN = IND_VN_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var IND_VN_ANO_N_AGOSTO = 'nd'; var IND_VN_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_AGOSTO"]))); var IND_VN_ANO_N_AGOSTO_MAX_MIN = IND_VN_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var IND_VN_ANO_N_SETEMBRO = 'nd'; var IND_VN_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_SETEMBRO"]))); var IND_VN_ANO_N_SETEMBRO_MAX_MIN = IND_VN_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var IND_VN_ANO_N_OUTUBRO = 'nd'; var IND_VN_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_OUTUBRO"]))); var IND_VN_ANO_N_OUTUBRO_MAX_MIN = IND_VN_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var IND_VN_ANO_N_NOVEMBRO = 'nd'; var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_NOVEMBRO"]))); var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = IND_VN_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var IND_VN_ANO_N_DEZEMBRO = 'nd'; var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_DEZEMBRO"]))); var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = IND_VN_ANO_N_DEZEMBRO };

    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_CONTENS_NOTARIADO_ANO_N_JANEIRO = 'nd'; var FSE_CONTENS_NOTARIADO_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var FSE_CONTENS_NOTARIADO_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_JANEIRO"]))); var FSE_CONTENS_NOTARIADO_ANO_N_JANEIRO_MAX_MIN = FSE_CONTENS_NOTARIADO_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_CONTENS_NOTARIADO_ANO_N_FEVEREIRO = 'nd'; var FSE_CONTENS_NOTARIADO_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var FSE_CONTENS_NOTARIADO_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_FEVEREIRO"]))); var FSE_CONTENS_NOTARIADO_ANO_N_FEVEREIRO_MAX_MIN = FSE_CONTENS_NOTARIADO_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_CONTENS_NOTARIADO_ANO_N_MARCO = 'nd'; var FSE_CONTENS_NOTARIADO_ANO_N_MARCO_MAX_MIN = 0;  } else { var FSE_CONTENS_NOTARIADO_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_MARCO"]))); var FSE_CONTENS_NOTARIADO_ANO_N_MARCO_MAX_MIN = FSE_CONTENS_NOTARIADO_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_CONTENS_NOTARIADO_ANO_N_ABRIL = 'nd'; var FSE_CONTENS_NOTARIADO_ANO_N_ABRIL_MAX_MIN = 0;  } else { var FSE_CONTENS_NOTARIADO_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_ABRIL"]))); var FSE_CONTENS_NOTARIADO_ANO_N_ABRIL_MAX_MIN = FSE_CONTENS_NOTARIADO_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_CONTENS_NOTARIADO_ANO_N_MAIO = 'nd'; var FSE_CONTENS_NOTARIADO_ANO_N_MAIO_MAX_MIN = 0;  } else { var FSE_CONTENS_NOTARIADO_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_MAIO"]))); var FSE_CONTENS_NOTARIADO_ANO_N_MAIO_MAX_MIN = FSE_CONTENS_NOTARIADO_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_CONTENS_NOTARIADO_ANO_N_JUNHO = 'nd'; var FSE_CONTENS_NOTARIADO_ANO_N_JUNHO_MAX_MIN = 0;  } else { var FSE_CONTENS_NOTARIADO_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_JUNHO"]))); var FSE_CONTENS_NOTARIADO_ANO_N_JUNHO_MAX_MIN = FSE_CONTENS_NOTARIADO_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_CONTENS_NOTARIADO_ANO_N_JULHO = 'nd'; var FSE_CONTENS_NOTARIADO_ANO_N_JULHO_MAX_MIN = 0;  } else { var FSE_CONTENS_NOTARIADO_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_JULHO"]))); var FSE_CONTENS_NOTARIADO_ANO_N_JULHO_MAX_MIN = FSE_CONTENS_NOTARIADO_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_CONTENS_NOTARIADO_ANO_N_AGOSTO = 'nd'; var FSE_CONTENS_NOTARIADO_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var FSE_CONTENS_NOTARIADO_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_AGOSTO"]))); var FSE_CONTENS_NOTARIADO_ANO_N_AGOSTO_MAX_MIN = FSE_CONTENS_NOTARIADO_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_CONTENS_NOTARIADO_ANO_N_SETEMBRO = 'nd'; var FSE_CONTENS_NOTARIADO_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var FSE_CONTENS_NOTARIADO_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_SETEMBRO"]))); var FSE_CONTENS_NOTARIADO_ANO_N_SETEMBRO_MAX_MIN = FSE_CONTENS_NOTARIADO_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_CONTENS_NOTARIADO_ANO_N_OUTUBRO = 'nd'; var FSE_CONTENS_NOTARIADO_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var FSE_CONTENS_NOTARIADO_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_OUTUBRO"]))); var FSE_CONTENS_NOTARIADO_ANO_N_OUTUBRO_MAX_MIN = FSE_CONTENS_NOTARIADO_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_CONTENS_NOTARIADO_ANO_N_NOVEMBRO = 'nd'; var FSE_CONTENS_NOTARIADO_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var FSE_CONTENS_NOTARIADO_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_NOVEMBRO"]))); var FSE_CONTENS_NOTARIADO_ANO_N_NOVEMBRO_MAX_MIN = FSE_CONTENS_NOTARIADO_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_CONTENS_NOTARIADO_ANO_N_DEZEMBRO = 'nd'; var FSE_CONTENS_NOTARIADO_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var FSE_CONTENS_NOTARIADO_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_DEZEMBRO"]))); var FSE_CONTENS_NOTARIADO_ANO_N_DEZEMBRO_MAX_MIN = FSE_CONTENS_NOTARIADO_ANO_N_DEZEMBRO };


    var FSE_CONTENS_NOTARIADO_ANO_N_JANEIRO_ACUM = FSE_CONTENS_NOTARIADO_ANO_N_JANEIRO;
    var FSE_CONTENS_NOTARIADO_ANO_N_FEVEREIRO_ACUM = FSE_CONTENS_NOTARIADO_ANO_N_FEVEREIRO + FSE_CONTENS_NOTARIADO_ANO_N_JANEIRO_ACUM;
    var FSE_CONTENS_NOTARIADO_ANO_N_MARCO_ACUM = FSE_CONTENS_NOTARIADO_ANO_N_MARCO + FSE_CONTENS_NOTARIADO_ANO_N_FEVEREIRO_ACUM;
    var FSE_CONTENS_NOTARIADO_ANO_N_ABRIL_ACUM = FSE_CONTENS_NOTARIADO_ANO_N_ABRIL + FSE_CONTENS_NOTARIADO_ANO_N_MARCO_ACUM;
    var FSE_CONTENS_NOTARIADO_ANO_N_MAIO_ACUM = FSE_CONTENS_NOTARIADO_ANO_N_MAIO + FSE_CONTENS_NOTARIADO_ANO_N_ABRIL_ACUM;
    var FSE_CONTENS_NOTARIADO_ANO_N_JUNHO_ACUM = FSE_CONTENS_NOTARIADO_ANO_N_JUNHO + FSE_CONTENS_NOTARIADO_ANO_N_MAIO_ACUM;
    var FSE_CONTENS_NOTARIADO_ANO_N_JULHO_ACUM = FSE_CONTENS_NOTARIADO_ANO_N_JULHO + FSE_CONTENS_NOTARIADO_ANO_N_JUNHO_ACUM;
    var FSE_CONTENS_NOTARIADO_ANO_N_AGOSTO_ACUM = FSE_CONTENS_NOTARIADO_ANO_N_AGOSTO + FSE_CONTENS_NOTARIADO_ANO_N_JULHO_ACUM;
    var FSE_CONTENS_NOTARIADO_ANO_N_SETEMBRO_ACUM = FSE_CONTENS_NOTARIADO_ANO_N_SETEMBRO + FSE_CONTENS_NOTARIADO_ANO_N_AGOSTO_ACUM;
    var FSE_CONTENS_NOTARIADO_ANO_N_OUTUBRO_ACUM = FSE_CONTENS_NOTARIADO_ANO_N_OUTUBRO + FSE_CONTENS_NOTARIADO_ANO_N_SETEMBRO_ACUM;
    var FSE_CONTENS_NOTARIADO_ANO_N_NOVEMBRO_ACUM = FSE_CONTENS_NOTARIADO_ANO_N_NOVEMBRO + FSE_CONTENS_NOTARIADO_ANO_N_OUTUBRO_ACUM;
    var FSE_CONTENS_NOTARIADO_ANO_N_DEZEMBRO_ACUM = FSE_CONTENS_NOTARIADO_ANO_N_DEZEMBRO + FSE_CONTENS_NOTARIADO_ANO_N_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_CONTENS_NOTARIADO_ANO_N_JANEIRO_ACUM = 'nd'; var FSE_CONTENS_NOTARIADO_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var FSE_CONTENS_NOTARIADO_ANO_N_JANEIRO_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_JANEIRO_ACUM; var FSE_CONTENS_NOTARIADO_ANO_N_JANEIRO_ACUM_MAX_MIN = FSE_CONTENS_NOTARIADO_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_CONTENS_NOTARIADO_ANO_N_FEVEREIRO_ACUM = 'nd'; var FSE_CONTENS_NOTARIADO_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var FSE_CONTENS_NOTARIADO_ANO_N_FEVEREIRO_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_FEVEREIRO_ACUM; var FSE_CONTENS_NOTARIADO_ANO_N_FEVEREIRO_ACUM_MAX_MIN = FSE_CONTENS_NOTARIADO_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_CONTENS_NOTARIADO_ANO_N_MARCO_ACUM = 'nd'; var FSE_CONTENS_NOTARIADO_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var FSE_CONTENS_NOTARIADO_ANO_N_MARCO_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_MARCO_ACUM; var FSE_CONTENS_NOTARIADO_ANO_N_MARCO_ACUM_MAX_MIN = FSE_CONTENS_NOTARIADO_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_CONTENS_NOTARIADO_ANO_N_ABRIL_ACUM = 'nd'; var FSE_CONTENS_NOTARIADO_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var FSE_CONTENS_NOTARIADO_ANO_N_ABRIL_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_ABRIL_ACUM; var FSE_CONTENS_NOTARIADO_ANO_N_ABRIL_ACUM_MAX_MIN = FSE_CONTENS_NOTARIADO_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_CONTENS_NOTARIADO_ANO_N_MAIO_ACUM = 'nd'; var FSE_CONTENS_NOTARIADO_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var FSE_CONTENS_NOTARIADO_ANO_N_MAIO_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_MAIO_ACUM; var FSE_CONTENS_NOTARIADO_ANO_N_MAIO_ACUM_MAX_MIN = FSE_CONTENS_NOTARIADO_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_CONTENS_NOTARIADO_ANO_N_JUNHO_ACUM = 'nd'; var FSE_CONTENS_NOTARIADO_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var FSE_CONTENS_NOTARIADO_ANO_N_JUNHO_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_JUNHO_ACUM; var FSE_CONTENS_NOTARIADO_ANO_N_JUNHO_ACUM_MAX_MIN = FSE_CONTENS_NOTARIADO_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_CONTENS_NOTARIADO_ANO_N_JULHO_ACUM = 'nd'; var FSE_CONTENS_NOTARIADO_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var FSE_CONTENS_NOTARIADO_ANO_N_JULHO_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_JULHO_ACUM; var FSE_CONTENS_NOTARIADO_ANO_N_JULHO_ACUM_MAX_MIN = FSE_CONTENS_NOTARIADO_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_CONTENS_NOTARIADO_ANO_N_AGOSTO_ACUM = 'nd'; var FSE_CONTENS_NOTARIADO_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var FSE_CONTENS_NOTARIADO_ANO_N_AGOSTO_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_AGOSTO_ACUM; var FSE_CONTENS_NOTARIADO_ANO_N_AGOSTO_ACUM_MAX_MIN = FSE_CONTENS_NOTARIADO_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_CONTENS_NOTARIADO_ANO_N_SETEMBRO_ACUM = 'nd'; var FSE_CONTENS_NOTARIADO_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_CONTENS_NOTARIADO_ANO_N_SETEMBRO_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_SETEMBRO_ACUM; var FSE_CONTENS_NOTARIADO_ANO_N_SETEMBRO_ACUM_MAX_MIN = FSE_CONTENS_NOTARIADO_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_CONTENS_NOTARIADO_ANO_N_OUTUBRO_ACUM = 'nd'; var FSE_CONTENS_NOTARIADO_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var FSE_CONTENS_NOTARIADO_ANO_N_OUTUBRO_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_OUTUBRO_ACUM; var FSE_CONTENS_NOTARIADO_ANO_N_OUTUBRO_ACUM_MAX_MIN = FSE_CONTENS_NOTARIADO_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_CONTENS_NOTARIADO_ANO_N_NOVEMBRO_ACUM = 'nd'; var FSE_CONTENS_NOTARIADO_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_CONTENS_NOTARIADO_ANO_N_NOVEMBRO_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_NOVEMBRO_ACUM; var FSE_CONTENS_NOTARIADO_ANO_N_NOVEMBRO_ACUM_MAX_MIN = FSE_CONTENS_NOTARIADO_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_CONTENS_NOTARIADO_ANO_N_DEZEMBRO_ACUM = 'nd'; var FSE_CONTENS_NOTARIADO_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_CONTENS_NOTARIADO_ANO_N_DEZEMBRO_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_DEZEMBRO_ACUM; var FSE_CONTENS_NOTARIADO_ANO_N_DEZEMBRO_ACUM_MAX_MIN = FSE_CONTENS_NOTARIADO_ANO_N_DEZEMBRO_ACUM };




    var FSE_CONTENS_NOTARIADO_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_JANEIRO"])));
    var FSE_CONTENS_NOTARIADO_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_FEVEREIRO"]))) + FSE_CONTENS_NOTARIADO_ANO_N_1_JANEIRO_ACUM;
    var FSE_CONTENS_NOTARIADO_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_MARCO"]))) + FSE_CONTENS_NOTARIADO_ANO_N_1_FEVEREIRO_ACUM;
    var FSE_CONTENS_NOTARIADO_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_ABRIL"]))) + FSE_CONTENS_NOTARIADO_ANO_N_1_MARCO_ACUM;
    var FSE_CONTENS_NOTARIADO_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_MAIO"]))) + FSE_CONTENS_NOTARIADO_ANO_N_1_ABRIL_ACUM;
    var FSE_CONTENS_NOTARIADO_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_JUNHO"]))) + FSE_CONTENS_NOTARIADO_ANO_N_1_MAIO_ACUM;
    var FSE_CONTENS_NOTARIADO_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_JULHO"]))) + FSE_CONTENS_NOTARIADO_ANO_N_1_JUNHO_ACUM;
    var FSE_CONTENS_NOTARIADO_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_AGOSTO"]))) + FSE_CONTENS_NOTARIADO_ANO_N_1_JULHO_ACUM;
    var FSE_CONTENS_NOTARIADO_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_SETEMBRO"]))) + FSE_CONTENS_NOTARIADO_ANO_N_1_AGOSTO_ACUM;
    var FSE_CONTENS_NOTARIADO_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_OUTUBRO"]))) + FSE_CONTENS_NOTARIADO_ANO_N_1_SETEMBRO_ACUM;
    var FSE_CONTENS_NOTARIADO_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_NOVEMBRO"]))) + FSE_CONTENS_NOTARIADO_ANO_N_1_OUTUBRO_ACUM;
    var FSE_CONTENS_NOTARIADO_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_DEZEMBRO"]))) + FSE_CONTENS_NOTARIADO_ANO_N_1_NOVEMBRO_ACUM;


    var FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_princ= Math.max(
                       FSE_CONTENS_NOTARIADO_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_CONTENS_NOTARIADO_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_CONTENS_NOTARIADO_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_CONTENS_NOTARIADO_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_CONTENS_NOTARIADO_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_CONTENS_NOTARIADO_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_CONTENS_NOTARIADO_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_CONTENS_NOTARIADO_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_CONTENS_NOTARIADO_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_CONTENS_NOTARIADO_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_CONTENS_NOTARIADO_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_CONTENS_NOTARIADO_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_CONTENS_NOTARIADO_ANO_N_1_JANEIRO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_1_MARCO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_1_ABRIL_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_1_MAIO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_1_JUNHO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_1_JULHO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_1_AGOSTO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_1_SETEMBRO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_1_OUTUBRO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_1_DEZEMBRO_ACUM
                             );
    var FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_princ= Math.min(

                       FSE_CONTENS_NOTARIADO_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_CONTENS_NOTARIADO_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_CONTENS_NOTARIADO_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_CONTENS_NOTARIADO_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_CONTENS_NOTARIADO_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_CONTENS_NOTARIADO_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_CONTENS_NOTARIADO_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_CONTENS_NOTARIADO_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_CONTENS_NOTARIADO_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_CONTENS_NOTARIADO_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_CONTENS_NOTARIADO_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_CONTENS_NOTARIADO_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_CONTENS_NOTARIADO_ANO_N_1_JANEIRO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_1_MARCO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_1_ABRIL_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_1_MAIO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_1_JUNHO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_1_JULHO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_1_AGOSTO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_1_SETEMBRO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_1_OUTUBRO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_1_DEZEMBRO_ACUM
                           );
    var FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_secon= Math.max(
                       FSE_CONTENS_NOTARIADO_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_CONTENS_NOTARIADO_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_CONTENS_NOTARIADO_ANO_N_MARCO_MAX_MIN ,
                       FSE_CONTENS_NOTARIADO_ANO_N_ABRIL_MAX_MIN ,
                       FSE_CONTENS_NOTARIADO_ANO_N_MAIO_MAX_MIN ,
                       FSE_CONTENS_NOTARIADO_ANO_N_JUNHO_MAX_MIN ,
                       FSE_CONTENS_NOTARIADO_ANO_N_JULHO_MAX_MIN ,
                       FSE_CONTENS_NOTARIADO_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_CONTENS_NOTARIADO_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_CONTENS_NOTARIADO_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_CONTENS_NOTARIADO_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_CONTENS_NOTARIADO_ANO_N_DEZEMBRO_MAX_MIN ,



                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_DEZEMBRO"])))

                            );
    var FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_secon= Math.min(
                       FSE_CONTENS_NOTARIADO_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_CONTENS_NOTARIADO_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_CONTENS_NOTARIADO_ANO_N_MARCO_MAX_MIN ,
                       FSE_CONTENS_NOTARIADO_ANO_N_ABRIL_MAX_MIN ,
                       FSE_CONTENS_NOTARIADO_ANO_N_MAIO_MAX_MIN ,
                       FSE_CONTENS_NOTARIADO_ANO_N_JUNHO_MAX_MIN ,
                       FSE_CONTENS_NOTARIADO_ANO_N_JULHO_MAX_MIN ,
                       FSE_CONTENS_NOTARIADO_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_CONTENS_NOTARIADO_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_CONTENS_NOTARIADO_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_CONTENS_NOTARIADO_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_CONTENS_NOTARIADO_ANO_N_DEZEMBRO_MAX_MIN ,


                           @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_DEZEMBRO"])))

                          );

    //NOTA TA: Aqui trato o minimo e o maximo do eixo principal
    if(Math.abs(FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_princ)>=Math.abs(FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_princ))
    {
        var FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_princ_=(Math.ceil(FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_princ),0).toString().length-1);
        var FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_princ_= (Math.floor(FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_princ),0).toString().length-1);
        //alert(FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_princ_);
        //alert(FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_princ_);
    }
    else
    {
        var FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_princ_=(Math.ceil(FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_princ),0).toString().length-1);
        var FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_princ_= (Math.floor(FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_princ),0).toString().length-1);}

    //NOTA TA: Aqui trato o minimo e o maximo do eixo secundario

    if(Math.abs(FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_secon)>=Math.abs(FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_secon))
    {
        var FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_secon_=(Math.ceil(FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_secon),0).toString().length-1);
        var FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_secon_= (Math.floor(FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_secon),0).toString().length-1);
        //alert(FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_secon_);
        //alert(FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_secon_);
    }
    else
    {
        var FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_secon_=(Math.ceil(FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_secon),0).toString().length-1);
        var FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_secon_= (Math.floor(FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_secon),0).toString().length-1);}


    if(Math.abs(FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_princ)/Math.abs(FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_princ)>=Math.abs(FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_secon)/Math.abs(FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_secon))
    { if(FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_princ > 0 && FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_princ <0 ){ var FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_secon__=(FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_princ_*FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_secon_)/FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_princ_;} else { var FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_secon__=FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_secon_;}
        if(FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_secon > 0 && FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_secon <0 ){ var FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_princ__=(FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_secon__*FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_princ_)/FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_secon_;} else { var FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_princ__=FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_princ_;}}
    else
    {if(FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_secon > 0 && FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_secon <0 ){ var FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_princ__=(FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_secon_*FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_princ_)/FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_secon_;} else { var FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_princ__=FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_princ_;}
        if(FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_princ > 0 && FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_princ <0 ){ var FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_secon__=(FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_princ__*FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_secon_)/FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_princ_;} else { var FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_secon__=FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_secon_;}
    }



    if(Math.abs(FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_princ)/Math.abs(FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_princ)>=Math.abs(FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_secon)/Math.abs(FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_secon))
    { if(FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_princ > 0 && FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_princ <0 ){ var FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_secon__=(FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_princ_*FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_secon_)/FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_princ_;} else { var FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_secon__=FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_secon_;}
        if(FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_secon > 0 && FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_secon <0 ){ var FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_princ__=(FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_secon__*FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_princ_)/FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_secon_;} else { var FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_princ__=FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_princ_;}}
    else
    {if(FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_secon > 0 && FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_secon <0 ){ var FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_princ__=(FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_secon_*FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_princ_)/FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_secon_;} else { var FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_princ__=FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_princ_;}
        if(FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_princ > 0 && FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_princ <0 ){ var FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_secon__=(FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_princ__*FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_secon_)/FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_princ_;} else { var FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_secon__=FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_secon_;}
    }



    var GRAFICO_FSE_RESULT_MENSAL_COMP_052=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_052').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_052=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_052, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label: 'Cont. Notor.(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   data: [
                       FSE_CONTENS_NOTARIADO_ANO_N_JANEIRO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_FEVEREIRO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_MARCO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_ABRIL_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_MAIO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_JUNHO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_JULHO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_AGOSTO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_SETEMBRO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_OUTUBRO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_NOVEMBRO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_DEZEMBRO_ACUM,
                   ],
                   type: 'line'


               },
                              {
                                  label: 'Cont. Notor.(ac) ' + ANO_VERSAO_ANTE_,
                                  yAxisID: 'A',
                                  //backgroundColor: 'rgb(201, 10, 10)',
                                  borderColor: 'rgb(0,221,0)',
                                  data: [
                       FSE_CONTENS_NOTARIADO_ANO_N_1_JANEIRO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_1_MARCO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_1_ABRIL_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_1_MAIO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_1_JUNHO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_1_JULHO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_1_AGOSTO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_1_SETEMBRO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_1_OUTUBRO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_CONTENS_NOTARIADO_ANO_N_1_DEZEMBRO_ACUM,
                                  ],
                                  type: 'line'


                              },
                {
                    label:  'Cont. Notor.(m) ' + ANO_VERSAO_REAL_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(250 , 83 , 0, 0.5)',
                    borderColor: 'rgba(250 , 83 , 0, 0.5)',
                    data: [
                  FSE_CONTENS_NOTARIADO_ANO_N_JANEIRO ,
                  FSE_CONTENS_NOTARIADO_ANO_N_FEVEREIRO ,
                  FSE_CONTENS_NOTARIADO_ANO_N_MARCO ,
                  FSE_CONTENS_NOTARIADO_ANO_N_ABRIL,
                  FSE_CONTENS_NOTARIADO_ANO_N_MAIO ,
                  FSE_CONTENS_NOTARIADO_ANO_N_JUNHO ,
                  FSE_CONTENS_NOTARIADO_ANO_N_JULHO ,
                  FSE_CONTENS_NOTARIADO_ANO_N_AGOSTO ,
                  FSE_CONTENS_NOTARIADO_ANO_N_SETEMBRO ,
                  FSE_CONTENS_NOTARIADO_ANO_N_OUTUBRO ,
                  FSE_CONTENS_NOTARIADO_ANO_N_NOVEMBRO ,
                  FSE_CONTENS_NOTARIADO_ANO_N_DEZEMBRO ,
                    ],
                },
                {
                    label:  'Cont. Notor.(m) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(0,221,0, 0.4)',
                    borderColor: 'rgba(0,221,0, 0.4)',
                    data: [
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_JANEIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_FEVEREIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_MARCO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_ABRIL"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_MAIO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_JUNHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_JULHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_AGOSTO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_SETEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_OUTUBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_NOVEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANO_N_1_DEZEMBRO"]))),
                    ],
                },


            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_CONTENS_NOTARIADO_MENSAL_1',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                min:  Math.round(FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_princ__,0),
                                                max:  Math.round(FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString();
                                                }
                                            }
                                        },

                    { id: 'B',
                        type: 'linear',
                        position: 'right',
                        ticks: {
                            min: Math.round(FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_secon__,0),
                            max:  Math.round(FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_secon__,0),
                            beginAtZero: false,
                            callback: function(value, index, values) {
                                return value.toLocaleString();
                            }
                        }
                    },






                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_053-----------------------------------------------------------*@
<script>

    var IND_VN_ANO_N_JANEIRO_ACUM = IND_VN_ANO_N_JANEIRO;
    var IND_VN_ANO_N_FEVEREIRO_ACUM = IND_VN_ANO_N_FEVEREIRO + IND_VN_ANO_N_JANEIRO_ACUM;
    var IND_VN_ANO_N_MARCO_ACUM = IND_VN_ANO_N_MARCO + IND_VN_ANO_N_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_ABRIL_ACUM = IND_VN_ANO_N_ABRIL + IND_VN_ANO_N_MARCO_ACUM;
    var IND_VN_ANO_N_MAIO_ACUM = IND_VN_ANO_N_MAIO + IND_VN_ANO_N_ABRIL_ACUM;
    var IND_VN_ANO_N_JUNHO_ACUM = IND_VN_ANO_N_JUNHO + IND_VN_ANO_N_MAIO_ACUM;
    var IND_VN_ANO_N_JULHO_ACUM = IND_VN_ANO_N_JULHO + IND_VN_ANO_N_JUNHO_ACUM;
    var IND_VN_ANO_N_AGOSTO_ACUM = IND_VN_ANO_N_AGOSTO + IND_VN_ANO_N_JULHO_ACUM;
    var IND_VN_ANO_N_SETEMBRO_ACUM = IND_VN_ANO_N_SETEMBRO + IND_VN_ANO_N_AGOSTO_ACUM;
    var IND_VN_ANO_N_OUTUBRO_ACUM = IND_VN_ANO_N_OUTUBRO + IND_VN_ANO_N_SETEMBRO_ACUM;
    var IND_VN_ANO_N_NOVEMBRO_ACUM = IND_VN_ANO_N_NOVEMBRO + IND_VN_ANO_N_OUTUBRO_ACUM;
    var IND_VN_ANO_N_DEZEMBRO_ACUM = IND_VN_ANO_N_DEZEMBRO + IND_VN_ANO_N_NOVEMBRO_ACUM;



    var IND_VN_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JANEIRO"])));
    var IND_VN_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_FEVEREIRO"]))) + IND_VN_ANO_N_1_JANEIRO_ACUM;
    var IND_VN_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MARCO"]))) + IND_VN_ANO_N_1_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_ABRIL"]))) + IND_VN_ANO_N_1_MARCO_ACUM;
    var IND_VN_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MAIO"]))) + IND_VN_ANO_N_1_ABRIL_ACUM;
    var IND_VN_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JUNHO"]))) + IND_VN_ANO_N_1_MAIO_ACUM;
    var IND_VN_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JULHO"]))) + IND_VN_ANO_N_1_JUNHO_ACUM;
    var IND_VN_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_AGOSTO"]))) + IND_VN_ANO_N_1_JULHO_ACUM;
    var IND_VN_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_SETEMBRO"]))) + IND_VN_ANO_N_1_AGOSTO_ACUM;
    var IND_VN_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_OUTUBRO"]))) + IND_VN_ANO_N_1_SETEMBRO_ACUM;
    var IND_VN_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_NOVEMBRO"]))) + IND_VN_ANO_N_1_OUTUBRO_ACUM;
    var IND_VN_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_DEZEMBRO"]))) + IND_VN_ANO_N_1_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_JANEIRO_ACUM = 'nd'; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_JANEIRO_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_JANEIRO_ACUM/IND_VN_ANO_N_JANEIRO_ACUM*100; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_FEVEREIRO_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_FEVEREIRO_ACUM/IND_VN_ANO_N_FEVEREIRO_ACUM*100; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_MARCO_ACUM = 'nd'; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_MARCO_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_MARCO_ACUM/IND_VN_ANO_N_MARCO_ACUM*100; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_MARCO_ACUM_MAX_MIN = PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_ABRIL_ACUM = 'nd'; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_ABRIL_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_ABRIL_ACUM/IND_VN_ANO_N_ABRIL_ACUM*100; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_ABRIL_ACUM_MAX_MIN = PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_MAIO_ACUM = 'nd'; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_MAIO_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_MAIO_ACUM/IND_VN_ANO_N_MAIO_ACUM*100; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_MAIO_ACUM_MAX_MIN = PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_JUNHO_ACUM = 'nd'; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_JUNHO_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_JUNHO_ACUM/IND_VN_ANO_N_JUNHO_ACUM*100; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_JUNHO_ACUM_MAX_MIN = PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_JULHO_ACUM = 'nd'; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_JULHO_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_JULHO_ACUM/IND_VN_ANO_N_JULHO_ACUM*100; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_JULHO_ACUM_MAX_MIN = PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_AGOSTO_ACUM = 'nd'; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_AGOSTO_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_AGOSTO_ACUM/IND_VN_ANO_N_AGOSTO_ACUM*100; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_SETEMBRO_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_SETEMBRO_ACUM/IND_VN_ANO_N_SETEMBRO_ACUM*100; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_OUTUBRO_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_OUTUBRO_ACUM/IND_VN_ANO_N_OUTUBRO_ACUM*100; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_NOVEMBRO_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_NOVEMBRO_ACUM/IND_VN_ANO_N_NOVEMBRO_ACUM*100; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_DEZEMBRO_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_DEZEMBRO_ACUM/IND_VN_ANO_N_DEZEMBRO_ACUM*100; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_JANEIRO_ACUM = 'nd'; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_JANEIRO_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_1_JANEIRO_ACUM/IND_VN_ANO_N_1_JANEIRO_ACUM*100; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_FEVEREIRO_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_1_FEVEREIRO_ACUM/IND_VN_ANO_N_1_FEVEREIRO_ACUM*100; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_MARCO_ACUM = 'nd'; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_MARCO_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_1_MARCO_ACUM/IND_VN_ANO_N_1_MARCO_ACUM*100; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_ABRIL_ACUM = 'nd'; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_ABRIL_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_1_ABRIL_ACUM/IND_VN_ANO_N_1_ABRIL_ACUM*100; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_MAIO_ACUM = 'nd'; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_MAIO_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_1_MAIO_ACUM/IND_VN_ANO_N_1_MAIO_ACUM*100; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_JUNHO_ACUM = 'nd'; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_JUNHO_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_1_JUNHO_ACUM/IND_VN_ANO_N_1_JUNHO_ACUM*100; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_JULHO_ACUM = 'nd'; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_JULHO_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_1_JULHO_ACUM/IND_VN_ANO_N_1_JULHO_ACUM*100; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_AGOSTO_ACUM = 'nd'; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_AGOSTO_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_1_AGOSTO_ACUM/IND_VN_ANO_N_1_AGOSTO_ACUM*100; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_SETEMBRO_ACUM = 'nd'; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_SETEMBRO_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_1_SETEMBRO_ACUM/IND_VN_ANO_N_1_SETEMBRO_ACUM*100; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_OUTUBRO_ACUM = 'nd'; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_OUTUBRO_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_1_OUTUBRO_ACUM/IND_VN_ANO_N_1_OUTUBRO_ACUM*100; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_NOVEMBRO_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_1_NOVEMBRO_ACUM/IND_VN_ANO_N_1_NOVEMBRO_ACUM*100; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_DEZEMBRO_ACUM= FSE_CONTENS_NOTARIADO_ANO_N_1_DEZEMBRO_ACUM/IND_VN_ANO_N_1_DEZEMBRO_ACUM*100; var PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_VN_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JANEIRO_ACUM= ((IND_VN_ANO_N_JANEIRO_ACUM-IND_VN_ANO_N_1_JANEIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_JANEIRO_ACUM))*100; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_FEVEREIRO_ACUM= ((IND_VN_ANO_N_FEVEREIRO_ACUM-IND_VN_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_VN_ANO_N_MARCO_ACUM = 'nd'; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MARCO_ACUM= ((IND_VN_ANO_N_MARCO_ACUM-IND_VN_ANO_N_1_MARCO_ACUM)/Math.abs(IND_VN_ANO_N_1_MARCO_ACUM))*100; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = VAR_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_VN_ANO_N_ABRIL_ACUM = 'nd'; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_ABRIL_ACUM= ((IND_VN_ANO_N_ABRIL_ACUM-IND_VN_ANO_N_1_ABRIL_ACUM)/Math.abs(IND_VN_ANO_N_1_ABRIL_ACUM))*100; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_VN_ANO_N_MAIO_ACUM = 'nd'; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MAIO_ACUM= ((IND_VN_ANO_N_MAIO_ACUM-IND_VN_ANO_N_1_MAIO_ACUM)/Math.abs(IND_VN_ANO_N_1_MAIO_ACUM))*100; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = VAR_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_VN_ANO_N_JUNHO_ACUM = 'nd'; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JUNHO_ACUM= ((IND_VN_ANO_N_JUNHO_ACUM-IND_VN_ANO_N_1_JUNHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JUNHO_ACUM))*100; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_VN_ANO_N_JULHO_ACUM = 'nd'; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JULHO_ACUM= ((IND_VN_ANO_N_JULHO_ACUM-IND_VN_ANO_N_1_JULHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JULHO_ACUM))*100; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_VN_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_AGOSTO_ACUM= ((IND_VN_ANO_N_AGOSTO_ACUM-IND_VN_ANO_N_1_AGOSTO_ACUM)/Math.abs(IND_VN_ANO_N_1_AGOSTO_ACUM))*100; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_SETEMBRO_ACUM= ((IND_VN_ANO_N_SETEMBRO_ACUM-IND_VN_ANO_N_1_SETEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_OUTUBRO_ACUM= ((IND_VN_ANO_N_OUTUBRO_ACUM-IND_VN_ANO_N_1_OUTUBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_NOVEMBRO_ACUM= ((IND_VN_ANO_N_NOVEMBRO_ACUM-IND_VN_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_DEZEMBRO_ACUM= ((IND_VN_ANO_N_DEZEMBRO_ACUM-IND_VN_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_FSE_CONTENS_NOTARIADO_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_FSE_CONTENS_NOTARIADO_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_CONTENS_NOTARIADO_ANO_N_JANEIRO_ACUM= ((FSE_CONTENS_NOTARIADO_ANO_N_JANEIRO_ACUM-FSE_CONTENS_NOTARIADO_ANO_N_1_JANEIRO_ACUM)/Math.abs(FSE_CONTENS_NOTARIADO_ANO_N_1_JANEIRO_ACUM))*100; var VAR_FSE_CONTENS_NOTARIADO_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_FSE_CONTENS_NOTARIADO_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_FSE_CONTENS_NOTARIADO_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_FSE_CONTENS_NOTARIADO_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_CONTENS_NOTARIADO_ANO_N_FEVEREIRO_ACUM= ((FSE_CONTENS_NOTARIADO_ANO_N_FEVEREIRO_ACUM-FSE_CONTENS_NOTARIADO_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(FSE_CONTENS_NOTARIADO_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_FSE_CONTENS_NOTARIADO_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_FSE_CONTENS_NOTARIADO_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_FSE_CONTENS_NOTARIADO_ANO_N_MARCO_ACUM = 'nd'; var VAR_FSE_CONTENS_NOTARIADO_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_CONTENS_NOTARIADO_ANO_N_MARCO_ACUM= ((FSE_CONTENS_NOTARIADO_ANO_N_MARCO_ACUM-FSE_CONTENS_NOTARIADO_ANO_N_1_MARCO_ACUM)/Math.abs(FSE_CONTENS_NOTARIADO_ANO_N_1_MARCO_ACUM))*100; var VAR_FSE_CONTENS_NOTARIADO_ANO_N_MARCO_ACUM_MAX_MIN = VAR_FSE_CONTENS_NOTARIADO_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_FSE_CONTENS_NOTARIADO_ANO_N_ABRIL_ACUM = 'nd'; var VAR_FSE_CONTENS_NOTARIADO_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_CONTENS_NOTARIADO_ANO_N_ABRIL_ACUM= ((FSE_CONTENS_NOTARIADO_ANO_N_ABRIL_ACUM-FSE_CONTENS_NOTARIADO_ANO_N_1_ABRIL_ACUM)/Math.abs(FSE_CONTENS_NOTARIADO_ANO_N_1_ABRIL_ACUM))*100; var VAR_FSE_CONTENS_NOTARIADO_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_FSE_CONTENS_NOTARIADO_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_FSE_CONTENS_NOTARIADO_ANO_N_MAIO_ACUM = 'nd'; var VAR_FSE_CONTENS_NOTARIADO_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_CONTENS_NOTARIADO_ANO_N_MAIO_ACUM= ((FSE_CONTENS_NOTARIADO_ANO_N_MAIO_ACUM-FSE_CONTENS_NOTARIADO_ANO_N_1_MAIO_ACUM)/Math.abs(FSE_CONTENS_NOTARIADO_ANO_N_1_MAIO_ACUM))*100; var VAR_FSE_CONTENS_NOTARIADO_ANO_N_MAIO_ACUM_MAX_MIN = VAR_FSE_CONTENS_NOTARIADO_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_FSE_CONTENS_NOTARIADO_ANO_N_JUNHO_ACUM = 'nd'; var VAR_FSE_CONTENS_NOTARIADO_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_CONTENS_NOTARIADO_ANO_N_JUNHO_ACUM= ((FSE_CONTENS_NOTARIADO_ANO_N_JUNHO_ACUM-FSE_CONTENS_NOTARIADO_ANO_N_1_JUNHO_ACUM)/Math.abs(FSE_CONTENS_NOTARIADO_ANO_N_1_JUNHO_ACUM))*100; var VAR_FSE_CONTENS_NOTARIADO_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_FSE_CONTENS_NOTARIADO_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_FSE_CONTENS_NOTARIADO_ANO_N_JULHO_ACUM = 'nd'; var VAR_FSE_CONTENS_NOTARIADO_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_CONTENS_NOTARIADO_ANO_N_JULHO_ACUM= ((FSE_CONTENS_NOTARIADO_ANO_N_JULHO_ACUM-FSE_CONTENS_NOTARIADO_ANO_N_1_JULHO_ACUM)/Math.abs(FSE_CONTENS_NOTARIADO_ANO_N_1_JULHO_ACUM))*100; var VAR_FSE_CONTENS_NOTARIADO_ANO_N_JULHO_ACUM_MAX_MIN = VAR_FSE_CONTENS_NOTARIADO_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_FSE_CONTENS_NOTARIADO_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_FSE_CONTENS_NOTARIADO_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_CONTENS_NOTARIADO_ANO_N_AGOSTO_ACUM= ((FSE_CONTENS_NOTARIADO_ANO_N_AGOSTO_ACUM-FSE_CONTENS_NOTARIADO_ANO_N_1_AGOSTO_ACUM)/Math.abs(FSE_CONTENS_NOTARIADO_ANO_N_1_AGOSTO_ACUM))*100; var VAR_FSE_CONTENS_NOTARIADO_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_FSE_CONTENS_NOTARIADO_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_FSE_CONTENS_NOTARIADO_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_FSE_CONTENS_NOTARIADO_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_CONTENS_NOTARIADO_ANO_N_SETEMBRO_ACUM= ((FSE_CONTENS_NOTARIADO_ANO_N_SETEMBRO_ACUM-FSE_CONTENS_NOTARIADO_ANO_N_1_SETEMBRO_ACUM)/Math.abs(FSE_CONTENS_NOTARIADO_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_FSE_CONTENS_NOTARIADO_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_FSE_CONTENS_NOTARIADO_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_FSE_CONTENS_NOTARIADO_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_FSE_CONTENS_NOTARIADO_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_CONTENS_NOTARIADO_ANO_N_OUTUBRO_ACUM= ((FSE_CONTENS_NOTARIADO_ANO_N_OUTUBRO_ACUM-FSE_CONTENS_NOTARIADO_ANO_N_1_OUTUBRO_ACUM)/Math.abs(FSE_CONTENS_NOTARIADO_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_FSE_CONTENS_NOTARIADO_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_FSE_CONTENS_NOTARIADO_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_FSE_CONTENS_NOTARIADO_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_FSE_CONTENS_NOTARIADO_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_CONTENS_NOTARIADO_ANO_N_NOVEMBRO_ACUM= ((FSE_CONTENS_NOTARIADO_ANO_N_NOVEMBRO_ACUM-FSE_CONTENS_NOTARIADO_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(FSE_CONTENS_NOTARIADO_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_FSE_CONTENS_NOTARIADO_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_FSE_CONTENS_NOTARIADO_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_FSE_CONTENS_NOTARIADO_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_FSE_CONTENS_NOTARIADO_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_CONTENS_NOTARIADO_ANO_N_DEZEMBRO_ACUM= ((FSE_CONTENS_NOTARIADO_ANO_N_DEZEMBRO_ACUM-FSE_CONTENS_NOTARIADO_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(FSE_CONTENS_NOTARIADO_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_FSE_CONTENS_NOTARIADO_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_FSE_CONTENS_NOTARIADO_ANO_N_DEZEMBRO_ACUM };

    if( PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_JANEIRO_ACUM > PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_JANEIRO_ACUM) { var  INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_JANEIRO_ACUM=PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_JANEIRO_ACUM ; } else { var  INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_JANEIRO_ACUM=PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_JANEIRO_ACUM ; }
    if( PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_FEVEREIRO_ACUM > PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_FEVEREIRO_ACUM) { var  INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_FEVEREIRO_ACUM=PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_FEVEREIRO_ACUM ; } else { var  INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_FEVEREIRO_ACUM=PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_FEVEREIRO_ACUM ; }
    if( PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_MARCO_ACUM > PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_MARCO_ACUM) { var  INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_MARCO_ACUM=PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_MARCO_ACUM ; } else { var  INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_MARCO_ACUM=PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_MARCO_ACUM ; }
    if( PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_ABRIL_ACUM > PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_ABRIL_ACUM) { var  INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_ABRIL_ACUM=PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_ABRIL_ACUM ; } else { var  INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_ABRIL_ACUM=PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_ABRIL_ACUM ; }
    if( PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_MAIO_ACUM > PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_MAIO_ACUM) { var  INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_MAIO_ACUM=PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_MAIO_ACUM ; } else { var  INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_MAIO_ACUM=PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_MAIO_ACUM ; }
    if( PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_JUNHO_ACUM > PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_JUNHO_ACUM) { var  INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_JUNHO_ACUM=PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_JUNHO_ACUM ; } else { var  INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_JUNHO_ACUM=PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_JUNHO_ACUM ; }
    if( PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_JULHO_ACUM > PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_JULHO_ACUM) { var  INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_JULHO_ACUM=PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_JULHO_ACUM ; } else { var  INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_JULHO_ACUM=PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_JULHO_ACUM ; }
    if( PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_AGOSTO_ACUM > PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_AGOSTO_ACUM) { var  INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_AGOSTO_ACUM=PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_AGOSTO_ACUM ; } else { var  INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_AGOSTO_ACUM=PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_AGOSTO_ACUM ; }
    if( PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_SETEMBRO_ACUM > PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_SETEMBRO_ACUM) { var  INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_SETEMBRO_ACUM=PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_SETEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_SETEMBRO_ACUM=PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_SETEMBRO_ACUM ; }
    if( PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_OUTUBRO_ACUM > PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_OUTUBRO_ACUM) { var  INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_OUTUBRO_ACUM=PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_OUTUBRO_ACUM ; } else { var  INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_OUTUBRO_ACUM=PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_OUTUBRO_ACUM ; }
    if( PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_NOVEMBRO_ACUM > PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_NOVEMBRO_ACUM) { var  INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_NOVEMBRO_ACUM=PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_NOVEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_NOVEMBRO_ACUM=PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_NOVEMBRO_ACUM ; }
    if( PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_DEZEMBRO_ACUM > PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_DEZEMBRO_ACUM) { var  INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_DEZEMBRO_ACUM=PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_DEZEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_DEZEMBRO_ACUM=PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_DEZEMBRO_ACUM ; }



    var fillBetweenLinesPlugin = {
        afterDatasetsDraw: function (chart) {
            var ctx = chart.chart.ctx;
            var xaxis = chart.scales['x-axis-0'];
            var yaxis = chart.scales['y-axis-0'];
            var datasets = chart.data.datasets;
            ctx.save();

            for (var d = 0; d < datasets.length; d++) {
                var dataset = datasets[d];
                if (dataset.fillBetweenSet == undefined) {
                    continue;
                }

                // get meta for both data sets
                var meta1 = chart.getDatasetMeta(d);
                var meta2 = chart.getDatasetMeta(dataset.fillBetweenSet);

                // do not draw fill if one of the datasets is hidden
                if (meta1.hidden || meta2.hidden) continue;

                // create fill areas in pairs
                for (var p = 0; p < meta1.data.length-1;p++) {
                    // if null skip
                    if (dataset.data[p] == null || dataset.data[p+1] == null) continue;

                    ctx.beginPath();

                    // trace line 1
                    var curr = meta1.data[p];
                    var next = meta1.data[p+1];
                    ctx.moveTo(curr._view.x, curr._view.y);
                    ctx.lineTo(curr._view.x, curr._view.y);
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(next._view.x, curr._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        ctx.bezierCurveTo(
                          curr._view.controlPointNextX,
                          curr._view.controlPointNextY,
                          next._view.controlPointPreviousX,
                          next._view.controlPointPreviousY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // connect dataset1 to dataset2
                    var curr = meta2.data[p+1];
                    var next = meta2.data[p];
                    ctx.lineTo(curr._view.x, curr._view.y);

                    // trace BACKWORDS set2 to complete the box
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(curr._view.x, next._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        // reverse bezier
                        ctx.bezierCurveTo(
                          curr._view.controlPointPreviousX,
                          curr._view.controlPointPreviousY,
                          next._view.controlPointNextX,
                          next._view.controlPointNextY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // close the loop and fill with shading
                    ctx.closePath();
                    ctx.fillStyle = dataset.fillBetweenColor || "rgba(0,0,0,0.1)";
                    ctx.fill();
                } // end for p loop
            }
        } // end afterDatasetsDraw
    }; // end fillBetweenLinesPlugin

    Chart.pluginService.register(fillBetweenLinesPlugin);



    var GRAFICO_FSE_RESULT_MENSAL_COMP_053=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_053').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_053=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_053, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label:  'Peso Cont. Notor.vsVN(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   //borderColor: "#F00",
                   fill: false,
                   steppedLine: false,
                   tension: 0.5,
                   fillBetweenSet: 1,
                   fillBetweenColor: "rgba(0, 221, 0, 0.1)",
                   data: [
                   PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_JANEIRO_ACUM,
                   PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_FEVEREIRO_ACUM,
                   PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_MARCO_ACUM,
                   PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_ABRIL_ACUM,
                   PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_MAIO_ACUM,
                   PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_JUNHO_ACUM,
                   PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_JULHO_ACUM,
                   PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_AGOSTO_ACUM,
                   PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_SETEMBRO_ACUM,
                   PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_OUTUBRO_ACUM,
                   PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_NOVEMBRO_ACUM,
                   PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_DEZEMBRO_ACUM,

                   ],
                   type: 'line'


               },
                {
                    label: 'Peso Cont. Notor.vsVN(ac) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'A',
                    //backgroundColor: 'rgb(17, 121, 240)',
                    borderColor: 'rgb(0,221,0)',
                    //borderColor: "#00F",
                    fill: false,
                    steppedLine: false,
                    tension: 0.5,
                    data: [
                   PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_JANEIRO_ACUM,
                   PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_FEVEREIRO_ACUM,
                   PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_MARCO_ACUM,
                   PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_ABRIL_ACUM,
                   PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_MAIO_ACUM,
                   PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_JUNHO_ACUM,
                   PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_JULHO_ACUM,
                   PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_AGOSTO_ACUM,
                   PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_SETEMBRO_ACUM,
                   PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_OUTUBRO_ACUM,
                   PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_NOVEMBRO_ACUM,
                   PESO_FSE_CONTENS_NOTARIADO_VN_ANO_N_1_DEZEMBRO_ACUM,
                    ],
                    type: 'line'
                },
    {
        label: 'Ineficiência',
        yAxisID: 'A',
        backgroundColor: "rgba(255, 0, 0, 0.2)",
        borderColor: 'rgba(255, 255, 255, 0.1)',
        //borderColor: "#0D0",
        fill: false,
        steppedLine: false,
        tension: 0.5,
        fillBetweenSet: 1,
        fillBetweenColor: "rgba(255, 0, 0, 0.2)",
        data: [
    INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_JANEIRO_ACUM,
    INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_FEVEREIRO_ACUM,
    INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_MARCO_ACUM,
    INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_ABRIL_ACUM,
    INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_MAIO_ACUM,
    INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_JUNHO_ACUM,
    INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_JULHO_ACUM,
    INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_AGOSTO_ACUM,
    INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_SETEMBRO_ACUM,
    INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_OUTUBRO_ACUM,
    INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_NOVEMBRO_ACUM,
    INEFICIENCIA_FSE_CONTENS_NOTARIADO_ANO_N_DEZEMBRO_ACUM,
        ],
        type: 'line'
    },

            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_CONTENS_NOTARIADO COMP',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                //min:  Math.round(FSE_CONTENS_NOTARIADO_Mensal_Eixo_min_princ__,0),
                                                //max:  Math.round(FSE_CONTENS_NOTARIADO_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString()+ "%";
                                                }
                                            }
                                        },







                ]
            }
        },

    });

</script>


@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_054-----------------------------------------------------------*@
<script>

    if(@ViewData["MES_ACUM_REAL"]<1){ var IND_VN_ANO_N_JANEIRO = 'nd'; var IND_VN_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JANEIRO"]))); var IND_VN_ANO_N_JANEIRO_MAX_MIN = IND_VN_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var IND_VN_ANO_N_FEVEREIRO = 'nd'; var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_FEVEREIRO"]))); var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = IND_VN_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var IND_VN_ANO_N_MARCO = 'nd'; var IND_VN_ANO_N_MARCO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MARCO"]))); var IND_VN_ANO_N_MARCO_MAX_MIN = IND_VN_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var IND_VN_ANO_N_ABRIL = 'nd'; var IND_VN_ANO_N_ABRIL_MAX_MIN = 0;  } else { var IND_VN_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_ABRIL"]))); var IND_VN_ANO_N_ABRIL_MAX_MIN = IND_VN_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var IND_VN_ANO_N_MAIO = 'nd'; var IND_VN_ANO_N_MAIO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MAIO"]))); var IND_VN_ANO_N_MAIO_MAX_MIN = IND_VN_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var IND_VN_ANO_N_JUNHO = 'nd'; var IND_VN_ANO_N_JUNHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JUNHO"]))); var IND_VN_ANO_N_JUNHO_MAX_MIN = IND_VN_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var IND_VN_ANO_N_JULHO = 'nd'; var IND_VN_ANO_N_JULHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JULHO"]))); var IND_VN_ANO_N_JULHO_MAX_MIN = IND_VN_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var IND_VN_ANO_N_AGOSTO = 'nd'; var IND_VN_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_AGOSTO"]))); var IND_VN_ANO_N_AGOSTO_MAX_MIN = IND_VN_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var IND_VN_ANO_N_SETEMBRO = 'nd'; var IND_VN_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_SETEMBRO"]))); var IND_VN_ANO_N_SETEMBRO_MAX_MIN = IND_VN_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var IND_VN_ANO_N_OUTUBRO = 'nd'; var IND_VN_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_OUTUBRO"]))); var IND_VN_ANO_N_OUTUBRO_MAX_MIN = IND_VN_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var IND_VN_ANO_N_NOVEMBRO = 'nd'; var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_NOVEMBRO"]))); var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = IND_VN_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var IND_VN_ANO_N_DEZEMBRO = 'nd'; var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_DEZEMBRO"]))); var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = IND_VN_ANO_N_DEZEMBRO };

    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_DESP_RESPRESENT_ANO_N_JANEIRO = 'nd'; var FSE_DESP_RESPRESENT_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var FSE_DESP_RESPRESENT_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_JANEIRO"]))); var FSE_DESP_RESPRESENT_ANO_N_JANEIRO_MAX_MIN = FSE_DESP_RESPRESENT_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_DESP_RESPRESENT_ANO_N_FEVEREIRO = 'nd'; var FSE_DESP_RESPRESENT_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var FSE_DESP_RESPRESENT_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_FEVEREIRO"]))); var FSE_DESP_RESPRESENT_ANO_N_FEVEREIRO_MAX_MIN = FSE_DESP_RESPRESENT_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_DESP_RESPRESENT_ANO_N_MARCO = 'nd'; var FSE_DESP_RESPRESENT_ANO_N_MARCO_MAX_MIN = 0;  } else { var FSE_DESP_RESPRESENT_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_MARCO"]))); var FSE_DESP_RESPRESENT_ANO_N_MARCO_MAX_MIN = FSE_DESP_RESPRESENT_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_DESP_RESPRESENT_ANO_N_ABRIL = 'nd'; var FSE_DESP_RESPRESENT_ANO_N_ABRIL_MAX_MIN = 0;  } else { var FSE_DESP_RESPRESENT_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_ABRIL"]))); var FSE_DESP_RESPRESENT_ANO_N_ABRIL_MAX_MIN = FSE_DESP_RESPRESENT_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_DESP_RESPRESENT_ANO_N_MAIO = 'nd'; var FSE_DESP_RESPRESENT_ANO_N_MAIO_MAX_MIN = 0;  } else { var FSE_DESP_RESPRESENT_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_MAIO"]))); var FSE_DESP_RESPRESENT_ANO_N_MAIO_MAX_MIN = FSE_DESP_RESPRESENT_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_DESP_RESPRESENT_ANO_N_JUNHO = 'nd'; var FSE_DESP_RESPRESENT_ANO_N_JUNHO_MAX_MIN = 0;  } else { var FSE_DESP_RESPRESENT_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_JUNHO"]))); var FSE_DESP_RESPRESENT_ANO_N_JUNHO_MAX_MIN = FSE_DESP_RESPRESENT_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_DESP_RESPRESENT_ANO_N_JULHO = 'nd'; var FSE_DESP_RESPRESENT_ANO_N_JULHO_MAX_MIN = 0;  } else { var FSE_DESP_RESPRESENT_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_JULHO"]))); var FSE_DESP_RESPRESENT_ANO_N_JULHO_MAX_MIN = FSE_DESP_RESPRESENT_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_DESP_RESPRESENT_ANO_N_AGOSTO = 'nd'; var FSE_DESP_RESPRESENT_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var FSE_DESP_RESPRESENT_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_AGOSTO"]))); var FSE_DESP_RESPRESENT_ANO_N_AGOSTO_MAX_MIN = FSE_DESP_RESPRESENT_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_DESP_RESPRESENT_ANO_N_SETEMBRO = 'nd'; var FSE_DESP_RESPRESENT_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var FSE_DESP_RESPRESENT_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_SETEMBRO"]))); var FSE_DESP_RESPRESENT_ANO_N_SETEMBRO_MAX_MIN = FSE_DESP_RESPRESENT_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_DESP_RESPRESENT_ANO_N_OUTUBRO = 'nd'; var FSE_DESP_RESPRESENT_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var FSE_DESP_RESPRESENT_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_OUTUBRO"]))); var FSE_DESP_RESPRESENT_ANO_N_OUTUBRO_MAX_MIN = FSE_DESP_RESPRESENT_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_DESP_RESPRESENT_ANO_N_NOVEMBRO = 'nd'; var FSE_DESP_RESPRESENT_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var FSE_DESP_RESPRESENT_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_NOVEMBRO"]))); var FSE_DESP_RESPRESENT_ANO_N_NOVEMBRO_MAX_MIN = FSE_DESP_RESPRESENT_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_DESP_RESPRESENT_ANO_N_DEZEMBRO = 'nd'; var FSE_DESP_RESPRESENT_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var FSE_DESP_RESPRESENT_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_DEZEMBRO"]))); var FSE_DESP_RESPRESENT_ANO_N_DEZEMBRO_MAX_MIN = FSE_DESP_RESPRESENT_ANO_N_DEZEMBRO };


    var FSE_DESP_RESPRESENT_ANO_N_JANEIRO_ACUM = FSE_DESP_RESPRESENT_ANO_N_JANEIRO;
    var FSE_DESP_RESPRESENT_ANO_N_FEVEREIRO_ACUM = FSE_DESP_RESPRESENT_ANO_N_FEVEREIRO + FSE_DESP_RESPRESENT_ANO_N_JANEIRO_ACUM;
    var FSE_DESP_RESPRESENT_ANO_N_MARCO_ACUM = FSE_DESP_RESPRESENT_ANO_N_MARCO + FSE_DESP_RESPRESENT_ANO_N_FEVEREIRO_ACUM;
    var FSE_DESP_RESPRESENT_ANO_N_ABRIL_ACUM = FSE_DESP_RESPRESENT_ANO_N_ABRIL + FSE_DESP_RESPRESENT_ANO_N_MARCO_ACUM;
    var FSE_DESP_RESPRESENT_ANO_N_MAIO_ACUM = FSE_DESP_RESPRESENT_ANO_N_MAIO + FSE_DESP_RESPRESENT_ANO_N_ABRIL_ACUM;
    var FSE_DESP_RESPRESENT_ANO_N_JUNHO_ACUM = FSE_DESP_RESPRESENT_ANO_N_JUNHO + FSE_DESP_RESPRESENT_ANO_N_MAIO_ACUM;
    var FSE_DESP_RESPRESENT_ANO_N_JULHO_ACUM = FSE_DESP_RESPRESENT_ANO_N_JULHO + FSE_DESP_RESPRESENT_ANO_N_JUNHO_ACUM;
    var FSE_DESP_RESPRESENT_ANO_N_AGOSTO_ACUM = FSE_DESP_RESPRESENT_ANO_N_AGOSTO + FSE_DESP_RESPRESENT_ANO_N_JULHO_ACUM;
    var FSE_DESP_RESPRESENT_ANO_N_SETEMBRO_ACUM = FSE_DESP_RESPRESENT_ANO_N_SETEMBRO + FSE_DESP_RESPRESENT_ANO_N_AGOSTO_ACUM;
    var FSE_DESP_RESPRESENT_ANO_N_OUTUBRO_ACUM = FSE_DESP_RESPRESENT_ANO_N_OUTUBRO + FSE_DESP_RESPRESENT_ANO_N_SETEMBRO_ACUM;
    var FSE_DESP_RESPRESENT_ANO_N_NOVEMBRO_ACUM = FSE_DESP_RESPRESENT_ANO_N_NOVEMBRO + FSE_DESP_RESPRESENT_ANO_N_OUTUBRO_ACUM;
    var FSE_DESP_RESPRESENT_ANO_N_DEZEMBRO_ACUM = FSE_DESP_RESPRESENT_ANO_N_DEZEMBRO + FSE_DESP_RESPRESENT_ANO_N_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_DESP_RESPRESENT_ANO_N_JANEIRO_ACUM = 'nd'; var FSE_DESP_RESPRESENT_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var FSE_DESP_RESPRESENT_ANO_N_JANEIRO_ACUM= FSE_DESP_RESPRESENT_ANO_N_JANEIRO_ACUM; var FSE_DESP_RESPRESENT_ANO_N_JANEIRO_ACUM_MAX_MIN = FSE_DESP_RESPRESENT_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_DESP_RESPRESENT_ANO_N_FEVEREIRO_ACUM = 'nd'; var FSE_DESP_RESPRESENT_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var FSE_DESP_RESPRESENT_ANO_N_FEVEREIRO_ACUM= FSE_DESP_RESPRESENT_ANO_N_FEVEREIRO_ACUM; var FSE_DESP_RESPRESENT_ANO_N_FEVEREIRO_ACUM_MAX_MIN = FSE_DESP_RESPRESENT_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_DESP_RESPRESENT_ANO_N_MARCO_ACUM = 'nd'; var FSE_DESP_RESPRESENT_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var FSE_DESP_RESPRESENT_ANO_N_MARCO_ACUM= FSE_DESP_RESPRESENT_ANO_N_MARCO_ACUM; var FSE_DESP_RESPRESENT_ANO_N_MARCO_ACUM_MAX_MIN = FSE_DESP_RESPRESENT_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_DESP_RESPRESENT_ANO_N_ABRIL_ACUM = 'nd'; var FSE_DESP_RESPRESENT_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var FSE_DESP_RESPRESENT_ANO_N_ABRIL_ACUM= FSE_DESP_RESPRESENT_ANO_N_ABRIL_ACUM; var FSE_DESP_RESPRESENT_ANO_N_ABRIL_ACUM_MAX_MIN = FSE_DESP_RESPRESENT_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_DESP_RESPRESENT_ANO_N_MAIO_ACUM = 'nd'; var FSE_DESP_RESPRESENT_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var FSE_DESP_RESPRESENT_ANO_N_MAIO_ACUM= FSE_DESP_RESPRESENT_ANO_N_MAIO_ACUM; var FSE_DESP_RESPRESENT_ANO_N_MAIO_ACUM_MAX_MIN = FSE_DESP_RESPRESENT_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_DESP_RESPRESENT_ANO_N_JUNHO_ACUM = 'nd'; var FSE_DESP_RESPRESENT_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var FSE_DESP_RESPRESENT_ANO_N_JUNHO_ACUM= FSE_DESP_RESPRESENT_ANO_N_JUNHO_ACUM; var FSE_DESP_RESPRESENT_ANO_N_JUNHO_ACUM_MAX_MIN = FSE_DESP_RESPRESENT_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_DESP_RESPRESENT_ANO_N_JULHO_ACUM = 'nd'; var FSE_DESP_RESPRESENT_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var FSE_DESP_RESPRESENT_ANO_N_JULHO_ACUM= FSE_DESP_RESPRESENT_ANO_N_JULHO_ACUM; var FSE_DESP_RESPRESENT_ANO_N_JULHO_ACUM_MAX_MIN = FSE_DESP_RESPRESENT_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_DESP_RESPRESENT_ANO_N_AGOSTO_ACUM = 'nd'; var FSE_DESP_RESPRESENT_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var FSE_DESP_RESPRESENT_ANO_N_AGOSTO_ACUM= FSE_DESP_RESPRESENT_ANO_N_AGOSTO_ACUM; var FSE_DESP_RESPRESENT_ANO_N_AGOSTO_ACUM_MAX_MIN = FSE_DESP_RESPRESENT_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_DESP_RESPRESENT_ANO_N_SETEMBRO_ACUM = 'nd'; var FSE_DESP_RESPRESENT_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_DESP_RESPRESENT_ANO_N_SETEMBRO_ACUM= FSE_DESP_RESPRESENT_ANO_N_SETEMBRO_ACUM; var FSE_DESP_RESPRESENT_ANO_N_SETEMBRO_ACUM_MAX_MIN = FSE_DESP_RESPRESENT_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_DESP_RESPRESENT_ANO_N_OUTUBRO_ACUM = 'nd'; var FSE_DESP_RESPRESENT_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var FSE_DESP_RESPRESENT_ANO_N_OUTUBRO_ACUM= FSE_DESP_RESPRESENT_ANO_N_OUTUBRO_ACUM; var FSE_DESP_RESPRESENT_ANO_N_OUTUBRO_ACUM_MAX_MIN = FSE_DESP_RESPRESENT_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_DESP_RESPRESENT_ANO_N_NOVEMBRO_ACUM = 'nd'; var FSE_DESP_RESPRESENT_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_DESP_RESPRESENT_ANO_N_NOVEMBRO_ACUM= FSE_DESP_RESPRESENT_ANO_N_NOVEMBRO_ACUM; var FSE_DESP_RESPRESENT_ANO_N_NOVEMBRO_ACUM_MAX_MIN = FSE_DESP_RESPRESENT_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_DESP_RESPRESENT_ANO_N_DEZEMBRO_ACUM = 'nd'; var FSE_DESP_RESPRESENT_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_DESP_RESPRESENT_ANO_N_DEZEMBRO_ACUM= FSE_DESP_RESPRESENT_ANO_N_DEZEMBRO_ACUM; var FSE_DESP_RESPRESENT_ANO_N_DEZEMBRO_ACUM_MAX_MIN = FSE_DESP_RESPRESENT_ANO_N_DEZEMBRO_ACUM };




    var FSE_DESP_RESPRESENT_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_JANEIRO"])));
    var FSE_DESP_RESPRESENT_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_FEVEREIRO"]))) + FSE_DESP_RESPRESENT_ANO_N_1_JANEIRO_ACUM;
    var FSE_DESP_RESPRESENT_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_MARCO"]))) + FSE_DESP_RESPRESENT_ANO_N_1_FEVEREIRO_ACUM;
    var FSE_DESP_RESPRESENT_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_ABRIL"]))) + FSE_DESP_RESPRESENT_ANO_N_1_MARCO_ACUM;
    var FSE_DESP_RESPRESENT_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_MAIO"]))) + FSE_DESP_RESPRESENT_ANO_N_1_ABRIL_ACUM;
    var FSE_DESP_RESPRESENT_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_JUNHO"]))) + FSE_DESP_RESPRESENT_ANO_N_1_MAIO_ACUM;
    var FSE_DESP_RESPRESENT_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_JULHO"]))) + FSE_DESP_RESPRESENT_ANO_N_1_JUNHO_ACUM;
    var FSE_DESP_RESPRESENT_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_AGOSTO"]))) + FSE_DESP_RESPRESENT_ANO_N_1_JULHO_ACUM;
    var FSE_DESP_RESPRESENT_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_SETEMBRO"]))) + FSE_DESP_RESPRESENT_ANO_N_1_AGOSTO_ACUM;
    var FSE_DESP_RESPRESENT_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_OUTUBRO"]))) + FSE_DESP_RESPRESENT_ANO_N_1_SETEMBRO_ACUM;
    var FSE_DESP_RESPRESENT_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_NOVEMBRO"]))) + FSE_DESP_RESPRESENT_ANO_N_1_OUTUBRO_ACUM;
    var FSE_DESP_RESPRESENT_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_DEZEMBRO"]))) + FSE_DESP_RESPRESENT_ANO_N_1_NOVEMBRO_ACUM;


    var FSE_DESP_RESPRESENT_Mensal_Eixo_max_princ= Math.max(
                       FSE_DESP_RESPRESENT_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_DESP_RESPRESENT_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_DESP_RESPRESENT_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_DESP_RESPRESENT_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_DESP_RESPRESENT_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_DESP_RESPRESENT_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_DESP_RESPRESENT_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_DESP_RESPRESENT_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_DESP_RESPRESENT_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_DESP_RESPRESENT_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_DESP_RESPRESENT_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_DESP_RESPRESENT_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_DESP_RESPRESENT_ANO_N_1_JANEIRO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_1_MARCO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_1_ABRIL_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_1_MAIO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_1_JUNHO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_1_JULHO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_1_AGOSTO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_1_SETEMBRO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_1_OUTUBRO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_1_DEZEMBRO_ACUM
                             );
    var FSE_DESP_RESPRESENT_Mensal_Eixo_min_princ= Math.min(

                       FSE_DESP_RESPRESENT_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_DESP_RESPRESENT_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_DESP_RESPRESENT_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_DESP_RESPRESENT_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_DESP_RESPRESENT_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_DESP_RESPRESENT_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_DESP_RESPRESENT_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_DESP_RESPRESENT_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_DESP_RESPRESENT_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_DESP_RESPRESENT_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_DESP_RESPRESENT_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_DESP_RESPRESENT_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_DESP_RESPRESENT_ANO_N_1_JANEIRO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_1_MARCO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_1_ABRIL_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_1_MAIO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_1_JUNHO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_1_JULHO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_1_AGOSTO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_1_SETEMBRO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_1_OUTUBRO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_1_DEZEMBRO_ACUM
                           );
    var FSE_DESP_RESPRESENT_Mensal_Eixo_max_secon= Math.max(
                       FSE_DESP_RESPRESENT_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_DESP_RESPRESENT_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_DESP_RESPRESENT_ANO_N_MARCO_MAX_MIN ,
                       FSE_DESP_RESPRESENT_ANO_N_ABRIL_MAX_MIN ,
                       FSE_DESP_RESPRESENT_ANO_N_MAIO_MAX_MIN ,
                       FSE_DESP_RESPRESENT_ANO_N_JUNHO_MAX_MIN ,
                       FSE_DESP_RESPRESENT_ANO_N_JULHO_MAX_MIN ,
                       FSE_DESP_RESPRESENT_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_DESP_RESPRESENT_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_DESP_RESPRESENT_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_DESP_RESPRESENT_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_DESP_RESPRESENT_ANO_N_DEZEMBRO_MAX_MIN ,



                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_DEZEMBRO"])))

                            );
    var FSE_DESP_RESPRESENT_Mensal_Eixo_min_secon= Math.min(
                       FSE_DESP_RESPRESENT_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_DESP_RESPRESENT_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_DESP_RESPRESENT_ANO_N_MARCO_MAX_MIN ,
                       FSE_DESP_RESPRESENT_ANO_N_ABRIL_MAX_MIN ,
                       FSE_DESP_RESPRESENT_ANO_N_MAIO_MAX_MIN ,
                       FSE_DESP_RESPRESENT_ANO_N_JUNHO_MAX_MIN ,
                       FSE_DESP_RESPRESENT_ANO_N_JULHO_MAX_MIN ,
                       FSE_DESP_RESPRESENT_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_DESP_RESPRESENT_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_DESP_RESPRESENT_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_DESP_RESPRESENT_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_DESP_RESPRESENT_ANO_N_DEZEMBRO_MAX_MIN ,


                           @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_DEZEMBRO"])))

                          );

    //NOTA TA: Aqui trato o minimo e o maximo do eixo principal
    if(Math.abs(FSE_DESP_RESPRESENT_Mensal_Eixo_max_princ)>=Math.abs(FSE_DESP_RESPRESENT_Mensal_Eixo_min_princ))
    {
        var FSE_DESP_RESPRESENT_Mensal_Eixo_max_princ_=(Math.ceil(FSE_DESP_RESPRESENT_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_DESP_RESPRESENT_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_DESP_RESPRESENT_Mensal_Eixo_max_princ),0).toString().length-1);
        var FSE_DESP_RESPRESENT_Mensal_Eixo_min_princ_= (Math.floor(FSE_DESP_RESPRESENT_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_DESP_RESPRESENT_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_DESP_RESPRESENT_Mensal_Eixo_max_princ),0).toString().length-1);
        //alert(FSE_DESP_RESPRESENT_Mensal_Eixo_max_princ_);
        //alert(FSE_DESP_RESPRESENT_Mensal_Eixo_min_princ_);
    }
    else
    {
        var FSE_DESP_RESPRESENT_Mensal_Eixo_max_princ_=(Math.ceil(FSE_DESP_RESPRESENT_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_DESP_RESPRESENT_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_DESP_RESPRESENT_Mensal_Eixo_min_princ),0).toString().length-1);
        var FSE_DESP_RESPRESENT_Mensal_Eixo_min_princ_= (Math.floor(FSE_DESP_RESPRESENT_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_DESP_RESPRESENT_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_DESP_RESPRESENT_Mensal_Eixo_min_princ),0).toString().length-1);}

    //NOTA TA: Aqui trato o minimo e o maximo do eixo secundario

    if(Math.abs(FSE_DESP_RESPRESENT_Mensal_Eixo_max_secon)>=Math.abs(FSE_DESP_RESPRESENT_Mensal_Eixo_min_secon))
    {
        var FSE_DESP_RESPRESENT_Mensal_Eixo_max_secon_=(Math.ceil(FSE_DESP_RESPRESENT_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_DESP_RESPRESENT_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_DESP_RESPRESENT_Mensal_Eixo_max_secon),0).toString().length-1);
        var FSE_DESP_RESPRESENT_Mensal_Eixo_min_secon_= (Math.floor(FSE_DESP_RESPRESENT_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_DESP_RESPRESENT_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_DESP_RESPRESENT_Mensal_Eixo_max_secon),0).toString().length-1);
        //alert(FSE_DESP_RESPRESENT_Mensal_Eixo_max_secon_);
        //alert(FSE_DESP_RESPRESENT_Mensal_Eixo_min_secon_);
    }
    else
    {
        var FSE_DESP_RESPRESENT_Mensal_Eixo_max_secon_=(Math.ceil(FSE_DESP_RESPRESENT_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_DESP_RESPRESENT_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_DESP_RESPRESENT_Mensal_Eixo_min_secon),0).toString().length-1);
        var FSE_DESP_RESPRESENT_Mensal_Eixo_min_secon_= (Math.floor(FSE_DESP_RESPRESENT_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_DESP_RESPRESENT_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_DESP_RESPRESENT_Mensal_Eixo_min_secon),0).toString().length-1);}


    if(Math.abs(FSE_DESP_RESPRESENT_Mensal_Eixo_min_princ)/Math.abs(FSE_DESP_RESPRESENT_Mensal_Eixo_max_princ)>=Math.abs(FSE_DESP_RESPRESENT_Mensal_Eixo_min_secon)/Math.abs(FSE_DESP_RESPRESENT_Mensal_Eixo_max_secon))
    { if(FSE_DESP_RESPRESENT_Mensal_Eixo_max_princ > 0 && FSE_DESP_RESPRESENT_Mensal_Eixo_min_princ <0 ){ var FSE_DESP_RESPRESENT_Mensal_Eixo_min_secon__=(FSE_DESP_RESPRESENT_Mensal_Eixo_min_princ_*FSE_DESP_RESPRESENT_Mensal_Eixo_max_secon_)/FSE_DESP_RESPRESENT_Mensal_Eixo_max_princ_;} else { var FSE_DESP_RESPRESENT_Mensal_Eixo_min_secon__=FSE_DESP_RESPRESENT_Mensal_Eixo_min_secon_;}
        if(FSE_DESP_RESPRESENT_Mensal_Eixo_max_secon > 0 && FSE_DESP_RESPRESENT_Mensal_Eixo_min_secon <0 ){ var FSE_DESP_RESPRESENT_Mensal_Eixo_min_princ__=(FSE_DESP_RESPRESENT_Mensal_Eixo_min_secon__*FSE_DESP_RESPRESENT_Mensal_Eixo_max_princ_)/FSE_DESP_RESPRESENT_Mensal_Eixo_max_secon_;} else { var FSE_DESP_RESPRESENT_Mensal_Eixo_min_princ__=FSE_DESP_RESPRESENT_Mensal_Eixo_min_princ_;}}
    else
    {if(FSE_DESP_RESPRESENT_Mensal_Eixo_max_secon > 0 && FSE_DESP_RESPRESENT_Mensal_Eixo_min_secon <0 ){ var FSE_DESP_RESPRESENT_Mensal_Eixo_min_princ__=(FSE_DESP_RESPRESENT_Mensal_Eixo_min_secon_*FSE_DESP_RESPRESENT_Mensal_Eixo_max_princ_)/FSE_DESP_RESPRESENT_Mensal_Eixo_max_secon_;} else { var FSE_DESP_RESPRESENT_Mensal_Eixo_min_princ__=FSE_DESP_RESPRESENT_Mensal_Eixo_min_princ_;}
        if(FSE_DESP_RESPRESENT_Mensal_Eixo_max_princ > 0 && FSE_DESP_RESPRESENT_Mensal_Eixo_min_princ <0 ){ var FSE_DESP_RESPRESENT_Mensal_Eixo_min_secon__=(FSE_DESP_RESPRESENT_Mensal_Eixo_min_princ__*FSE_DESP_RESPRESENT_Mensal_Eixo_max_secon_)/FSE_DESP_RESPRESENT_Mensal_Eixo_max_princ_;} else { var FSE_DESP_RESPRESENT_Mensal_Eixo_min_secon__=FSE_DESP_RESPRESENT_Mensal_Eixo_min_secon_;}
    }



    if(Math.abs(FSE_DESP_RESPRESENT_Mensal_Eixo_max_princ)/Math.abs(FSE_DESP_RESPRESENT_Mensal_Eixo_min_princ)>=Math.abs(FSE_DESP_RESPRESENT_Mensal_Eixo_max_secon)/Math.abs(FSE_DESP_RESPRESENT_Mensal_Eixo_min_secon))
    { if(FSE_DESP_RESPRESENT_Mensal_Eixo_min_princ > 0 && FSE_DESP_RESPRESENT_Mensal_Eixo_max_princ <0 ){ var FSE_DESP_RESPRESENT_Mensal_Eixo_max_secon__=(FSE_DESP_RESPRESENT_Mensal_Eixo_max_princ_*FSE_DESP_RESPRESENT_Mensal_Eixo_min_secon_)/FSE_DESP_RESPRESENT_Mensal_Eixo_min_princ_;} else { var FSE_DESP_RESPRESENT_Mensal_Eixo_max_secon__=FSE_DESP_RESPRESENT_Mensal_Eixo_max_secon_;}
        if(FSE_DESP_RESPRESENT_Mensal_Eixo_min_secon > 0 && FSE_DESP_RESPRESENT_Mensal_Eixo_max_secon <0 ){ var FSE_DESP_RESPRESENT_Mensal_Eixo_max_princ__=(FSE_DESP_RESPRESENT_Mensal_Eixo_max_secon__*FSE_DESP_RESPRESENT_Mensal_Eixo_min_princ_)/FSE_DESP_RESPRESENT_Mensal_Eixo_min_secon_;} else { var FSE_DESP_RESPRESENT_Mensal_Eixo_max_princ__=FSE_DESP_RESPRESENT_Mensal_Eixo_max_princ_;}}
    else
    {if(FSE_DESP_RESPRESENT_Mensal_Eixo_min_secon > 0 && FSE_DESP_RESPRESENT_Mensal_Eixo_max_secon <0 ){ var FSE_DESP_RESPRESENT_Mensal_Eixo_max_princ__=(FSE_DESP_RESPRESENT_Mensal_Eixo_max_secon_*FSE_DESP_RESPRESENT_Mensal_Eixo_min_princ_)/FSE_DESP_RESPRESENT_Mensal_Eixo_min_secon_;} else { var FSE_DESP_RESPRESENT_Mensal_Eixo_max_princ__=FSE_DESP_RESPRESENT_Mensal_Eixo_max_princ_;}
        if(FSE_DESP_RESPRESENT_Mensal_Eixo_min_princ > 0 && FSE_DESP_RESPRESENT_Mensal_Eixo_max_princ <0 ){ var FSE_DESP_RESPRESENT_Mensal_Eixo_max_secon__=(FSE_DESP_RESPRESENT_Mensal_Eixo_max_princ__*FSE_DESP_RESPRESENT_Mensal_Eixo_min_secon_)/FSE_DESP_RESPRESENT_Mensal_Eixo_min_princ_;} else { var FSE_DESP_RESPRESENT_Mensal_Eixo_max_secon__=FSE_DESP_RESPRESENT_Mensal_Eixo_max_secon_;}
    }



    var GRAFICO_FSE_RESULT_MENSAL_COMP_054=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_054').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_054=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_054, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label: 'Desp. Repres.(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   data: [
                       FSE_DESP_RESPRESENT_ANO_N_JANEIRO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_FEVEREIRO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_MARCO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_ABRIL_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_MAIO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_JUNHO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_JULHO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_AGOSTO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_SETEMBRO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_OUTUBRO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_NOVEMBRO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_DEZEMBRO_ACUM,
                   ],
                   type: 'line'


               },
                              {
                                  label: 'Desp. Repres.(ac) ' + ANO_VERSAO_ANTE_,
                                  yAxisID: 'A',
                                  //backgroundColor: 'rgb(201, 10, 10)',
                                  borderColor: 'rgb(0,221,0)',
                                  data: [
                       FSE_DESP_RESPRESENT_ANO_N_1_JANEIRO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_1_MARCO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_1_ABRIL_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_1_MAIO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_1_JUNHO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_1_JULHO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_1_AGOSTO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_1_SETEMBRO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_1_OUTUBRO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_DESP_RESPRESENT_ANO_N_1_DEZEMBRO_ACUM,
                                  ],
                                  type: 'line'


                              },
                {
                    label:  'Desp. Repres.(m) ' + ANO_VERSAO_REAL_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(250 , 83 , 0, 0.5)',
                    borderColor: 'rgba(250 , 83 , 0, 0.5)',
                    data: [
                  FSE_DESP_RESPRESENT_ANO_N_JANEIRO ,
                  FSE_DESP_RESPRESENT_ANO_N_FEVEREIRO ,
                  FSE_DESP_RESPRESENT_ANO_N_MARCO ,
                  FSE_DESP_RESPRESENT_ANO_N_ABRIL,
                  FSE_DESP_RESPRESENT_ANO_N_MAIO ,
                  FSE_DESP_RESPRESENT_ANO_N_JUNHO ,
                  FSE_DESP_RESPRESENT_ANO_N_JULHO ,
                  FSE_DESP_RESPRESENT_ANO_N_AGOSTO ,
                  FSE_DESP_RESPRESENT_ANO_N_SETEMBRO ,
                  FSE_DESP_RESPRESENT_ANO_N_OUTUBRO ,
                  FSE_DESP_RESPRESENT_ANO_N_NOVEMBRO ,
                  FSE_DESP_RESPRESENT_ANO_N_DEZEMBRO ,
                    ],
                },
                {
                    label:  'Desp. Repres.(m) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(0,221,0, 0.4)',
                    borderColor: 'rgba(0,221,0, 0.4)',
                    data: [
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_JANEIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_FEVEREIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_MARCO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_ABRIL"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_MAIO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_JUNHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_JULHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_AGOSTO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_SETEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_OUTUBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_NOVEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANO_N_1_DEZEMBRO"]))),
                    ],
                },


            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_DESP_RESPRESENT_MENSAL_1',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                min:  Math.round(FSE_DESP_RESPRESENT_Mensal_Eixo_min_princ__,0),
                                                max:  Math.round(FSE_DESP_RESPRESENT_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString();
                                                }
                                            }
                                        },

                    { id: 'B',
                        type: 'linear',
                        position: 'right',
                        ticks: {
                            min: Math.round(FSE_DESP_RESPRESENT_Mensal_Eixo_min_secon__,0),
                            max:  Math.round(FSE_DESP_RESPRESENT_Mensal_Eixo_max_secon__,0),
                            beginAtZero: false,
                            callback: function(value, index, values) {
                                return value.toLocaleString();
                            }
                        }
                    },






                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_055-----------------------------------------------------------*@
<script>

    var IND_VN_ANO_N_JANEIRO_ACUM = IND_VN_ANO_N_JANEIRO;
    var IND_VN_ANO_N_FEVEREIRO_ACUM = IND_VN_ANO_N_FEVEREIRO + IND_VN_ANO_N_JANEIRO_ACUM;
    var IND_VN_ANO_N_MARCO_ACUM = IND_VN_ANO_N_MARCO + IND_VN_ANO_N_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_ABRIL_ACUM = IND_VN_ANO_N_ABRIL + IND_VN_ANO_N_MARCO_ACUM;
    var IND_VN_ANO_N_MAIO_ACUM = IND_VN_ANO_N_MAIO + IND_VN_ANO_N_ABRIL_ACUM;
    var IND_VN_ANO_N_JUNHO_ACUM = IND_VN_ANO_N_JUNHO + IND_VN_ANO_N_MAIO_ACUM;
    var IND_VN_ANO_N_JULHO_ACUM = IND_VN_ANO_N_JULHO + IND_VN_ANO_N_JUNHO_ACUM;
    var IND_VN_ANO_N_AGOSTO_ACUM = IND_VN_ANO_N_AGOSTO + IND_VN_ANO_N_JULHO_ACUM;
    var IND_VN_ANO_N_SETEMBRO_ACUM = IND_VN_ANO_N_SETEMBRO + IND_VN_ANO_N_AGOSTO_ACUM;
    var IND_VN_ANO_N_OUTUBRO_ACUM = IND_VN_ANO_N_OUTUBRO + IND_VN_ANO_N_SETEMBRO_ACUM;
    var IND_VN_ANO_N_NOVEMBRO_ACUM = IND_VN_ANO_N_NOVEMBRO + IND_VN_ANO_N_OUTUBRO_ACUM;
    var IND_VN_ANO_N_DEZEMBRO_ACUM = IND_VN_ANO_N_DEZEMBRO + IND_VN_ANO_N_NOVEMBRO_ACUM;



    var IND_VN_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JANEIRO"])));
    var IND_VN_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_FEVEREIRO"]))) + IND_VN_ANO_N_1_JANEIRO_ACUM;
    var IND_VN_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MARCO"]))) + IND_VN_ANO_N_1_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_ABRIL"]))) + IND_VN_ANO_N_1_MARCO_ACUM;
    var IND_VN_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MAIO"]))) + IND_VN_ANO_N_1_ABRIL_ACUM;
    var IND_VN_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JUNHO"]))) + IND_VN_ANO_N_1_MAIO_ACUM;
    var IND_VN_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JULHO"]))) + IND_VN_ANO_N_1_JUNHO_ACUM;
    var IND_VN_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_AGOSTO"]))) + IND_VN_ANO_N_1_JULHO_ACUM;
    var IND_VN_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_SETEMBRO"]))) + IND_VN_ANO_N_1_AGOSTO_ACUM;
    var IND_VN_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_OUTUBRO"]))) + IND_VN_ANO_N_1_SETEMBRO_ACUM;
    var IND_VN_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_NOVEMBRO"]))) + IND_VN_ANO_N_1_OUTUBRO_ACUM;
    var IND_VN_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_DEZEMBRO"]))) + IND_VN_ANO_N_1_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_JANEIRO_ACUM = 'nd'; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_JANEIRO_ACUM= FSE_DESP_RESPRESENT_ANO_N_JANEIRO_ACUM/IND_VN_ANO_N_JANEIRO_ACUM*100; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = PESO_FSE_DESP_RESPRESENT_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_FEVEREIRO_ACUM= FSE_DESP_RESPRESENT_ANO_N_FEVEREIRO_ACUM/IND_VN_ANO_N_FEVEREIRO_ACUM*100; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_DESP_RESPRESENT_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_MARCO_ACUM = 'nd'; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_MARCO_ACUM= FSE_DESP_RESPRESENT_ANO_N_MARCO_ACUM/IND_VN_ANO_N_MARCO_ACUM*100; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_MARCO_ACUM_MAX_MIN = PESO_FSE_DESP_RESPRESENT_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_ABRIL_ACUM = 'nd'; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_ABRIL_ACUM= FSE_DESP_RESPRESENT_ANO_N_ABRIL_ACUM/IND_VN_ANO_N_ABRIL_ACUM*100; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_ABRIL_ACUM_MAX_MIN = PESO_FSE_DESP_RESPRESENT_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_MAIO_ACUM = 'nd'; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_MAIO_ACUM= FSE_DESP_RESPRESENT_ANO_N_MAIO_ACUM/IND_VN_ANO_N_MAIO_ACUM*100; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_MAIO_ACUM_MAX_MIN = PESO_FSE_DESP_RESPRESENT_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_JUNHO_ACUM = 'nd'; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_JUNHO_ACUM= FSE_DESP_RESPRESENT_ANO_N_JUNHO_ACUM/IND_VN_ANO_N_JUNHO_ACUM*100; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_JUNHO_ACUM_MAX_MIN = PESO_FSE_DESP_RESPRESENT_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_JULHO_ACUM = 'nd'; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_JULHO_ACUM= FSE_DESP_RESPRESENT_ANO_N_JULHO_ACUM/IND_VN_ANO_N_JULHO_ACUM*100; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_JULHO_ACUM_MAX_MIN = PESO_FSE_DESP_RESPRESENT_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_AGOSTO_ACUM = 'nd'; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_AGOSTO_ACUM= FSE_DESP_RESPRESENT_ANO_N_AGOSTO_ACUM/IND_VN_ANO_N_AGOSTO_ACUM*100; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = PESO_FSE_DESP_RESPRESENT_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_SETEMBRO_ACUM= FSE_DESP_RESPRESENT_ANO_N_SETEMBRO_ACUM/IND_VN_ANO_N_SETEMBRO_ACUM*100; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_DESP_RESPRESENT_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_OUTUBRO_ACUM= FSE_DESP_RESPRESENT_ANO_N_OUTUBRO_ACUM/IND_VN_ANO_N_OUTUBRO_ACUM*100; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_DESP_RESPRESENT_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_NOVEMBRO_ACUM= FSE_DESP_RESPRESENT_ANO_N_NOVEMBRO_ACUM/IND_VN_ANO_N_NOVEMBRO_ACUM*100; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_DESP_RESPRESENT_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_DEZEMBRO_ACUM= FSE_DESP_RESPRESENT_ANO_N_DEZEMBRO_ACUM/IND_VN_ANO_N_DEZEMBRO_ACUM*100; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_DESP_RESPRESENT_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_JANEIRO_ACUM = 'nd'; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_JANEIRO_ACUM= FSE_DESP_RESPRESENT_ANO_N_1_JANEIRO_ACUM/IND_VN_ANO_N_1_JANEIRO_ACUM*100; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_FEVEREIRO_ACUM= FSE_DESP_RESPRESENT_ANO_N_1_FEVEREIRO_ACUM/IND_VN_ANO_N_1_FEVEREIRO_ACUM*100; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_MARCO_ACUM = 'nd'; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_MARCO_ACUM= FSE_DESP_RESPRESENT_ANO_N_1_MARCO_ACUM/IND_VN_ANO_N_1_MARCO_ACUM*100; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_ABRIL_ACUM = 'nd'; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_ABRIL_ACUM= FSE_DESP_RESPRESENT_ANO_N_1_ABRIL_ACUM/IND_VN_ANO_N_1_ABRIL_ACUM*100; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_MAIO_ACUM = 'nd'; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_MAIO_ACUM= FSE_DESP_RESPRESENT_ANO_N_1_MAIO_ACUM/IND_VN_ANO_N_1_MAIO_ACUM*100; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_JUNHO_ACUM = 'nd'; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_JUNHO_ACUM= FSE_DESP_RESPRESENT_ANO_N_1_JUNHO_ACUM/IND_VN_ANO_N_1_JUNHO_ACUM*100; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_JULHO_ACUM = 'nd'; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_JULHO_ACUM= FSE_DESP_RESPRESENT_ANO_N_1_JULHO_ACUM/IND_VN_ANO_N_1_JULHO_ACUM*100; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_AGOSTO_ACUM = 'nd'; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_AGOSTO_ACUM= FSE_DESP_RESPRESENT_ANO_N_1_AGOSTO_ACUM/IND_VN_ANO_N_1_AGOSTO_ACUM*100; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_SETEMBRO_ACUM = 'nd'; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_SETEMBRO_ACUM= FSE_DESP_RESPRESENT_ANO_N_1_SETEMBRO_ACUM/IND_VN_ANO_N_1_SETEMBRO_ACUM*100; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_OUTUBRO_ACUM = 'nd'; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_OUTUBRO_ACUM= FSE_DESP_RESPRESENT_ANO_N_1_OUTUBRO_ACUM/IND_VN_ANO_N_1_OUTUBRO_ACUM*100; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_NOVEMBRO_ACUM= FSE_DESP_RESPRESENT_ANO_N_1_NOVEMBRO_ACUM/IND_VN_ANO_N_1_NOVEMBRO_ACUM*100; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_DEZEMBRO_ACUM= FSE_DESP_RESPRESENT_ANO_N_1_DEZEMBRO_ACUM/IND_VN_ANO_N_1_DEZEMBRO_ACUM*100; var PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_VN_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JANEIRO_ACUM= ((IND_VN_ANO_N_JANEIRO_ACUM-IND_VN_ANO_N_1_JANEIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_JANEIRO_ACUM))*100; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_FEVEREIRO_ACUM= ((IND_VN_ANO_N_FEVEREIRO_ACUM-IND_VN_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_VN_ANO_N_MARCO_ACUM = 'nd'; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MARCO_ACUM= ((IND_VN_ANO_N_MARCO_ACUM-IND_VN_ANO_N_1_MARCO_ACUM)/Math.abs(IND_VN_ANO_N_1_MARCO_ACUM))*100; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = VAR_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_VN_ANO_N_ABRIL_ACUM = 'nd'; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_ABRIL_ACUM= ((IND_VN_ANO_N_ABRIL_ACUM-IND_VN_ANO_N_1_ABRIL_ACUM)/Math.abs(IND_VN_ANO_N_1_ABRIL_ACUM))*100; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_VN_ANO_N_MAIO_ACUM = 'nd'; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MAIO_ACUM= ((IND_VN_ANO_N_MAIO_ACUM-IND_VN_ANO_N_1_MAIO_ACUM)/Math.abs(IND_VN_ANO_N_1_MAIO_ACUM))*100; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = VAR_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_VN_ANO_N_JUNHO_ACUM = 'nd'; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JUNHO_ACUM= ((IND_VN_ANO_N_JUNHO_ACUM-IND_VN_ANO_N_1_JUNHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JUNHO_ACUM))*100; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_VN_ANO_N_JULHO_ACUM = 'nd'; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JULHO_ACUM= ((IND_VN_ANO_N_JULHO_ACUM-IND_VN_ANO_N_1_JULHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JULHO_ACUM))*100; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_VN_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_AGOSTO_ACUM= ((IND_VN_ANO_N_AGOSTO_ACUM-IND_VN_ANO_N_1_AGOSTO_ACUM)/Math.abs(IND_VN_ANO_N_1_AGOSTO_ACUM))*100; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_SETEMBRO_ACUM= ((IND_VN_ANO_N_SETEMBRO_ACUM-IND_VN_ANO_N_1_SETEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_OUTUBRO_ACUM= ((IND_VN_ANO_N_OUTUBRO_ACUM-IND_VN_ANO_N_1_OUTUBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_NOVEMBRO_ACUM= ((IND_VN_ANO_N_NOVEMBRO_ACUM-IND_VN_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_DEZEMBRO_ACUM= ((IND_VN_ANO_N_DEZEMBRO_ACUM-IND_VN_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_FSE_DESP_RESPRESENT_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_FSE_DESP_RESPRESENT_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_DESP_RESPRESENT_ANO_N_JANEIRO_ACUM= ((FSE_DESP_RESPRESENT_ANO_N_JANEIRO_ACUM-FSE_DESP_RESPRESENT_ANO_N_1_JANEIRO_ACUM)/Math.abs(FSE_DESP_RESPRESENT_ANO_N_1_JANEIRO_ACUM))*100; var VAR_FSE_DESP_RESPRESENT_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_FSE_DESP_RESPRESENT_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_FSE_DESP_RESPRESENT_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_FSE_DESP_RESPRESENT_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_DESP_RESPRESENT_ANO_N_FEVEREIRO_ACUM= ((FSE_DESP_RESPRESENT_ANO_N_FEVEREIRO_ACUM-FSE_DESP_RESPRESENT_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(FSE_DESP_RESPRESENT_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_FSE_DESP_RESPRESENT_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_FSE_DESP_RESPRESENT_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_FSE_DESP_RESPRESENT_ANO_N_MARCO_ACUM = 'nd'; var VAR_FSE_DESP_RESPRESENT_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_DESP_RESPRESENT_ANO_N_MARCO_ACUM= ((FSE_DESP_RESPRESENT_ANO_N_MARCO_ACUM-FSE_DESP_RESPRESENT_ANO_N_1_MARCO_ACUM)/Math.abs(FSE_DESP_RESPRESENT_ANO_N_1_MARCO_ACUM))*100; var VAR_FSE_DESP_RESPRESENT_ANO_N_MARCO_ACUM_MAX_MIN = VAR_FSE_DESP_RESPRESENT_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_FSE_DESP_RESPRESENT_ANO_N_ABRIL_ACUM = 'nd'; var VAR_FSE_DESP_RESPRESENT_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_DESP_RESPRESENT_ANO_N_ABRIL_ACUM= ((FSE_DESP_RESPRESENT_ANO_N_ABRIL_ACUM-FSE_DESP_RESPRESENT_ANO_N_1_ABRIL_ACUM)/Math.abs(FSE_DESP_RESPRESENT_ANO_N_1_ABRIL_ACUM))*100; var VAR_FSE_DESP_RESPRESENT_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_FSE_DESP_RESPRESENT_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_FSE_DESP_RESPRESENT_ANO_N_MAIO_ACUM = 'nd'; var VAR_FSE_DESP_RESPRESENT_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_DESP_RESPRESENT_ANO_N_MAIO_ACUM= ((FSE_DESP_RESPRESENT_ANO_N_MAIO_ACUM-FSE_DESP_RESPRESENT_ANO_N_1_MAIO_ACUM)/Math.abs(FSE_DESP_RESPRESENT_ANO_N_1_MAIO_ACUM))*100; var VAR_FSE_DESP_RESPRESENT_ANO_N_MAIO_ACUM_MAX_MIN = VAR_FSE_DESP_RESPRESENT_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_FSE_DESP_RESPRESENT_ANO_N_JUNHO_ACUM = 'nd'; var VAR_FSE_DESP_RESPRESENT_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_DESP_RESPRESENT_ANO_N_JUNHO_ACUM= ((FSE_DESP_RESPRESENT_ANO_N_JUNHO_ACUM-FSE_DESP_RESPRESENT_ANO_N_1_JUNHO_ACUM)/Math.abs(FSE_DESP_RESPRESENT_ANO_N_1_JUNHO_ACUM))*100; var VAR_FSE_DESP_RESPRESENT_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_FSE_DESP_RESPRESENT_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_FSE_DESP_RESPRESENT_ANO_N_JULHO_ACUM = 'nd'; var VAR_FSE_DESP_RESPRESENT_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_DESP_RESPRESENT_ANO_N_JULHO_ACUM= ((FSE_DESP_RESPRESENT_ANO_N_JULHO_ACUM-FSE_DESP_RESPRESENT_ANO_N_1_JULHO_ACUM)/Math.abs(FSE_DESP_RESPRESENT_ANO_N_1_JULHO_ACUM))*100; var VAR_FSE_DESP_RESPRESENT_ANO_N_JULHO_ACUM_MAX_MIN = VAR_FSE_DESP_RESPRESENT_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_FSE_DESP_RESPRESENT_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_FSE_DESP_RESPRESENT_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_DESP_RESPRESENT_ANO_N_AGOSTO_ACUM= ((FSE_DESP_RESPRESENT_ANO_N_AGOSTO_ACUM-FSE_DESP_RESPRESENT_ANO_N_1_AGOSTO_ACUM)/Math.abs(FSE_DESP_RESPRESENT_ANO_N_1_AGOSTO_ACUM))*100; var VAR_FSE_DESP_RESPRESENT_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_FSE_DESP_RESPRESENT_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_FSE_DESP_RESPRESENT_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_FSE_DESP_RESPRESENT_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_DESP_RESPRESENT_ANO_N_SETEMBRO_ACUM= ((FSE_DESP_RESPRESENT_ANO_N_SETEMBRO_ACUM-FSE_DESP_RESPRESENT_ANO_N_1_SETEMBRO_ACUM)/Math.abs(FSE_DESP_RESPRESENT_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_FSE_DESP_RESPRESENT_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_FSE_DESP_RESPRESENT_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_FSE_DESP_RESPRESENT_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_FSE_DESP_RESPRESENT_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_DESP_RESPRESENT_ANO_N_OUTUBRO_ACUM= ((FSE_DESP_RESPRESENT_ANO_N_OUTUBRO_ACUM-FSE_DESP_RESPRESENT_ANO_N_1_OUTUBRO_ACUM)/Math.abs(FSE_DESP_RESPRESENT_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_FSE_DESP_RESPRESENT_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_FSE_DESP_RESPRESENT_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_FSE_DESP_RESPRESENT_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_FSE_DESP_RESPRESENT_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_DESP_RESPRESENT_ANO_N_NOVEMBRO_ACUM= ((FSE_DESP_RESPRESENT_ANO_N_NOVEMBRO_ACUM-FSE_DESP_RESPRESENT_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(FSE_DESP_RESPRESENT_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_FSE_DESP_RESPRESENT_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_FSE_DESP_RESPRESENT_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_FSE_DESP_RESPRESENT_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_FSE_DESP_RESPRESENT_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_DESP_RESPRESENT_ANO_N_DEZEMBRO_ACUM= ((FSE_DESP_RESPRESENT_ANO_N_DEZEMBRO_ACUM-FSE_DESP_RESPRESENT_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(FSE_DESP_RESPRESENT_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_FSE_DESP_RESPRESENT_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_FSE_DESP_RESPRESENT_ANO_N_DEZEMBRO_ACUM };

    if( PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_JANEIRO_ACUM > PESO_FSE_DESP_RESPRESENT_VN_ANO_N_JANEIRO_ACUM) { var  INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_JANEIRO_ACUM=PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_JANEIRO_ACUM ; } else { var  INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_JANEIRO_ACUM=PESO_FSE_DESP_RESPRESENT_VN_ANO_N_JANEIRO_ACUM ; }
    if( PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_FEVEREIRO_ACUM > PESO_FSE_DESP_RESPRESENT_VN_ANO_N_FEVEREIRO_ACUM) { var  INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_FEVEREIRO_ACUM=PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_FEVEREIRO_ACUM ; } else { var  INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_FEVEREIRO_ACUM=PESO_FSE_DESP_RESPRESENT_VN_ANO_N_FEVEREIRO_ACUM ; }
    if( PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_MARCO_ACUM > PESO_FSE_DESP_RESPRESENT_VN_ANO_N_MARCO_ACUM) { var  INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_MARCO_ACUM=PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_MARCO_ACUM ; } else { var  INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_MARCO_ACUM=PESO_FSE_DESP_RESPRESENT_VN_ANO_N_MARCO_ACUM ; }
    if( PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_ABRIL_ACUM > PESO_FSE_DESP_RESPRESENT_VN_ANO_N_ABRIL_ACUM) { var  INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_ABRIL_ACUM=PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_ABRIL_ACUM ; } else { var  INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_ABRIL_ACUM=PESO_FSE_DESP_RESPRESENT_VN_ANO_N_ABRIL_ACUM ; }
    if( PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_MAIO_ACUM > PESO_FSE_DESP_RESPRESENT_VN_ANO_N_MAIO_ACUM) { var  INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_MAIO_ACUM=PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_MAIO_ACUM ; } else { var  INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_MAIO_ACUM=PESO_FSE_DESP_RESPRESENT_VN_ANO_N_MAIO_ACUM ; }
    if( PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_JUNHO_ACUM > PESO_FSE_DESP_RESPRESENT_VN_ANO_N_JUNHO_ACUM) { var  INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_JUNHO_ACUM=PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_JUNHO_ACUM ; } else { var  INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_JUNHO_ACUM=PESO_FSE_DESP_RESPRESENT_VN_ANO_N_JUNHO_ACUM ; }
    if( PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_JULHO_ACUM > PESO_FSE_DESP_RESPRESENT_VN_ANO_N_JULHO_ACUM) { var  INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_JULHO_ACUM=PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_JULHO_ACUM ; } else { var  INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_JULHO_ACUM=PESO_FSE_DESP_RESPRESENT_VN_ANO_N_JULHO_ACUM ; }
    if( PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_AGOSTO_ACUM > PESO_FSE_DESP_RESPRESENT_VN_ANO_N_AGOSTO_ACUM) { var  INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_AGOSTO_ACUM=PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_AGOSTO_ACUM ; } else { var  INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_AGOSTO_ACUM=PESO_FSE_DESP_RESPRESENT_VN_ANO_N_AGOSTO_ACUM ; }
    if( PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_SETEMBRO_ACUM > PESO_FSE_DESP_RESPRESENT_VN_ANO_N_SETEMBRO_ACUM) { var  INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_SETEMBRO_ACUM=PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_SETEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_SETEMBRO_ACUM=PESO_FSE_DESP_RESPRESENT_VN_ANO_N_SETEMBRO_ACUM ; }
    if( PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_OUTUBRO_ACUM > PESO_FSE_DESP_RESPRESENT_VN_ANO_N_OUTUBRO_ACUM) { var  INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_OUTUBRO_ACUM=PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_OUTUBRO_ACUM ; } else { var  INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_OUTUBRO_ACUM=PESO_FSE_DESP_RESPRESENT_VN_ANO_N_OUTUBRO_ACUM ; }
    if( PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_NOVEMBRO_ACUM > PESO_FSE_DESP_RESPRESENT_VN_ANO_N_NOVEMBRO_ACUM) { var  INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_NOVEMBRO_ACUM=PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_NOVEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_NOVEMBRO_ACUM=PESO_FSE_DESP_RESPRESENT_VN_ANO_N_NOVEMBRO_ACUM ; }
    if( PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_DEZEMBRO_ACUM > PESO_FSE_DESP_RESPRESENT_VN_ANO_N_DEZEMBRO_ACUM) { var  INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_DEZEMBRO_ACUM=PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_DEZEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_DEZEMBRO_ACUM=PESO_FSE_DESP_RESPRESENT_VN_ANO_N_DEZEMBRO_ACUM ; }



    var fillBetweenLinesPlugin = {
        afterDatasetsDraw: function (chart) {
            var ctx = chart.chart.ctx;
            var xaxis = chart.scales['x-axis-0'];
            var yaxis = chart.scales['y-axis-0'];
            var datasets = chart.data.datasets;
            ctx.save();

            for (var d = 0; d < datasets.length; d++) {
                var dataset = datasets[d];
                if (dataset.fillBetweenSet == undefined) {
                    continue;
                }

                // get meta for both data sets
                var meta1 = chart.getDatasetMeta(d);
                var meta2 = chart.getDatasetMeta(dataset.fillBetweenSet);

                // do not draw fill if one of the datasets is hidden
                if (meta1.hidden || meta2.hidden) continue;

                // create fill areas in pairs
                for (var p = 0; p < meta1.data.length-1;p++) {
                    // if null skip
                    if (dataset.data[p] == null || dataset.data[p+1] == null) continue;

                    ctx.beginPath();

                    // trace line 1
                    var curr = meta1.data[p];
                    var next = meta1.data[p+1];
                    ctx.moveTo(curr._view.x, curr._view.y);
                    ctx.lineTo(curr._view.x, curr._view.y);
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(next._view.x, curr._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        ctx.bezierCurveTo(
                          curr._view.controlPointNextX,
                          curr._view.controlPointNextY,
                          next._view.controlPointPreviousX,
                          next._view.controlPointPreviousY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // connect dataset1 to dataset2
                    var curr = meta2.data[p+1];
                    var next = meta2.data[p];
                    ctx.lineTo(curr._view.x, curr._view.y);

                    // trace BACKWORDS set2 to complete the box
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(curr._view.x, next._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        // reverse bezier
                        ctx.bezierCurveTo(
                          curr._view.controlPointPreviousX,
                          curr._view.controlPointPreviousY,
                          next._view.controlPointNextX,
                          next._view.controlPointNextY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // close the loop and fill with shading
                    ctx.closePath();
                    ctx.fillStyle = dataset.fillBetweenColor || "rgba(0,0,0,0.1)";
                    ctx.fill();
                } // end for p loop
            }
        } // end afterDatasetsDraw
    }; // end fillBetweenLinesPlugin

    Chart.pluginService.register(fillBetweenLinesPlugin);



    var GRAFICO_FSE_RESULT_MENSAL_COMP_055=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_055').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_055=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_055, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label:  'Peso Desp. Repres.vsVN(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   //borderColor: "#F00",
                   fill: false,
                   steppedLine: false,
                   tension: 0.5,
                   fillBetweenSet: 1,
                   fillBetweenColor: "rgba(0, 221, 0, 0.1)",
                   data: [
                   PESO_FSE_DESP_RESPRESENT_VN_ANO_N_JANEIRO_ACUM,
                   PESO_FSE_DESP_RESPRESENT_VN_ANO_N_FEVEREIRO_ACUM,
                   PESO_FSE_DESP_RESPRESENT_VN_ANO_N_MARCO_ACUM,
                   PESO_FSE_DESP_RESPRESENT_VN_ANO_N_ABRIL_ACUM,
                   PESO_FSE_DESP_RESPRESENT_VN_ANO_N_MAIO_ACUM,
                   PESO_FSE_DESP_RESPRESENT_VN_ANO_N_JUNHO_ACUM,
                   PESO_FSE_DESP_RESPRESENT_VN_ANO_N_JULHO_ACUM,
                   PESO_FSE_DESP_RESPRESENT_VN_ANO_N_AGOSTO_ACUM,
                   PESO_FSE_DESP_RESPRESENT_VN_ANO_N_SETEMBRO_ACUM,
                   PESO_FSE_DESP_RESPRESENT_VN_ANO_N_OUTUBRO_ACUM,
                   PESO_FSE_DESP_RESPRESENT_VN_ANO_N_NOVEMBRO_ACUM,
                   PESO_FSE_DESP_RESPRESENT_VN_ANO_N_DEZEMBRO_ACUM,

                   ],
                   type: 'line'


               },
                {
                    label: 'Peso Desp. Repres.vsVN(ac) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'A',
                    //backgroundColor: 'rgb(17, 121, 240)',
                    borderColor: 'rgb(0,221,0)',
                    //borderColor: "#00F",
                    fill: false,
                    steppedLine: false,
                    tension: 0.5,
                    data: [
                   PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_JANEIRO_ACUM,
                   PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_FEVEREIRO_ACUM,
                   PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_MARCO_ACUM,
                   PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_ABRIL_ACUM,
                   PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_MAIO_ACUM,
                   PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_JUNHO_ACUM,
                   PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_JULHO_ACUM,
                   PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_AGOSTO_ACUM,
                   PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_SETEMBRO_ACUM,
                   PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_OUTUBRO_ACUM,
                   PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_NOVEMBRO_ACUM,
                   PESO_FSE_DESP_RESPRESENT_VN_ANO_N_1_DEZEMBRO_ACUM,
                    ],
                    type: 'line'
                },
    {
        label: 'Ineficiência',
        yAxisID: 'A',
        backgroundColor: "rgba(255, 0, 0, 0.2)",
        borderColor: 'rgba(255, 255, 255, 0.1)',
        //borderColor: "#0D0",
        fill: false,
        steppedLine: false,
        tension: 0.5,
        fillBetweenSet: 1,
        fillBetweenColor: "rgba(255, 0, 0, 0.2)",
        data: [
    INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_JANEIRO_ACUM,
    INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_FEVEREIRO_ACUM,
    INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_MARCO_ACUM,
    INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_ABRIL_ACUM,
    INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_MAIO_ACUM,
    INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_JUNHO_ACUM,
    INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_JULHO_ACUM,
    INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_AGOSTO_ACUM,
    INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_SETEMBRO_ACUM,
    INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_OUTUBRO_ACUM,
    INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_NOVEMBRO_ACUM,
    INEFICIENCIA_FSE_DESP_RESPRESENT_ANO_N_DEZEMBRO_ACUM,
        ],
        type: 'line'
    },

            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_DESP_RESPRESENT COMP',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                //min:  Math.round(FSE_DESP_RESPRESENT_Mensal_Eixo_min_princ__,0),
                                                //max:  Math.round(FSE_DESP_RESPRESENT_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString()+ "%";
                                                }
                                            }
                                        },







                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_056-----------------------------------------------------------*@
<script>

    if(@ViewData["MES_ACUM_REAL"]<1){ var IND_VN_ANO_N_JANEIRO = 'nd'; var IND_VN_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JANEIRO"]))); var IND_VN_ANO_N_JANEIRO_MAX_MIN = IND_VN_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var IND_VN_ANO_N_FEVEREIRO = 'nd'; var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_FEVEREIRO"]))); var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = IND_VN_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var IND_VN_ANO_N_MARCO = 'nd'; var IND_VN_ANO_N_MARCO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MARCO"]))); var IND_VN_ANO_N_MARCO_MAX_MIN = IND_VN_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var IND_VN_ANO_N_ABRIL = 'nd'; var IND_VN_ANO_N_ABRIL_MAX_MIN = 0;  } else { var IND_VN_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_ABRIL"]))); var IND_VN_ANO_N_ABRIL_MAX_MIN = IND_VN_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var IND_VN_ANO_N_MAIO = 'nd'; var IND_VN_ANO_N_MAIO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MAIO"]))); var IND_VN_ANO_N_MAIO_MAX_MIN = IND_VN_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var IND_VN_ANO_N_JUNHO = 'nd'; var IND_VN_ANO_N_JUNHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JUNHO"]))); var IND_VN_ANO_N_JUNHO_MAX_MIN = IND_VN_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var IND_VN_ANO_N_JULHO = 'nd'; var IND_VN_ANO_N_JULHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JULHO"]))); var IND_VN_ANO_N_JULHO_MAX_MIN = IND_VN_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var IND_VN_ANO_N_AGOSTO = 'nd'; var IND_VN_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_AGOSTO"]))); var IND_VN_ANO_N_AGOSTO_MAX_MIN = IND_VN_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var IND_VN_ANO_N_SETEMBRO = 'nd'; var IND_VN_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_SETEMBRO"]))); var IND_VN_ANO_N_SETEMBRO_MAX_MIN = IND_VN_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var IND_VN_ANO_N_OUTUBRO = 'nd'; var IND_VN_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_OUTUBRO"]))); var IND_VN_ANO_N_OUTUBRO_MAX_MIN = IND_VN_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var IND_VN_ANO_N_NOVEMBRO = 'nd'; var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_NOVEMBRO"]))); var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = IND_VN_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var IND_VN_ANO_N_DEZEMBRO = 'nd'; var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_DEZEMBRO"]))); var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = IND_VN_ANO_N_DEZEMBRO };

    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_LIMP_HIG_CONFORT_ANO_N_JANEIRO = 'nd'; var FSE_LIMP_HIG_CONFORT_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var FSE_LIMP_HIG_CONFORT_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_JANEIRO"]))); var FSE_LIMP_HIG_CONFORT_ANO_N_JANEIRO_MAX_MIN = FSE_LIMP_HIG_CONFORT_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_LIMP_HIG_CONFORT_ANO_N_FEVEREIRO = 'nd'; var FSE_LIMP_HIG_CONFORT_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var FSE_LIMP_HIG_CONFORT_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_FEVEREIRO"]))); var FSE_LIMP_HIG_CONFORT_ANO_N_FEVEREIRO_MAX_MIN = FSE_LIMP_HIG_CONFORT_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_LIMP_HIG_CONFORT_ANO_N_MARCO = 'nd'; var FSE_LIMP_HIG_CONFORT_ANO_N_MARCO_MAX_MIN = 0;  } else { var FSE_LIMP_HIG_CONFORT_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_MARCO"]))); var FSE_LIMP_HIG_CONFORT_ANO_N_MARCO_MAX_MIN = FSE_LIMP_HIG_CONFORT_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_LIMP_HIG_CONFORT_ANO_N_ABRIL = 'nd'; var FSE_LIMP_HIG_CONFORT_ANO_N_ABRIL_MAX_MIN = 0;  } else { var FSE_LIMP_HIG_CONFORT_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_ABRIL"]))); var FSE_LIMP_HIG_CONFORT_ANO_N_ABRIL_MAX_MIN = FSE_LIMP_HIG_CONFORT_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_LIMP_HIG_CONFORT_ANO_N_MAIO = 'nd'; var FSE_LIMP_HIG_CONFORT_ANO_N_MAIO_MAX_MIN = 0;  } else { var FSE_LIMP_HIG_CONFORT_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_MAIO"]))); var FSE_LIMP_HIG_CONFORT_ANO_N_MAIO_MAX_MIN = FSE_LIMP_HIG_CONFORT_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_LIMP_HIG_CONFORT_ANO_N_JUNHO = 'nd'; var FSE_LIMP_HIG_CONFORT_ANO_N_JUNHO_MAX_MIN = 0;  } else { var FSE_LIMP_HIG_CONFORT_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_JUNHO"]))); var FSE_LIMP_HIG_CONFORT_ANO_N_JUNHO_MAX_MIN = FSE_LIMP_HIG_CONFORT_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_LIMP_HIG_CONFORT_ANO_N_JULHO = 'nd'; var FSE_LIMP_HIG_CONFORT_ANO_N_JULHO_MAX_MIN = 0;  } else { var FSE_LIMP_HIG_CONFORT_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_JULHO"]))); var FSE_LIMP_HIG_CONFORT_ANO_N_JULHO_MAX_MIN = FSE_LIMP_HIG_CONFORT_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_LIMP_HIG_CONFORT_ANO_N_AGOSTO = 'nd'; var FSE_LIMP_HIG_CONFORT_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var FSE_LIMP_HIG_CONFORT_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_AGOSTO"]))); var FSE_LIMP_HIG_CONFORT_ANO_N_AGOSTO_MAX_MIN = FSE_LIMP_HIG_CONFORT_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_LIMP_HIG_CONFORT_ANO_N_SETEMBRO = 'nd'; var FSE_LIMP_HIG_CONFORT_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var FSE_LIMP_HIG_CONFORT_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_SETEMBRO"]))); var FSE_LIMP_HIG_CONFORT_ANO_N_SETEMBRO_MAX_MIN = FSE_LIMP_HIG_CONFORT_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_LIMP_HIG_CONFORT_ANO_N_OUTUBRO = 'nd'; var FSE_LIMP_HIG_CONFORT_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var FSE_LIMP_HIG_CONFORT_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_OUTUBRO"]))); var FSE_LIMP_HIG_CONFORT_ANO_N_OUTUBRO_MAX_MIN = FSE_LIMP_HIG_CONFORT_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_LIMP_HIG_CONFORT_ANO_N_NOVEMBRO = 'nd'; var FSE_LIMP_HIG_CONFORT_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var FSE_LIMP_HIG_CONFORT_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_NOVEMBRO"]))); var FSE_LIMP_HIG_CONFORT_ANO_N_NOVEMBRO_MAX_MIN = FSE_LIMP_HIG_CONFORT_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_LIMP_HIG_CONFORT_ANO_N_DEZEMBRO = 'nd'; var FSE_LIMP_HIG_CONFORT_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var FSE_LIMP_HIG_CONFORT_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_DEZEMBRO"]))); var FSE_LIMP_HIG_CONFORT_ANO_N_DEZEMBRO_MAX_MIN = FSE_LIMP_HIG_CONFORT_ANO_N_DEZEMBRO };


    var FSE_LIMP_HIG_CONFORT_ANO_N_JANEIRO_ACUM = FSE_LIMP_HIG_CONFORT_ANO_N_JANEIRO;
    var FSE_LIMP_HIG_CONFORT_ANO_N_FEVEREIRO_ACUM = FSE_LIMP_HIG_CONFORT_ANO_N_FEVEREIRO + FSE_LIMP_HIG_CONFORT_ANO_N_JANEIRO_ACUM;
    var FSE_LIMP_HIG_CONFORT_ANO_N_MARCO_ACUM = FSE_LIMP_HIG_CONFORT_ANO_N_MARCO + FSE_LIMP_HIG_CONFORT_ANO_N_FEVEREIRO_ACUM;
    var FSE_LIMP_HIG_CONFORT_ANO_N_ABRIL_ACUM = FSE_LIMP_HIG_CONFORT_ANO_N_ABRIL + FSE_LIMP_HIG_CONFORT_ANO_N_MARCO_ACUM;
    var FSE_LIMP_HIG_CONFORT_ANO_N_MAIO_ACUM = FSE_LIMP_HIG_CONFORT_ANO_N_MAIO + FSE_LIMP_HIG_CONFORT_ANO_N_ABRIL_ACUM;
    var FSE_LIMP_HIG_CONFORT_ANO_N_JUNHO_ACUM = FSE_LIMP_HIG_CONFORT_ANO_N_JUNHO + FSE_LIMP_HIG_CONFORT_ANO_N_MAIO_ACUM;
    var FSE_LIMP_HIG_CONFORT_ANO_N_JULHO_ACUM = FSE_LIMP_HIG_CONFORT_ANO_N_JULHO + FSE_LIMP_HIG_CONFORT_ANO_N_JUNHO_ACUM;
    var FSE_LIMP_HIG_CONFORT_ANO_N_AGOSTO_ACUM = FSE_LIMP_HIG_CONFORT_ANO_N_AGOSTO + FSE_LIMP_HIG_CONFORT_ANO_N_JULHO_ACUM;
    var FSE_LIMP_HIG_CONFORT_ANO_N_SETEMBRO_ACUM = FSE_LIMP_HIG_CONFORT_ANO_N_SETEMBRO + FSE_LIMP_HIG_CONFORT_ANO_N_AGOSTO_ACUM;
    var FSE_LIMP_HIG_CONFORT_ANO_N_OUTUBRO_ACUM = FSE_LIMP_HIG_CONFORT_ANO_N_OUTUBRO + FSE_LIMP_HIG_CONFORT_ANO_N_SETEMBRO_ACUM;
    var FSE_LIMP_HIG_CONFORT_ANO_N_NOVEMBRO_ACUM = FSE_LIMP_HIG_CONFORT_ANO_N_NOVEMBRO + FSE_LIMP_HIG_CONFORT_ANO_N_OUTUBRO_ACUM;
    var FSE_LIMP_HIG_CONFORT_ANO_N_DEZEMBRO_ACUM = FSE_LIMP_HIG_CONFORT_ANO_N_DEZEMBRO + FSE_LIMP_HIG_CONFORT_ANO_N_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_LIMP_HIG_CONFORT_ANO_N_JANEIRO_ACUM = 'nd'; var FSE_LIMP_HIG_CONFORT_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var FSE_LIMP_HIG_CONFORT_ANO_N_JANEIRO_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_JANEIRO_ACUM; var FSE_LIMP_HIG_CONFORT_ANO_N_JANEIRO_ACUM_MAX_MIN = FSE_LIMP_HIG_CONFORT_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_LIMP_HIG_CONFORT_ANO_N_FEVEREIRO_ACUM = 'nd'; var FSE_LIMP_HIG_CONFORT_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var FSE_LIMP_HIG_CONFORT_ANO_N_FEVEREIRO_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_FEVEREIRO_ACUM; var FSE_LIMP_HIG_CONFORT_ANO_N_FEVEREIRO_ACUM_MAX_MIN = FSE_LIMP_HIG_CONFORT_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_LIMP_HIG_CONFORT_ANO_N_MARCO_ACUM = 'nd'; var FSE_LIMP_HIG_CONFORT_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var FSE_LIMP_HIG_CONFORT_ANO_N_MARCO_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_MARCO_ACUM; var FSE_LIMP_HIG_CONFORT_ANO_N_MARCO_ACUM_MAX_MIN = FSE_LIMP_HIG_CONFORT_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_LIMP_HIG_CONFORT_ANO_N_ABRIL_ACUM = 'nd'; var FSE_LIMP_HIG_CONFORT_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var FSE_LIMP_HIG_CONFORT_ANO_N_ABRIL_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_ABRIL_ACUM; var FSE_LIMP_HIG_CONFORT_ANO_N_ABRIL_ACUM_MAX_MIN = FSE_LIMP_HIG_CONFORT_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_LIMP_HIG_CONFORT_ANO_N_MAIO_ACUM = 'nd'; var FSE_LIMP_HIG_CONFORT_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var FSE_LIMP_HIG_CONFORT_ANO_N_MAIO_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_MAIO_ACUM; var FSE_LIMP_HIG_CONFORT_ANO_N_MAIO_ACUM_MAX_MIN = FSE_LIMP_HIG_CONFORT_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_LIMP_HIG_CONFORT_ANO_N_JUNHO_ACUM = 'nd'; var FSE_LIMP_HIG_CONFORT_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var FSE_LIMP_HIG_CONFORT_ANO_N_JUNHO_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_JUNHO_ACUM; var FSE_LIMP_HIG_CONFORT_ANO_N_JUNHO_ACUM_MAX_MIN = FSE_LIMP_HIG_CONFORT_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_LIMP_HIG_CONFORT_ANO_N_JULHO_ACUM = 'nd'; var FSE_LIMP_HIG_CONFORT_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var FSE_LIMP_HIG_CONFORT_ANO_N_JULHO_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_JULHO_ACUM; var FSE_LIMP_HIG_CONFORT_ANO_N_JULHO_ACUM_MAX_MIN = FSE_LIMP_HIG_CONFORT_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_LIMP_HIG_CONFORT_ANO_N_AGOSTO_ACUM = 'nd'; var FSE_LIMP_HIG_CONFORT_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var FSE_LIMP_HIG_CONFORT_ANO_N_AGOSTO_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_AGOSTO_ACUM; var FSE_LIMP_HIG_CONFORT_ANO_N_AGOSTO_ACUM_MAX_MIN = FSE_LIMP_HIG_CONFORT_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_LIMP_HIG_CONFORT_ANO_N_SETEMBRO_ACUM = 'nd'; var FSE_LIMP_HIG_CONFORT_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_LIMP_HIG_CONFORT_ANO_N_SETEMBRO_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_SETEMBRO_ACUM; var FSE_LIMP_HIG_CONFORT_ANO_N_SETEMBRO_ACUM_MAX_MIN = FSE_LIMP_HIG_CONFORT_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_LIMP_HIG_CONFORT_ANO_N_OUTUBRO_ACUM = 'nd'; var FSE_LIMP_HIG_CONFORT_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var FSE_LIMP_HIG_CONFORT_ANO_N_OUTUBRO_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_OUTUBRO_ACUM; var FSE_LIMP_HIG_CONFORT_ANO_N_OUTUBRO_ACUM_MAX_MIN = FSE_LIMP_HIG_CONFORT_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_LIMP_HIG_CONFORT_ANO_N_NOVEMBRO_ACUM = 'nd'; var FSE_LIMP_HIG_CONFORT_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_LIMP_HIG_CONFORT_ANO_N_NOVEMBRO_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_NOVEMBRO_ACUM; var FSE_LIMP_HIG_CONFORT_ANO_N_NOVEMBRO_ACUM_MAX_MIN = FSE_LIMP_HIG_CONFORT_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_LIMP_HIG_CONFORT_ANO_N_DEZEMBRO_ACUM = 'nd'; var FSE_LIMP_HIG_CONFORT_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_LIMP_HIG_CONFORT_ANO_N_DEZEMBRO_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_DEZEMBRO_ACUM; var FSE_LIMP_HIG_CONFORT_ANO_N_DEZEMBRO_ACUM_MAX_MIN = FSE_LIMP_HIG_CONFORT_ANO_N_DEZEMBRO_ACUM };




    var FSE_LIMP_HIG_CONFORT_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_JANEIRO"])));
    var FSE_LIMP_HIG_CONFORT_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_FEVEREIRO"]))) + FSE_LIMP_HIG_CONFORT_ANO_N_1_JANEIRO_ACUM;
    var FSE_LIMP_HIG_CONFORT_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_MARCO"]))) + FSE_LIMP_HIG_CONFORT_ANO_N_1_FEVEREIRO_ACUM;
    var FSE_LIMP_HIG_CONFORT_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_ABRIL"]))) + FSE_LIMP_HIG_CONFORT_ANO_N_1_MARCO_ACUM;
    var FSE_LIMP_HIG_CONFORT_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_MAIO"]))) + FSE_LIMP_HIG_CONFORT_ANO_N_1_ABRIL_ACUM;
    var FSE_LIMP_HIG_CONFORT_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_JUNHO"]))) + FSE_LIMP_HIG_CONFORT_ANO_N_1_MAIO_ACUM;
    var FSE_LIMP_HIG_CONFORT_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_JULHO"]))) + FSE_LIMP_HIG_CONFORT_ANO_N_1_JUNHO_ACUM;
    var FSE_LIMP_HIG_CONFORT_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_AGOSTO"]))) + FSE_LIMP_HIG_CONFORT_ANO_N_1_JULHO_ACUM;
    var FSE_LIMP_HIG_CONFORT_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_SETEMBRO"]))) + FSE_LIMP_HIG_CONFORT_ANO_N_1_AGOSTO_ACUM;
    var FSE_LIMP_HIG_CONFORT_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_OUTUBRO"]))) + FSE_LIMP_HIG_CONFORT_ANO_N_1_SETEMBRO_ACUM;
    var FSE_LIMP_HIG_CONFORT_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_NOVEMBRO"]))) + FSE_LIMP_HIG_CONFORT_ANO_N_1_OUTUBRO_ACUM;
    var FSE_LIMP_HIG_CONFORT_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_DEZEMBRO"]))) + FSE_LIMP_HIG_CONFORT_ANO_N_1_NOVEMBRO_ACUM;


    var FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_princ= Math.max(
                       FSE_LIMP_HIG_CONFORT_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_LIMP_HIG_CONFORT_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_LIMP_HIG_CONFORT_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_LIMP_HIG_CONFORT_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_LIMP_HIG_CONFORT_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_LIMP_HIG_CONFORT_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_LIMP_HIG_CONFORT_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_LIMP_HIG_CONFORT_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_LIMP_HIG_CONFORT_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_LIMP_HIG_CONFORT_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_LIMP_HIG_CONFORT_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_LIMP_HIG_CONFORT_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_LIMP_HIG_CONFORT_ANO_N_1_JANEIRO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_1_MARCO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_1_ABRIL_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_1_MAIO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_1_JUNHO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_1_JULHO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_1_AGOSTO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_1_SETEMBRO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_1_OUTUBRO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_1_DEZEMBRO_ACUM
                             );
    var FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_princ= Math.min(

                       FSE_LIMP_HIG_CONFORT_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_LIMP_HIG_CONFORT_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_LIMP_HIG_CONFORT_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_LIMP_HIG_CONFORT_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_LIMP_HIG_CONFORT_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_LIMP_HIG_CONFORT_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_LIMP_HIG_CONFORT_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_LIMP_HIG_CONFORT_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_LIMP_HIG_CONFORT_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_LIMP_HIG_CONFORT_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_LIMP_HIG_CONFORT_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_LIMP_HIG_CONFORT_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_LIMP_HIG_CONFORT_ANO_N_1_JANEIRO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_1_MARCO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_1_ABRIL_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_1_MAIO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_1_JUNHO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_1_JULHO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_1_AGOSTO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_1_SETEMBRO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_1_OUTUBRO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_1_DEZEMBRO_ACUM
                           );
    var FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_secon= Math.max(
                       FSE_LIMP_HIG_CONFORT_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_LIMP_HIG_CONFORT_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_LIMP_HIG_CONFORT_ANO_N_MARCO_MAX_MIN ,
                       FSE_LIMP_HIG_CONFORT_ANO_N_ABRIL_MAX_MIN ,
                       FSE_LIMP_HIG_CONFORT_ANO_N_MAIO_MAX_MIN ,
                       FSE_LIMP_HIG_CONFORT_ANO_N_JUNHO_MAX_MIN ,
                       FSE_LIMP_HIG_CONFORT_ANO_N_JULHO_MAX_MIN ,
                       FSE_LIMP_HIG_CONFORT_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_LIMP_HIG_CONFORT_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_LIMP_HIG_CONFORT_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_LIMP_HIG_CONFORT_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_LIMP_HIG_CONFORT_ANO_N_DEZEMBRO_MAX_MIN ,



                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_DEZEMBRO"])))

                            );
    var FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_secon= Math.min(
                       FSE_LIMP_HIG_CONFORT_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_LIMP_HIG_CONFORT_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_LIMP_HIG_CONFORT_ANO_N_MARCO_MAX_MIN ,
                       FSE_LIMP_HIG_CONFORT_ANO_N_ABRIL_MAX_MIN ,
                       FSE_LIMP_HIG_CONFORT_ANO_N_MAIO_MAX_MIN ,
                       FSE_LIMP_HIG_CONFORT_ANO_N_JUNHO_MAX_MIN ,
                       FSE_LIMP_HIG_CONFORT_ANO_N_JULHO_MAX_MIN ,
                       FSE_LIMP_HIG_CONFORT_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_LIMP_HIG_CONFORT_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_LIMP_HIG_CONFORT_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_LIMP_HIG_CONFORT_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_LIMP_HIG_CONFORT_ANO_N_DEZEMBRO_MAX_MIN ,


                           @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_DEZEMBRO"])))

                          );

    //NOTA TA: Aqui trato o minimo e o maximo do eixo principal
    if(Math.abs(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_princ)>=Math.abs(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_princ))
    {
        var FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_princ_=(Math.ceil(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_princ),0).toString().length-1);
        var FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_princ_= (Math.floor(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_princ),0).toString().length-1);
        //alert(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_princ_);
        //alert(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_princ_);
    }
    else
    {
        var FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_princ_=(Math.ceil(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_princ),0).toString().length-1);
        var FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_princ_= (Math.floor(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_princ),0).toString().length-1);}

    //NOTA TA: Aqui trato o minimo e o maximo do eixo secundario

    if(Math.abs(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_secon)>=Math.abs(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_secon))
    {
        var FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_secon_=(Math.ceil(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_secon),0).toString().length-1);
        var FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_secon_= (Math.floor(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_secon),0).toString().length-1);
        //alert(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_secon_);
        //alert(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_secon_);
    }
    else
    {
        var FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_secon_=(Math.ceil(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_secon),0).toString().length-1);
        var FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_secon_= (Math.floor(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_secon),0).toString().length-1);}


    if(Math.abs(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_princ)/Math.abs(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_princ)>=Math.abs(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_secon)/Math.abs(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_secon))
    { if(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_princ > 0 && FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_princ <0 ){ var FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_secon__=(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_princ_*FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_secon_)/FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_princ_;} else { var FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_secon__=FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_secon_;}
        if(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_secon > 0 && FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_secon <0 ){ var FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_princ__=(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_secon__*FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_princ_)/FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_secon_;} else { var FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_princ__=FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_princ_;}}
    else
    {if(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_secon > 0 && FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_secon <0 ){ var FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_princ__=(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_secon_*FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_princ_)/FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_secon_;} else { var FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_princ__=FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_princ_;}
        if(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_princ > 0 && FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_princ <0 ){ var FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_secon__=(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_princ__*FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_secon_)/FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_princ_;} else { var FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_secon__=FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_secon_;}
    }



    if(Math.abs(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_princ)/Math.abs(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_princ)>=Math.abs(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_secon)/Math.abs(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_secon))
    { if(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_princ > 0 && FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_princ <0 ){ var FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_secon__=(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_princ_*FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_secon_)/FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_princ_;} else { var FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_secon__=FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_secon_;}
        if(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_secon > 0 && FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_secon <0 ){ var FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_princ__=(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_secon__*FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_princ_)/FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_secon_;} else { var FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_princ__=FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_princ_;}}
    else
    {if(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_secon > 0 && FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_secon <0 ){ var FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_princ__=(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_secon_*FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_princ_)/FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_secon_;} else { var FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_princ__=FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_princ_;}
        if(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_princ > 0 && FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_princ <0 ){ var FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_secon__=(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_princ__*FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_secon_)/FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_princ_;} else { var FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_secon__=FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_secon_;}
    }



    var GRAFICO_FSE_RESULT_MENSAL_COMP_056=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_056').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_056=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_056, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label: 'Limp. Hig. Conf.(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   data: [
                       FSE_LIMP_HIG_CONFORT_ANO_N_JANEIRO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_FEVEREIRO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_MARCO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_ABRIL_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_MAIO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_JUNHO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_JULHO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_AGOSTO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_SETEMBRO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_OUTUBRO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_NOVEMBRO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_DEZEMBRO_ACUM,
                   ],
                   type: 'line'


               },
                              {
                                  label: 'Limp. Hig. Conf.(ac) ' + ANO_VERSAO_ANTE_,
                                  yAxisID: 'A',
                                  //backgroundColor: 'rgb(201, 10, 10)',
                                  borderColor: 'rgb(0,221,0)',
                                  data: [
                       FSE_LIMP_HIG_CONFORT_ANO_N_1_JANEIRO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_1_MARCO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_1_ABRIL_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_1_MAIO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_1_JUNHO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_1_JULHO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_1_AGOSTO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_1_SETEMBRO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_1_OUTUBRO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_LIMP_HIG_CONFORT_ANO_N_1_DEZEMBRO_ACUM,
                                  ],
                                  type: 'line'


                              },
                {
                    label:  'Limp. Hig. Conf.(m) ' + ANO_VERSAO_REAL_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(250 , 83 , 0, 0.5)',
                    borderColor: 'rgba(250 , 83 , 0, 0.5)',
                    data: [
                  FSE_LIMP_HIG_CONFORT_ANO_N_JANEIRO ,
                  FSE_LIMP_HIG_CONFORT_ANO_N_FEVEREIRO ,
                  FSE_LIMP_HIG_CONFORT_ANO_N_MARCO ,
                  FSE_LIMP_HIG_CONFORT_ANO_N_ABRIL,
                  FSE_LIMP_HIG_CONFORT_ANO_N_MAIO ,
                  FSE_LIMP_HIG_CONFORT_ANO_N_JUNHO ,
                  FSE_LIMP_HIG_CONFORT_ANO_N_JULHO ,
                  FSE_LIMP_HIG_CONFORT_ANO_N_AGOSTO ,
                  FSE_LIMP_HIG_CONFORT_ANO_N_SETEMBRO ,
                  FSE_LIMP_HIG_CONFORT_ANO_N_OUTUBRO ,
                  FSE_LIMP_HIG_CONFORT_ANO_N_NOVEMBRO ,
                  FSE_LIMP_HIG_CONFORT_ANO_N_DEZEMBRO ,
                    ],
                },
                {
                    label:  'Limp. Hig. Conf.(m) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(0,221,0, 0.4)',
                    borderColor: 'rgba(0,221,0, 0.4)',
                    data: [
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_JANEIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_FEVEREIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_MARCO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_ABRIL"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_MAIO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_JUNHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_JULHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_AGOSTO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_SETEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_OUTUBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_NOVEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANO_N_1_DEZEMBRO"]))),
                    ],
                },


            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_LIMP_HIG_CONFORT_MENSAL_1',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                min:  Math.round(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_princ__,0),
                                                max:  Math.round(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString();
                                                }
                                            }
                                        },

                    { id: 'B',
                        type: 'linear',
                        position: 'right',
                        ticks: {
                            min: Math.round(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_secon__,0),
                            max:  Math.round(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_secon__,0),
                            beginAtZero: false,
                            callback: function(value, index, values) {
                                return value.toLocaleString();
                            }
                        }
                    },






                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_057-----------------------------------------------------------*@
<script>

    var IND_VN_ANO_N_JANEIRO_ACUM = IND_VN_ANO_N_JANEIRO;
    var IND_VN_ANO_N_FEVEREIRO_ACUM = IND_VN_ANO_N_FEVEREIRO + IND_VN_ANO_N_JANEIRO_ACUM;
    var IND_VN_ANO_N_MARCO_ACUM = IND_VN_ANO_N_MARCO + IND_VN_ANO_N_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_ABRIL_ACUM = IND_VN_ANO_N_ABRIL + IND_VN_ANO_N_MARCO_ACUM;
    var IND_VN_ANO_N_MAIO_ACUM = IND_VN_ANO_N_MAIO + IND_VN_ANO_N_ABRIL_ACUM;
    var IND_VN_ANO_N_JUNHO_ACUM = IND_VN_ANO_N_JUNHO + IND_VN_ANO_N_MAIO_ACUM;
    var IND_VN_ANO_N_JULHO_ACUM = IND_VN_ANO_N_JULHO + IND_VN_ANO_N_JUNHO_ACUM;
    var IND_VN_ANO_N_AGOSTO_ACUM = IND_VN_ANO_N_AGOSTO + IND_VN_ANO_N_JULHO_ACUM;
    var IND_VN_ANO_N_SETEMBRO_ACUM = IND_VN_ANO_N_SETEMBRO + IND_VN_ANO_N_AGOSTO_ACUM;
    var IND_VN_ANO_N_OUTUBRO_ACUM = IND_VN_ANO_N_OUTUBRO + IND_VN_ANO_N_SETEMBRO_ACUM;
    var IND_VN_ANO_N_NOVEMBRO_ACUM = IND_VN_ANO_N_NOVEMBRO + IND_VN_ANO_N_OUTUBRO_ACUM;
    var IND_VN_ANO_N_DEZEMBRO_ACUM = IND_VN_ANO_N_DEZEMBRO + IND_VN_ANO_N_NOVEMBRO_ACUM;



    var IND_VN_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JANEIRO"])));
    var IND_VN_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_FEVEREIRO"]))) + IND_VN_ANO_N_1_JANEIRO_ACUM;
    var IND_VN_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MARCO"]))) + IND_VN_ANO_N_1_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_ABRIL"]))) + IND_VN_ANO_N_1_MARCO_ACUM;
    var IND_VN_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MAIO"]))) + IND_VN_ANO_N_1_ABRIL_ACUM;
    var IND_VN_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JUNHO"]))) + IND_VN_ANO_N_1_MAIO_ACUM;
    var IND_VN_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JULHO"]))) + IND_VN_ANO_N_1_JUNHO_ACUM;
    var IND_VN_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_AGOSTO"]))) + IND_VN_ANO_N_1_JULHO_ACUM;
    var IND_VN_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_SETEMBRO"]))) + IND_VN_ANO_N_1_AGOSTO_ACUM;
    var IND_VN_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_OUTUBRO"]))) + IND_VN_ANO_N_1_SETEMBRO_ACUM;
    var IND_VN_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_NOVEMBRO"]))) + IND_VN_ANO_N_1_OUTUBRO_ACUM;
    var IND_VN_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_DEZEMBRO"]))) + IND_VN_ANO_N_1_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_JANEIRO_ACUM = 'nd'; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_JANEIRO_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_JANEIRO_ACUM/IND_VN_ANO_N_JANEIRO_ACUM*100; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_FEVEREIRO_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_FEVEREIRO_ACUM/IND_VN_ANO_N_FEVEREIRO_ACUM*100; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_MARCO_ACUM = 'nd'; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_MARCO_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_MARCO_ACUM/IND_VN_ANO_N_MARCO_ACUM*100; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_MARCO_ACUM_MAX_MIN = PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_ABRIL_ACUM = 'nd'; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_ABRIL_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_ABRIL_ACUM/IND_VN_ANO_N_ABRIL_ACUM*100; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_ABRIL_ACUM_MAX_MIN = PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_MAIO_ACUM = 'nd'; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_MAIO_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_MAIO_ACUM/IND_VN_ANO_N_MAIO_ACUM*100; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_MAIO_ACUM_MAX_MIN = PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_JUNHO_ACUM = 'nd'; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_JUNHO_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_JUNHO_ACUM/IND_VN_ANO_N_JUNHO_ACUM*100; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_JUNHO_ACUM_MAX_MIN = PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_JULHO_ACUM = 'nd'; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_JULHO_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_JULHO_ACUM/IND_VN_ANO_N_JULHO_ACUM*100; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_JULHO_ACUM_MAX_MIN = PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_AGOSTO_ACUM = 'nd'; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_AGOSTO_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_AGOSTO_ACUM/IND_VN_ANO_N_AGOSTO_ACUM*100; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_SETEMBRO_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_SETEMBRO_ACUM/IND_VN_ANO_N_SETEMBRO_ACUM*100; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_OUTUBRO_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_OUTUBRO_ACUM/IND_VN_ANO_N_OUTUBRO_ACUM*100; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_NOVEMBRO_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_NOVEMBRO_ACUM/IND_VN_ANO_N_NOVEMBRO_ACUM*100; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_DEZEMBRO_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_DEZEMBRO_ACUM/IND_VN_ANO_N_DEZEMBRO_ACUM*100; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_JANEIRO_ACUM = 'nd'; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_JANEIRO_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_1_JANEIRO_ACUM/IND_VN_ANO_N_1_JANEIRO_ACUM*100; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_FEVEREIRO_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_1_FEVEREIRO_ACUM/IND_VN_ANO_N_1_FEVEREIRO_ACUM*100; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_MARCO_ACUM = 'nd'; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_MARCO_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_1_MARCO_ACUM/IND_VN_ANO_N_1_MARCO_ACUM*100; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_ABRIL_ACUM = 'nd'; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_ABRIL_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_1_ABRIL_ACUM/IND_VN_ANO_N_1_ABRIL_ACUM*100; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_MAIO_ACUM = 'nd'; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_MAIO_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_1_MAIO_ACUM/IND_VN_ANO_N_1_MAIO_ACUM*100; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_JUNHO_ACUM = 'nd'; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_JUNHO_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_1_JUNHO_ACUM/IND_VN_ANO_N_1_JUNHO_ACUM*100; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_JULHO_ACUM = 'nd'; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_JULHO_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_1_JULHO_ACUM/IND_VN_ANO_N_1_JULHO_ACUM*100; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_AGOSTO_ACUM = 'nd'; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_AGOSTO_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_1_AGOSTO_ACUM/IND_VN_ANO_N_1_AGOSTO_ACUM*100; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_SETEMBRO_ACUM = 'nd'; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_SETEMBRO_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_1_SETEMBRO_ACUM/IND_VN_ANO_N_1_SETEMBRO_ACUM*100; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_OUTUBRO_ACUM = 'nd'; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_OUTUBRO_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_1_OUTUBRO_ACUM/IND_VN_ANO_N_1_OUTUBRO_ACUM*100; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_NOVEMBRO_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_1_NOVEMBRO_ACUM/IND_VN_ANO_N_1_NOVEMBRO_ACUM*100; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_DEZEMBRO_ACUM= FSE_LIMP_HIG_CONFORT_ANO_N_1_DEZEMBRO_ACUM/IND_VN_ANO_N_1_DEZEMBRO_ACUM*100; var PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_VN_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JANEIRO_ACUM= ((IND_VN_ANO_N_JANEIRO_ACUM-IND_VN_ANO_N_1_JANEIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_JANEIRO_ACUM))*100; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_FEVEREIRO_ACUM= ((IND_VN_ANO_N_FEVEREIRO_ACUM-IND_VN_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_VN_ANO_N_MARCO_ACUM = 'nd'; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MARCO_ACUM= ((IND_VN_ANO_N_MARCO_ACUM-IND_VN_ANO_N_1_MARCO_ACUM)/Math.abs(IND_VN_ANO_N_1_MARCO_ACUM))*100; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = VAR_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_VN_ANO_N_ABRIL_ACUM = 'nd'; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_ABRIL_ACUM= ((IND_VN_ANO_N_ABRIL_ACUM-IND_VN_ANO_N_1_ABRIL_ACUM)/Math.abs(IND_VN_ANO_N_1_ABRIL_ACUM))*100; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_VN_ANO_N_MAIO_ACUM = 'nd'; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MAIO_ACUM= ((IND_VN_ANO_N_MAIO_ACUM-IND_VN_ANO_N_1_MAIO_ACUM)/Math.abs(IND_VN_ANO_N_1_MAIO_ACUM))*100; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = VAR_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_VN_ANO_N_JUNHO_ACUM = 'nd'; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JUNHO_ACUM= ((IND_VN_ANO_N_JUNHO_ACUM-IND_VN_ANO_N_1_JUNHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JUNHO_ACUM))*100; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_VN_ANO_N_JULHO_ACUM = 'nd'; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JULHO_ACUM= ((IND_VN_ANO_N_JULHO_ACUM-IND_VN_ANO_N_1_JULHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JULHO_ACUM))*100; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_VN_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_AGOSTO_ACUM= ((IND_VN_ANO_N_AGOSTO_ACUM-IND_VN_ANO_N_1_AGOSTO_ACUM)/Math.abs(IND_VN_ANO_N_1_AGOSTO_ACUM))*100; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_SETEMBRO_ACUM= ((IND_VN_ANO_N_SETEMBRO_ACUM-IND_VN_ANO_N_1_SETEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_OUTUBRO_ACUM= ((IND_VN_ANO_N_OUTUBRO_ACUM-IND_VN_ANO_N_1_OUTUBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_NOVEMBRO_ACUM= ((IND_VN_ANO_N_NOVEMBRO_ACUM-IND_VN_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_DEZEMBRO_ACUM= ((IND_VN_ANO_N_DEZEMBRO_ACUM-IND_VN_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_JANEIRO_ACUM= ((FSE_LIMP_HIG_CONFORT_ANO_N_JANEIRO_ACUM-FSE_LIMP_HIG_CONFORT_ANO_N_1_JANEIRO_ACUM)/Math.abs(FSE_LIMP_HIG_CONFORT_ANO_N_1_JANEIRO_ACUM))*100; var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_FSE_LIMP_HIG_CONFORT_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_FEVEREIRO_ACUM= ((FSE_LIMP_HIG_CONFORT_ANO_N_FEVEREIRO_ACUM-FSE_LIMP_HIG_CONFORT_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(FSE_LIMP_HIG_CONFORT_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_FSE_LIMP_HIG_CONFORT_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_MARCO_ACUM = 'nd'; var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_MARCO_ACUM= ((FSE_LIMP_HIG_CONFORT_ANO_N_MARCO_ACUM-FSE_LIMP_HIG_CONFORT_ANO_N_1_MARCO_ACUM)/Math.abs(FSE_LIMP_HIG_CONFORT_ANO_N_1_MARCO_ACUM))*100; var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_MARCO_ACUM_MAX_MIN = VAR_FSE_LIMP_HIG_CONFORT_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_ABRIL_ACUM = 'nd'; var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_ABRIL_ACUM= ((FSE_LIMP_HIG_CONFORT_ANO_N_ABRIL_ACUM-FSE_LIMP_HIG_CONFORT_ANO_N_1_ABRIL_ACUM)/Math.abs(FSE_LIMP_HIG_CONFORT_ANO_N_1_ABRIL_ACUM))*100; var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_FSE_LIMP_HIG_CONFORT_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_MAIO_ACUM = 'nd'; var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_MAIO_ACUM= ((FSE_LIMP_HIG_CONFORT_ANO_N_MAIO_ACUM-FSE_LIMP_HIG_CONFORT_ANO_N_1_MAIO_ACUM)/Math.abs(FSE_LIMP_HIG_CONFORT_ANO_N_1_MAIO_ACUM))*100; var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_MAIO_ACUM_MAX_MIN = VAR_FSE_LIMP_HIG_CONFORT_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_JUNHO_ACUM = 'nd'; var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_JUNHO_ACUM= ((FSE_LIMP_HIG_CONFORT_ANO_N_JUNHO_ACUM-FSE_LIMP_HIG_CONFORT_ANO_N_1_JUNHO_ACUM)/Math.abs(FSE_LIMP_HIG_CONFORT_ANO_N_1_JUNHO_ACUM))*100; var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_FSE_LIMP_HIG_CONFORT_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_JULHO_ACUM = 'nd'; var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_JULHO_ACUM= ((FSE_LIMP_HIG_CONFORT_ANO_N_JULHO_ACUM-FSE_LIMP_HIG_CONFORT_ANO_N_1_JULHO_ACUM)/Math.abs(FSE_LIMP_HIG_CONFORT_ANO_N_1_JULHO_ACUM))*100; var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_JULHO_ACUM_MAX_MIN = VAR_FSE_LIMP_HIG_CONFORT_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_AGOSTO_ACUM= ((FSE_LIMP_HIG_CONFORT_ANO_N_AGOSTO_ACUM-FSE_LIMP_HIG_CONFORT_ANO_N_1_AGOSTO_ACUM)/Math.abs(FSE_LIMP_HIG_CONFORT_ANO_N_1_AGOSTO_ACUM))*100; var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_FSE_LIMP_HIG_CONFORT_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_SETEMBRO_ACUM= ((FSE_LIMP_HIG_CONFORT_ANO_N_SETEMBRO_ACUM-FSE_LIMP_HIG_CONFORT_ANO_N_1_SETEMBRO_ACUM)/Math.abs(FSE_LIMP_HIG_CONFORT_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_FSE_LIMP_HIG_CONFORT_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_OUTUBRO_ACUM= ((FSE_LIMP_HIG_CONFORT_ANO_N_OUTUBRO_ACUM-FSE_LIMP_HIG_CONFORT_ANO_N_1_OUTUBRO_ACUM)/Math.abs(FSE_LIMP_HIG_CONFORT_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_FSE_LIMP_HIG_CONFORT_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_NOVEMBRO_ACUM= ((FSE_LIMP_HIG_CONFORT_ANO_N_NOVEMBRO_ACUM-FSE_LIMP_HIG_CONFORT_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(FSE_LIMP_HIG_CONFORT_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_FSE_LIMP_HIG_CONFORT_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_DEZEMBRO_ACUM= ((FSE_LIMP_HIG_CONFORT_ANO_N_DEZEMBRO_ACUM-FSE_LIMP_HIG_CONFORT_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(FSE_LIMP_HIG_CONFORT_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_FSE_LIMP_HIG_CONFORT_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_FSE_LIMP_HIG_CONFORT_ANO_N_DEZEMBRO_ACUM };

    if( PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_JANEIRO_ACUM > PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_JANEIRO_ACUM) { var  INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_JANEIRO_ACUM=PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_JANEIRO_ACUM ; } else { var  INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_JANEIRO_ACUM=PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_JANEIRO_ACUM ; }
    if( PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_FEVEREIRO_ACUM > PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_FEVEREIRO_ACUM) { var  INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_FEVEREIRO_ACUM=PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_FEVEREIRO_ACUM ; } else { var  INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_FEVEREIRO_ACUM=PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_FEVEREIRO_ACUM ; }
    if( PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_MARCO_ACUM > PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_MARCO_ACUM) { var  INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_MARCO_ACUM=PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_MARCO_ACUM ; } else { var  INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_MARCO_ACUM=PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_MARCO_ACUM ; }
    if( PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_ABRIL_ACUM > PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_ABRIL_ACUM) { var  INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_ABRIL_ACUM=PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_ABRIL_ACUM ; } else { var  INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_ABRIL_ACUM=PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_ABRIL_ACUM ; }
    if( PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_MAIO_ACUM > PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_MAIO_ACUM) { var  INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_MAIO_ACUM=PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_MAIO_ACUM ; } else { var  INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_MAIO_ACUM=PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_MAIO_ACUM ; }
    if( PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_JUNHO_ACUM > PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_JUNHO_ACUM) { var  INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_JUNHO_ACUM=PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_JUNHO_ACUM ; } else { var  INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_JUNHO_ACUM=PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_JUNHO_ACUM ; }
    if( PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_JULHO_ACUM > PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_JULHO_ACUM) { var  INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_JULHO_ACUM=PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_JULHO_ACUM ; } else { var  INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_JULHO_ACUM=PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_JULHO_ACUM ; }
    if( PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_AGOSTO_ACUM > PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_AGOSTO_ACUM) { var  INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_AGOSTO_ACUM=PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_AGOSTO_ACUM ; } else { var  INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_AGOSTO_ACUM=PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_AGOSTO_ACUM ; }
    if( PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_SETEMBRO_ACUM > PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_SETEMBRO_ACUM) { var  INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_SETEMBRO_ACUM=PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_SETEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_SETEMBRO_ACUM=PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_SETEMBRO_ACUM ; }
    if( PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_OUTUBRO_ACUM > PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_OUTUBRO_ACUM) { var  INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_OUTUBRO_ACUM=PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_OUTUBRO_ACUM ; } else { var  INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_OUTUBRO_ACUM=PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_OUTUBRO_ACUM ; }
    if( PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_NOVEMBRO_ACUM > PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_NOVEMBRO_ACUM) { var  INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_NOVEMBRO_ACUM=PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_NOVEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_NOVEMBRO_ACUM=PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_NOVEMBRO_ACUM ; }
    if( PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_DEZEMBRO_ACUM > PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_DEZEMBRO_ACUM) { var  INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_DEZEMBRO_ACUM=PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_DEZEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_DEZEMBRO_ACUM=PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_DEZEMBRO_ACUM ; }



    var fillBetweenLinesPlugin = {
        afterDatasetsDraw: function (chart) {
            var ctx = chart.chart.ctx;
            var xaxis = chart.scales['x-axis-0'];
            var yaxis = chart.scales['y-axis-0'];
            var datasets = chart.data.datasets;
            ctx.save();

            for (var d = 0; d < datasets.length; d++) {
                var dataset = datasets[d];
                if (dataset.fillBetweenSet == undefined) {
                    continue;
                }

                // get meta for both data sets
                var meta1 = chart.getDatasetMeta(d);
                var meta2 = chart.getDatasetMeta(dataset.fillBetweenSet);

                // do not draw fill if one of the datasets is hidden
                if (meta1.hidden || meta2.hidden) continue;

                // create fill areas in pairs
                for (var p = 0; p < meta1.data.length-1;p++) {
                    // if null skip
                    if (dataset.data[p] == null || dataset.data[p+1] == null) continue;

                    ctx.beginPath();

                    // trace line 1
                    var curr = meta1.data[p];
                    var next = meta1.data[p+1];
                    ctx.moveTo(curr._view.x, curr._view.y);
                    ctx.lineTo(curr._view.x, curr._view.y);
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(next._view.x, curr._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        ctx.bezierCurveTo(
                          curr._view.controlPointNextX,
                          curr._view.controlPointNextY,
                          next._view.controlPointPreviousX,
                          next._view.controlPointPreviousY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // connect dataset1 to dataset2
                    var curr = meta2.data[p+1];
                    var next = meta2.data[p];
                    ctx.lineTo(curr._view.x, curr._view.y);

                    // trace BACKWORDS set2 to complete the box
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(curr._view.x, next._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        // reverse bezier
                        ctx.bezierCurveTo(
                          curr._view.controlPointPreviousX,
                          curr._view.controlPointPreviousY,
                          next._view.controlPointNextX,
                          next._view.controlPointNextY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // close the loop and fill with shading
                    ctx.closePath();
                    ctx.fillStyle = dataset.fillBetweenColor || "rgba(0,0,0,0.1)";
                    ctx.fill();
                } // end for p loop
            }
        } // end afterDatasetsDraw
    }; // end fillBetweenLinesPlugin

    Chart.pluginService.register(fillBetweenLinesPlugin);



    var GRAFICO_FSE_RESULT_MENSAL_COMP_057=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_057').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_057=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_057, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label:  'Peso Limp. Hig. Conf.vsVN(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   //borderColor: "#F00",
                   fill: false,
                   steppedLine: false,
                   tension: 0.5,
                   fillBetweenSet: 1,
                   fillBetweenColor: "rgba(0, 221, 0, 0.1)",
                   data: [
                   PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_JANEIRO_ACUM,
                   PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_FEVEREIRO_ACUM,
                   PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_MARCO_ACUM,
                   PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_ABRIL_ACUM,
                   PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_MAIO_ACUM,
                   PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_JUNHO_ACUM,
                   PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_JULHO_ACUM,
                   PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_AGOSTO_ACUM,
                   PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_SETEMBRO_ACUM,
                   PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_OUTUBRO_ACUM,
                   PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_NOVEMBRO_ACUM,
                   PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_DEZEMBRO_ACUM,

                   ],
                   type: 'line'


               },
                {
                    label: 'Peso Limp. Hig. Conf.vsVN(ac) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'A',
                    //backgroundColor: 'rgb(17, 121, 240)',
                    borderColor: 'rgb(0,221,0)',
                    //borderColor: "#00F",
                    fill: false,
                    steppedLine: false,
                    tension: 0.5,
                    data: [
                   PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_JANEIRO_ACUM,
                   PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_FEVEREIRO_ACUM,
                   PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_MARCO_ACUM,
                   PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_ABRIL_ACUM,
                   PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_MAIO_ACUM,
                   PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_JUNHO_ACUM,
                   PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_JULHO_ACUM,
                   PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_AGOSTO_ACUM,
                   PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_SETEMBRO_ACUM,
                   PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_OUTUBRO_ACUM,
                   PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_NOVEMBRO_ACUM,
                   PESO_FSE_LIMP_HIG_CONFORT_VN_ANO_N_1_DEZEMBRO_ACUM,
                    ],
                    type: 'line'
                },
    {
        label: 'Ineficiência',
        yAxisID: 'A',
        backgroundColor: "rgba(255, 0, 0, 0.2)",
        borderColor: 'rgba(255, 255, 255, 0.1)',
        //borderColor: "#0D0",
        fill: false,
        steppedLine: false,
        tension: 0.5,
        fillBetweenSet: 1,
        fillBetweenColor: "rgba(255, 0, 0, 0.2)",
        data: [
    INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_JANEIRO_ACUM,
    INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_FEVEREIRO_ACUM,
    INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_MARCO_ACUM,
    INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_ABRIL_ACUM,
    INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_MAIO_ACUM,
    INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_JUNHO_ACUM,
    INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_JULHO_ACUM,
    INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_AGOSTO_ACUM,
    INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_SETEMBRO_ACUM,
    INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_OUTUBRO_ACUM,
    INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_NOVEMBRO_ACUM,
    INEFICIENCIA_FSE_LIMP_HIG_CONFORT_ANO_N_DEZEMBRO_ACUM,
        ],
        type: 'line'
    },

            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_LIMP_HIG_CONFORT COMP',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                //min:  Math.round(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_min_princ__,0),
                                                //max:  Math.round(FSE_LIMP_HIG_CONFORT_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString()+ "%";
                                                }
                                            }
                                        },







                ]
            }
        },

    });

</script>


@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_058-----------------------------------------------------------*@
<script>

    if(@ViewData["MES_ACUM_REAL"]<1){ var IND_VN_ANO_N_JANEIRO = 'nd'; var IND_VN_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JANEIRO"]))); var IND_VN_ANO_N_JANEIRO_MAX_MIN = IND_VN_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var IND_VN_ANO_N_FEVEREIRO = 'nd'; var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_FEVEREIRO"]))); var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = IND_VN_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var IND_VN_ANO_N_MARCO = 'nd'; var IND_VN_ANO_N_MARCO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MARCO"]))); var IND_VN_ANO_N_MARCO_MAX_MIN = IND_VN_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var IND_VN_ANO_N_ABRIL = 'nd'; var IND_VN_ANO_N_ABRIL_MAX_MIN = 0;  } else { var IND_VN_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_ABRIL"]))); var IND_VN_ANO_N_ABRIL_MAX_MIN = IND_VN_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var IND_VN_ANO_N_MAIO = 'nd'; var IND_VN_ANO_N_MAIO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MAIO"]))); var IND_VN_ANO_N_MAIO_MAX_MIN = IND_VN_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var IND_VN_ANO_N_JUNHO = 'nd'; var IND_VN_ANO_N_JUNHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JUNHO"]))); var IND_VN_ANO_N_JUNHO_MAX_MIN = IND_VN_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var IND_VN_ANO_N_JULHO = 'nd'; var IND_VN_ANO_N_JULHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JULHO"]))); var IND_VN_ANO_N_JULHO_MAX_MIN = IND_VN_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var IND_VN_ANO_N_AGOSTO = 'nd'; var IND_VN_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_AGOSTO"]))); var IND_VN_ANO_N_AGOSTO_MAX_MIN = IND_VN_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var IND_VN_ANO_N_SETEMBRO = 'nd'; var IND_VN_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_SETEMBRO"]))); var IND_VN_ANO_N_SETEMBRO_MAX_MIN = IND_VN_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var IND_VN_ANO_N_OUTUBRO = 'nd'; var IND_VN_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_OUTUBRO"]))); var IND_VN_ANO_N_OUTUBRO_MAX_MIN = IND_VN_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var IND_VN_ANO_N_NOVEMBRO = 'nd'; var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_NOVEMBRO"]))); var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = IND_VN_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var IND_VN_ANO_N_DEZEMBRO = 'nd'; var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_DEZEMBRO"]))); var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = IND_VN_ANO_N_DEZEMBRO };

    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_OUTROS_SERV_DIVERSOS_ANO_N_JANEIRO = 'nd'; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_DIVERSOS_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_JANEIRO"]))); var FSE_OUTROS_SERV_DIVERSOS_ANO_N_JANEIRO_MAX_MIN = FSE_OUTROS_SERV_DIVERSOS_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_OUTROS_SERV_DIVERSOS_ANO_N_FEVEREIRO = 'nd'; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_DIVERSOS_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_FEVEREIRO"]))); var FSE_OUTROS_SERV_DIVERSOS_ANO_N_FEVEREIRO_MAX_MIN = FSE_OUTROS_SERV_DIVERSOS_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_OUTROS_SERV_DIVERSOS_ANO_N_MARCO = 'nd'; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_MARCO_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_DIVERSOS_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_MARCO"]))); var FSE_OUTROS_SERV_DIVERSOS_ANO_N_MARCO_MAX_MIN = FSE_OUTROS_SERV_DIVERSOS_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_OUTROS_SERV_DIVERSOS_ANO_N_ABRIL = 'nd'; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_ABRIL_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_DIVERSOS_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_ABRIL"]))); var FSE_OUTROS_SERV_DIVERSOS_ANO_N_ABRIL_MAX_MIN = FSE_OUTROS_SERV_DIVERSOS_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_OUTROS_SERV_DIVERSOS_ANO_N_MAIO = 'nd'; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_MAIO_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_DIVERSOS_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_MAIO"]))); var FSE_OUTROS_SERV_DIVERSOS_ANO_N_MAIO_MAX_MIN = FSE_OUTROS_SERV_DIVERSOS_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_OUTROS_SERV_DIVERSOS_ANO_N_JUNHO = 'nd'; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_JUNHO_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_DIVERSOS_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_JUNHO"]))); var FSE_OUTROS_SERV_DIVERSOS_ANO_N_JUNHO_MAX_MIN = FSE_OUTROS_SERV_DIVERSOS_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_OUTROS_SERV_DIVERSOS_ANO_N_JULHO = 'nd'; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_JULHO_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_DIVERSOS_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_JULHO"]))); var FSE_OUTROS_SERV_DIVERSOS_ANO_N_JULHO_MAX_MIN = FSE_OUTROS_SERV_DIVERSOS_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_OUTROS_SERV_DIVERSOS_ANO_N_AGOSTO = 'nd'; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_DIVERSOS_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_AGOSTO"]))); var FSE_OUTROS_SERV_DIVERSOS_ANO_N_AGOSTO_MAX_MIN = FSE_OUTROS_SERV_DIVERSOS_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_OUTROS_SERV_DIVERSOS_ANO_N_SETEMBRO = 'nd'; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_DIVERSOS_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_SETEMBRO"]))); var FSE_OUTROS_SERV_DIVERSOS_ANO_N_SETEMBRO_MAX_MIN = FSE_OUTROS_SERV_DIVERSOS_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_OUTROS_SERV_DIVERSOS_ANO_N_OUTUBRO = 'nd'; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_DIVERSOS_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_OUTUBRO"]))); var FSE_OUTROS_SERV_DIVERSOS_ANO_N_OUTUBRO_MAX_MIN = FSE_OUTROS_SERV_DIVERSOS_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_OUTROS_SERV_DIVERSOS_ANO_N_NOVEMBRO = 'nd'; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_DIVERSOS_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_NOVEMBRO"]))); var FSE_OUTROS_SERV_DIVERSOS_ANO_N_NOVEMBRO_MAX_MIN = FSE_OUTROS_SERV_DIVERSOS_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_OUTROS_SERV_DIVERSOS_ANO_N_DEZEMBRO = 'nd'; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_DIVERSOS_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_DEZEMBRO"]))); var FSE_OUTROS_SERV_DIVERSOS_ANO_N_DEZEMBRO_MAX_MIN = FSE_OUTROS_SERV_DIVERSOS_ANO_N_DEZEMBRO };


    var FSE_OUTROS_SERV_DIVERSOS_ANO_N_JANEIRO_ACUM = FSE_OUTROS_SERV_DIVERSOS_ANO_N_JANEIRO;
    var FSE_OUTROS_SERV_DIVERSOS_ANO_N_FEVEREIRO_ACUM = FSE_OUTROS_SERV_DIVERSOS_ANO_N_FEVEREIRO + FSE_OUTROS_SERV_DIVERSOS_ANO_N_JANEIRO_ACUM;
    var FSE_OUTROS_SERV_DIVERSOS_ANO_N_MARCO_ACUM = FSE_OUTROS_SERV_DIVERSOS_ANO_N_MARCO + FSE_OUTROS_SERV_DIVERSOS_ANO_N_FEVEREIRO_ACUM;
    var FSE_OUTROS_SERV_DIVERSOS_ANO_N_ABRIL_ACUM = FSE_OUTROS_SERV_DIVERSOS_ANO_N_ABRIL + FSE_OUTROS_SERV_DIVERSOS_ANO_N_MARCO_ACUM;
    var FSE_OUTROS_SERV_DIVERSOS_ANO_N_MAIO_ACUM = FSE_OUTROS_SERV_DIVERSOS_ANO_N_MAIO + FSE_OUTROS_SERV_DIVERSOS_ANO_N_ABRIL_ACUM;
    var FSE_OUTROS_SERV_DIVERSOS_ANO_N_JUNHO_ACUM = FSE_OUTROS_SERV_DIVERSOS_ANO_N_JUNHO + FSE_OUTROS_SERV_DIVERSOS_ANO_N_MAIO_ACUM;
    var FSE_OUTROS_SERV_DIVERSOS_ANO_N_JULHO_ACUM = FSE_OUTROS_SERV_DIVERSOS_ANO_N_JULHO + FSE_OUTROS_SERV_DIVERSOS_ANO_N_JUNHO_ACUM;
    var FSE_OUTROS_SERV_DIVERSOS_ANO_N_AGOSTO_ACUM = FSE_OUTROS_SERV_DIVERSOS_ANO_N_AGOSTO + FSE_OUTROS_SERV_DIVERSOS_ANO_N_JULHO_ACUM;
    var FSE_OUTROS_SERV_DIVERSOS_ANO_N_SETEMBRO_ACUM = FSE_OUTROS_SERV_DIVERSOS_ANO_N_SETEMBRO + FSE_OUTROS_SERV_DIVERSOS_ANO_N_AGOSTO_ACUM;
    var FSE_OUTROS_SERV_DIVERSOS_ANO_N_OUTUBRO_ACUM = FSE_OUTROS_SERV_DIVERSOS_ANO_N_OUTUBRO + FSE_OUTROS_SERV_DIVERSOS_ANO_N_SETEMBRO_ACUM;
    var FSE_OUTROS_SERV_DIVERSOS_ANO_N_NOVEMBRO_ACUM = FSE_OUTROS_SERV_DIVERSOS_ANO_N_NOVEMBRO + FSE_OUTROS_SERV_DIVERSOS_ANO_N_OUTUBRO_ACUM;
    var FSE_OUTROS_SERV_DIVERSOS_ANO_N_DEZEMBRO_ACUM = FSE_OUTROS_SERV_DIVERSOS_ANO_N_DEZEMBRO + FSE_OUTROS_SERV_DIVERSOS_ANO_N_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_OUTROS_SERV_DIVERSOS_ANO_N_JANEIRO_ACUM = 'nd'; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_DIVERSOS_ANO_N_JANEIRO_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_JANEIRO_ACUM; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_JANEIRO_ACUM_MAX_MIN = FSE_OUTROS_SERV_DIVERSOS_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_OUTROS_SERV_DIVERSOS_ANO_N_FEVEREIRO_ACUM = 'nd'; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_DIVERSOS_ANO_N_FEVEREIRO_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_FEVEREIRO_ACUM; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = FSE_OUTROS_SERV_DIVERSOS_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_OUTROS_SERV_DIVERSOS_ANO_N_MARCO_ACUM = 'nd'; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_DIVERSOS_ANO_N_MARCO_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_MARCO_ACUM; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_MARCO_ACUM_MAX_MIN = FSE_OUTROS_SERV_DIVERSOS_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_OUTROS_SERV_DIVERSOS_ANO_N_ABRIL_ACUM = 'nd'; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_DIVERSOS_ANO_N_ABRIL_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_ABRIL_ACUM; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_ABRIL_ACUM_MAX_MIN = FSE_OUTROS_SERV_DIVERSOS_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_OUTROS_SERV_DIVERSOS_ANO_N_MAIO_ACUM = 'nd'; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_DIVERSOS_ANO_N_MAIO_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_MAIO_ACUM; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_MAIO_ACUM_MAX_MIN = FSE_OUTROS_SERV_DIVERSOS_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_OUTROS_SERV_DIVERSOS_ANO_N_JUNHO_ACUM = 'nd'; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_DIVERSOS_ANO_N_JUNHO_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_JUNHO_ACUM; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_JUNHO_ACUM_MAX_MIN = FSE_OUTROS_SERV_DIVERSOS_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_OUTROS_SERV_DIVERSOS_ANO_N_JULHO_ACUM = 'nd'; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_DIVERSOS_ANO_N_JULHO_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_JULHO_ACUM; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_JULHO_ACUM_MAX_MIN = FSE_OUTROS_SERV_DIVERSOS_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_OUTROS_SERV_DIVERSOS_ANO_N_AGOSTO_ACUM = 'nd'; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_DIVERSOS_ANO_N_AGOSTO_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_AGOSTO_ACUM; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_AGOSTO_ACUM_MAX_MIN = FSE_OUTROS_SERV_DIVERSOS_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_OUTROS_SERV_DIVERSOS_ANO_N_SETEMBRO_ACUM = 'nd'; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_DIVERSOS_ANO_N_SETEMBRO_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_SETEMBRO_ACUM; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_SETEMBRO_ACUM_MAX_MIN = FSE_OUTROS_SERV_DIVERSOS_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_OUTROS_SERV_DIVERSOS_ANO_N_OUTUBRO_ACUM = 'nd'; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_DIVERSOS_ANO_N_OUTUBRO_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_OUTUBRO_ACUM; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_OUTUBRO_ACUM_MAX_MIN = FSE_OUTROS_SERV_DIVERSOS_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_OUTROS_SERV_DIVERSOS_ANO_N_NOVEMBRO_ACUM = 'nd'; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_DIVERSOS_ANO_N_NOVEMBRO_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_NOVEMBRO_ACUM; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = FSE_OUTROS_SERV_DIVERSOS_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_OUTROS_SERV_DIVERSOS_ANO_N_DEZEMBRO_ACUM = 'nd'; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_DIVERSOS_ANO_N_DEZEMBRO_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_DEZEMBRO_ACUM; var FSE_OUTROS_SERV_DIVERSOS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = FSE_OUTROS_SERV_DIVERSOS_ANO_N_DEZEMBRO_ACUM };




    var FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JANEIRO"])));
    var FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_FEVEREIRO"]))) + FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JANEIRO_ACUM;
    var FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_MARCO"]))) + FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_FEVEREIRO_ACUM;
    var FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_ABRIL"]))) + FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_MARCO_ACUM;
    var FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_MAIO"]))) + FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_ABRIL_ACUM;
    var FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JUNHO"]))) + FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_MAIO_ACUM;
    var FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JULHO"]))) + FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JUNHO_ACUM;
    var FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_AGOSTO"]))) + FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JULHO_ACUM;
    var FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_SETEMBRO"]))) + FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_AGOSTO_ACUM;
    var FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_OUTUBRO"]))) + FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_SETEMBRO_ACUM;
    var FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_NOVEMBRO"]))) + FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_OUTUBRO_ACUM;
    var FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_DEZEMBRO"]))) + FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_NOVEMBRO_ACUM;


    var FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_princ= Math.max(
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JANEIRO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_MARCO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_ABRIL_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_MAIO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JUNHO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JULHO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_AGOSTO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_SETEMBRO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_OUTUBRO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_DEZEMBRO_ACUM
                             );
    var FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_princ= Math.min(

                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JANEIRO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_MARCO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_ABRIL_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_MAIO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JUNHO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JULHO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_AGOSTO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_SETEMBRO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_OUTUBRO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_DEZEMBRO_ACUM
                           );
    var FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_secon= Math.max(
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_MARCO_MAX_MIN ,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_ABRIL_MAX_MIN ,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_MAIO_MAX_MIN ,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_JUNHO_MAX_MIN ,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_JULHO_MAX_MIN ,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_DEZEMBRO_MAX_MIN ,



                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_DEZEMBRO"])))

                            );
    var FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_secon= Math.min(
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_MARCO_MAX_MIN ,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_ABRIL_MAX_MIN ,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_MAIO_MAX_MIN ,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_JUNHO_MAX_MIN ,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_JULHO_MAX_MIN ,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_DEZEMBRO_MAX_MIN ,


                           @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_DEZEMBRO"])))

                          );

    //NOTA TA: Aqui trato o minimo e o maximo do eixo principal
    if(Math.abs(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_princ)>=Math.abs(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_princ))
    {
        var FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_princ_=(Math.ceil(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_princ),0).toString().length-1);
        var FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_princ_= (Math.floor(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_princ),0).toString().length-1);
        //alert(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_princ_);
        //alert(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_princ_);
    }
    else
    {
        var FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_princ_=(Math.ceil(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_princ),0).toString().length-1);
        var FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_princ_= (Math.floor(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_princ),0).toString().length-1);}

    //NOTA TA: Aqui trato o minimo e o maximo do eixo secundario

    if(Math.abs(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_secon)>=Math.abs(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_secon))
    {
        var FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_secon_=(Math.ceil(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_secon),0).toString().length-1);
        var FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_secon_= (Math.floor(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_secon),0).toString().length-1);
        //alert(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_secon_);
        //alert(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_secon_);
    }
    else
    {
        var FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_secon_=(Math.ceil(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_secon),0).toString().length-1);
        var FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_secon_= (Math.floor(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_secon),0).toString().length-1);}


    if(Math.abs(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_princ)/Math.abs(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_princ)>=Math.abs(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_secon)/Math.abs(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_secon))
    { if(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_princ > 0 && FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_princ <0 ){ var FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_secon__=(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_princ_*FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_secon_)/FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_princ_;} else { var FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_secon__=FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_secon_;}
        if(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_secon > 0 && FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_secon <0 ){ var FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_princ__=(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_secon__*FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_princ_)/FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_secon_;} else { var FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_princ__=FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_princ_;}}
    else
    {if(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_secon > 0 && FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_secon <0 ){ var FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_princ__=(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_secon_*FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_princ_)/FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_secon_;} else { var FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_princ__=FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_princ_;}
        if(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_princ > 0 && FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_princ <0 ){ var FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_secon__=(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_princ__*FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_secon_)/FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_princ_;} else { var FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_secon__=FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_secon_;}
    }



    if(Math.abs(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_princ)/Math.abs(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_princ)>=Math.abs(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_secon)/Math.abs(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_secon))
    { if(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_princ > 0 && FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_princ <0 ){ var FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_secon__=(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_princ_*FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_secon_)/FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_princ_;} else { var FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_secon__=FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_secon_;}
        if(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_secon > 0 && FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_secon <0 ){ var FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_princ__=(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_secon__*FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_princ_)/FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_secon_;} else { var FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_princ__=FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_princ_;}}
    else
    {if(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_secon > 0 && FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_secon <0 ){ var FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_princ__=(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_secon_*FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_princ_)/FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_secon_;} else { var FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_princ__=FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_princ_;}
        if(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_princ > 0 && FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_princ <0 ){ var FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_secon__=(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_princ__*FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_secon_)/FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_princ_;} else { var FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_secon__=FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_secon_;}
    }



    var GRAFICO_FSE_RESULT_MENSAL_COMP_058=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_058').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_058=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_058, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label: 'Outr. Serv. Div.(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   data: [
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_JANEIRO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_FEVEREIRO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_MARCO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_ABRIL_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_MAIO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_JUNHO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_JULHO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_AGOSTO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_SETEMBRO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_OUTUBRO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_NOVEMBRO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_DEZEMBRO_ACUM,
                   ],
                   type: 'line'


               },
                              {
                                  label: 'Outr. Serv. Div.(ac) ' + ANO_VERSAO_ANTE_,
                                  yAxisID: 'A',
                                  //backgroundColor: 'rgb(201, 10, 10)',
                                  borderColor: 'rgb(0,221,0)',
                                  data: [
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JANEIRO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_MARCO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_ABRIL_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_MAIO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JUNHO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JULHO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_AGOSTO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_SETEMBRO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_OUTUBRO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_DEZEMBRO_ACUM,
                                  ],
                                  type: 'line'


                              },
                {
                    label:  'Outr. Serv. Div.(m) ' + ANO_VERSAO_REAL_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(250 , 83 , 0, 0.5)',
                    borderColor: 'rgba(250 , 83 , 0, 0.5)',
                    data: [
                  FSE_OUTROS_SERV_DIVERSOS_ANO_N_JANEIRO ,
                  FSE_OUTROS_SERV_DIVERSOS_ANO_N_FEVEREIRO ,
                  FSE_OUTROS_SERV_DIVERSOS_ANO_N_MARCO ,
                  FSE_OUTROS_SERV_DIVERSOS_ANO_N_ABRIL,
                  FSE_OUTROS_SERV_DIVERSOS_ANO_N_MAIO ,
                  FSE_OUTROS_SERV_DIVERSOS_ANO_N_JUNHO ,
                  FSE_OUTROS_SERV_DIVERSOS_ANO_N_JULHO ,
                  FSE_OUTROS_SERV_DIVERSOS_ANO_N_AGOSTO ,
                  FSE_OUTROS_SERV_DIVERSOS_ANO_N_SETEMBRO ,
                  FSE_OUTROS_SERV_DIVERSOS_ANO_N_OUTUBRO ,
                  FSE_OUTROS_SERV_DIVERSOS_ANO_N_NOVEMBRO ,
                  FSE_OUTROS_SERV_DIVERSOS_ANO_N_DEZEMBRO ,
                    ],
                },
                {
                    label:  'Outr. Serv. Div.(m) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(0,221,0, 0.4)',
                    borderColor: 'rgba(0,221,0, 0.4)',
                    data: [
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JANEIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_FEVEREIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_MARCO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_ABRIL"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_MAIO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JUNHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JULHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_AGOSTO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_SETEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_OUTUBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_NOVEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_DEZEMBRO"]))),
                    ],
                },


            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_OUTROS_SERV_DIVERSOS_MENSAL_1',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                min:  Math.round(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_princ__,0),
                                                max:  Math.round(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString();
                                                }
                                            }
                                        },

                    { id: 'B',
                        type: 'linear',
                        position: 'right',
                        ticks: {
                            min: Math.round(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_secon__,0),
                            max:  Math.round(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_secon__,0),
                            beginAtZero: false,
                            callback: function(value, index, values) {
                                return value.toLocaleString();
                            }
                        }
                    },






                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_059-----------------------------------------------------------*@
<script>

    var IND_VN_ANO_N_JANEIRO_ACUM = IND_VN_ANO_N_JANEIRO;
    var IND_VN_ANO_N_FEVEREIRO_ACUM = IND_VN_ANO_N_FEVEREIRO + IND_VN_ANO_N_JANEIRO_ACUM;
    var IND_VN_ANO_N_MARCO_ACUM = IND_VN_ANO_N_MARCO + IND_VN_ANO_N_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_ABRIL_ACUM = IND_VN_ANO_N_ABRIL + IND_VN_ANO_N_MARCO_ACUM;
    var IND_VN_ANO_N_MAIO_ACUM = IND_VN_ANO_N_MAIO + IND_VN_ANO_N_ABRIL_ACUM;
    var IND_VN_ANO_N_JUNHO_ACUM = IND_VN_ANO_N_JUNHO + IND_VN_ANO_N_MAIO_ACUM;
    var IND_VN_ANO_N_JULHO_ACUM = IND_VN_ANO_N_JULHO + IND_VN_ANO_N_JUNHO_ACUM;
    var IND_VN_ANO_N_AGOSTO_ACUM = IND_VN_ANO_N_AGOSTO + IND_VN_ANO_N_JULHO_ACUM;
    var IND_VN_ANO_N_SETEMBRO_ACUM = IND_VN_ANO_N_SETEMBRO + IND_VN_ANO_N_AGOSTO_ACUM;
    var IND_VN_ANO_N_OUTUBRO_ACUM = IND_VN_ANO_N_OUTUBRO + IND_VN_ANO_N_SETEMBRO_ACUM;
    var IND_VN_ANO_N_NOVEMBRO_ACUM = IND_VN_ANO_N_NOVEMBRO + IND_VN_ANO_N_OUTUBRO_ACUM;
    var IND_VN_ANO_N_DEZEMBRO_ACUM = IND_VN_ANO_N_DEZEMBRO + IND_VN_ANO_N_NOVEMBRO_ACUM;



    var IND_VN_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JANEIRO"])));
    var IND_VN_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_FEVEREIRO"]))) + IND_VN_ANO_N_1_JANEIRO_ACUM;
    var IND_VN_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MARCO"]))) + IND_VN_ANO_N_1_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_ABRIL"]))) + IND_VN_ANO_N_1_MARCO_ACUM;
    var IND_VN_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MAIO"]))) + IND_VN_ANO_N_1_ABRIL_ACUM;
    var IND_VN_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JUNHO"]))) + IND_VN_ANO_N_1_MAIO_ACUM;
    var IND_VN_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JULHO"]))) + IND_VN_ANO_N_1_JUNHO_ACUM;
    var IND_VN_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_AGOSTO"]))) + IND_VN_ANO_N_1_JULHO_ACUM;
    var IND_VN_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_SETEMBRO"]))) + IND_VN_ANO_N_1_AGOSTO_ACUM;
    var IND_VN_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_OUTUBRO"]))) + IND_VN_ANO_N_1_SETEMBRO_ACUM;
    var IND_VN_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_NOVEMBRO"]))) + IND_VN_ANO_N_1_OUTUBRO_ACUM;
    var IND_VN_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_DEZEMBRO"]))) + IND_VN_ANO_N_1_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_JANEIRO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_JANEIRO_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_JANEIRO_ACUM/IND_VN_ANO_N_JANEIRO_ACUM*100; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_FEVEREIRO_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_FEVEREIRO_ACUM/IND_VN_ANO_N_FEVEREIRO_ACUM*100; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_MARCO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_MARCO_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_MARCO_ACUM/IND_VN_ANO_N_MARCO_ACUM*100; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_MARCO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_ABRIL_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_ABRIL_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_ABRIL_ACUM/IND_VN_ANO_N_ABRIL_ACUM*100; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_ABRIL_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_MAIO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_MAIO_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_MAIO_ACUM/IND_VN_ANO_N_MAIO_ACUM*100; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_MAIO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_JUNHO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_JUNHO_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_JUNHO_ACUM/IND_VN_ANO_N_JUNHO_ACUM*100; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_JUNHO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_JULHO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_JULHO_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_JULHO_ACUM/IND_VN_ANO_N_JULHO_ACUM*100; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_JULHO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_AGOSTO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_AGOSTO_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_AGOSTO_ACUM/IND_VN_ANO_N_AGOSTO_ACUM*100; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_SETEMBRO_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_SETEMBRO_ACUM/IND_VN_ANO_N_SETEMBRO_ACUM*100; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_OUTUBRO_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_OUTUBRO_ACUM/IND_VN_ANO_N_OUTUBRO_ACUM*100; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_NOVEMBRO_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_NOVEMBRO_ACUM/IND_VN_ANO_N_NOVEMBRO_ACUM*100; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_DEZEMBRO_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_DEZEMBRO_ACUM/IND_VN_ANO_N_DEZEMBRO_ACUM*100; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_JANEIRO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_JANEIRO_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JANEIRO_ACUM/IND_VN_ANO_N_1_JANEIRO_ACUM*100; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_FEVEREIRO_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_FEVEREIRO_ACUM/IND_VN_ANO_N_1_FEVEREIRO_ACUM*100; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_MARCO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_MARCO_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_MARCO_ACUM/IND_VN_ANO_N_1_MARCO_ACUM*100; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_ABRIL_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_ABRIL_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_ABRIL_ACUM/IND_VN_ANO_N_1_ABRIL_ACUM*100; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_MAIO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_MAIO_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_MAIO_ACUM/IND_VN_ANO_N_1_MAIO_ACUM*100; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_JUNHO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_JUNHO_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JUNHO_ACUM/IND_VN_ANO_N_1_JUNHO_ACUM*100; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_JULHO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_JULHO_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JULHO_ACUM/IND_VN_ANO_N_1_JULHO_ACUM*100; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_AGOSTO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_AGOSTO_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_AGOSTO_ACUM/IND_VN_ANO_N_1_AGOSTO_ACUM*100; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_SETEMBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_SETEMBRO_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_SETEMBRO_ACUM/IND_VN_ANO_N_1_SETEMBRO_ACUM*100; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_OUTUBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_OUTUBRO_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_OUTUBRO_ACUM/IND_VN_ANO_N_1_OUTUBRO_ACUM*100; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_NOVEMBRO_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_NOVEMBRO_ACUM/IND_VN_ANO_N_1_NOVEMBRO_ACUM*100; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_DEZEMBRO_ACUM= FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_DEZEMBRO_ACUM/IND_VN_ANO_N_1_DEZEMBRO_ACUM*100; var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_VN_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JANEIRO_ACUM= ((IND_VN_ANO_N_JANEIRO_ACUM-IND_VN_ANO_N_1_JANEIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_JANEIRO_ACUM))*100; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_FEVEREIRO_ACUM= ((IND_VN_ANO_N_FEVEREIRO_ACUM-IND_VN_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_VN_ANO_N_MARCO_ACUM = 'nd'; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MARCO_ACUM= ((IND_VN_ANO_N_MARCO_ACUM-IND_VN_ANO_N_1_MARCO_ACUM)/Math.abs(IND_VN_ANO_N_1_MARCO_ACUM))*100; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = VAR_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_VN_ANO_N_ABRIL_ACUM = 'nd'; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_ABRIL_ACUM= ((IND_VN_ANO_N_ABRIL_ACUM-IND_VN_ANO_N_1_ABRIL_ACUM)/Math.abs(IND_VN_ANO_N_1_ABRIL_ACUM))*100; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_VN_ANO_N_MAIO_ACUM = 'nd'; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MAIO_ACUM= ((IND_VN_ANO_N_MAIO_ACUM-IND_VN_ANO_N_1_MAIO_ACUM)/Math.abs(IND_VN_ANO_N_1_MAIO_ACUM))*100; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = VAR_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_VN_ANO_N_JUNHO_ACUM = 'nd'; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JUNHO_ACUM= ((IND_VN_ANO_N_JUNHO_ACUM-IND_VN_ANO_N_1_JUNHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JUNHO_ACUM))*100; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_VN_ANO_N_JULHO_ACUM = 'nd'; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JULHO_ACUM= ((IND_VN_ANO_N_JULHO_ACUM-IND_VN_ANO_N_1_JULHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JULHO_ACUM))*100; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_VN_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_AGOSTO_ACUM= ((IND_VN_ANO_N_AGOSTO_ACUM-IND_VN_ANO_N_1_AGOSTO_ACUM)/Math.abs(IND_VN_ANO_N_1_AGOSTO_ACUM))*100; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_SETEMBRO_ACUM= ((IND_VN_ANO_N_SETEMBRO_ACUM-IND_VN_ANO_N_1_SETEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_OUTUBRO_ACUM= ((IND_VN_ANO_N_OUTUBRO_ACUM-IND_VN_ANO_N_1_OUTUBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_NOVEMBRO_ACUM= ((IND_VN_ANO_N_NOVEMBRO_ACUM-IND_VN_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_DEZEMBRO_ACUM= ((IND_VN_ANO_N_DEZEMBRO_ACUM-IND_VN_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_JANEIRO_ACUM= ((FSE_OUTROS_SERV_DIVERSOS_ANO_N_JANEIRO_ACUM-FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JANEIRO_ACUM)/Math.abs(FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JANEIRO_ACUM))*100; var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_FEVEREIRO_ACUM= ((FSE_OUTROS_SERV_DIVERSOS_ANO_N_FEVEREIRO_ACUM-FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_MARCO_ACUM = 'nd'; var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_MARCO_ACUM= ((FSE_OUTROS_SERV_DIVERSOS_ANO_N_MARCO_ACUM-FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_MARCO_ACUM)/Math.abs(FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_MARCO_ACUM))*100; var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_MARCO_ACUM_MAX_MIN = VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_ABRIL_ACUM = 'nd'; var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_ABRIL_ACUM= ((FSE_OUTROS_SERV_DIVERSOS_ANO_N_ABRIL_ACUM-FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_ABRIL_ACUM)/Math.abs(FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_ABRIL_ACUM))*100; var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_MAIO_ACUM = 'nd'; var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_MAIO_ACUM= ((FSE_OUTROS_SERV_DIVERSOS_ANO_N_MAIO_ACUM-FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_MAIO_ACUM)/Math.abs(FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_MAIO_ACUM))*100; var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_MAIO_ACUM_MAX_MIN = VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_JUNHO_ACUM = 'nd'; var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_JUNHO_ACUM= ((FSE_OUTROS_SERV_DIVERSOS_ANO_N_JUNHO_ACUM-FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JUNHO_ACUM)/Math.abs(FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JUNHO_ACUM))*100; var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_JULHO_ACUM = 'nd'; var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_JULHO_ACUM= ((FSE_OUTROS_SERV_DIVERSOS_ANO_N_JULHO_ACUM-FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JULHO_ACUM)/Math.abs(FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_JULHO_ACUM))*100; var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_JULHO_ACUM_MAX_MIN = VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_AGOSTO_ACUM= ((FSE_OUTROS_SERV_DIVERSOS_ANO_N_AGOSTO_ACUM-FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_AGOSTO_ACUM)/Math.abs(FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_AGOSTO_ACUM))*100; var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_SETEMBRO_ACUM= ((FSE_OUTROS_SERV_DIVERSOS_ANO_N_SETEMBRO_ACUM-FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_SETEMBRO_ACUM)/Math.abs(FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_OUTUBRO_ACUM= ((FSE_OUTROS_SERV_DIVERSOS_ANO_N_OUTUBRO_ACUM-FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_OUTUBRO_ACUM)/Math.abs(FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_NOVEMBRO_ACUM= ((FSE_OUTROS_SERV_DIVERSOS_ANO_N_NOVEMBRO_ACUM-FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_DEZEMBRO_ACUM= ((FSE_OUTROS_SERV_DIVERSOS_ANO_N_DEZEMBRO_ACUM-FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(FSE_OUTROS_SERV_DIVERSOS_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_FSE_OUTROS_SERV_DIVERSOS_ANO_N_DEZEMBRO_ACUM };

    if( PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_JANEIRO_ACUM > PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_JANEIRO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_JANEIRO_ACUM=PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_JANEIRO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_JANEIRO_ACUM=PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_JANEIRO_ACUM ; }
    if( PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_FEVEREIRO_ACUM > PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_FEVEREIRO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_FEVEREIRO_ACUM=PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_FEVEREIRO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_FEVEREIRO_ACUM=PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_FEVEREIRO_ACUM ; }
    if( PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_MARCO_ACUM > PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_MARCO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_MARCO_ACUM=PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_MARCO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_MARCO_ACUM=PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_MARCO_ACUM ; }
    if( PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_ABRIL_ACUM > PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_ABRIL_ACUM) { var  INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_ABRIL_ACUM=PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_ABRIL_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_ABRIL_ACUM=PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_ABRIL_ACUM ; }
    if( PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_MAIO_ACUM > PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_MAIO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_MAIO_ACUM=PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_MAIO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_MAIO_ACUM=PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_MAIO_ACUM ; }
    if( PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_JUNHO_ACUM > PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_JUNHO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_JUNHO_ACUM=PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_JUNHO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_JUNHO_ACUM=PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_JUNHO_ACUM ; }
    if( PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_JULHO_ACUM > PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_JULHO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_JULHO_ACUM=PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_JULHO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_JULHO_ACUM=PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_JULHO_ACUM ; }
    if( PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_AGOSTO_ACUM > PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_AGOSTO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_AGOSTO_ACUM=PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_AGOSTO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_AGOSTO_ACUM=PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_AGOSTO_ACUM ; }
    if( PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_SETEMBRO_ACUM > PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_SETEMBRO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_SETEMBRO_ACUM=PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_SETEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_SETEMBRO_ACUM=PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_SETEMBRO_ACUM ; }
    if( PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_OUTUBRO_ACUM > PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_OUTUBRO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_OUTUBRO_ACUM=PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_OUTUBRO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_OUTUBRO_ACUM=PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_OUTUBRO_ACUM ; }
    if( PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_NOVEMBRO_ACUM > PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_NOVEMBRO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_NOVEMBRO_ACUM=PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_NOVEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_NOVEMBRO_ACUM=PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_NOVEMBRO_ACUM ; }
    if( PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_DEZEMBRO_ACUM > PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_DEZEMBRO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_DEZEMBRO_ACUM=PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_DEZEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_DEZEMBRO_ACUM=PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_DEZEMBRO_ACUM ; }



    var fillBetweenLinesPlugin = {
        afterDatasetsDraw: function (chart) {
            var ctx = chart.chart.ctx;
            var xaxis = chart.scales['x-axis-0'];
            var yaxis = chart.scales['y-axis-0'];
            var datasets = chart.data.datasets;
            ctx.save();

            for (var d = 0; d < datasets.length; d++) {
                var dataset = datasets[d];
                if (dataset.fillBetweenSet == undefined) {
                    continue;
                }

                // get meta for both data sets
                var meta1 = chart.getDatasetMeta(d);
                var meta2 = chart.getDatasetMeta(dataset.fillBetweenSet);

                // do not draw fill if one of the datasets is hidden
                if (meta1.hidden || meta2.hidden) continue;

                // create fill areas in pairs
                for (var p = 0; p < meta1.data.length-1;p++) {
                    // if null skip
                    if (dataset.data[p] == null || dataset.data[p+1] == null) continue;

                    ctx.beginPath();

                    // trace line 1
                    var curr = meta1.data[p];
                    var next = meta1.data[p+1];
                    ctx.moveTo(curr._view.x, curr._view.y);
                    ctx.lineTo(curr._view.x, curr._view.y);
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(next._view.x, curr._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        ctx.bezierCurveTo(
                          curr._view.controlPointNextX,
                          curr._view.controlPointNextY,
                          next._view.controlPointPreviousX,
                          next._view.controlPointPreviousY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // connect dataset1 to dataset2
                    var curr = meta2.data[p+1];
                    var next = meta2.data[p];
                    ctx.lineTo(curr._view.x, curr._view.y);

                    // trace BACKWORDS set2 to complete the box
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(curr._view.x, next._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        // reverse bezier
                        ctx.bezierCurveTo(
                          curr._view.controlPointPreviousX,
                          curr._view.controlPointPreviousY,
                          next._view.controlPointNextX,
                          next._view.controlPointNextY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // close the loop and fill with shading
                    ctx.closePath();
                    ctx.fillStyle = dataset.fillBetweenColor || "rgba(0,0,0,0.1)";
                    ctx.fill();
                } // end for p loop
            }
        } // end afterDatasetsDraw
    }; // end fillBetweenLinesPlugin

    Chart.pluginService.register(fillBetweenLinesPlugin);



    var GRAFICO_FSE_RESULT_MENSAL_COMP_059=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_059').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_059=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_059, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label:  'Peso Outr. Serv. Div.vsVN(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   //borderColor: "#F00",
                   fill: false,
                   steppedLine: false,
                   tension: 0.5,
                   fillBetweenSet: 1,
                   fillBetweenColor: "rgba(0, 221, 0, 0.1)",
                   data: [
                   PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_JANEIRO_ACUM,
                   PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_FEVEREIRO_ACUM,
                   PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_MARCO_ACUM,
                   PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_ABRIL_ACUM,
                   PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_MAIO_ACUM,
                   PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_JUNHO_ACUM,
                   PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_JULHO_ACUM,
                   PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_AGOSTO_ACUM,
                   PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_SETEMBRO_ACUM,
                   PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_OUTUBRO_ACUM,
                   PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_NOVEMBRO_ACUM,
                   PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_DEZEMBRO_ACUM,

                   ],
                   type: 'line'


               },
                {
                    label: 'Peso Outr. Serv. Div.vsVN(ac) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'A',
                    //backgroundColor: 'rgb(17, 121, 240)',
                    borderColor: 'rgb(0,221,0)',
                    //borderColor: "#00F",
                    fill: false,
                    steppedLine: false,
                    tension: 0.5,
                    data: [
                   PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_JANEIRO_ACUM,
                   PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_FEVEREIRO_ACUM,
                   PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_MARCO_ACUM,
                   PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_ABRIL_ACUM,
                   PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_MAIO_ACUM,
                   PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_JUNHO_ACUM,
                   PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_JULHO_ACUM,
                   PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_AGOSTO_ACUM,
                   PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_SETEMBRO_ACUM,
                   PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_OUTUBRO_ACUM,
                   PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_NOVEMBRO_ACUM,
                   PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANO_N_1_DEZEMBRO_ACUM,
                    ],
                    type: 'line'
                },
    {
        label: 'Ineficiência',
        yAxisID: 'A',
        backgroundColor: "rgba(255, 0, 0, 0.2)",
        borderColor: 'rgba(255, 255, 255, 0.1)',
        //borderColor: "#0D0",
        fill: false,
        steppedLine: false,
        tension: 0.5,
        fillBetweenSet: 1,
        fillBetweenColor: "rgba(255, 0, 0, 0.2)",
        data: [
    INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_JANEIRO_ACUM,
    INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_FEVEREIRO_ACUM,
    INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_MARCO_ACUM,
    INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_ABRIL_ACUM,
    INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_MAIO_ACUM,
    INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_JUNHO_ACUM,
    INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_JULHO_ACUM,
    INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_AGOSTO_ACUM,
    INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_SETEMBRO_ACUM,
    INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_OUTUBRO_ACUM,
    INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_NOVEMBRO_ACUM,
    INEFICIENCIA_FSE_OUTROS_SERV_DIVERSOS_ANO_N_DEZEMBRO_ACUM,
        ],
        type: 'line'
    },

            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_OUTROS_SERV_DIVERSOS COMP',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                //min:  Math.round(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_min_princ__,0),
                                                //max:  Math.round(FSE_OUTROS_SERV_DIVERSOS_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString()+ "%";
                                                }
                                            }
                                        },







                ]
            }
        },

    });

</script>







