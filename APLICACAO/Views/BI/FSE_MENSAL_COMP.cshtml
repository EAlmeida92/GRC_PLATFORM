@{
    ViewBag.Title = "FSE_MENSAL_COMP";
}




<style id="ccs_style"  type="text/css">
    .webgrid-table
    {
        font-family: "Trebuchet MS" , Arial, Helvetica, sans-serif;
        font-size: 13px;
        width: 100%;
        display: table;
        border: solid 1px #FFFFFF;
        background-color: white;
        text-align: right;
        
    }
    .webgrid-table td, th
    {
        
        border: solid 1px #FFFFFF;
        padding: 3px 7px 2px;
         text-align: right;
    }
    .webgrid-header
    {
      padding: 6px 5px;
      text-align: center;
      background-color: #e8eef4;
      border-bottom: 2px solid #A4A4A4;
      height: 60px;

    }
        .webgrid-header_
    {
      padding: 6px 5px;
      text-align: center;
      background-color: #e8eef4;
      border-bottom: 2px solid #A4A4A4;
      height: 30px;

    }
    .webgrid-footer
    {
    }
    .webgrid-row-style
    {
        text-align: right;
        padding: 3px 7px 2px;
    }
    .webgrid-rubrica
    {
         text-align: right;
        background-color: #EAF2D3;
        padding: 3px 7px 2px;

    }
        .webgrid-total
    {
         text-align: right;
        background-color: #EAF2D3;
        padding: 3px 7px 2px;
    }
.webgrid-selected-row
    {
        text-align: right;   
        border: solid 1px #FFFFFF;
        padding: 3px 7px 2px;
    }
.Webgrid_col_data
    {
  text-align: center;
    }
    .input {
     width: 50px;
     height: 25px;

        text-align: justify;
        background-color: #EAF2D3;
        padding: 3px 4px 2px;
       text-overflow:clip;
    
    }
        .GRAVAR
    {
        font-family: "Trebuchet MS" , Arial, Helvetica, sans-serif;
        font-size: 15px;
        color:#eaf2d3;
         background-color: #d2d4f1        
    }
    .campocalc_resultado  {
         background-color: #E3DFFF;
         text-align: center;
    }
    .oculta_na_impressao {
                
        height: 30px;
        display:none;
    }
       
             .titulos_mapas {
        background-color: #7F7F7F;
        text-align: center;
        color: #FFFFFF;
        vertical-align: middle;
        font-size: 22px;
        font-weight: bold;
    } 
    .page-breaker {
   display: block;
   clear: both;
   page-break-after: always;
}
    /*NOTA table::after CSS param TOOLTIPS*/

.tooltip {
  position: relative;
  /*display: inline-block;*/
  /*border-bottom: 1px dotted black;*/
}

.tooltip .tooltiptext {
  visibility: hidden;
  /*width: 125px;*/
  width: 240px;
  background-color: #555;
  color: #fff;
  text-align: center;
  border-radius: 6px;
  padding: 5px 0;
  position: absolute;
  z-index: 1;
  bottom: 125%;
  left: 50%;
  /*margin-left: -60px;*/
  margin-left: -10px;
  opacity: 0;
  transition: opacity 1s;
}

.tooltip .tooltiptext::after {
  content: "";
  position: absolute;
  top: 100%;
  /*left: 50%;*/
  left: 5%;
  margin-left: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: #555 transparent transparent transparent;
}

.tooltip:hover .tooltiptext {
  visibility: visible;
  opacity: 1;
}

.calcular
{display:none;
 width:100%;
 text-align:center;
 
}
/*NOTA table::AQUI DEFINO  O  STYLE DOS BOTÕES*/

.btn:focus, .btn::-moz-focus-inner{
  outline:none;
  border:none;
}
.btn{
  font-family: arial;
  font-size:14px;
  text-transform: uppercase;
  font-weight:700;
  border:none;
  padding:10px;
  cursor: pointer;
  display:inline-block;
  text-decoration: none;
  width: auto;
}
.btn-green{
  background:green;
  color:#fff;
   border:#fff;
  box-shadow:0 5px 0 #006000 /*rgba(0, 96, 0, 0.6)*/;
    width: auto;
}
.btn-green:hover{
  background:#006000;
  box-shadow:0 5px 0 #003f00;
}
.btn-blue{
  background:rgba(0,0,139, 0.6);
  color:#fff;
   border:#fff;
  box-shadow:0 5px 0 rgba(0,0,59, 0.6);
    width: auto;
}
.btn-blue:hover{
  background:#2153a2;
  box-shadow:0 5px 0 #00003B;
}
.btn-purple{
  background:purple; opacity:0.6;
  border:#fff;
  color:#fff;
  box-shadow:0 5px 0 #670167 /*rgba(103, 1, 103, 0.6)*/;
    width: auto;
}
.btn-purple:hover{
  background:#670167;
  box-shadow:0 5px 0 #470047;
}
.btn-red{
  background:red; opacity:0.7;
  border:#fff;
  color:#fff;
  box-shadow:0 5px 0 #d20000 /*rgba(210, 0, 0, 0.6)*/;
    width: auto;
}
.btn-red:hover{
  background:#d20000;
  box-shadow:0 5px 0 #b00000;
}
.btn-orange{
  background:rgb(204 , 112 , 0); opacity:0.6;
  border:#fff;
  color:#fff;
  box-shadow:0 5px 0 rgb(204 , 112 , 0)/*rgba(210, 0, 0, 0.6)*/;
    width: auto;
}
.btn-orange:hover{
  background:rgb(204 , 112 , 0);
  box-shadow:0 5px 0 rgb(204 , 112 , 0);
}
.btn-brown{
  background:rgb(102, 0, 0); opacity:0.6;
  border:#fff;
  color:#fff;
  box-shadow:0 5px 0 rgb(102, 0, 0)/*rgba(210, 0, 0, 0.6)*/;
    width: auto;
}
.btn-brown:hover{
  background:rgb(102, 0, 0);
  box-shadow:0 5px 0 rgb(102, 0, 0);
}
.btn-green:active,.btn-blue:active, .btn-purple:active, .btn-red:active, .btn-orange:active, .btn-brown:active{
  position:relative;
  top:5px;
  box-shadow:inherit;
}
        option {
       
        direction: rtl; 

    }
    </style>

@{
    var ANO_VERSAO_REAL = @ViewData["ANO_VERSAO_REAL"];
    var ANO_VERSAO_ANTE = @ViewData["ANO_VERSAO_ANTE"];
    var MES_ACUM_REAL = @ViewData["MES_ACUM_REAL"];        
    var MES_ACUM_ANTE = @ViewData["MES_ACUM_ANTE"];
    var MES_INI_PER_REAL = @ViewData["MES_INI_PER_REAL"];
    var MES_INI_PER_ANTE = @ViewData["MES_INI_PER_ANTE"];
    var MES_FIN_PER_REAL = @ViewData["MES_FIN_PER_REAL"];
    var MES_FIN_PER_ANTE = @ViewData["MES_FIN_PER_ANTE"]; 
}
   

    <h2 id="fse_mensal_comp_titulo_tabela">FSE´S - COMPARATIVO @Html.Raw((string.Format("{0:N}", @ANO_VERSAO_REAL))) vs @Html.Raw((string.Format("{0:N}", @ANO_VERSAO_ANTE)))</h2>
<p></p>
<p></p>
<table id="botoes">
    <tr>
        <td>
            <button type="button" name="Mostrar" id="Mostrar" class="btn-brown"> Configurar Intervalos de Análise</button>
        </td>
        <td style="display:none">
            <iframe id="txtArea1" style="display:none"></iframe>
        </td>
        <td>
            <button type=button id="btnExport1" class="btn-blue" style="display:none" onclick="fnExcelReport('FSE_MENSAL_COMP', 'Export HTML Table to Excel')">Excel</button>
        </td>
    </tr>
</table><p></p>
<p></p>
<p></p>
<div class="calcular">
    <h3 style="background-color:blueviolet; color:white;">Estamos a calcular os dados desta tabela. Iremos refrescando a página até que toda a tabela esteja calculada. </h3>
    <p style="padding-bottom:5px"></p>
</div>
<table id="FSE_MENSAL_COMP" class="webgrid-table" border="1">
    <thead>
        <tr class="oculta_na_impressao">
            <td class="webgrid-header_" style="background-color:#efeeef; border-color:#efeeef;text-align:right;vertical-align:middle; padding-bottom:1px">Período a analisar - Mês Inicial : </td>
            <td id="grid_mes_ini_ano_n_td" class="webgrid-header_" style="background-color:#efeeef; border-color:#efeeef; text-align:right; padding-left:35px"></td>
            <td id="grid_mes_ini_ano_n-1_td" class="webgrid-header_" style="background-color:#efeeef; border-color:#efeeef; padding-left:35px"></td>
            <td class="webgrid-header_" colspan="6" style="background-color:#efeeef; border-color:#efeeef"> </td>


        </tr>
        <tr class="oculta_na_impressao" style="background-color:#efeeef; border-color:#efeeef">
            <td class="webgrid-header_" style="background-color:#efeeef; border-color:#efeeef; text-align:right;vertical-align:bottom;vertical-align:middle; padding-bottom:1px">Período a analisar - Mês Final: </td>
            <td id="grid_mes_fin_ano_n_td" class="webgrid-header_" style="background-color:#efeeef; border-color:#efeeef; padding-left:35px"></td>
            <td id="grid_mes_fin_ano_n-1_td" class="webgrid-header_" style="background-color:#efeeef; border-color:#efeeef; padding-left:35px"></td>
            <td class="webgrid-header_" colspan="2" style="background-color:#efeeef; border-color:#efeeef; text-align:right;vertical-align:middle; padding-bottom:1px">Acumulado de Jan até ao Mês: </td>
            <td id="grid_mes_acum_ano_n-1_td" class="webgrid-header_" style="background-color:#efeeef; border-color:#efeeef; padding-left:35px"></td>
            <td id="grid_mes_acum_ano_n_td" class="webgrid-header_" style="background-color:#efeeef; border-color:#efeeef; padding-left:35px"></td>
            <td class="webgrid-header_" colspan="2" style="background-color:#efeeef; border-color:#efeeef"> </td>
        </tr>
        <tr>
            <td class="webgrid-header"> Rúbrica </td>
            <td class="webgrid-header">
                Per de
                @{if (MES_INI_PER_REAL.Equals("1"))
                    { <text>Jan</text>;
                    }
                    else
                    {
                        if (MES_INI_PER_REAL.Equals("2"))
                        { <text>Fev</text>;
                        }
                        else
                        {
                            if (MES_INI_PER_REAL.Equals("3"))
                            { <text>Mar</text>;
                            }
                            else
                            {
                                if (MES_INI_PER_REAL.Equals("4"))
                                { <text>Abr</text>;
                                }
                                else
                                {
                                    if (MES_INI_PER_REAL.Equals("5"))
                                    { <text>Mai</text>;
                                    }
                                    else
                                    {
                                        if (MES_INI_PER_REAL.Equals("6"))
                                        { <text>Jun</text>;
                                        }
                                        else
                                        {
                                            if (MES_INI_PER_REAL.Equals("7"))
                                            { <text>Jul</text>;
                                            }
                                            else
                                            {
                                                if (MES_INI_PER_REAL.Equals("8"))
                                                { <text>Ago</text>;
                                                }
                                                else
                                                {
                                                    if (MES_INI_PER_REAL.Equals("9"))
                                                    { <text>Set</text>;
                                                    }
                                                    else
                                                    {
                                                        if (MES_INI_PER_REAL.Equals("10"))
                                                        { <text>Out</text>;
                                                        }
                                                        else
                                                        {
                                                            if (MES_INI_PER_REAL.Equals("11"))
                                                            { <text>Nov</text>;
                                                            }
                                                            else
                                                            {
                                                                if (MES_INI_PER_REAL.Equals("12"))
                                                                { <text>Dez</text>;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }}  a
                @{if (MES_FIN_PER_REAL.Equals("1"))
                    { <text>Jan</text>;
                    }
                    else
                    {
                        if (MES_FIN_PER_REAL.Equals("2"))
                        { <text>Fev</text>;
                        }
                        else
                        {
                            if (MES_FIN_PER_REAL.Equals("3"))
                            { <text>Mar</text>;
                            }
                            else
                            {
                                if (MES_FIN_PER_REAL.Equals("4"))
                                { <text>Abr</text>;
                                }
                                else
                                {
                                    if (MES_FIN_PER_REAL.Equals("5"))
                                    { <text>Mai</text>;
                                    }
                                    else
                                    {
                                        if (MES_FIN_PER_REAL.Equals("6"))
                                        { <text>Jun</text>;
                                        }
                                        else
                                        {
                                            if (MES_FIN_PER_REAL.Equals("7"))
                                            { <text>Jul</text>;
                                            }
                                            else
                                            {
                                                if (MES_FIN_PER_REAL.Equals("8"))
                                                { <text>Ago</text>;
                                                }
                                                else
                                                {
                                                    if (MES_FIN_PER_REAL.Equals("9"))
                                                    { <text>Set</text>;
                                                    }
                                                    else
                                                    {
                                                        if (MES_FIN_PER_REAL.Equals("10"))
                                                        { <text>Out</text>;
                                                        }
                                                        else
                                                        {
                                                            if (MES_FIN_PER_REAL.Equals("11"))
                                                            { <text>Nov</text>;
                                                            }
                                                            else
                                                            {
                                                                if (MES_FIN_PER_REAL.Equals("12"))
                                                                { <text>Dez</text>;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }}
                de @Html.Raw((string.Format("{0:N}", @ANO_VERSAO_REAL)))
            </td>
            <td class="webgrid-header">
                Per de
                @{if (MES_INI_PER_ANTE.Equals("1"))
                    { <text>Jan</text>;
                    }
                    else
                    {
                        if (MES_INI_PER_ANTE.Equals("2"))
                        { <text>Fev</text>;
                        }
                        else
                        {
                            if (MES_INI_PER_ANTE.Equals("3"))
                            { <text>Mar</text>;
                            }
                            else
                            {
                                if (MES_INI_PER_ANTE.Equals("4"))
                                { <text>Abr</text>;
                                }
                                else
                                {
                                    if (MES_INI_PER_ANTE.Equals("5"))
                                    { <text>Mai</text>;
                                    }
                                    else
                                    {
                                        if (MES_INI_PER_ANTE.Equals("6"))
                                        { <text>Jun</text>;
                                        }
                                        else
                                        {
                                            if (MES_INI_PER_ANTE.Equals("7"))
                                            { <text>Jul</text>;
                                            }
                                            else
                                            {
                                                if (MES_INI_PER_ANTE.Equals("8"))
                                                { <text>Ago</text>;
                                                }
                                                else
                                                {
                                                    if (MES_INI_PER_ANTE.Equals("9"))
                                                    { <text>Set</text>;
                                                    }
                                                    else
                                                    {
                                                        if (MES_INI_PER_ANTE.Equals("10"))
                                                        { <text>Out</text>;
                                                        }
                                                        else
                                                        {
                                                            if (MES_INI_PER_ANTE.Equals("11"))
                                                            { <text>Nov</text>;
                                                            }
                                                            else
                                                            {
                                                                if (MES_INI_PER_ANTE.Equals("12"))
                                                                { <text>Dez</text>;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }}  a
                @{if (MES_FIN_PER_ANTE.Equals("1"))
                    { <text>Jan</text>;
                    }
                    else
                    {
                        if (MES_FIN_PER_ANTE.Equals("2"))
                        { <text>Fev</text>;
                        }
                        else
                        {
                            if (MES_FIN_PER_ANTE.Equals("3"))
                            { <text>Mar</text>;
                            }
                            else
                            {
                                if (MES_FIN_PER_ANTE.Equals("4"))
                                { <text>Abr</text>;
                                }
                                else
                                {
                                    if (MES_FIN_PER_ANTE.Equals("5"))
                                    { <text>Mai</text>;
                                    }
                                    else
                                    {
                                        if (MES_FIN_PER_ANTE.Equals("6"))
                                        { <text>Jun</text>;
                                        }
                                        else
                                        {
                                            if (MES_FIN_PER_ANTE.Equals("7"))
                                            { <text>Jul</text>;
                                            }
                                            else
                                            {
                                                if (MES_FIN_PER_ANTE.Equals("8"))
                                                { <text>Ago</text>;
                                                }
                                                else
                                                {
                                                    if (MES_FIN_PER_ANTE.Equals("9"))
                                                    { <text>Set</text>;
                                                    }
                                                    else
                                                    {
                                                        if (MES_FIN_PER_ANTE.Equals("10"))
                                                        { <text>Out</text>;
                                                        }
                                                        else
                                                        {
                                                            if (MES_FIN_PER_ANTE.Equals("11"))
                                                            { <text>Nov</text>;
                                                            }
                                                            else
                                                            {
                                                                if (MES_FIN_PER_ANTE.Equals("12"))
                                                                { <text>Dez</text>;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }}
                de @Html.Raw((string.Format("{0:N}", @ANO_VERSAO_ANTE)))
            </td>
            <td class="webgrid-header"> Var Per %  </td>
            <td class="webgrid-header"> Total  do ano @Html.Raw((string.Format("{0:N}", @ANO_VERSAO_ANTE)))  </td>
            <td class="webgrid-header">
                Acum de Jan a
                @{if (MES_ACUM_ANTE.Equals("1"))
                    { <text>Jan</text>;
                    }
                    else
                    {
                        if (MES_ACUM_ANTE.Equals("2"))
                        { <text>Fev</text>;
                        }
                        else
                        {
                            if (MES_ACUM_ANTE.Equals("3"))
                            { <text>Mar</text>;
                            }
                            else
                            {
                                if (MES_ACUM_ANTE.Equals("4"))
                                { <text>Abr</text>;
                                }
                                else
                                {
                                    if (MES_ACUM_ANTE.Equals("5"))
                                    { <text>Mai</text>;
                                    }
                                    else
                                    {
                                        if (MES_ACUM_ANTE.Equals("6"))
                                        { <text>Jun</text>;
                                        }
                                        else
                                        {
                                            if (MES_ACUM_ANTE.Equals("7"))
                                            { <text>Jul</text>;
                                            }
                                            else
                                            {
                                                if (MES_ACUM_ANTE.Equals("8"))
                                                { <text>Ago</text>;
                                                }
                                                else
                                                {
                                                    if (MES_ACUM_ANTE.Equals("9"))
                                                    { <text>Set</text>;
                                                    }
                                                    else
                                                    {
                                                        if (MES_ACUM_ANTE.Equals("10"))
                                                        { <text>Out</text>;
                                                        }
                                                        else
                                                        {
                                                            if (MES_ACUM_ANTE.Equals("11"))
                                                            { <text>Nov</text>;
                                                            }
                                                            else
                                                            {
                                                                if (MES_ACUM_ANTE.Equals("12"))
                                                                { <text>Dez</text>;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }}
                de @Html.Raw((string.Format("{0:N}", @ANO_VERSAO_ANTE)))
            </td>
            <td class="webgrid-header">
                Acum de Jan a
                @{if (MES_ACUM_REAL.Equals("1"))
                    { <text>Jan</text>;
                    }
                    else
                    {
                        if (MES_ACUM_REAL.Equals("2"))
                        { <text>Fev</text>;
                        }
                        else
                        {
                            if (MES_ACUM_REAL.Equals("3"))
                            { <text>Mar</text>;
                            }
                            else
                            {
                                if (MES_ACUM_REAL.Equals("4"))
                                { <text>Abr</text>;
                                }
                                else
                                {
                                    if (MES_ACUM_REAL.Equals("5"))
                                    { <text>Mai</text>;
                                    }
                                    else
                                    {
                                        if (MES_ACUM_REAL.Equals("6"))
                                        { <text>Jun</text>;
                                        }
                                        else
                                        {
                                            if (MES_ACUM_REAL.Equals("7"))
                                            { <text>Jul</text>;
                                            }
                                            else
                                            {
                                                if (MES_ACUM_REAL.Equals("8"))
                                                { <text>Ago</text>;
                                                }
                                                else
                                                {
                                                    if (MES_ACUM_REAL.Equals("9"))
                                                    { <text>Set</text>;
                                                    }
                                                    else
                                                    {
                                                        if (MES_ACUM_REAL.Equals("10"))
                                                        { <text>Out</text>;
                                                        }
                                                        else
                                                        {
                                                            if (MES_ACUM_REAL.Equals("11"))
                                                            { <text>Nov</text>;
                                                            }
                                                            else
                                                            {
                                                                if (MES_ACUM_REAL.Equals("12"))
                                                                { <text>Dez</text>;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }}
                de @Html.Raw((string.Format("{0:N}", @ANO_VERSAO_REAL)))
            </td>
            <td class="webgrid-header"> Var Acum % </td>
            <td class="webgrid-header"> Var Acum </td>

        </tr>
    </thead>


<tr>
    <td  class="webgrid-rubrica"> FORNECIMENTOS E SERVIÇOS EXTERNOS                         </td> 
    <td class="webgrid-rubrica" id="FSE_REAL_PER" itemid="FSE_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_REAL_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_ANTE_PER" itemid="FSE_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_COMP_PER_P" >  @if (@ViewData["FSE_REAL_PER"].Equals("calc") || @ViewData["FSE_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_REAL_PER = Convert.ToInt32(@ViewData["FSE_REAL_PER"]); decimal FSE_ANTE_PER = Convert.ToInt32(@ViewData["FSE_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((FSE_REAL_PER / FSE_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td class="webgrid-rubrica" id="FSE_ANTE_TOTAL" itemid="FSE_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_ANTE_TOTAL"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_ANTE_ACUM" itemid="FSE_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_ANTE_ACUM"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_REAL_ACUM" itemid="FSE_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="FSE_COMP_ACUM_P" > @if (@ViewData["FSE_REAL_ACUM"].Equals("calc") || @ViewData["FSE_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_REAL_ACUM"]); decimal FSE_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_REAL_ACUM / FSE_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="FSE_COMP_ACUM_B" > @if (@ViewData["FSE_REAL_ACUM"].Equals("calc") || @ViewData["FSE_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_REAL_ACUM"]); decimal FSE_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_REAL_ACUM - FSE_ANTE_ACUM)))))} } </td>
 </tr>

<tr>
    <td  class="webgrid-rubrica"> Subcontratos                           </td> 
    <td class="webgrid-rubrica" id="FSE_SUBCONTRATOS_REAL_PER" itemid="FSE_SUBCONTRATOS_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_SUBCONTRATOS_REAL_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_SUBCONTRATOS_ANTE_PER" itemid="FSE_SUBCONTRATOS_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_SUBCONTRATOS_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_SUBCONTRATOS_COMP_PER_P" >  @if (@ViewData["FSE_SUBCONTRATOS_REAL_PER"].Equals("calc") || @ViewData["FSE_SUBCONTRATOS_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_SUBCONTRATOS_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_SUBCONTRATOS_REAL_PER = Convert.ToInt32(@ViewData["FSE_SUBCONTRATOS_REAL_PER"]); decimal FSE_SUBCONTRATOS_ANTE_PER = Convert.ToInt32(@ViewData["FSE_SUBCONTRATOS_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((FSE_SUBCONTRATOS_REAL_PER / FSE_SUBCONTRATOS_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td class="webgrid-rubrica" id="FSE_SUBCONTRATOS_ANTE_TOTAL" itemid="FSE_SUBCONTRATOS_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_SUBCONTRATOS_ANTE_TOTAL"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_SUBCONTRATOS_ANTE_ACUM" itemid="FSE_SUBCONTRATOS_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_SUBCONTRATOS_ANTE_ACUM"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_SUBCONTRATOS_REAL_ACUM" itemid="FSE_SUBCONTRATOS_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_SUBCONTRATOS_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="FSE_SUBCONTRATOS_COMP_ACUM_P" > @if (@ViewData["FSE_SUBCONTRATOS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_SUBCONTRATOS_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_SUBCONTRATOS_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_SUBCONTRATOS_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_SUBCONTRATOS_REAL_ACUM"]); decimal FSE_SUBCONTRATOS_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_SUBCONTRATOS_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_SUBCONTRATOS_REAL_ACUM / FSE_SUBCONTRATOS_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="FSE_SUBCONTRATOS_COMP_ACUM_B" > @if (@ViewData["FSE_SUBCONTRATOS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_SUBCONTRATOS_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_SUBCONTRATOS_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_SUBCONTRATOS_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_SUBCONTRATOS_REAL_ACUM"]); decimal FSE_SUBCONTRATOS_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_SUBCONTRATOS_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_SUBCONTRATOS_REAL_ACUM - FSE_SUBCONTRATOS_ANTE_ACUM)))))} } </td>
 </tr>
<tr>
    <td  class="webgrid-rubrica"> Serviços Especializados                           </td> 
    <td class="webgrid-rubrica" id="FSE_SERV_ESPECIAL_REAL_PER" itemid="FSE_SERV_ESPECIAL_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_SERV_ESPECIAL_REAL_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_SERV_ESPECIAL_ANTE_PER" itemid="FSE_SERV_ESPECIAL_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_SERV_ESPECIAL_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_SERV_ESPECIAL_COMP_PER_P" >  @if (@ViewData["FSE_SERV_ESPECIAL_REAL_PER"].Equals("calc") || @ViewData["FSE_SERV_ESPECIAL_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_SERV_ESPECIAL_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_SERV_ESPECIAL_REAL_PER = Convert.ToInt32(@ViewData["FSE_SERV_ESPECIAL_REAL_PER"]); decimal FSE_SERV_ESPECIAL_ANTE_PER = Convert.ToInt32(@ViewData["FSE_SERV_ESPECIAL_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((FSE_SERV_ESPECIAL_REAL_PER / FSE_SERV_ESPECIAL_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td class="webgrid-rubrica" id="FSE_SERV_ESPECIAL_ANTE_TOTAL" itemid="FSE_SERV_ESPECIAL_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_SERV_ESPECIAL_ANTE_TOTAL"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_SERV_ESPECIAL_ANTE_ACUM" itemid="FSE_SERV_ESPECIAL_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_SERV_ESPECIAL_ANTE_ACUM"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_SERV_ESPECIAL_REAL_ACUM" itemid="FSE_SERV_ESPECIAL_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_SERV_ESPECIAL_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="FSE_SERV_ESPECIAL_COMP_ACUM_P" > @if (@ViewData["FSE_SERV_ESPECIAL_REAL_ACUM"].Equals("calc") || @ViewData["FSE_SERV_ESPECIAL_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_SERV_ESPECIAL_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_SERV_ESPECIAL_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_SERV_ESPECIAL_REAL_ACUM"]); decimal FSE_SERV_ESPECIAL_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_SERV_ESPECIAL_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_SERV_ESPECIAL_REAL_ACUM / FSE_SERV_ESPECIAL_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="FSE_SERV_ESPECIAL_COMP_ACUM_B" > @if (@ViewData["FSE_SERV_ESPECIAL_REAL_ACUM"].Equals("calc") || @ViewData["FSE_SERV_ESPECIAL_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_SERV_ESPECIAL_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_SERV_ESPECIAL_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_SERV_ESPECIAL_REAL_ACUM"]); decimal FSE_SERV_ESPECIAL_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_SERV_ESPECIAL_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_SERV_ESPECIAL_REAL_ACUM - FSE_SERV_ESPECIAL_ANTE_ACUM)))))} } </td>
 </tr>

<tr>
    <td  class="webgrid-rubrica"> Trabalhos Especializados                           </td> 
    <td style="text-align:right" id="FSE_TRAB_ESPECIAL_REAL_PER" itemid="FSE_TRAB_ESPECIAL_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_TRAB_ESPECIAL_REAL_PER"])))  </td> 
    <td style="text-align:right" id="FSE_TRAB_ESPECIAL_ANTE_PER" itemid="FSE_TRAB_ESPECIAL_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_TRAB_ESPECIAL_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_TRAB_ESPECIAL_COMP_PER_P" >  @if (@ViewData["FSE_TRAB_ESPECIAL_REAL_PER"].Equals("calc") || @ViewData["FSE_TRAB_ESPECIAL_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_TRAB_ESPECIAL_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_TRAB_ESPECIAL_REAL_PER = Convert.ToInt32(@ViewData["FSE_TRAB_ESPECIAL_REAL_PER"]); decimal FSE_TRAB_ESPECIAL_ANTE_PER = Convert.ToInt32(@ViewData["FSE_TRAB_ESPECIAL_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((FSE_TRAB_ESPECIAL_REAL_PER / FSE_TRAB_ESPECIAL_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="FSE_TRAB_ESPECIAL_ANTE_TOTAL" itemid="FSE_TRAB_ESPECIAL_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_TRAB_ESPECIAL_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="FSE_TRAB_ESPECIAL_ANTE_ACUM" itemid="FSE_TRAB_ESPECIAL_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_TRAB_ESPECIAL_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="FSE_TRAB_ESPECIAL_REAL_ACUM" itemid="FSE_TRAB_ESPECIAL_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_TRAB_ESPECIAL_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="FSE_TRAB_ESPECIAL_COMP_ACUM_P" > @if (@ViewData["FSE_TRAB_ESPECIAL_REAL_ACUM"].Equals("calc") || @ViewData["FSE_TRAB_ESPECIAL_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_TRAB_ESPECIAL_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_TRAB_ESPECIAL_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_TRAB_ESPECIAL_REAL_ACUM"]); decimal FSE_TRAB_ESPECIAL_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_TRAB_ESPECIAL_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_TRAB_ESPECIAL_REAL_ACUM / FSE_TRAB_ESPECIAL_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="FSE_TRAB_ESPECIAL_COMP_ACUM_B" > @if (@ViewData["FSE_TRAB_ESPECIAL_REAL_ACUM"].Equals("calc") || @ViewData["FSE_TRAB_ESPECIAL_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_TRAB_ESPECIAL_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_TRAB_ESPECIAL_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_TRAB_ESPECIAL_REAL_ACUM"]); decimal FSE_TRAB_ESPECIAL_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_TRAB_ESPECIAL_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_TRAB_ESPECIAL_REAL_ACUM - FSE_TRAB_ESPECIAL_ANTE_ACUM)))))} } </td>
 </tr>

<tr>
    <td  class="webgrid-rubrica"> Publicidade e Propaganda                           </td> 
    <td style="text-align:right" id="FSE_PUB_PROPAG_REAL_PER" itemid="FSE_PUB_PROPAG_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_PUB_PROPAG_REAL_PER"])))  </td> 
    <td style="text-align:right" id="FSE_PUB_PROPAG_ANTE_PER" itemid="FSE_PUB_PROPAG_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_PUB_PROPAG_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_PUB_PROPAG_COMP_PER_P" >  @if (@ViewData["FSE_PUB_PROPAG_REAL_PER"].Equals("calc") || @ViewData["FSE_PUB_PROPAG_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_PUB_PROPAG_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_PUB_PROPAG_REAL_PER = Convert.ToInt32(@ViewData["FSE_PUB_PROPAG_REAL_PER"]); decimal FSE_PUB_PROPAG_ANTE_PER = Convert.ToInt32(@ViewData["FSE_PUB_PROPAG_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((FSE_PUB_PROPAG_REAL_PER / FSE_PUB_PROPAG_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="FSE_PUB_PROPAG_ANTE_TOTAL" itemid="FSE_PUB_PROPAG_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_PUB_PROPAG_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="FSE_PUB_PROPAG_ANTE_ACUM" itemid="FSE_PUB_PROPAG_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_PUB_PROPAG_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="FSE_PUB_PROPAG_REAL_ACUM" itemid="FSE_PUB_PROPAG_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_PUB_PROPAG_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="FSE_PUB_PROPAG_COMP_ACUM_P" > @if (@ViewData["FSE_PUB_PROPAG_REAL_ACUM"].Equals("calc") || @ViewData["FSE_PUB_PROPAG_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_PUB_PROPAG_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_PUB_PROPAG_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_PUB_PROPAG_REAL_ACUM"]); decimal FSE_PUB_PROPAG_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_PUB_PROPAG_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_PUB_PROPAG_REAL_ACUM / FSE_PUB_PROPAG_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="FSE_PUB_PROPAG_COMP_ACUM_B" > @if (@ViewData["FSE_PUB_PROPAG_REAL_ACUM"].Equals("calc") || @ViewData["FSE_PUB_PROPAG_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_PUB_PROPAG_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_PUB_PROPAG_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_PUB_PROPAG_REAL_ACUM"]); decimal FSE_PUB_PROPAG_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_PUB_PROPAG_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_PUB_PROPAG_REAL_ACUM - FSE_PUB_PROPAG_ANTE_ACUM)))))} } </td>
 </tr>
<tr>
    <td  class="webgrid-rubrica"> Vigilância e Segurança                           </td> 
    <td style="text-align:right" id="FSE_VIG_SEGURANCA_REAL_PER" itemid="FSE_VIG_SEGURANCA_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_VIG_SEGURANCA_REAL_PER"])))  </td> 
    <td style="text-align:right" id="FSE_VIG_SEGURANCA_ANTE_PER" itemid="FSE_VIG_SEGURANCA_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_VIG_SEGURANCA_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_VIG_SEGURANCA_COMP_PER_P" >  @if (@ViewData["FSE_VIG_SEGURANCA_REAL_PER"].Equals("calc") || @ViewData["FSE_VIG_SEGURANCA_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_VIG_SEGURANCA_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_VIG_SEGURANCA_REAL_PER = Convert.ToInt32(@ViewData["FSE_VIG_SEGURANCA_REAL_PER"]); decimal FSE_VIG_SEGURANCA_ANTE_PER = Convert.ToInt32(@ViewData["FSE_VIG_SEGURANCA_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((FSE_VIG_SEGURANCA_REAL_PER / FSE_VIG_SEGURANCA_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="FSE_VIG_SEGURANCA_ANTE_TOTAL" itemid="FSE_VIG_SEGURANCA_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_VIG_SEGURANCA_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="FSE_VIG_SEGURANCA_ANTE_ACUM" itemid="FSE_VIG_SEGURANCA_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_VIG_SEGURANCA_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="FSE_VIG_SEGURANCA_REAL_ACUM" itemid="FSE_VIG_SEGURANCA_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_VIG_SEGURANCA_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="FSE_VIG_SEGURANCA_COMP_ACUM_P" > @if (@ViewData["FSE_VIG_SEGURANCA_REAL_ACUM"].Equals("calc") || @ViewData["FSE_VIG_SEGURANCA_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_VIG_SEGURANCA_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_VIG_SEGURANCA_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_VIG_SEGURANCA_REAL_ACUM"]); decimal FSE_VIG_SEGURANCA_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_VIG_SEGURANCA_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_VIG_SEGURANCA_REAL_ACUM / FSE_VIG_SEGURANCA_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="FSE_VIG_SEGURANCA_COMP_ACUM_B" > @if (@ViewData["FSE_VIG_SEGURANCA_REAL_ACUM"].Equals("calc") || @ViewData["FSE_VIG_SEGURANCA_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_VIG_SEGURANCA_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_VIG_SEGURANCA_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_VIG_SEGURANCA_REAL_ACUM"]); decimal FSE_VIG_SEGURANCA_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_VIG_SEGURANCA_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_VIG_SEGURANCA_REAL_ACUM - FSE_VIG_SEGURANCA_ANTE_ACUM)))))} } </td>
 </tr>
<tr>
    <td  class="webgrid-rubrica"> Honorários                           </td> 
    <td style="text-align:right" id="FSE_HONORARIOS_REAL_PER" itemid="FSE_HONORARIOS_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_HONORARIOS_REAL_PER"])))  </td> 
    <td style="text-align:right" id="FSE_HONORARIOS_ANTE_PER" itemid="FSE_HONORARIOS_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_HONORARIOS_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_HONORARIOS_COMP_PER_P" >  @if (@ViewData["FSE_HONORARIOS_REAL_PER"].Equals("calc") || @ViewData["FSE_HONORARIOS_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_HONORARIOS_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_HONORARIOS_REAL_PER = Convert.ToInt32(@ViewData["FSE_HONORARIOS_REAL_PER"]); decimal FSE_HONORARIOS_ANTE_PER = Convert.ToInt32(@ViewData["FSE_HONORARIOS_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((FSE_HONORARIOS_REAL_PER / FSE_HONORARIOS_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="FSE_HONORARIOS_ANTE_TOTAL" itemid="FSE_HONORARIOS_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_HONORARIOS_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="FSE_HONORARIOS_ANTE_ACUM" itemid="FSE_HONORARIOS_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_HONORARIOS_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="FSE_HONORARIOS_REAL_ACUM" itemid="FSE_HONORARIOS_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_HONORARIOS_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="FSE_HONORARIOS_COMP_ACUM_P" > @if (@ViewData["FSE_HONORARIOS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_HONORARIOS_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_HONORARIOS_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_HONORARIOS_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_HONORARIOS_REAL_ACUM"]); decimal FSE_HONORARIOS_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_HONORARIOS_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_HONORARIOS_REAL_ACUM / FSE_HONORARIOS_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="FSE_HONORARIOS_COMP_ACUM_B" > @if (@ViewData["FSE_HONORARIOS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_HONORARIOS_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_HONORARIOS_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_HONORARIOS_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_HONORARIOS_REAL_ACUM"]); decimal FSE_HONORARIOS_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_HONORARIOS_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_HONORARIOS_REAL_ACUM - FSE_HONORARIOS_ANTE_ACUM)))))} } </td>
 </tr>
<tr>
    <td  class="webgrid-rubrica"> Comissões                           </td> 
    <td style="text-align:right" id="FSE_COMISSOES_REAL_PER" itemid="FSE_COMISSOES_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_COMISSOES_REAL_PER"])))  </td> 
    <td style="text-align:right" id="FSE_COMISSOES_ANTE_PER" itemid="FSE_COMISSOES_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_COMISSOES_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_COMISSOES_COMP_PER_P" >  @if (@ViewData["FSE_COMISSOES_REAL_PER"].Equals("calc") || @ViewData["FSE_COMISSOES_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_COMISSOES_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_COMISSOES_REAL_PER = Convert.ToInt32(@ViewData["FSE_COMISSOES_REAL_PER"]); decimal FSE_COMISSOES_ANTE_PER = Convert.ToInt32(@ViewData["FSE_COMISSOES_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((FSE_COMISSOES_REAL_PER / FSE_COMISSOES_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="FSE_COMISSOES_ANTE_TOTAL" itemid="FSE_COMISSOES_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_COMISSOES_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="FSE_COMISSOES_ANTE_ACUM" itemid="FSE_COMISSOES_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_COMISSOES_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="FSE_COMISSOES_REAL_ACUM" itemid="FSE_COMISSOES_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_COMISSOES_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="FSE_COMISSOES_COMP_ACUM_P" > @if (@ViewData["FSE_COMISSOES_REAL_ACUM"].Equals("calc") || @ViewData["FSE_COMISSOES_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_COMISSOES_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_COMISSOES_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_COMISSOES_REAL_ACUM"]); decimal FSE_COMISSOES_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_COMISSOES_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_COMISSOES_REAL_ACUM / FSE_COMISSOES_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="FSE_COMISSOES_COMP_ACUM_B" > @if (@ViewData["FSE_COMISSOES_REAL_ACUM"].Equals("calc") || @ViewData["FSE_COMISSOES_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_COMISSOES_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_COMISSOES_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_COMISSOES_REAL_ACUM"]); decimal FSE_COMISSOES_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_COMISSOES_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_COMISSOES_REAL_ACUM - FSE_COMISSOES_ANTE_ACUM)))))} } </td>
 </tr>
<tr>
    <td  class="webgrid-rubrica"> Conservação Reperação                           </td> 
    <td style="text-align:right" id="FSE_CONSERV_REPAR_REAL_PER" itemid="FSE_CONSERV_REPAR_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_CONSERV_REPAR_REAL_PER"])))  </td> 
    <td style="text-align:right" id="FSE_CONSERV_REPAR_ANTE_PER" itemid="FSE_CONSERV_REPAR_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_CONSERV_REPAR_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_CONSERV_REPAR_COMP_PER_P" >  @if (@ViewData["FSE_CONSERV_REPAR_REAL_PER"].Equals("calc") || @ViewData["FSE_CONSERV_REPAR_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_CONSERV_REPAR_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_CONSERV_REPAR_REAL_PER = Convert.ToInt32(@ViewData["FSE_CONSERV_REPAR_REAL_PER"]); decimal FSE_CONSERV_REPAR_ANTE_PER = Convert.ToInt32(@ViewData["FSE_CONSERV_REPAR_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((FSE_CONSERV_REPAR_REAL_PER / FSE_CONSERV_REPAR_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="FSE_CONSERV_REPAR_ANTE_TOTAL" itemid="FSE_CONSERV_REPAR_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_CONSERV_REPAR_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="FSE_CONSERV_REPAR_ANTE_ACUM" itemid="FSE_CONSERV_REPAR_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_CONSERV_REPAR_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="FSE_CONSERV_REPAR_REAL_ACUM" itemid="FSE_CONSERV_REPAR_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_CONSERV_REPAR_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="FSE_CONSERV_REPAR_COMP_ACUM_P" > @if (@ViewData["FSE_CONSERV_REPAR_REAL_ACUM"].Equals("calc") || @ViewData["FSE_CONSERV_REPAR_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_CONSERV_REPAR_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_CONSERV_REPAR_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_CONSERV_REPAR_REAL_ACUM"]); decimal FSE_CONSERV_REPAR_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_CONSERV_REPAR_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_CONSERV_REPAR_REAL_ACUM / FSE_CONSERV_REPAR_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="FSE_CONSERV_REPAR_COMP_ACUM_B" > @if (@ViewData["FSE_CONSERV_REPAR_REAL_ACUM"].Equals("calc") || @ViewData["FSE_CONSERV_REPAR_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_CONSERV_REPAR_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_CONSERV_REPAR_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_CONSERV_REPAR_REAL_ACUM"]); decimal FSE_CONSERV_REPAR_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_CONSERV_REPAR_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_CONSERV_REPAR_REAL_ACUM - FSE_CONSERV_REPAR_ANTE_ACUM)))))} } </td>
 </tr>
<tr>
    <td  class="webgrid-rubrica"> Outros de Serviços Especializados                           </td> 
    <td style="text-align:right" id="FSE_OUTROS_SERV_ESPECIAL_REAL_PER" itemid="FSE_OUTROS_SERV_ESPECIAL_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_OUTROS_SERV_ESPECIAL_REAL_PER"])))  </td> 
    <td style="text-align:right" id="FSE_OUTROS_SERV_ESPECIAL_ANTE_PER" itemid="FSE_OUTROS_SERV_ESPECIAL_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_OUTROS_SERV_ESPECIAL_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_OUTROS_SERV_ESPECIAL_COMP_PER_P" >  @if (@ViewData["FSE_OUTROS_SERV_ESPECIAL_REAL_PER"].Equals("calc") || @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_OUTROS_SERV_ESPECIAL_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_OUTROS_SERV_ESPECIAL_REAL_PER = Convert.ToInt32(@ViewData["FSE_OUTROS_SERV_ESPECIAL_REAL_PER"]); decimal FSE_OUTROS_SERV_ESPECIAL_ANTE_PER = Convert.ToInt32(@ViewData["FSE_OUTROS_SERV_ESPECIAL_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((FSE_OUTROS_SERV_ESPECIAL_REAL_PER / FSE_OUTROS_SERV_ESPECIAL_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="FSE_OUTROS_SERV_ESPECIAL_ANTE_TOTAL" itemid="FSE_OUTROS_SERV_ESPECIAL_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_OUTROS_SERV_ESPECIAL_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM" itemid="FSE_OUTROS_SERV_ESPECIAL_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="FSE_OUTROS_SERV_ESPECIAL_REAL_ACUM" itemid="FSE_OUTROS_SERV_ESPECIAL_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_OUTROS_SERV_ESPECIAL_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="FSE_OUTROS_SERV_ESPECIAL_COMP_ACUM_P" > @if (@ViewData["FSE_OUTROS_SERV_ESPECIAL_REAL_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_OUTROS_SERV_ESPECIAL_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_OUTROS_SERV_ESPECIAL_REAL_ACUM"]); decimal FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_OUTROS_SERV_ESPECIAL_REAL_ACUM / FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="FSE_OUTROS_SERV_ESPECIAL_COMP_ACUM_B" > @if (@ViewData["FSE_OUTROS_SERV_ESPECIAL_REAL_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_OUTROS_SERV_ESPECIAL_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_OUTROS_SERV_ESPECIAL_REAL_ACUM"]); decimal FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_OUTROS_SERV_ESPECIAL_REAL_ACUM - FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM)))))} } </td>
 </tr>

<tr>
    <td  class="webgrid-rubrica"> Materiais                           </td> 
    <td class="webgrid-rubrica"  id="FSE_MATERIAIS_REAL_PER" itemid="FSE_MATERIAIS_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_MATERIAIS_REAL_PER"])))  </td> 
    <td class="webgrid-rubrica"  id="FSE_MATERIAIS_ANTE_PER" itemid="FSE_MATERIAIS_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_MATERIAIS_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_MATERIAIS_COMP_PER_P" >  @if (@ViewData["FSE_MATERIAIS_REAL_PER"].Equals("calc") || @ViewData["FSE_MATERIAIS_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_MATERIAIS_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_MATERIAIS_REAL_PER = Convert.ToInt32(@ViewData["FSE_MATERIAIS_REAL_PER"]); decimal FSE_MATERIAIS_ANTE_PER = Convert.ToInt32(@ViewData["FSE_MATERIAIS_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((FSE_MATERIAIS_REAL_PER / FSE_MATERIAIS_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td class="webgrid-rubrica"  id="FSE_MATERIAIS_ANTE_TOTAL" itemid="FSE_MATERIAIS_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_MATERIAIS_ANTE_TOTAL"])))  </td> 
    <td class="webgrid-rubrica"  id="FSE_MATERIAIS_ANTE_ACUM" itemid="FSE_MATERIAIS_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_MATERIAIS_ANTE_ACUM"])))  </td> 
    <td class="webgrid-rubrica"  id="FSE_MATERIAIS_REAL_ACUM" itemid="FSE_MATERIAIS_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_MATERIAIS_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="FSE_MATERIAIS_COMP_ACUM_P" > @if (@ViewData["FSE_MATERIAIS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_MATERIAIS_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_MATERIAIS_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_MATERIAIS_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_MATERIAIS_REAL_ACUM"]); decimal FSE_MATERIAIS_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_MATERIAIS_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_MATERIAIS_REAL_ACUM / FSE_MATERIAIS_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="FSE_MATERIAIS_COMP_ACUM_B" > @if (@ViewData["FSE_MATERIAIS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_MATERIAIS_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_MATERIAIS_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_MATERIAIS_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_MATERIAIS_REAL_ACUM"]); decimal FSE_MATERIAIS_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_MATERIAIS_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_MATERIAIS_REAL_ACUM - FSE_MATERIAIS_ANTE_ACUM)))))} } </td>
 </tr>
<tr>
    <td  class="webgrid-rubrica"> Ferramentas e Utensílios                           </td> 
    <td style="text-align:right" id="FSE_FERRAM_UTENS_REAL_PER" itemid="FSE_FERRAM_UTENS_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_FERRAM_UTENS_REAL_PER"])))  </td> 
    <td style="text-align:right" id="FSE_FERRAM_UTENS_ANTE_PER" itemid="FSE_FERRAM_UTENS_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_FERRAM_UTENS_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_FERRAM_UTENS_COMP_PER_P" >  @if (@ViewData["FSE_FERRAM_UTENS_REAL_PER"].Equals("calc") || @ViewData["FSE_FERRAM_UTENS_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_FERRAM_UTENS_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_FERRAM_UTENS_REAL_PER = Convert.ToInt32(@ViewData["FSE_FERRAM_UTENS_REAL_PER"]); decimal FSE_FERRAM_UTENS_ANTE_PER = Convert.ToInt32(@ViewData["FSE_FERRAM_UTENS_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((FSE_FERRAM_UTENS_REAL_PER / FSE_FERRAM_UTENS_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="FSE_FERRAM_UTENS_ANTE_TOTAL" itemid="FSE_FERRAM_UTENS_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_FERRAM_UTENS_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="FSE_FERRAM_UTENS_ANTE_ACUM" itemid="FSE_FERRAM_UTENS_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_FERRAM_UTENS_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="FSE_FERRAM_UTENS_REAL_ACUM" itemid="FSE_FERRAM_UTENS_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_FERRAM_UTENS_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="FSE_FERRAM_UTENS_COMP_ACUM_P" > @if (@ViewData["FSE_FERRAM_UTENS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_FERRAM_UTENS_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_FERRAM_UTENS_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_FERRAM_UTENS_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_FERRAM_UTENS_REAL_ACUM"]); decimal FSE_FERRAM_UTENS_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_FERRAM_UTENS_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_FERRAM_UTENS_REAL_ACUM / FSE_FERRAM_UTENS_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="FSE_FERRAM_UTENS_COMP_ACUM_B" > @if (@ViewData["FSE_FERRAM_UTENS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_FERRAM_UTENS_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_FERRAM_UTENS_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_FERRAM_UTENS_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_FERRAM_UTENS_REAL_ACUM"]); decimal FSE_FERRAM_UTENS_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_FERRAM_UTENS_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_FERRAM_UTENS_REAL_ACUM - FSE_FERRAM_UTENS_ANTE_ACUM)))))} } </td>
 </tr>
    
<tr>
    <td  class="webgrid-rubrica"> Livros e Documentação Técnica                           </td> 
    <td style="text-align:right" id="FSE_LIVR_DOCUM_TEC_REAL_PER" itemid="FSE_LIVR_DOCUM_TEC_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_LIVR_DOCUM_TEC_REAL_PER"])))  </td> 
    <td style="text-align:right" id="FSE_LIVR_DOCUM_TEC_ANTE_PER" itemid="FSE_LIVR_DOCUM_TEC_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_LIVR_DOCUM_TEC_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_LIVR_DOCUM_TEC_COMP_PER_P" >  @if (@ViewData["FSE_LIVR_DOCUM_TEC_REAL_PER"].Equals("calc") || @ViewData["FSE_LIVR_DOCUM_TEC_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_LIVR_DOCUM_TEC_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_LIVR_DOCUM_TEC_REAL_PER = Convert.ToInt32(@ViewData["FSE_LIVR_DOCUM_TEC_REAL_PER"]); decimal FSE_LIVR_DOCUM_TEC_ANTE_PER = Convert.ToInt32(@ViewData["FSE_LIVR_DOCUM_TEC_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((FSE_LIVR_DOCUM_TEC_REAL_PER / FSE_LIVR_DOCUM_TEC_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="FSE_LIVR_DOCUM_TEC_ANTE_TOTAL" itemid="FSE_LIVR_DOCUM_TEC_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_LIVR_DOCUM_TEC_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="FSE_LIVR_DOCUM_TEC_ANTE_ACUM" itemid="FSE_LIVR_DOCUM_TEC_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_LIVR_DOCUM_TEC_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="FSE_LIVR_DOCUM_TEC_REAL_ACUM" itemid="FSE_LIVR_DOCUM_TEC_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_LIVR_DOCUM_TEC_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="FSE_LIVR_DOCUM_TEC_COMP_ACUM_P" > @if (@ViewData["FSE_LIVR_DOCUM_TEC_REAL_ACUM"].Equals("calc") || @ViewData["FSE_LIVR_DOCUM_TEC_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_LIVR_DOCUM_TEC_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_LIVR_DOCUM_TEC_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_LIVR_DOCUM_TEC_REAL_ACUM"]); decimal FSE_LIVR_DOCUM_TEC_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_LIVR_DOCUM_TEC_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_LIVR_DOCUM_TEC_REAL_ACUM / FSE_LIVR_DOCUM_TEC_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="FSE_LIVR_DOCUM_TEC_COMP_ACUM_B" > @if (@ViewData["FSE_LIVR_DOCUM_TEC_REAL_ACUM"].Equals("calc") || @ViewData["FSE_LIVR_DOCUM_TEC_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_LIVR_DOCUM_TEC_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_LIVR_DOCUM_TEC_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_LIVR_DOCUM_TEC_REAL_ACUM"]); decimal FSE_LIVR_DOCUM_TEC_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_LIVR_DOCUM_TEC_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_LIVR_DOCUM_TEC_REAL_ACUM - FSE_LIVR_DOCUM_TEC_ANTE_ACUM)))))} } </td>
 </tr>
<tr>
    <td  class="webgrid-rubrica"> Material de Escritório                           </td> 
    <td style="text-align:right" id="FSE_MAT_ESCRITOR_REAL_PER" itemid="FSE_MAT_ESCRITOR_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_MAT_ESCRITOR_REAL_PER"])))  </td> 
    <td style="text-align:right" id="FSE_MAT_ESCRITOR_ANTE_PER" itemid="FSE_MAT_ESCRITOR_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_MAT_ESCRITOR_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_MAT_ESCRITOR_COMP_PER_P" >  @if (@ViewData["FSE_MAT_ESCRITOR_REAL_PER"].Equals("calc") || @ViewData["FSE_MAT_ESCRITOR_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_MAT_ESCRITOR_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_MAT_ESCRITOR_REAL_PER = Convert.ToInt32(@ViewData["FSE_MAT_ESCRITOR_REAL_PER"]); decimal FSE_MAT_ESCRITOR_ANTE_PER = Convert.ToInt32(@ViewData["FSE_MAT_ESCRITOR_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((FSE_MAT_ESCRITOR_REAL_PER / FSE_MAT_ESCRITOR_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="FSE_MAT_ESCRITOR_ANTE_TOTAL" itemid="FSE_MAT_ESCRITOR_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_MAT_ESCRITOR_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="FSE_MAT_ESCRITOR_ANTE_ACUM" itemid="FSE_MAT_ESCRITOR_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_MAT_ESCRITOR_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="FSE_MAT_ESCRITOR_REAL_ACUM" itemid="FSE_MAT_ESCRITOR_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_MAT_ESCRITOR_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="FSE_MAT_ESCRITOR_COMP_ACUM_P" > @if (@ViewData["FSE_MAT_ESCRITOR_REAL_ACUM"].Equals("calc") || @ViewData["FSE_MAT_ESCRITOR_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_MAT_ESCRITOR_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_MAT_ESCRITOR_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_MAT_ESCRITOR_REAL_ACUM"]); decimal FSE_MAT_ESCRITOR_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_MAT_ESCRITOR_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_MAT_ESCRITOR_REAL_ACUM / FSE_MAT_ESCRITOR_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="FSE_MAT_ESCRITOR_COMP_ACUM_B" > @if (@ViewData["FSE_MAT_ESCRITOR_REAL_ACUM"].Equals("calc") || @ViewData["FSE_MAT_ESCRITOR_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_MAT_ESCRITOR_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_MAT_ESCRITOR_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_MAT_ESCRITOR_REAL_ACUM"]); decimal FSE_MAT_ESCRITOR_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_MAT_ESCRITOR_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_MAT_ESCRITOR_REAL_ACUM - FSE_MAT_ESCRITOR_ANTE_ACUM)))))} } </td>
 </tr>
    
<tr>
    <td  class="webgrid-rubrica"> Artigos para Oferta                           </td> 
    <td style="text-align:right" id="FSE_ART_OFERTA_REAL_PER" itemid="FSE_ART_OFERTA_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_ART_OFERTA_REAL_PER"])))  </td> 
    <td style="text-align:right" id="FSE_ART_OFERTA_ANTE_PER" itemid="FSE_ART_OFERTA_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_ART_OFERTA_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_ART_OFERTA_COMP_PER_P" >  @if (@ViewData["FSE_ART_OFERTA_REAL_PER"].Equals("calc") || @ViewData["FSE_ART_OFERTA_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_ART_OFERTA_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_ART_OFERTA_REAL_PER = Convert.ToInt32(@ViewData["FSE_ART_OFERTA_REAL_PER"]); decimal FSE_ART_OFERTA_ANTE_PER = Convert.ToInt32(@ViewData["FSE_ART_OFERTA_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((FSE_ART_OFERTA_REAL_PER / FSE_ART_OFERTA_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="FSE_ART_OFERTA_ANTE_TOTAL" itemid="FSE_ART_OFERTA_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_ART_OFERTA_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="FSE_ART_OFERTA_ANTE_ACUM" itemid="FSE_ART_OFERTA_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_ART_OFERTA_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="FSE_ART_OFERTA_REAL_ACUM" itemid="FSE_ART_OFERTA_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_ART_OFERTA_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="FSE_ART_OFERTA_COMP_ACUM_P" > @if (@ViewData["FSE_ART_OFERTA_REAL_ACUM"].Equals("calc") || @ViewData["FSE_ART_OFERTA_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_ART_OFERTA_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_ART_OFERTA_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_ART_OFERTA_REAL_ACUM"]); decimal FSE_ART_OFERTA_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_ART_OFERTA_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_ART_OFERTA_REAL_ACUM / FSE_ART_OFERTA_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="FSE_ART_OFERTA_COMP_ACUM_B" > @if (@ViewData["FSE_ART_OFERTA_REAL_ACUM"].Equals("calc") || @ViewData["FSE_ART_OFERTA_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_ART_OFERTA_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_ART_OFERTA_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_ART_OFERTA_REAL_ACUM"]); decimal FSE_ART_OFERTA_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_ART_OFERTA_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_ART_OFERTA_REAL_ACUM - FSE_ART_OFERTA_ANTE_ACUM)))))} } </td>
 </tr>
<tr>
    <td  class="webgrid-rubrica"> Outros de Materiais                           </td> 
    <td style="text-align:right" id="FSE_OUTROS_MATERIAIS_REAL_PER" itemid="FSE_OUTROS_MATERIAIS_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_OUTROS_MATERIAIS_REAL_PER"])))  </td> 
    <td style="text-align:right" id="FSE_OUTROS_MATERIAIS_ANTE_PER" itemid="FSE_OUTROS_MATERIAIS_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_OUTROS_MATERIAIS_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_OUTROS_MATERIAIS_COMP_PER_P" >  @if (@ViewData["FSE_OUTROS_MATERIAIS_REAL_PER"].Equals("calc") || @ViewData["FSE_OUTROS_MATERIAIS_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_OUTROS_MATERIAIS_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_OUTROS_MATERIAIS_REAL_PER = Convert.ToInt32(@ViewData["FSE_OUTROS_MATERIAIS_REAL_PER"]); decimal FSE_OUTROS_MATERIAIS_ANTE_PER = Convert.ToInt32(@ViewData["FSE_OUTROS_MATERIAIS_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((FSE_OUTROS_MATERIAIS_REAL_PER / FSE_OUTROS_MATERIAIS_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="FSE_OUTROS_MATERIAIS_ANTE_TOTAL" itemid="FSE_OUTROS_MATERIAIS_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_OUTROS_MATERIAIS_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="FSE_OUTROS_MATERIAIS_ANTE_ACUM" itemid="FSE_OUTROS_MATERIAIS_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_OUTROS_MATERIAIS_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="FSE_OUTROS_MATERIAIS_REAL_ACUM" itemid="FSE_OUTROS_MATERIAIS_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_OUTROS_MATERIAIS_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="FSE_OUTROS_MATERIAIS_COMP_ACUM_P" > @if (@ViewData["FSE_OUTROS_MATERIAIS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_MATERIAIS_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_OUTROS_MATERIAIS_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_OUTROS_MATERIAIS_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_OUTROS_MATERIAIS_REAL_ACUM"]); decimal FSE_OUTROS_MATERIAIS_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_OUTROS_MATERIAIS_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_OUTROS_MATERIAIS_REAL_ACUM / FSE_OUTROS_MATERIAIS_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="FSE_OUTROS_MATERIAIS_COMP_ACUM_B" > @if (@ViewData["FSE_OUTROS_MATERIAIS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_MATERIAIS_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_OUTROS_MATERIAIS_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_OUTROS_MATERIAIS_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_OUTROS_MATERIAIS_REAL_ACUM"]); decimal FSE_OUTROS_MATERIAIS_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_OUTROS_MATERIAIS_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_OUTROS_MATERIAIS_REAL_ACUM - FSE_OUTROS_MATERIAIS_ANTE_ACUM)))))} } </td>
 </tr>

<tr>
    <td  class="webgrid-rubrica"> Energia e Fluidos                           </td> 
    <td class="webgrid-rubrica"  id="FSE_ENERG_FLUIDOS_REAL_PER" itemid="FSE_ENERG_FLUIDOS_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_ENERG_FLUIDOS_REAL_PER"])))  </td> 
    <td class="webgrid-rubrica"  id="FSE_ENERG_FLUIDOS_ANTE_PER" itemid="FSE_ENERG_FLUIDOS_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_ENERG_FLUIDOS_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_ENERG_FLUIDOS_COMP_PER_P" >  @if (@ViewData["FSE_ENERG_FLUIDOS_REAL_PER"].Equals("calc") || @ViewData["FSE_ENERG_FLUIDOS_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_ENERG_FLUIDOS_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_ENERG_FLUIDOS_REAL_PER = Convert.ToInt32(@ViewData["FSE_ENERG_FLUIDOS_REAL_PER"]); decimal FSE_ENERG_FLUIDOS_ANTE_PER = Convert.ToInt32(@ViewData["FSE_ENERG_FLUIDOS_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((FSE_ENERG_FLUIDOS_REAL_PER / FSE_ENERG_FLUIDOS_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td class="webgrid-rubrica"  id="FSE_ENERG_FLUIDOS_ANTE_TOTAL" itemid="FSE_ENERG_FLUIDOS_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_ENERG_FLUIDOS_ANTE_TOTAL"])))  </td> 
    <td class="webgrid-rubrica"  id="FSE_ENERG_FLUIDOS_ANTE_ACUM" itemid="FSE_ENERG_FLUIDOS_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_ENERG_FLUIDOS_ANTE_ACUM"])))  </td> 
    <td class="webgrid-rubrica"  id="FSE_ENERG_FLUIDOS_REAL_ACUM" itemid="FSE_ENERG_FLUIDOS_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_ENERG_FLUIDOS_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="FSE_ENERG_FLUIDOS_COMP_ACUM_P" > @if (@ViewData["FSE_ENERG_FLUIDOS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_ENERG_FLUIDOS_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_ENERG_FLUIDOS_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_ENERG_FLUIDOS_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_ENERG_FLUIDOS_REAL_ACUM"]); decimal FSE_ENERG_FLUIDOS_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_ENERG_FLUIDOS_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_ENERG_FLUIDOS_REAL_ACUM / FSE_ENERG_FLUIDOS_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="FSE_ENERG_FLUIDOS_COMP_ACUM_B" > @if (@ViewData["FSE_ENERG_FLUIDOS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_ENERG_FLUIDOS_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_ENERG_FLUIDOS_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_ENERG_FLUIDOS_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_ENERG_FLUIDOS_REAL_ACUM"]); decimal FSE_ENERG_FLUIDOS_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_ENERG_FLUIDOS_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_ENERG_FLUIDOS_REAL_ACUM - FSE_ENERG_FLUIDOS_ANTE_ACUM)))))} } </td>
 </tr>
<tr>
    <td  class="webgrid-rubrica"> Electricidade                           </td> 
    <td style="text-align:right" id="FSE_ELECTRICIDADE_REAL_PER" itemid="FSE_ELECTRICIDADE_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_ELECTRICIDADE_REAL_PER"])))  </td> 
    <td style="text-align:right" id="FSE_ELECTRICIDADE_ANTE_PER" itemid="FSE_ELECTRICIDADE_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_ELECTRICIDADE_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_ELECTRICIDADE_COMP_PER_P" >  @if (@ViewData["FSE_ELECTRICIDADE_REAL_PER"].Equals("calc") || @ViewData["FSE_ELECTRICIDADE_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_ELECTRICIDADE_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_ELECTRICIDADE_REAL_PER = Convert.ToInt32(@ViewData["FSE_ELECTRICIDADE_REAL_PER"]); decimal FSE_ELECTRICIDADE_ANTE_PER = Convert.ToInt32(@ViewData["FSE_ELECTRICIDADE_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((FSE_ELECTRICIDADE_REAL_PER / FSE_ELECTRICIDADE_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="FSE_ELECTRICIDADE_ANTE_TOTAL" itemid="FSE_ELECTRICIDADE_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_ELECTRICIDADE_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="FSE_ELECTRICIDADE_ANTE_ACUM" itemid="FSE_ELECTRICIDADE_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_ELECTRICIDADE_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="FSE_ELECTRICIDADE_REAL_ACUM" itemid="FSE_ELECTRICIDADE_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_ELECTRICIDADE_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="FSE_ELECTRICIDADE_COMP_ACUM_P" > @if (@ViewData["FSE_ELECTRICIDADE_REAL_ACUM"].Equals("calc") || @ViewData["FSE_ELECTRICIDADE_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_ELECTRICIDADE_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_ELECTRICIDADE_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_ELECTRICIDADE_REAL_ACUM"]); decimal FSE_ELECTRICIDADE_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_ELECTRICIDADE_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_ELECTRICIDADE_REAL_ACUM / FSE_ELECTRICIDADE_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="FSE_ELECTRICIDADE_COMP_ACUM_B" > @if (@ViewData["FSE_ELECTRICIDADE_REAL_ACUM"].Equals("calc") || @ViewData["FSE_ELECTRICIDADE_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_ELECTRICIDADE_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_ELECTRICIDADE_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_ELECTRICIDADE_REAL_ACUM"]); decimal FSE_ELECTRICIDADE_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_ELECTRICIDADE_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_ELECTRICIDADE_REAL_ACUM - FSE_ELECTRICIDADE_ANTE_ACUM)))))} } </td>
 </tr>
<tr>
    <td  class="webgrid-rubrica"> Combustiveis                           </td> 
    <td style="text-align:right" id="FSE_COMBUSTIVEIS_REAL_PER" itemid="FSE_COMBUSTIVEIS_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_COMBUSTIVEIS_REAL_PER"])))  </td> 
    <td style="text-align:right" id="FSE_COMBUSTIVEIS_ANTE_PER" itemid="FSE_COMBUSTIVEIS_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_COMBUSTIVEIS_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_COMBUSTIVEIS_COMP_PER_P" >  @if (@ViewData["FSE_COMBUSTIVEIS_REAL_PER"].Equals("calc") || @ViewData["FSE_COMBUSTIVEIS_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_COMBUSTIVEIS_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_COMBUSTIVEIS_REAL_PER = Convert.ToInt32(@ViewData["FSE_COMBUSTIVEIS_REAL_PER"]); decimal FSE_COMBUSTIVEIS_ANTE_PER = Convert.ToInt32(@ViewData["FSE_COMBUSTIVEIS_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((FSE_COMBUSTIVEIS_REAL_PER / FSE_COMBUSTIVEIS_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="FSE_COMBUSTIVEIS_ANTE_TOTAL" itemid="FSE_COMBUSTIVEIS_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_COMBUSTIVEIS_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="FSE_COMBUSTIVEIS_ANTE_ACUM" itemid="FSE_COMBUSTIVEIS_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_COMBUSTIVEIS_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="FSE_COMBUSTIVEIS_REAL_ACUM" itemid="FSE_COMBUSTIVEIS_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_COMBUSTIVEIS_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="FSE_COMBUSTIVEIS_COMP_ACUM_P" > @if (@ViewData["FSE_COMBUSTIVEIS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_COMBUSTIVEIS_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_COMBUSTIVEIS_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_COMBUSTIVEIS_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_COMBUSTIVEIS_REAL_ACUM"]); decimal FSE_COMBUSTIVEIS_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_COMBUSTIVEIS_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_COMBUSTIVEIS_REAL_ACUM / FSE_COMBUSTIVEIS_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="FSE_COMBUSTIVEIS_COMP_ACUM_B" > @if (@ViewData["FSE_COMBUSTIVEIS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_COMBUSTIVEIS_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_COMBUSTIVEIS_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_COMBUSTIVEIS_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_COMBUSTIVEIS_REAL_ACUM"]); decimal FSE_COMBUSTIVEIS_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_COMBUSTIVEIS_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_COMBUSTIVEIS_REAL_ACUM - FSE_COMBUSTIVEIS_ANTE_ACUM)))))} } </td>
 </tr>

<tr>
    <td  class="webgrid-rubrica"> Água                           </td> 
    <td style="text-align:right" id="FSE_AGUA_REAL_PER" itemid="FSE_AGUA_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_AGUA_REAL_PER"])))  </td> 
    <td style="text-align:right" id="FSE_AGUA_ANTE_PER" itemid="FSE_AGUA_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_AGUA_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_AGUA_COMP_PER_P" >  @if (@ViewData["FSE_AGUA_REAL_PER"].Equals("calc") || @ViewData["FSE_AGUA_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_AGUA_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_AGUA_REAL_PER = Convert.ToInt32(@ViewData["FSE_AGUA_REAL_PER"]); decimal FSE_AGUA_ANTE_PER = Convert.ToInt32(@ViewData["FSE_AGUA_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((FSE_AGUA_REAL_PER / FSE_AGUA_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="FSE_AGUA_ANTE_TOTAL" itemid="FSE_AGUA_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_AGUA_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="FSE_AGUA_ANTE_ACUM" itemid="FSE_AGUA_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_AGUA_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="FSE_AGUA_REAL_ACUM" itemid="FSE_AGUA_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_AGUA_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="FSE_AGUA_COMP_ACUM_P" > @if (@ViewData["FSE_AGUA_REAL_ACUM"].Equals("calc") || @ViewData["FSE_AGUA_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_AGUA_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_AGUA_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_AGUA_REAL_ACUM"]); decimal FSE_AGUA_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_AGUA_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_AGUA_REAL_ACUM / FSE_AGUA_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="FSE_AGUA_COMP_ACUM_B" > @if (@ViewData["FSE_AGUA_REAL_ACUM"].Equals("calc") || @ViewData["FSE_AGUA_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_AGUA_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_AGUA_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_AGUA_REAL_ACUM"]); decimal FSE_AGUA_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_AGUA_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_AGUA_REAL_ACUM - FSE_AGUA_ANTE_ACUM)))))} } </td>
 </tr>

<tr>
    <td  class="webgrid-rubrica"> Outros de Energia e Fluidos                           </td> 
    <td style="text-align:right" id="FSE_OUTROS_ENERG_FLUIDOS_REAL_PER" itemid="FSE_OUTROS_ENERG_FLUIDOS_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_OUTROS_ENERG_FLUIDOS_REAL_PER"])))  </td> 
    <td style="text-align:right" id="FSE_OUTROS_ENERG_FLUIDOS_ANTE_PER" itemid="FSE_OUTROS_ENERG_FLUIDOS_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_OUTROS_ENERG_FLUIDOS_COMP_PER_P" >  @if (@ViewData["FSE_OUTROS_ENERG_FLUIDOS_REAL_PER"].Equals("calc") || @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_OUTROS_ENERG_FLUIDOS_REAL_PER = Convert.ToInt32(@ViewData["FSE_OUTROS_ENERG_FLUIDOS_REAL_PER"]); decimal FSE_OUTROS_ENERG_FLUIDOS_ANTE_PER = Convert.ToInt32(@ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((FSE_OUTROS_ENERG_FLUIDOS_REAL_PER / FSE_OUTROS_ENERG_FLUIDOS_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="FSE_OUTROS_ENERG_FLUIDOS_ANTE_TOTAL" itemid="FSE_OUTROS_ENERG_FLUIDOS_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM" itemid="FSE_OUTROS_ENERG_FLUIDOS_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="FSE_OUTROS_ENERG_FLUIDOS_REAL_ACUM" itemid="FSE_OUTROS_ENERG_FLUIDOS_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_OUTROS_ENERG_FLUIDOS_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="FSE_OUTROS_ENERG_FLUIDOS_COMP_ACUM_P" > @if (@ViewData["FSE_OUTROS_ENERG_FLUIDOS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_OUTROS_ENERG_FLUIDOS_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_OUTROS_ENERG_FLUIDOS_REAL_ACUM"]); decimal FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_OUTROS_ENERG_FLUIDOS_REAL_ACUM / FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="FSE_OUTROS_ENERG_FLUIDOS_COMP_ACUM_B" > @if (@ViewData["FSE_OUTROS_ENERG_FLUIDOS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_OUTROS_ENERG_FLUIDOS_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_OUTROS_ENERG_FLUIDOS_REAL_ACUM"]); decimal FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_OUTROS_ENERG_FLUIDOS_REAL_ACUM - FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM)))))} } </td>
 </tr>
<tr>
    <td  class="webgrid-rubrica"> Deslocações, Estadas e Transportes                           </td> 
    <td class="webgrid-rubrica" id="FSE_DESL_ESTAD_TRANSPORT_REAL_PER" itemid="FSE_DESL_ESTAD_TRANSPORT_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_DESL_ESTAD_TRANSPORT_REAL_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_DESL_ESTAD_TRANSPORT_ANTE_PER" itemid="FSE_DESL_ESTAD_TRANSPORT_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_DESL_ESTAD_TRANSPORT_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_DESL_ESTAD_TRANSPORT_COMP_PER_P" >  @if (@ViewData["FSE_DESL_ESTAD_TRANSPORT_REAL_PER"].Equals("calc") || @ViewData["FSE_DESL_ESTAD_TRANSPORT_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_DESL_ESTAD_TRANSPORT_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_DESL_ESTAD_TRANSPORT_REAL_PER = Convert.ToInt32(@ViewData["FSE_DESL_ESTAD_TRANSPORT_REAL_PER"]); decimal FSE_DESL_ESTAD_TRANSPORT_ANTE_PER = Convert.ToInt32(@ViewData["FSE_DESL_ESTAD_TRANSPORT_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((FSE_DESL_ESTAD_TRANSPORT_REAL_PER / FSE_DESL_ESTAD_TRANSPORT_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td class="webgrid-rubrica" id="FSE_DESL_ESTAD_TRANSPORT_ANTE_TOTAL" itemid="FSE_DESL_ESTAD_TRANSPORT_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_DESL_ESTAD_TRANSPORT_ANTE_TOTAL"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_DESL_ESTAD_TRANSPORT_ANTE_ACUM" itemid="FSE_DESL_ESTAD_TRANSPORT_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_DESL_ESTAD_TRANSPORT_ANTE_ACUM"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_DESL_ESTAD_TRANSPORT_REAL_ACUM" itemid="FSE_DESL_ESTAD_TRANSPORT_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_DESL_ESTAD_TRANSPORT_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="FSE_DESL_ESTAD_TRANSPORT_COMP_ACUM_P" > @if (@ViewData["FSE_DESL_ESTAD_TRANSPORT_REAL_ACUM"].Equals("calc") || @ViewData["FSE_DESL_ESTAD_TRANSPORT_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_DESL_ESTAD_TRANSPORT_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_DESL_ESTAD_TRANSPORT_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_DESL_ESTAD_TRANSPORT_REAL_ACUM"]); decimal FSE_DESL_ESTAD_TRANSPORT_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_DESL_ESTAD_TRANSPORT_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_DESL_ESTAD_TRANSPORT_REAL_ACUM / FSE_DESL_ESTAD_TRANSPORT_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="FSE_DESL_ESTAD_TRANSPORT_COMP_ACUM_B" > @if (@ViewData["FSE_DESL_ESTAD_TRANSPORT_REAL_ACUM"].Equals("calc") || @ViewData["FSE_DESL_ESTAD_TRANSPORT_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_DESL_ESTAD_TRANSPORT_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_DESL_ESTAD_TRANSPORT_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_DESL_ESTAD_TRANSPORT_REAL_ACUM"]); decimal FSE_DESL_ESTAD_TRANSPORT_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_DESL_ESTAD_TRANSPORT_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_DESL_ESTAD_TRANSPORT_REAL_ACUM - FSE_DESL_ESTAD_TRANSPORT_ANTE_ACUM)))))} } </td>
 </tr>
<tr>
    <td  class="webgrid-rubrica"> Deslocações e Estadas                           </td> 
    <td style="text-align:right" id="FSE_DESLOC_ESTADAS_REAL_PER" itemid="FSE_DESLOC_ESTADAS_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_DESLOC_ESTADAS_REAL_PER"])))  </td> 
    <td style="text-align:right" id="FSE_DESLOC_ESTADAS_ANTE_PER" itemid="FSE_DESLOC_ESTADAS_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_DESLOC_ESTADAS_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_DESLOC_ESTADAS_COMP_PER_P" >  @if (@ViewData["FSE_DESLOC_ESTADAS_REAL_PER"].Equals("calc") || @ViewData["FSE_DESLOC_ESTADAS_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_DESLOC_ESTADAS_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_DESLOC_ESTADAS_REAL_PER = Convert.ToInt32(@ViewData["FSE_DESLOC_ESTADAS_REAL_PER"]); decimal FSE_DESLOC_ESTADAS_ANTE_PER = Convert.ToInt32(@ViewData["FSE_DESLOC_ESTADAS_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((FSE_DESLOC_ESTADAS_REAL_PER / FSE_DESLOC_ESTADAS_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="FSE_DESLOC_ESTADAS_ANTE_TOTAL" itemid="FSE_DESLOC_ESTADAS_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_DESLOC_ESTADAS_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="FSE_DESLOC_ESTADAS_ANTE_ACUM" itemid="FSE_DESLOC_ESTADAS_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_DESLOC_ESTADAS_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="FSE_DESLOC_ESTADAS_REAL_ACUM" itemid="FSE_DESLOC_ESTADAS_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_DESLOC_ESTADAS_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="FSE_DESLOC_ESTADAS_COMP_ACUM_P" > @if (@ViewData["FSE_DESLOC_ESTADAS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_DESLOC_ESTADAS_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_DESLOC_ESTADAS_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_DESLOC_ESTADAS_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_DESLOC_ESTADAS_REAL_ACUM"]); decimal FSE_DESLOC_ESTADAS_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_DESLOC_ESTADAS_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_DESLOC_ESTADAS_REAL_ACUM / FSE_DESLOC_ESTADAS_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="FSE_DESLOC_ESTADAS_COMP_ACUM_B" > @if (@ViewData["FSE_DESLOC_ESTADAS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_DESLOC_ESTADAS_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_DESLOC_ESTADAS_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_DESLOC_ESTADAS_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_DESLOC_ESTADAS_REAL_ACUM"]); decimal FSE_DESLOC_ESTADAS_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_DESLOC_ESTADAS_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_DESLOC_ESTADAS_REAL_ACUM - FSE_DESLOC_ESTADAS_ANTE_ACUM)))))} } </td>
 </tr>
<tr>
    <td  class="webgrid-rubrica"> Transporte de Pessoal                           </td> 
    <td style="text-align:right" id="FSE_TRANSPORT_PESSOAL_REAL_PER" itemid="FSE_TRANSPORT_PESSOAL_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_TRANSPORT_PESSOAL_REAL_PER"])))  </td> 
    <td style="text-align:right" id="FSE_TRANSPORT_PESSOAL_ANTE_PER" itemid="FSE_TRANSPORT_PESSOAL_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_TRANSPORT_PESSOAL_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_TRANSPORT_PESSOAL_COMP_PER_P" >  @if (@ViewData["FSE_TRANSPORT_PESSOAL_REAL_PER"].Equals("calc") || @ViewData["FSE_TRANSPORT_PESSOAL_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_TRANSPORT_PESSOAL_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_TRANSPORT_PESSOAL_REAL_PER = Convert.ToInt32(@ViewData["FSE_TRANSPORT_PESSOAL_REAL_PER"]); decimal FSE_TRANSPORT_PESSOAL_ANTE_PER = Convert.ToInt32(@ViewData["FSE_TRANSPORT_PESSOAL_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((FSE_TRANSPORT_PESSOAL_REAL_PER / FSE_TRANSPORT_PESSOAL_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="FSE_TRANSPORT_PESSOAL_ANTE_TOTAL" itemid="FSE_TRANSPORT_PESSOAL_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_TRANSPORT_PESSOAL_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="FSE_TRANSPORT_PESSOAL_ANTE_ACUM" itemid="FSE_TRANSPORT_PESSOAL_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_TRANSPORT_PESSOAL_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="FSE_TRANSPORT_PESSOAL_REAL_ACUM" itemid="FSE_TRANSPORT_PESSOAL_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_TRANSPORT_PESSOAL_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="FSE_TRANSPORT_PESSOAL_COMP_ACUM_P" > @if (@ViewData["FSE_TRANSPORT_PESSOAL_REAL_ACUM"].Equals("calc") || @ViewData["FSE_TRANSPORT_PESSOAL_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_TRANSPORT_PESSOAL_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_TRANSPORT_PESSOAL_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_TRANSPORT_PESSOAL_REAL_ACUM"]); decimal FSE_TRANSPORT_PESSOAL_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_TRANSPORT_PESSOAL_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_TRANSPORT_PESSOAL_REAL_ACUM / FSE_TRANSPORT_PESSOAL_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="FSE_TRANSPORT_PESSOAL_COMP_ACUM_B" > @if (@ViewData["FSE_TRANSPORT_PESSOAL_REAL_ACUM"].Equals("calc") || @ViewData["FSE_TRANSPORT_PESSOAL_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_TRANSPORT_PESSOAL_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_TRANSPORT_PESSOAL_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_TRANSPORT_PESSOAL_REAL_ACUM"]); decimal FSE_TRANSPORT_PESSOAL_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_TRANSPORT_PESSOAL_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_TRANSPORT_PESSOAL_REAL_ACUM - FSE_TRANSPORT_PESSOAL_ANTE_ACUM)))))} } </td>
 </tr> 
<tr>
    <td  class="webgrid-rubrica"> Transporte de Mercadorias                           </td> 
    <td style="text-align:right" id="FSE_TRANSPORT_MERCAD_REAL_PER" itemid="FSE_TRANSPORT_MERCAD_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_TRANSPORT_MERCAD_REAL_PER"])))  </td> 
    <td style="text-align:right" id="FSE_TRANSPORT_MERCAD_ANTE_PER" itemid="FSE_TRANSPORT_MERCAD_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_TRANSPORT_MERCAD_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_TRANSPORT_MERCAD_COMP_PER_P" >  @if (@ViewData["FSE_TRANSPORT_MERCAD_REAL_PER"].Equals("calc") || @ViewData["FSE_TRANSPORT_MERCAD_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_TRANSPORT_MERCAD_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_TRANSPORT_MERCAD_REAL_PER = Convert.ToInt32(@ViewData["FSE_TRANSPORT_MERCAD_REAL_PER"]); decimal FSE_TRANSPORT_MERCAD_ANTE_PER = Convert.ToInt32(@ViewData["FSE_TRANSPORT_MERCAD_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((FSE_TRANSPORT_MERCAD_REAL_PER / FSE_TRANSPORT_MERCAD_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="FSE_TRANSPORT_MERCAD_ANTE_TOTAL" itemid="FSE_TRANSPORT_MERCAD_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_TRANSPORT_MERCAD_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="FSE_TRANSPORT_MERCAD_ANTE_ACUM" itemid="FSE_TRANSPORT_MERCAD_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_TRANSPORT_MERCAD_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="FSE_TRANSPORT_MERCAD_REAL_ACUM" itemid="FSE_TRANSPORT_MERCAD_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_TRANSPORT_MERCAD_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="FSE_TRANSPORT_MERCAD_COMP_ACUM_P" > @if (@ViewData["FSE_TRANSPORT_MERCAD_REAL_ACUM"].Equals("calc") || @ViewData["FSE_TRANSPORT_MERCAD_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_TRANSPORT_MERCAD_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_TRANSPORT_MERCAD_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_TRANSPORT_MERCAD_REAL_ACUM"]); decimal FSE_TRANSPORT_MERCAD_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_TRANSPORT_MERCAD_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_TRANSPORT_MERCAD_REAL_ACUM / FSE_TRANSPORT_MERCAD_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="FSE_TRANSPORT_MERCAD_COMP_ACUM_B" > @if (@ViewData["FSE_TRANSPORT_MERCAD_REAL_ACUM"].Equals("calc") || @ViewData["FSE_TRANSPORT_MERCAD_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_TRANSPORT_MERCAD_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_TRANSPORT_MERCAD_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_TRANSPORT_MERCAD_REAL_ACUM"]); decimal FSE_TRANSPORT_MERCAD_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_TRANSPORT_MERCAD_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_TRANSPORT_MERCAD_REAL_ACUM - FSE_TRANSPORT_MERCAD_ANTE_ACUM)))))} } </td>
 </tr>
<tr>
    <td  class="webgrid-rubrica"> Outros de Deslocações, Estadas e Transportes                           </td> 
    <td style="text-align:right" id="FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_PER" itemid="FSE_OUTROS_DESL_ESTAD_TRANSPORT_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_PER"])))  </td> 
    <td style="text-align:right" id="FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_PER" itemid="FSE_OUTROS_DESL_ESTAD_TRANSPORT_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_OUTROS_DESL_ESTAD_TRANSPORT_COMP_PER_P" >  @if (@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_PER"].Equals("calc") || @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_PER = Convert.ToInt32(@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_PER"]); decimal FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_PER = Convert.ToInt32(@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_PER / FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_TOTAL" itemid="FSE_OUTROS_DESL_ESTAD_TRANSPORT_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM" itemid="FSE_OUTROS_DESL_ESTAD_TRANSPORT_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_ACUM" itemid="FSE_OUTROS_DESL_ESTAD_TRANSPORT_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="FSE_OUTROS_DESL_ESTAD_TRANSPORT_COMP_ACUM_P" > @if (@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_ACUM"]); decimal FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_ACUM / FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="FSE_OUTROS_DESL_ESTAD_TRANSPORT_COMP_ACUM_B" > @if (@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_ACUM"]); decimal FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_ACUM - FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM)))))} } </td>
 </tr>

<tr>
    <td  class="webgrid-rubrica"> Serviços diversos                           </td> 
    <td class="webgrid-rubrica"  id="FSE_SERV_DIVERSOS_REAL_PER" itemid="FSE_SERV_DIVERSOS_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_SERV_DIVERSOS_REAL_PER"])))  </td> 
    <td class="webgrid-rubrica"  id="FSE_SERV_DIVERSOS_ANTE_PER" itemid="FSE_SERV_DIVERSOS_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_SERV_DIVERSOS_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_SERV_DIVERSOS_COMP_PER_P" >  @if (@ViewData["FSE_SERV_DIVERSOS_REAL_PER"].Equals("calc") || @ViewData["FSE_SERV_DIVERSOS_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_SERV_DIVERSOS_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_SERV_DIVERSOS_REAL_PER = Convert.ToInt32(@ViewData["FSE_SERV_DIVERSOS_REAL_PER"]); decimal FSE_SERV_DIVERSOS_ANTE_PER = Convert.ToInt32(@ViewData["FSE_SERV_DIVERSOS_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((FSE_SERV_DIVERSOS_REAL_PER / FSE_SERV_DIVERSOS_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td class="webgrid-rubrica"  id="FSE_SERV_DIVERSOS_ANTE_TOTAL" itemid="FSE_SERV_DIVERSOS_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_SERV_DIVERSOS_ANTE_TOTAL"])))  </td> 
    <td class="webgrid-rubrica"  id="FSE_SERV_DIVERSOS_ANTE_ACUM" itemid="FSE_SERV_DIVERSOS_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_SERV_DIVERSOS_ANTE_ACUM"])))  </td> 
    <td class="webgrid-rubrica"  id="FSE_SERV_DIVERSOS_REAL_ACUM" itemid="FSE_SERV_DIVERSOS_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_SERV_DIVERSOS_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="FSE_SERV_DIVERSOS_COMP_ACUM_P" > @if (@ViewData["FSE_SERV_DIVERSOS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_SERV_DIVERSOS_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_SERV_DIVERSOS_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_SERV_DIVERSOS_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_SERV_DIVERSOS_REAL_ACUM"]); decimal FSE_SERV_DIVERSOS_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_SERV_DIVERSOS_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_SERV_DIVERSOS_REAL_ACUM / FSE_SERV_DIVERSOS_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="FSE_SERV_DIVERSOS_COMP_ACUM_B" > @if (@ViewData["FSE_SERV_DIVERSOS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_SERV_DIVERSOS_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_SERV_DIVERSOS_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_SERV_DIVERSOS_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_SERV_DIVERSOS_REAL_ACUM"]); decimal FSE_SERV_DIVERSOS_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_SERV_DIVERSOS_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_SERV_DIVERSOS_REAL_ACUM - FSE_SERV_DIVERSOS_ANTE_ACUM)))))} } </td>
 </tr>
<tr>
    <td  class="webgrid-rubrica"> Rendas e Alugeres                           </td> 
    <td style="text-align:right" id="FSE_RENDAS_ALUGUERES_REAL_PER" itemid="FSE_RENDAS_ALUGUERES_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_RENDAS_ALUGUERES_REAL_PER"])))  </td> 
    <td style="text-align:right" id="FSE_RENDAS_ALUGUERES_ANTE_PER" itemid="FSE_RENDAS_ALUGUERES_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_RENDAS_ALUGUERES_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_RENDAS_ALUGUERES_COMP_PER_P" >  @if (@ViewData["FSE_RENDAS_ALUGUERES_REAL_PER"].Equals("calc") || @ViewData["FSE_RENDAS_ALUGUERES_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_RENDAS_ALUGUERES_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_RENDAS_ALUGUERES_REAL_PER = Convert.ToInt32(@ViewData["FSE_RENDAS_ALUGUERES_REAL_PER"]); decimal FSE_RENDAS_ALUGUERES_ANTE_PER = Convert.ToInt32(@ViewData["FSE_RENDAS_ALUGUERES_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((FSE_RENDAS_ALUGUERES_REAL_PER / FSE_RENDAS_ALUGUERES_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="FSE_RENDAS_ALUGUERES_ANTE_TOTAL" itemid="FSE_RENDAS_ALUGUERES_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_RENDAS_ALUGUERES_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="FSE_RENDAS_ALUGUERES_ANTE_ACUM" itemid="FSE_RENDAS_ALUGUERES_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_RENDAS_ALUGUERES_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="FSE_RENDAS_ALUGUERES_REAL_ACUM" itemid="FSE_RENDAS_ALUGUERES_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_RENDAS_ALUGUERES_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="FSE_RENDAS_ALUGUERES_COMP_ACUM_P" > @if (@ViewData["FSE_RENDAS_ALUGUERES_REAL_ACUM"].Equals("calc") || @ViewData["FSE_RENDAS_ALUGUERES_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_RENDAS_ALUGUERES_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_RENDAS_ALUGUERES_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_RENDAS_ALUGUERES_REAL_ACUM"]); decimal FSE_RENDAS_ALUGUERES_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_RENDAS_ALUGUERES_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_RENDAS_ALUGUERES_REAL_ACUM / FSE_RENDAS_ALUGUERES_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="FSE_RENDAS_ALUGUERES_COMP_ACUM_B" > @if (@ViewData["FSE_RENDAS_ALUGUERES_REAL_ACUM"].Equals("calc") || @ViewData["FSE_RENDAS_ALUGUERES_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_RENDAS_ALUGUERES_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_RENDAS_ALUGUERES_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_RENDAS_ALUGUERES_REAL_ACUM"]); decimal FSE_RENDAS_ALUGUERES_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_RENDAS_ALUGUERES_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_RENDAS_ALUGUERES_REAL_ACUM - FSE_RENDAS_ALUGUERES_ANTE_ACUM)))))} } </td>
 </tr>
<tr>
    <td  class="webgrid-rubrica"> Comunicação                           </td> 
    <td style="text-align:right" id="FSE_COMUNICACAO_REAL_PER" itemid="FSE_COMUNICACAO_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_COMUNICACAO_REAL_PER"])))  </td> 
    <td style="text-align:right" id="FSE_COMUNICACAO_ANTE_PER" itemid="FSE_COMUNICACAO_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_COMUNICACAO_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_COMUNICACAO_COMP_PER_P" >  @if (@ViewData["FSE_COMUNICACAO_REAL_PER"].Equals("calc") || @ViewData["FSE_COMUNICACAO_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_COMUNICACAO_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_COMUNICACAO_REAL_PER = Convert.ToInt32(@ViewData["FSE_COMUNICACAO_REAL_PER"]); decimal FSE_COMUNICACAO_ANTE_PER = Convert.ToInt32(@ViewData["FSE_COMUNICACAO_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((FSE_COMUNICACAO_REAL_PER / FSE_COMUNICACAO_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="FSE_COMUNICACAO_ANTE_TOTAL" itemid="FSE_COMUNICACAO_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_COMUNICACAO_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="FSE_COMUNICACAO_ANTE_ACUM" itemid="FSE_COMUNICACAO_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_COMUNICACAO_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="FSE_COMUNICACAO_REAL_ACUM" itemid="FSE_COMUNICACAO_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_COMUNICACAO_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="FSE_COMUNICACAO_COMP_ACUM_P" > @if (@ViewData["FSE_COMUNICACAO_REAL_ACUM"].Equals("calc") || @ViewData["FSE_COMUNICACAO_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_COMUNICACAO_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_COMUNICACAO_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_COMUNICACAO_REAL_ACUM"]); decimal FSE_COMUNICACAO_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_COMUNICACAO_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_COMUNICACAO_REAL_ACUM / FSE_COMUNICACAO_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="FSE_COMUNICACAO_COMP_ACUM_B" > @if (@ViewData["FSE_COMUNICACAO_REAL_ACUM"].Equals("calc") || @ViewData["FSE_COMUNICACAO_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_COMUNICACAO_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_COMUNICACAO_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_COMUNICACAO_REAL_ACUM"]); decimal FSE_COMUNICACAO_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_COMUNICACAO_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_COMUNICACAO_REAL_ACUM - FSE_COMUNICACAO_ANTE_ACUM)))))} } </td>
 </tr>
    <tr>
    <td  class="webgrid-rubrica"> Seguros                           </td> 
    <td style="text-align:right" id="FSE_SEGUROS_REAL_PER" itemid="FSE_SEGUROS_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_SEGUROS_REAL_PER"])))  </td> 
    <td style="text-align:right" id="FSE_SEGUROS_ANTE_PER" itemid="FSE_SEGUROS_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_SEGUROS_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_SEGUROS_COMP_PER_P" >  @if (@ViewData["FSE_SEGUROS_REAL_PER"].Equals("calc") || @ViewData["FSE_SEGUROS_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_SEGUROS_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_SEGUROS_REAL_PER = Convert.ToInt32(@ViewData["FSE_SEGUROS_REAL_PER"]); decimal FSE_SEGUROS_ANTE_PER = Convert.ToInt32(@ViewData["FSE_SEGUROS_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((FSE_SEGUROS_REAL_PER / FSE_SEGUROS_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="FSE_SEGUROS_ANTE_TOTAL" itemid="FSE_SEGUROS_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_SEGUROS_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="FSE_SEGUROS_ANTE_ACUM" itemid="FSE_SEGUROS_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_SEGUROS_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="FSE_SEGUROS_REAL_ACUM" itemid="FSE_SEGUROS_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_SEGUROS_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="FSE_SEGUROS_COMP_ACUM_P" > @if (@ViewData["FSE_SEGUROS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_SEGUROS_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_SEGUROS_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_SEGUROS_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_SEGUROS_REAL_ACUM"]); decimal FSE_SEGUROS_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_SEGUROS_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_SEGUROS_REAL_ACUM / FSE_SEGUROS_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="FSE_SEGUROS_COMP_ACUM_B" > @if (@ViewData["FSE_SEGUROS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_SEGUROS_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_SEGUROS_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_SEGUROS_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_SEGUROS_REAL_ACUM"]); decimal FSE_SEGUROS_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_SEGUROS_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_SEGUROS_REAL_ACUM - FSE_SEGUROS_ANTE_ACUM)))))} } </td>
 </tr>
<tr>
    <td  class="webgrid-rubrica"> Royalities                           </td> 
    <td style="text-align:right" id="FSE_ROYALITIES_REAL_PER" itemid="FSE_ROYALITIES_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_ROYALITIES_REAL_PER"])))  </td> 
    <td style="text-align:right" id="FSE_ROYALITIES_ANTE_PER" itemid="FSE_ROYALITIES_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_ROYALITIES_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_ROYALITIES_COMP_PER_P" >  @if (@ViewData["FSE_ROYALITIES_REAL_PER"].Equals("calc") || @ViewData["FSE_ROYALITIES_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_ROYALITIES_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_ROYALITIES_REAL_PER = Convert.ToInt32(@ViewData["FSE_ROYALITIES_REAL_PER"]); decimal FSE_ROYALITIES_ANTE_PER = Convert.ToInt32(@ViewData["FSE_ROYALITIES_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((FSE_ROYALITIES_REAL_PER / FSE_ROYALITIES_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="FSE_ROYALITIES_ANTE_TOTAL" itemid="FSE_ROYALITIES_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_ROYALITIES_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="FSE_ROYALITIES_ANTE_ACUM" itemid="FSE_ROYALITIES_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_ROYALITIES_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="FSE_ROYALITIES_REAL_ACUM" itemid="FSE_ROYALITIES_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_ROYALITIES_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="FSE_ROYALITIES_COMP_ACUM_P" > @if (@ViewData["FSE_ROYALITIES_REAL_ACUM"].Equals("calc") || @ViewData["FSE_ROYALITIES_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_ROYALITIES_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_ROYALITIES_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_ROYALITIES_REAL_ACUM"]); decimal FSE_ROYALITIES_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_ROYALITIES_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_ROYALITIES_REAL_ACUM / FSE_ROYALITIES_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="FSE_ROYALITIES_COMP_ACUM_B" > @if (@ViewData["FSE_ROYALITIES_REAL_ACUM"].Equals("calc") || @ViewData["FSE_ROYALITIES_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_ROYALITIES_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_ROYALITIES_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_ROYALITIES_REAL_ACUM"]); decimal FSE_ROYALITIES_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_ROYALITIES_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_ROYALITIES_REAL_ACUM - FSE_ROYALITIES_ANTE_ACUM)))))} } </td>
 </tr>  
<tr>
    <td  class="webgrid-rubrica"> Contensioso e Notariado                           </td> 
    <td style="text-align:right" id="FSE_CONTENS_NOTARIADO_REAL_PER" itemid="FSE_CONTENS_NOTARIADO_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_CONTENS_NOTARIADO_REAL_PER"])))  </td> 
    <td style="text-align:right" id="FSE_CONTENS_NOTARIADO_ANTE_PER" itemid="FSE_CONTENS_NOTARIADO_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_CONTENS_NOTARIADO_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_CONTENS_NOTARIADO_COMP_PER_P" >  @if (@ViewData["FSE_CONTENS_NOTARIADO_REAL_PER"].Equals("calc") || @ViewData["FSE_CONTENS_NOTARIADO_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_CONTENS_NOTARIADO_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_CONTENS_NOTARIADO_REAL_PER = Convert.ToInt32(@ViewData["FSE_CONTENS_NOTARIADO_REAL_PER"]); decimal FSE_CONTENS_NOTARIADO_ANTE_PER = Convert.ToInt32(@ViewData["FSE_CONTENS_NOTARIADO_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((FSE_CONTENS_NOTARIADO_REAL_PER / FSE_CONTENS_NOTARIADO_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="FSE_CONTENS_NOTARIADO_ANTE_TOTAL" itemid="FSE_CONTENS_NOTARIADO_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_CONTENS_NOTARIADO_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="FSE_CONTENS_NOTARIADO_ANTE_ACUM" itemid="FSE_CONTENS_NOTARIADO_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_CONTENS_NOTARIADO_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="FSE_CONTENS_NOTARIADO_REAL_ACUM" itemid="FSE_CONTENS_NOTARIADO_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_CONTENS_NOTARIADO_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="FSE_CONTENS_NOTARIADO_COMP_ACUM_P" > @if (@ViewData["FSE_CONTENS_NOTARIADO_REAL_ACUM"].Equals("calc") || @ViewData["FSE_CONTENS_NOTARIADO_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_CONTENS_NOTARIADO_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_CONTENS_NOTARIADO_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_CONTENS_NOTARIADO_REAL_ACUM"]); decimal FSE_CONTENS_NOTARIADO_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_CONTENS_NOTARIADO_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_CONTENS_NOTARIADO_REAL_ACUM / FSE_CONTENS_NOTARIADO_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="FSE_CONTENS_NOTARIADO_COMP_ACUM_B" > @if (@ViewData["FSE_CONTENS_NOTARIADO_REAL_ACUM"].Equals("calc") || @ViewData["FSE_CONTENS_NOTARIADO_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_CONTENS_NOTARIADO_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_CONTENS_NOTARIADO_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_CONTENS_NOTARIADO_REAL_ACUM"]); decimal FSE_CONTENS_NOTARIADO_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_CONTENS_NOTARIADO_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_CONTENS_NOTARIADO_REAL_ACUM - FSE_CONTENS_NOTARIADO_ANTE_ACUM)))))} } </td>
 </tr>
<tr>
    <td  class="webgrid-rubrica"> Despesas de Representação                           </td> 
    <td style="text-align:right" id="FSE_DESP_RESPRESENT_REAL_PER" itemid="FSE_DESP_RESPRESENT_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_DESP_RESPRESENT_REAL_PER"])))  </td> 
    <td style="text-align:right" id="FSE_DESP_RESPRESENT_ANTE_PER" itemid="FSE_DESP_RESPRESENT_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_DESP_RESPRESENT_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_DESP_RESPRESENT_COMP_PER_P" >  @if (@ViewData["FSE_DESP_RESPRESENT_REAL_PER"].Equals("calc") || @ViewData["FSE_DESP_RESPRESENT_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_DESP_RESPRESENT_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_DESP_RESPRESENT_REAL_PER = Convert.ToInt32(@ViewData["FSE_DESP_RESPRESENT_REAL_PER"]); decimal FSE_DESP_RESPRESENT_ANTE_PER = Convert.ToInt32(@ViewData["FSE_DESP_RESPRESENT_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((FSE_DESP_RESPRESENT_REAL_PER / FSE_DESP_RESPRESENT_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="FSE_DESP_RESPRESENT_ANTE_TOTAL" itemid="FSE_DESP_RESPRESENT_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_DESP_RESPRESENT_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="FSE_DESP_RESPRESENT_ANTE_ACUM" itemid="FSE_DESP_RESPRESENT_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_DESP_RESPRESENT_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="FSE_DESP_RESPRESENT_REAL_ACUM" itemid="FSE_DESP_RESPRESENT_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_DESP_RESPRESENT_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="FSE_DESP_RESPRESENT_COMP_ACUM_P" > @if (@ViewData["FSE_DESP_RESPRESENT_REAL_ACUM"].Equals("calc") || @ViewData["FSE_DESP_RESPRESENT_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_DESP_RESPRESENT_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_DESP_RESPRESENT_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_DESP_RESPRESENT_REAL_ACUM"]); decimal FSE_DESP_RESPRESENT_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_DESP_RESPRESENT_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_DESP_RESPRESENT_REAL_ACUM / FSE_DESP_RESPRESENT_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="FSE_DESP_RESPRESENT_COMP_ACUM_B" > @if (@ViewData["FSE_DESP_RESPRESENT_REAL_ACUM"].Equals("calc") || @ViewData["FSE_DESP_RESPRESENT_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_DESP_RESPRESENT_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_DESP_RESPRESENT_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_DESP_RESPRESENT_REAL_ACUM"]); decimal FSE_DESP_RESPRESENT_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_DESP_RESPRESENT_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_DESP_RESPRESENT_REAL_ACUM - FSE_DESP_RESPRESENT_ANTE_ACUM)))))} } </td>
 </tr>
<tr>
    <td  class="webgrid-rubrica"> Limpeza, Higiene e Conforto                           </td> 
    <td style="text-align:right" id="FSE_LIMP_HIG_CONFORT_REAL_PER" itemid="FSE_LIMP_HIG_CONFORT_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_LIMP_HIG_CONFORT_REAL_PER"])))  </td> 
    <td style="text-align:right" id="FSE_LIMP_HIG_CONFORT_ANTE_PER" itemid="FSE_LIMP_HIG_CONFORT_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_LIMP_HIG_CONFORT_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_LIMP_HIG_CONFORT_COMP_PER_P" >  @if (@ViewData["FSE_LIMP_HIG_CONFORT_REAL_PER"].Equals("calc") || @ViewData["FSE_LIMP_HIG_CONFORT_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_LIMP_HIG_CONFORT_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_LIMP_HIG_CONFORT_REAL_PER = Convert.ToInt32(@ViewData["FSE_LIMP_HIG_CONFORT_REAL_PER"]); decimal FSE_LIMP_HIG_CONFORT_ANTE_PER = Convert.ToInt32(@ViewData["FSE_LIMP_HIG_CONFORT_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((FSE_LIMP_HIG_CONFORT_REAL_PER / FSE_LIMP_HIG_CONFORT_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="FSE_LIMP_HIG_CONFORT_ANTE_TOTAL" itemid="FSE_LIMP_HIG_CONFORT_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_LIMP_HIG_CONFORT_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="FSE_LIMP_HIG_CONFORT_ANTE_ACUM" itemid="FSE_LIMP_HIG_CONFORT_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_LIMP_HIG_CONFORT_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="FSE_LIMP_HIG_CONFORT_REAL_ACUM" itemid="FSE_LIMP_HIG_CONFORT_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_LIMP_HIG_CONFORT_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="FSE_LIMP_HIG_CONFORT_COMP_ACUM_P" > @if (@ViewData["FSE_LIMP_HIG_CONFORT_REAL_ACUM"].Equals("calc") || @ViewData["FSE_LIMP_HIG_CONFORT_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_LIMP_HIG_CONFORT_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_LIMP_HIG_CONFORT_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_LIMP_HIG_CONFORT_REAL_ACUM"]); decimal FSE_LIMP_HIG_CONFORT_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_LIMP_HIG_CONFORT_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_LIMP_HIG_CONFORT_REAL_ACUM / FSE_LIMP_HIG_CONFORT_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="FSE_LIMP_HIG_CONFORT_COMP_ACUM_B" > @if (@ViewData["FSE_LIMP_HIG_CONFORT_REAL_ACUM"].Equals("calc") || @ViewData["FSE_LIMP_HIG_CONFORT_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_LIMP_HIG_CONFORT_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_LIMP_HIG_CONFORT_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_LIMP_HIG_CONFORT_REAL_ACUM"]); decimal FSE_LIMP_HIG_CONFORT_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_LIMP_HIG_CONFORT_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_LIMP_HIG_CONFORT_REAL_ACUM - FSE_LIMP_HIG_CONFORT_ANTE_ACUM)))))} } </td>
 </tr>
<tr>
    <td  class="webgrid-rubrica"> Outros de Serviços Diversos                           </td> 
    <td style="text-align:right" id="FSE_OUTROS_SERV_DIVERSOS_REAL_PER" itemid="FSE_OUTROS_SERV_DIVERSOS_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_OUTROS_SERV_DIVERSOS_REAL_PER"])))  </td> 
    <td style="text-align:right" id="FSE_OUTROS_SERV_DIVERSOS_ANTE_PER" itemid="FSE_OUTROS_SERV_DIVERSOS_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_OUTROS_SERV_DIVERSOS_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="FSE_OUTROS_SERV_DIVERSOS_COMP_PER_P" >  @if (@ViewData["FSE_OUTROS_SERV_DIVERSOS_REAL_PER"].Equals("calc") || @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_OUTROS_SERV_DIVERSOS_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_OUTROS_SERV_DIVERSOS_REAL_PER = Convert.ToInt32(@ViewData["FSE_OUTROS_SERV_DIVERSOS_REAL_PER"]); decimal FSE_OUTROS_SERV_DIVERSOS_ANTE_PER = Convert.ToInt32(@ViewData["FSE_OUTROS_SERV_DIVERSOS_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((FSE_OUTROS_SERV_DIVERSOS_REAL_PER / FSE_OUTROS_SERV_DIVERSOS_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="FSE_OUTROS_SERV_DIVERSOS_ANTE_TOTAL" itemid="FSE_OUTROS_SERV_DIVERSOS_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_OUTROS_SERV_DIVERSOS_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM" itemid="FSE_OUTROS_SERV_DIVERSOS_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="FSE_OUTROS_SERV_DIVERSOS_REAL_ACUM" itemid="FSE_OUTROS_SERV_DIVERSOS_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["FSE_OUTROS_SERV_DIVERSOS_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="FSE_OUTROS_SERV_DIVERSOS_COMP_ACUM_P" > @if (@ViewData["FSE_OUTROS_SERV_DIVERSOS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_OUTROS_SERV_DIVERSOS_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_OUTROS_SERV_DIVERSOS_REAL_ACUM"]); decimal FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_OUTROS_SERV_DIVERSOS_REAL_ACUM / FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="FSE_OUTROS_SERV_DIVERSOS_COMP_ACUM_B" > @if (@ViewData["FSE_OUTROS_SERV_DIVERSOS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal FSE_OUTROS_SERV_DIVERSOS_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_OUTROS_SERV_DIVERSOS_REAL_ACUM"]); decimal FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((FSE_OUTROS_SERV_DIVERSOS_REAL_ACUM - FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM)))))} } </td>
 </tr>





  </table>

<div class="page-breaker"></div>

<table id="graficos_Peso_FSE_Comp" class="webgrid-table">
    <tr>
        <td style="width:100%" colspan="2">
            <div>
                <canvas id="Peso_FSE_Comp" style="width:672px; height:400px"></canvas>
            </div>
        </td>
    </tr>
</table>
<div class="page-breaker"> </div>
<table id="graficos" class="webgrid-table">

  
    @Html.Action("FSE_MENSAL_COMP_PARTIAL_001", "BI", new { Pesquisa_User = "tjalmeida" })
    @Html.Action("FSE_MENSAL_COMP_PARTIAL_002", "BI", new { Pesquisa_User = "tjalmeida" })













</table>


@*<div id="GRAVAROPER_DIRXX" style="display:none">


    @using (Html.BeginForm("BI_CONF_VERSAO_VARIAVEIS_USER_ALT", "BI", FormMethod.Get))
    {
        <div id="GRAVAR" class="GRAVAR">
            @Html.ActionLink("GRAVAR", "BI_CONF_VERSAO_VARIAVEIS_USER_ALT", "BI", new
{
    Pesquisa_User = "tjalmeida",
    id_camp = "id_camp",
    campocalc_resultado = "campocalc_resultado"
}, null)
        </div>

    }
</div>*@

<div id="CONFIGURARXX" style="display:none">


    @using (Html.BeginForm("GRC_ALERTAS_RESUMO", "GRC", FormMethod.Get))
    {
        <div id="CONFIGURAR_CAMPO" class="CONFIGURAR_CAMPO">
            @Html.ActionLink("Configurar", "BI_CAMP_CALC", "BI", new { id_camp_calc = "id_camp_calc", Pesquisa_User = "tjalmeida", versao = "versao" }, null)
        </div>

    }
</div>


@*<div id="grid_mes_ini_ano_n" class="oculta_na_impressao_ tooltip"> <span class="tooltiptext">Clique para definir outro mês, pressionando a tecla Enter para Gravar. </span> @Html.Action("BI_CONF_VERSAO_VARIAVEIS_USER_Result", "BI", new { Pesquisa_User = "tjalmeida", versao = @ViewData["versao_real"], ANO = "", MES_INI_PER = "MES_INI_PER", MES_FIN_PER = "", MES_ACUM = "", TIPO_APUR_CMVMC = "" }) </div>*@
<div id="grid_mes_ini_ano_n" class="oculta_na_impressao_ tooltip">
    @using (Html.BeginForm("BI_CONF_VERSAO_VARIAVEIS_USER_ALT", "BI", new { Pesquisa_User = "tjalmeida", versao = @ViewData["versao_real"], id_camp = ViewData["ID_MES_INI_PER_REAL"], FormMethod.Get }))
    { <div class="tooltip" style="width:100%">
        @Html.DropDownList("campocalc_resultado", new SelectList(ViewBag.LISTA_MESES_REAL, "id_mes", "mes", ViewData["MES_INI_PER_REAL"]), new
   {
       @class = "form -control",
       @style = "width:100%; height:30px; text-align-last:center;",
       onchange = "this.form.submit();"@*, dir = "rtl"*@ })
        <span class="tooltiptext">Clique na lista para selecionar outro mês para a Análise do Periodo Corrente.</span>
    </div>
    }
</div>
@*<div id="grid_mes_ini_ano_n-1" class="oculta_na_impressao_ tooltip"> <span class="tooltiptext">Clique para definir outro mês, pressionando a tecla Enter para Gravar. </span> @Html.Action("BI_CONF_VERSAO_VARIAVEIS_USER_Result", "BI", new { Pesquisa_User = "tjalmeida", versao = @ViewData["versao_ante"], ANO = "", MES_INI_PER = "MES_INI_PER", MES_FIN_PER = "", MES_ACUM = "", TIPO_APUR_CMVMC = "" }) </div>*@
<div id="grid_mes_ini_ano_n-1" class="oculta_na_impressao_ tooltip">
    @using (Html.BeginForm("BI_CONF_VERSAO_VARIAVEIS_USER_ALT", "BI", new { Pesquisa_User = "tjalmeida", versao = @ViewData["versao_ante"], id_camp = ViewData["ID_MES_INI_PER_ANTE"], FormMethod.Get }))
            { <div class="tooltip" style="width:100%">
        @Html.DropDownList("campocalc_resultado", new SelectList(ViewBag.LISTA_MESES_ANTE, "id_mes", "mes", ViewData["MES_INI_PER_ANTE"]), new { @class = "form -control", @style = "width:100%; height:30px; text-align-last:center;", onchange = "this.form.submit();" })
        <span class="tooltiptext">Clique na lista para selecionar outro mês para a Análise do Periodo Corrente.</span>
    </div>
    }
</div>
@*<div id="grid_mes_fin_ano_n" class="oculta_na_impressao_ tooltip"> <span class="tooltiptext">Clique para definir outro mês, pressionando a tecla Enter para Gravar. </span> @Html.Action("BI_CONF_VERSAO_VARIAVEIS_USER_Result", "BI", new { Pesquisa_User = "tjalmeida", versao = @ViewData["versao_real"], ANO = "", MES_INI_PER = "", MES_FIN_PER = "MES_FIN_PER", MES_ACUM = "", TIPO_APUR_CMVMC = "" }) </div>*@
<div id="grid_mes_fin_ano_n" class="oculta_na_impressao_ tooltip">
    @using (Html.BeginForm("BI_CONF_VERSAO_VARIAVEIS_USER_ALT", "BI", new { Pesquisa_User = "tjalmeida", versao = @ViewData["versao_real"], id_camp = ViewData["ID_MES_FIN_PER_REAL"], FormMethod.Get }))
    { <div class="tooltip" style="width:100%">
        @Html.DropDownList("campocalc_resultado", new SelectList(ViewBag.LISTA_MESES_REAL, "id_mes", "mes", ViewData["MES_FIN_PER_REAL"]), new { @class = "form -control", @style = "width:100%; height:30px; text-align-last:center;", onchange = "this.form.submit();" })
        <span class="tooltiptext">Clique na lista para selecionar outro mês para a Análise do Periodo Corrente.</span>
    </div>
    }
</div>
@*<div id="grid_mes_fin_ano_n-1" class="oculta_na_impressao_ tooltip"> <span class="tooltiptext">Clique para definir outro mês, pressionando a tecla Enter para Gravar. </span> @Html.Action("BI_CONF_VERSAO_VARIAVEIS_USER_Result", "BI", new { Pesquisa_User = "tjalmeida", versao = @ViewData["versao_ante"], ANO = "", MES_INI_PER = "", MES_FIN_PER = "MES_FIN_PER", MES_ACUM = "", TIPO_APUR_CMVMC = "" }) </div>*@
<div id="grid_mes_fin_ano_n-1" class="oculta_na_impressao_ tooltip">
    @using (Html.BeginForm("BI_CONF_VERSAO_VARIAVEIS_USER_ALT", "BI", new { Pesquisa_User = "tjalmeida", versao = @ViewData["versao_ante"], id_camp = ViewData["ID_MES_FIN_PER_ANTE"], FormMethod.Get }))
            { <div class="tooltip" style="width:100%">
        @Html.DropDownList("campocalc_resultado", new SelectList(ViewBag.LISTA_MESES_ANTE, "id_mes", "mes", ViewData["MES_FIN_PER_ANTE"]), new { @class = "form -control", @style = "width:100%; height:30px; text-align-last:center;", onchange = "this.form.submit();" })
        <span class="tooltiptext">Clique na lista para selecionar outro mês para a Análise do Periodo Corrente.</span>
    </div>
    }
</div>
@*<div id="grid_mes_acum_ano_n" class="oculta_na_impressao_ tooltip"> <span class="tooltiptext">Clique para definir outro mês, pressionando a tecla Enter para Gravar. </span> @Html.Action("BI_CONF_VERSAO_VARIAVEIS_USER_Result", "BI", new { Pesquisa_User = "tjalmeida", versao = @ViewData["versao_real"], ANO = "", MES_INI_PER = "", MES_FIN_PER = "", MES_ACUM = "MES_ACUM", TIPO_APUR_CMVMC = "" }) </div>*@
<div id="grid_mes_acum_ano_n" class="oculta_na_impressao_ tooltip">
    @using (Html.BeginForm("BI_CONF_VERSAO_VARIAVEIS_USER_ALT", "BI", new { Pesquisa_User = "tjalmeida", versao = @ViewData["versao_real"], id_camp = ViewData["ID_MES_ACUM_REAL"], FormMethod.Get }))
            { <div class="tooltip" style="width:100%">
        @Html.DropDownList("campocalc_resultado", new SelectList(ViewBag.LISTA_MESES_REAL, "id_mes", "mes", ViewData["MES_ACUM_REAL"]), new { @class = "form -control", @style = "width:100%; height:30px; text-align-last:center;", onchange = "this.form.submit();" })
        <span class="tooltiptext">Clique na lista para selecionar outro mês para a Análise do Acumulado.</span>
    </div>
    }
</div>
@*<div id="grid_mes_acum_ano_n-1" class="oculta_na_impressao_ tooltip"> <span class="tooltiptext">Clique para definir outro mês, pressionando a tecla Enter para Gravar. </span> @Html.Action("BI_CONF_VERSAO_VARIAVEIS_USER_Result", "BI", new { Pesquisa_User = "tjalmeida", versao = @ViewData["versao_ante"], ANO = "", MES_INI_PER = "", MES_FIN_PER = "", MES_ACUM = "MES_ACUM", TIPO_APUR_CMVMC = "" }) </div>*@
<div id="grid_mes_acum_ano_n-1" class="oculta_na_impressao_ tooltip">
    @using (Html.BeginForm("BI_CONF_VERSAO_VARIAVEIS_USER_ALT", "BI", new { Pesquisa_User = "tjalmeida", versao = @ViewData["versao_ante"], id_camp = ViewData["ID_MES_ACUM_ANTE"], FormMethod.Get }))
    { <div class="tooltip" style="width:100%">
        @Html.DropDownList("campocalc_resultado", new SelectList(ViewBag.LISTA_MESES_ANTE, "id_mes", "mes", ViewData["MES_ACUM_ANTE"]), new { @class = "form -control", @style = "width:100%; height:30px; text-align-last:center;", onchange = "this.form.submit();" })
        <span class="tooltiptext">Clique na lista para selecionar outro mês para a Análise do Acumulado.</span>
    </div>
    }
</div>

@section scripts {


@{int DESATIVA_DATATBLE = Convert.ToInt32(@ViewData["desativa_datatable"]);
}
@if (DESATIVA_DATATBLE.Equals(1)) { }
else
{

    <script src="@Url.Content("~/Scripts/jquery.dataTables.min.js")"></script>
    <script src="@Url.Content("~/Scripts/dataTables.fixedColumns.min.js")"></script>
    <script src="@Url.Content("~/Scripts/dataTables.buttons.min.js")"></script>
    <script src="@Url.Content("~/Scripts/buttons.flash.min.js")"></script>
    <script src="@Url.Content("~/Scripts/jszip.min.js")"></script>
    <script src="@Url.Content("~/Scripts/pdfmake.min.js")"></script>
    <script src="@Url.Content("~/Scripts/vfs_fonts.js")"></script>
    <script src="@Url.Content("~/Scripts/buttons.html5.min.js")"></script>
    <script src="@Url.Content("~/Scripts/buttons.print.min.js")"></script>
    <script src="@Url.Content("~/Scripts/dataTables.responsive.min.js")"></script>
    <script src="@Url.Content("~/Scripts/dataTables.fixedHeader.min.js")"></script>
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/fixedheader/3.1.2/css/fixedHeader.dataTables.min.css">
}

<script src="@Url.Content("~/Scripts/chart.js@2.8.0.js")"></script>

    <script type="text/javascript">

        //NOTA TA: REFRESCA PAGINA DE 20 EM 20 SEGUNDOS SE HEXISTIREM CÉLULAS A CALCULAR
        
        setTimeout(function() {
            var num_car = $('#FSE_MENSAL_COMP td').text().length
            var num_car_ = $('#FSE_MENSAL_COMP td').text().replace('calc','').length
     
            if(num_car==num_car_) {} else 
            {
                window.location.reload(1);
                  
            }
        }, 20000);



        $(document).ready(function () {

            var num_car = $('#FSE_MENSAL_COMP td').text().length
            var num_car_ = $('#FSE_MENSAL_COMP td').text().replace('calc','').length
     
            if(num_car==num_car_) {} else 
            {
                
                $(".calcular").attr('style', 'display:block');
            }



@*<script>*@

        var ANO_VERSAO_REAL = @Html.Raw((string.Format("{0:0}", ViewData["ANO_VERSAO_REAL"])));
        var ANO_VERSAO_REAL_ = ANO_VERSAO_REAL.toString().substr(ANO_VERSAO_REAL.toString().length - 2,ANO_VERSAO_REAL.toString().length);

        var ANO_VERSAO_ANTE = @Html.Raw((string.Format("{0:0}", ViewData["ANO_VERSAO_ANTE"])));
        var ANO_VERSAO_ANTE_ = ANO_VERSAO_ANTE.toString().substr(ANO_VERSAO_ANTE.toString().length - 2,ANO_VERSAO_ANTE.toString().length);



        if (@Html.Raw(Json.Encode(ViewData["FSE_SUBCONTRATOS_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_SUBCONTRATOS_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_SUBCONTRATOS_VN_REAL_ACUM = 0; } else { var PESO_FSE_SUBCONTRATOS_VN_REAL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_REAL_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_REAL_ACUM"]))); };
            if (@Html.Raw(Json.Encode(ViewData["FSE_SUBCONTRATOS_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_SUBCONTRATOS_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_SUBCONTRATOS_VN_ANTE_ACUM = 0; } else { var PESO_FSE_SUBCONTRATOS_VN_ANTE_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANTE_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANTE_ACUM"]))); };
                if (PESO_FSE_SUBCONTRATOS_VN_REAL_ACUM>PESO_FSE_SUBCONTRATOS_VN_ANTE_ACUM) {var PESO_FSE_SUBCONTRATOS_NAO_MOSTRAR = PESO_FSE_SUBCONTRATOS_VN_ANTE_ACUM; var PESO_FSE_SUBCONTRATOS_INEFICIENCIA = PESO_FSE_SUBCONTRATOS_VN_REAL_ACUM-PESO_FSE_SUBCONTRATOS_VN_ANTE_ACUM;} else {var PESO_FSE_SUBCONTRATOS_NAO_MOSTRAR = PESO_FSE_SUBCONTRATOS_VN_REAL_ACUM; var PESO_FSE_SUBCONTRATOS_EFICIENCIA = PESO_FSE_SUBCONTRATOS_VN_ANTE_ACUM-PESO_FSE_SUBCONTRATOS_VN_REAL_ACUM;}

                if (@Html.Raw(Json.Encode(ViewData["FSE_TRAB_ESPECIAL_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_TRAB_ESPECIAL_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_TRAB_ESPECIAL_VN_REAL_ACUM = 0; } else { var PESO_FSE_TRAB_ESPECIAL_VN_REAL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_REAL_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_REAL_ACUM"]))); };
                    if (@Html.Raw(Json.Encode(ViewData["FSE_TRAB_ESPECIAL_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_TRAB_ESPECIAL_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_TRAB_ESPECIAL_VN_ANTE_ACUM = 0; } else { var PESO_FSE_TRAB_ESPECIAL_VN_ANTE_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANTE_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANTE_ACUM"]))); };
                        if (PESO_FSE_TRAB_ESPECIAL_VN_REAL_ACUM>PESO_FSE_TRAB_ESPECIAL_VN_ANTE_ACUM) {var PESO_FSE_TRAB_ESPECIAL_NAO_MOSTRAR = PESO_FSE_TRAB_ESPECIAL_VN_ANTE_ACUM; var PESO_FSE_TRAB_ESPECIAL_INEFICIENCIA = PESO_FSE_TRAB_ESPECIAL_VN_REAL_ACUM-PESO_FSE_TRAB_ESPECIAL_VN_ANTE_ACUM;} else {var PESO_FSE_TRAB_ESPECIAL_NAO_MOSTRAR = PESO_FSE_TRAB_ESPECIAL_VN_REAL_ACUM; var PESO_FSE_TRAB_ESPECIAL_EFICIENCIA = PESO_FSE_TRAB_ESPECIAL_VN_ANTE_ACUM-PESO_FSE_TRAB_ESPECIAL_VN_REAL_ACUM;}

                        if (@Html.Raw(Json.Encode(ViewData["FSE_PUB_PROPAG_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_PUB_PROPAG_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_PUB_PROPAG_VN_REAL_ACUM = 0; } else { var PESO_FSE_PUB_PROPAG_VN_REAL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_REAL_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_REAL_ACUM"]))); };
                            if (@Html.Raw(Json.Encode(ViewData["FSE_PUB_PROPAG_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_PUB_PROPAG_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_PUB_PROPAG_VN_ANTE_ACUM = 0; } else { var PESO_FSE_PUB_PROPAG_VN_ANTE_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANTE_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANTE_ACUM"]))); };
                                if (PESO_FSE_PUB_PROPAG_VN_REAL_ACUM>PESO_FSE_PUB_PROPAG_VN_ANTE_ACUM) {var PESO_FSE_PUB_PROPAG_NAO_MOSTRAR = PESO_FSE_PUB_PROPAG_VN_ANTE_ACUM; var PESO_FSE_PUB_PROPAG_INEFICIENCIA = PESO_FSE_PUB_PROPAG_VN_REAL_ACUM-PESO_FSE_PUB_PROPAG_VN_ANTE_ACUM;} else {var PESO_FSE_PUB_PROPAG_NAO_MOSTRAR = PESO_FSE_PUB_PROPAG_VN_REAL_ACUM; var PESO_FSE_PUB_PROPAG_EFICIENCIA = PESO_FSE_PUB_PROPAG_VN_ANTE_ACUM-PESO_FSE_PUB_PROPAG_VN_REAL_ACUM;}

                                if (@Html.Raw(Json.Encode(ViewData["FSE_VIG_SEGURANCA_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_VIG_SEGURANCA_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_VIG_SEGURANCA_VN_REAL_ACUM = 0; } else { var PESO_FSE_VIG_SEGURANCA_VN_REAL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_REAL_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_REAL_ACUM"]))); };
                                    if (@Html.Raw(Json.Encode(ViewData["FSE_VIG_SEGURANCA_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_VIG_SEGURANCA_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_VIG_SEGURANCA_VN_ANTE_ACUM = 0; } else { var PESO_FSE_VIG_SEGURANCA_VN_ANTE_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANTE_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANTE_ACUM"]))); };
                                        if (PESO_FSE_VIG_SEGURANCA_VN_REAL_ACUM>PESO_FSE_VIG_SEGURANCA_VN_ANTE_ACUM) {var PESO_FSE_VIG_SEGURANCA_NAO_MOSTRAR = PESO_FSE_VIG_SEGURANCA_VN_ANTE_ACUM; var PESO_FSE_VIG_SEGURANCA_INEFICIENCIA = PESO_FSE_VIG_SEGURANCA_VN_REAL_ACUM-PESO_FSE_VIG_SEGURANCA_VN_ANTE_ACUM;} else {var PESO_FSE_VIG_SEGURANCA_NAO_MOSTRAR = PESO_FSE_VIG_SEGURANCA_VN_REAL_ACUM; var PESO_FSE_VIG_SEGURANCA_EFICIENCIA = PESO_FSE_VIG_SEGURANCA_VN_ANTE_ACUM-PESO_FSE_VIG_SEGURANCA_VN_REAL_ACUM;}

                                        if (@Html.Raw(Json.Encode(ViewData["FSE_HONORARIOS_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_HONORARIOS_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_HONORARIOS_VN_REAL_ACUM = 0; } else { var PESO_FSE_HONORARIOS_VN_REAL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_REAL_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_REAL_ACUM"]))); };
                                            if (@Html.Raw(Json.Encode(ViewData["FSE_HONORARIOS_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_HONORARIOS_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_HONORARIOS_VN_ANTE_ACUM = 0; } else { var PESO_FSE_HONORARIOS_VN_ANTE_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANTE_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANTE_ACUM"]))); };
                                                if (PESO_FSE_HONORARIOS_VN_REAL_ACUM>PESO_FSE_HONORARIOS_VN_ANTE_ACUM) {var PESO_FSE_HONORARIOS_NAO_MOSTRAR = PESO_FSE_HONORARIOS_VN_ANTE_ACUM; var PESO_FSE_HONORARIOS_INEFICIENCIA = PESO_FSE_HONORARIOS_VN_REAL_ACUM-PESO_FSE_HONORARIOS_VN_ANTE_ACUM;} else {var PESO_FSE_HONORARIOS_NAO_MOSTRAR = PESO_FSE_HONORARIOS_VN_REAL_ACUM; var PESO_FSE_HONORARIOS_EFICIENCIA = PESO_FSE_HONORARIOS_VN_ANTE_ACUM-PESO_FSE_HONORARIOS_VN_REAL_ACUM;}

                                                if (@Html.Raw(Json.Encode(ViewData["FSE_COMISSOES_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_COMISSOES_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_COMISSOES_VN_REAL_ACUM = 0; } else { var PESO_FSE_COMISSOES_VN_REAL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_REAL_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_REAL_ACUM"]))); };
                                                    if (@Html.Raw(Json.Encode(ViewData["FSE_COMISSOES_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_COMISSOES_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_COMISSOES_VN_ANTE_ACUM = 0; } else { var PESO_FSE_COMISSOES_VN_ANTE_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANTE_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANTE_ACUM"]))); };
                                                        if (PESO_FSE_COMISSOES_VN_REAL_ACUM>PESO_FSE_COMISSOES_VN_ANTE_ACUM) {var PESO_FSE_COMISSOES_NAO_MOSTRAR = PESO_FSE_COMISSOES_VN_ANTE_ACUM; var PESO_FSE_COMISSOES_INEFICIENCIA = PESO_FSE_COMISSOES_VN_REAL_ACUM-PESO_FSE_COMISSOES_VN_ANTE_ACUM;} else {var PESO_FSE_COMISSOES_NAO_MOSTRAR = PESO_FSE_COMISSOES_VN_REAL_ACUM; var PESO_FSE_COMISSOES_EFICIENCIA = PESO_FSE_COMISSOES_VN_ANTE_ACUM-PESO_FSE_COMISSOES_VN_REAL_ACUM;}

                                                        if (@Html.Raw(Json.Encode(ViewData["FSE_CONSERV_REPAR_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_CONSERV_REPAR_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_CONSERV_REPAR_VN_REAL_ACUM = 0; } else { var PESO_FSE_CONSERV_REPAR_VN_REAL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_REAL_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_REAL_ACUM"]))); };
                                                            if (@Html.Raw(Json.Encode(ViewData["FSE_CONSERV_REPAR_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_CONSERV_REPAR_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_CONSERV_REPAR_VN_ANTE_ACUM = 0; } else { var PESO_FSE_CONSERV_REPAR_VN_ANTE_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANTE_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANTE_ACUM"]))); };
                                                                if (PESO_FSE_CONSERV_REPAR_VN_REAL_ACUM>PESO_FSE_CONSERV_REPAR_VN_ANTE_ACUM) {var PESO_FSE_CONSERV_REPAR_NAO_MOSTRAR = PESO_FSE_CONSERV_REPAR_VN_ANTE_ACUM; var PESO_FSE_CONSERV_REPAR_INEFICIENCIA = PESO_FSE_CONSERV_REPAR_VN_REAL_ACUM-PESO_FSE_CONSERV_REPAR_VN_ANTE_ACUM;} else {var PESO_FSE_CONSERV_REPAR_NAO_MOSTRAR = PESO_FSE_CONSERV_REPAR_VN_REAL_ACUM; var PESO_FSE_CONSERV_REPAR_EFICIENCIA = PESO_FSE_CONSERV_REPAR_VN_ANTE_ACUM-PESO_FSE_CONSERV_REPAR_VN_REAL_ACUM;}

                                                                if (@Html.Raw(Json.Encode(ViewData["FSE_OUTROS_SERV_ESPECIAL_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_REAL_ACUM = 0; } else { var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_REAL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_REAL_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_REAL_ACUM"]))); };
                                                                    if (@Html.Raw(Json.Encode(ViewData["FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANTE_ACUM = 0; } else { var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANTE_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANTE_ACUM"]))); };
                                                                        if (PESO_FSE_OUTROS_SERV_ESPECIAL_VN_REAL_ACUM>PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANTE_ACUM) {var PESO_FSE_OUTROS_SERV_ESPECIAL_NAO_MOSTRAR = PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANTE_ACUM; var PESO_FSE_OUTROS_SERV_ESPECIAL_INEFICIENCIA = PESO_FSE_OUTROS_SERV_ESPECIAL_VN_REAL_ACUM-PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANTE_ACUM;} else {var PESO_FSE_OUTROS_SERV_ESPECIAL_NAO_MOSTRAR = PESO_FSE_OUTROS_SERV_ESPECIAL_VN_REAL_ACUM; var PESO_FSE_OUTROS_SERV_ESPECIAL_EFICIENCIA = PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANTE_ACUM-PESO_FSE_OUTROS_SERV_ESPECIAL_VN_REAL_ACUM;}

                                                                        if (@Html.Raw(Json.Encode(ViewData["FSE_FERRAM_UTENS_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_FERRAM_UTENS_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_FERRAM_UTENS_VN_REAL_ACUM = 0; } else { var PESO_FSE_FERRAM_UTENS_VN_REAL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_REAL_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_REAL_ACUM"]))); };
                                                                            if (@Html.Raw(Json.Encode(ViewData["FSE_FERRAM_UTENS_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_FERRAM_UTENS_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_FERRAM_UTENS_VN_ANTE_ACUM = 0; } else { var PESO_FSE_FERRAM_UTENS_VN_ANTE_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANTE_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANTE_ACUM"]))); };
                                                                                if (PESO_FSE_FERRAM_UTENS_VN_REAL_ACUM>PESO_FSE_FERRAM_UTENS_VN_ANTE_ACUM) {var PESO_FSE_FERRAM_UTENS_NAO_MOSTRAR = PESO_FSE_FERRAM_UTENS_VN_ANTE_ACUM; var PESO_FSE_FERRAM_UTENS_INEFICIENCIA = PESO_FSE_FERRAM_UTENS_VN_REAL_ACUM-PESO_FSE_FERRAM_UTENS_VN_ANTE_ACUM;} else {var PESO_FSE_FERRAM_UTENS_NAO_MOSTRAR = PESO_FSE_FERRAM_UTENS_VN_REAL_ACUM; var PESO_FSE_FERRAM_UTENS_EFICIENCIA = PESO_FSE_FERRAM_UTENS_VN_ANTE_ACUM-PESO_FSE_FERRAM_UTENS_VN_REAL_ACUM;}

                                                                                if (@Html.Raw(Json.Encode(ViewData["FSE_LIVR_DOCUM_TEC_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_LIVR_DOCUM_TEC_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_LIVR_DOCUM_TEC_VN_REAL_ACUM = 0; } else { var PESO_FSE_LIVR_DOCUM_TEC_VN_REAL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_REAL_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_REAL_ACUM"]))); };
                                                                                    if (@Html.Raw(Json.Encode(ViewData["FSE_LIVR_DOCUM_TEC_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_LIVR_DOCUM_TEC_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_LIVR_DOCUM_TEC_VN_ANTE_ACUM = 0; } else { var PESO_FSE_LIVR_DOCUM_TEC_VN_ANTE_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANTE_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANTE_ACUM"]))); };
                                                                                        if (PESO_FSE_LIVR_DOCUM_TEC_VN_REAL_ACUM>PESO_FSE_LIVR_DOCUM_TEC_VN_ANTE_ACUM) {var PESO_FSE_LIVR_DOCUM_TEC_NAO_MOSTRAR = PESO_FSE_LIVR_DOCUM_TEC_VN_ANTE_ACUM; var PESO_FSE_LIVR_DOCUM_TEC_INEFICIENCIA = PESO_FSE_LIVR_DOCUM_TEC_VN_REAL_ACUM-PESO_FSE_LIVR_DOCUM_TEC_VN_ANTE_ACUM;} else {var PESO_FSE_LIVR_DOCUM_TEC_NAO_MOSTRAR = PESO_FSE_LIVR_DOCUM_TEC_VN_REAL_ACUM; var PESO_FSE_LIVR_DOCUM_TEC_EFICIENCIA = PESO_FSE_LIVR_DOCUM_TEC_VN_ANTE_ACUM-PESO_FSE_LIVR_DOCUM_TEC_VN_REAL_ACUM;}

                                                                                        if (@Html.Raw(Json.Encode(ViewData["FSE_MAT_ESCRITOR_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_MAT_ESCRITOR_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_MAT_ESCRITOR_VN_REAL_ACUM = 0; } else { var PESO_FSE_MAT_ESCRITOR_VN_REAL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_REAL_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_REAL_ACUM"]))); };
                                                                                            if (@Html.Raw(Json.Encode(ViewData["FSE_MAT_ESCRITOR_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_MAT_ESCRITOR_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_MAT_ESCRITOR_VN_ANTE_ACUM = 0; } else { var PESO_FSE_MAT_ESCRITOR_VN_ANTE_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANTE_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANTE_ACUM"]))); };
                                                                                                if (PESO_FSE_MAT_ESCRITOR_VN_REAL_ACUM>PESO_FSE_MAT_ESCRITOR_VN_ANTE_ACUM) {var PESO_FSE_MAT_ESCRITOR_NAO_MOSTRAR = PESO_FSE_MAT_ESCRITOR_VN_ANTE_ACUM; var PESO_FSE_MAT_ESCRITOR_INEFICIENCIA = PESO_FSE_MAT_ESCRITOR_VN_REAL_ACUM-PESO_FSE_MAT_ESCRITOR_VN_ANTE_ACUM;} else {var PESO_FSE_MAT_ESCRITOR_NAO_MOSTRAR = PESO_FSE_MAT_ESCRITOR_VN_REAL_ACUM; var PESO_FSE_MAT_ESCRITOR_EFICIENCIA = PESO_FSE_MAT_ESCRITOR_VN_ANTE_ACUM-PESO_FSE_MAT_ESCRITOR_VN_REAL_ACUM;}

                                                                                                if (@Html.Raw(Json.Encode(ViewData["FSE_ART_OFERTA_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_ART_OFERTA_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_ART_OFERTA_VN_REAL_ACUM = 0; } else { var PESO_FSE_ART_OFERTA_VN_REAL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_REAL_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_REAL_ACUM"]))); };
                                                                                                    if (@Html.Raw(Json.Encode(ViewData["FSE_ART_OFERTA_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_ART_OFERTA_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_ART_OFERTA_VN_ANTE_ACUM = 0; } else { var PESO_FSE_ART_OFERTA_VN_ANTE_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANTE_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANTE_ACUM"]))); };
                                                                                                        if (PESO_FSE_ART_OFERTA_VN_REAL_ACUM>PESO_FSE_ART_OFERTA_VN_ANTE_ACUM) {var PESO_FSE_ART_OFERTA_NAO_MOSTRAR = PESO_FSE_ART_OFERTA_VN_ANTE_ACUM; var PESO_FSE_ART_OFERTA_INEFICIENCIA = PESO_FSE_ART_OFERTA_VN_REAL_ACUM-PESO_FSE_ART_OFERTA_VN_ANTE_ACUM;} else {var PESO_FSE_ART_OFERTA_NAO_MOSTRAR = PESO_FSE_ART_OFERTA_VN_REAL_ACUM; var PESO_FSE_ART_OFERTA_EFICIENCIA = PESO_FSE_ART_OFERTA_VN_ANTE_ACUM-PESO_FSE_ART_OFERTA_VN_REAL_ACUM;}

                                                                                                        if (@Html.Raw(Json.Encode(ViewData["FSE_OUTROS_MATERIAIS_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_OUTROS_MATERIAIS_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_OUTROS_MATERIAIS_VN_REAL_ACUM = 0; } else { var PESO_FSE_OUTROS_MATERIAIS_VN_REAL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_REAL_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_REAL_ACUM"]))); };
                                                                                                            if (@Html.Raw(Json.Encode(ViewData["FSE_OUTROS_MATERIAIS_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_OUTROS_MATERIAIS_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_OUTROS_MATERIAIS_VN_ANTE_ACUM = 0; } else { var PESO_FSE_OUTROS_MATERIAIS_VN_ANTE_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANTE_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANTE_ACUM"]))); };
                                                                                                                if (PESO_FSE_OUTROS_MATERIAIS_VN_REAL_ACUM>PESO_FSE_OUTROS_MATERIAIS_VN_ANTE_ACUM) {var PESO_FSE_OUTROS_MATERIAIS_NAO_MOSTRAR = PESO_FSE_OUTROS_MATERIAIS_VN_ANTE_ACUM; var PESO_FSE_OUTROS_MATERIAIS_INEFICIENCIA = PESO_FSE_OUTROS_MATERIAIS_VN_REAL_ACUM-PESO_FSE_OUTROS_MATERIAIS_VN_ANTE_ACUM;} else {var PESO_FSE_OUTROS_MATERIAIS_NAO_MOSTRAR = PESO_FSE_OUTROS_MATERIAIS_VN_REAL_ACUM; var PESO_FSE_OUTROS_MATERIAIS_EFICIENCIA = PESO_FSE_OUTROS_MATERIAIS_VN_ANTE_ACUM-PESO_FSE_OUTROS_MATERIAIS_VN_REAL_ACUM;}


                                                                                                                if (@Html.Raw(Json.Encode(ViewData["FSE_ELECTRICIDADE_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_ELECTRICIDADE_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_ELECTRICIDADE_VN_REAL_ACUM = 0; } else { var PESO_FSE_ELECTRICIDADE_VN_REAL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_REAL_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_REAL_ACUM"]))); };
                                                                                                                    if (@Html.Raw(Json.Encode(ViewData["FSE_ELECTRICIDADE_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_ELECTRICIDADE_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_ELECTRICIDADE_VN_ANTE_ACUM = 0; } else { var PESO_FSE_ELECTRICIDADE_VN_ANTE_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANTE_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANTE_ACUM"]))); };
                                                                                                                        if (PESO_FSE_ELECTRICIDADE_VN_REAL_ACUM>PESO_FSE_ELECTRICIDADE_VN_ANTE_ACUM) {var PESO_FSE_ELECTRICIDADE_NAO_MOSTRAR = PESO_FSE_ELECTRICIDADE_VN_ANTE_ACUM; var PESO_FSE_ELECTRICIDADE_INEFICIENCIA = PESO_FSE_ELECTRICIDADE_VN_REAL_ACUM-PESO_FSE_ELECTRICIDADE_VN_ANTE_ACUM;} else {var PESO_FSE_ELECTRICIDADE_NAO_MOSTRAR = PESO_FSE_ELECTRICIDADE_VN_REAL_ACUM; var PESO_FSE_ELECTRICIDADE_EFICIENCIA = PESO_FSE_ELECTRICIDADE_VN_ANTE_ACUM-PESO_FSE_ELECTRICIDADE_VN_REAL_ACUM;}


                                                                                                                        if (@Html.Raw(Json.Encode(ViewData["FSE_COMBUSTIVEIS_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_COMBUSTIVEIS_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_COMBUSTIVEIS_VN_REAL_ACUM = 0; } else { var PESO_FSE_COMBUSTIVEIS_VN_REAL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_REAL_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_REAL_ACUM"]))); };
                                                                                                                            if (@Html.Raw(Json.Encode(ViewData["FSE_COMBUSTIVEIS_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_COMBUSTIVEIS_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_COMBUSTIVEIS_VN_ANTE_ACUM = 0; } else { var PESO_FSE_COMBUSTIVEIS_VN_ANTE_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMBUSTIVEIS_ANTE_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANTE_ACUM"]))); };
                                                                                                                                if (PESO_FSE_COMBUSTIVEIS_VN_REAL_ACUM>PESO_FSE_COMBUSTIVEIS_VN_ANTE_ACUM) {var PESO_FSE_COMBUSTIVEIS_NAO_MOSTRAR = PESO_FSE_COMBUSTIVEIS_VN_ANTE_ACUM; var PESO_FSE_COMBUSTIVEIS_INEFICIENCIA = PESO_FSE_COMBUSTIVEIS_VN_REAL_ACUM-PESO_FSE_COMBUSTIVEIS_VN_ANTE_ACUM;} else {var PESO_FSE_COMBUSTIVEIS_NAO_MOSTRAR = PESO_FSE_COMBUSTIVEIS_VN_REAL_ACUM; var PESO_FSE_COMBUSTIVEIS_EFICIENCIA = PESO_FSE_COMBUSTIVEIS_VN_ANTE_ACUM-PESO_FSE_COMBUSTIVEIS_VN_REAL_ACUM;}


                                                                                                                                if (@Html.Raw(Json.Encode(ViewData["FSE_AGUA_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_AGUA_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_AGUA_VN_REAL_ACUM = 0; } else { var PESO_FSE_AGUA_VN_REAL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_REAL_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_REAL_ACUM"]))); };
                                                                                                                                    if (@Html.Raw(Json.Encode(ViewData["FSE_AGUA_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_AGUA_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_AGUA_VN_ANTE_ACUM = 0; } else { var PESO_FSE_AGUA_VN_ANTE_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_AGUA_ANTE_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANTE_ACUM"]))); };
                                                                                                                                        if (PESO_FSE_AGUA_VN_REAL_ACUM>PESO_FSE_AGUA_VN_ANTE_ACUM) {var PESO_FSE_AGUA_NAO_MOSTRAR = PESO_FSE_AGUA_VN_ANTE_ACUM; var PESO_FSE_AGUA_INEFICIENCIA = PESO_FSE_AGUA_VN_REAL_ACUM-PESO_FSE_AGUA_VN_ANTE_ACUM;} else {var PESO_FSE_AGUA_NAO_MOSTRAR = PESO_FSE_AGUA_VN_REAL_ACUM; var PESO_FSE_AGUA_EFICIENCIA = PESO_FSE_AGUA_VN_ANTE_ACUM-PESO_FSE_AGUA_VN_REAL_ACUM;}

                                                                                                                                        if (@Html.Raw(Json.Encode(ViewData["FSE_OUTROS_ENERG_FLUIDOS_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_REAL_ACUM = 0; } else { var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_REAL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_REAL_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_REAL_ACUM"]))); };
                                                                                                                                            if (@Html.Raw(Json.Encode(ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANTE_ACUM = 0; } else { var PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANTE_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_ENERG_FLUIDOS_ANTE_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANTE_ACUM"]))); };
                                                                                                                                                if (PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_REAL_ACUM>PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANTE_ACUM) {var PESO_FSE_OUTROS_ENERG_FLUIDOS_NAO_MOSTRAR = PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANTE_ACUM; var PESO_FSE_OUTROS_ENERG_FLUIDOS_INEFICIENCIA = PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_REAL_ACUM-PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANTE_ACUM;} else {var PESO_FSE_OUTROS_ENERG_FLUIDOS_NAO_MOSTRAR = PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_REAL_ACUM; var PESO_FSE_OUTROS_ENERG_FLUIDOS_EFICIENCIA = PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANTE_ACUM-PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_REAL_ACUM;}

                                                                                                                                                if (@Html.Raw(Json.Encode(ViewData["FSE_DESLOC_ESTADAS_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_DESLOC_ESTADAS_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_DESLOC_ESTADAS_VN_REAL_ACUM = 0; } else { var PESO_FSE_DESLOC_ESTADAS_VN_REAL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_REAL_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_REAL_ACUM"]))); };
                                                                                                                                                    if (@Html.Raw(Json.Encode(ViewData["FSE_DESLOC_ESTADAS_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_DESLOC_ESTADAS_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_DESLOC_ESTADAS_VN_ANTE_ACUM = 0; } else { var PESO_FSE_DESLOC_ESTADAS_VN_ANTE_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESLOC_ESTADAS_ANTE_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANTE_ACUM"]))); };
                                                                                                                                                        if (PESO_FSE_DESLOC_ESTADAS_VN_REAL_ACUM>PESO_FSE_DESLOC_ESTADAS_VN_ANTE_ACUM) {var PESO_FSE_DESLOC_ESTADAS_NAO_MOSTRAR = PESO_FSE_DESLOC_ESTADAS_VN_ANTE_ACUM; var PESO_FSE_DESLOC_ESTADAS_INEFICIENCIA = PESO_FSE_DESLOC_ESTADAS_VN_REAL_ACUM-PESO_FSE_DESLOC_ESTADAS_VN_ANTE_ACUM;} else {var PESO_FSE_DESLOC_ESTADAS_NAO_MOSTRAR = PESO_FSE_DESLOC_ESTADAS_VN_REAL_ACUM; var PESO_FSE_DESLOC_ESTADAS_EFICIENCIA = PESO_FSE_DESLOC_ESTADAS_VN_ANTE_ACUM-PESO_FSE_DESLOC_ESTADAS_VN_REAL_ACUM;}

                                                                                                                                                        if (@Html.Raw(Json.Encode(ViewData["FSE_TRANSPORT_PESSOAL_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_TRANSPORT_PESSOAL_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_TRANSPORT_PESSOAL_VN_REAL_ACUM = 0; } else { var PESO_FSE_TRANSPORT_PESSOAL_VN_REAL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_REAL_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_REAL_ACUM"]))); };
                                                                                                                                                            if (@Html.Raw(Json.Encode(ViewData["FSE_TRANSPORT_PESSOAL_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_TRANSPORT_PESSOAL_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_TRANSPORT_PESSOAL_VN_ANTE_ACUM = 0; } else { var PESO_FSE_TRANSPORT_PESSOAL_VN_ANTE_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_PESSOAL_ANTE_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANTE_ACUM"]))); };
                                                                                                                                                                if (PESO_FSE_TRANSPORT_PESSOAL_VN_REAL_ACUM>PESO_FSE_TRANSPORT_PESSOAL_VN_ANTE_ACUM) {var PESO_FSE_TRANSPORT_PESSOAL_NAO_MOSTRAR = PESO_FSE_TRANSPORT_PESSOAL_VN_ANTE_ACUM; var PESO_FSE_TRANSPORT_PESSOAL_INEFICIENCIA = PESO_FSE_TRANSPORT_PESSOAL_VN_REAL_ACUM-PESO_FSE_TRANSPORT_PESSOAL_VN_ANTE_ACUM;} else {var PESO_FSE_TRANSPORT_PESSOAL_NAO_MOSTRAR = PESO_FSE_TRANSPORT_PESSOAL_VN_REAL_ACUM; var PESO_FSE_TRANSPORT_PESSOAL_EFICIENCIA = PESO_FSE_TRANSPORT_PESSOAL_VN_ANTE_ACUM-PESO_FSE_TRANSPORT_PESSOAL_VN_REAL_ACUM;}

                                                                                                                                                                if (@Html.Raw(Json.Encode(ViewData["FSE_TRANSPORT_MERCAD_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_TRANSPORT_MERCAD_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_TRANSPORT_MERCAD_VN_REAL_ACUM = 0; } else { var PESO_FSE_TRANSPORT_MERCAD_VN_REAL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_REAL_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_REAL_ACUM"]))); };
                                                                                                                                                                    if (@Html.Raw(Json.Encode(ViewData["FSE_TRANSPORT_MERCAD_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_TRANSPORT_MERCAD_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_TRANSPORT_MERCAD_VN_ANTE_ACUM = 0; } else { var PESO_FSE_TRANSPORT_MERCAD_VN_ANTE_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRANSPORT_MERCAD_ANTE_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANTE_ACUM"]))); };
                                                                                                                                                                        if (PESO_FSE_TRANSPORT_MERCAD_VN_REAL_ACUM>PESO_FSE_TRANSPORT_MERCAD_VN_ANTE_ACUM) {var PESO_FSE_TRANSPORT_MERCAD_NAO_MOSTRAR = PESO_FSE_TRANSPORT_MERCAD_VN_ANTE_ACUM; var PESO_FSE_TRANSPORT_MERCAD_INEFICIENCIA = PESO_FSE_TRANSPORT_MERCAD_VN_REAL_ACUM-PESO_FSE_TRANSPORT_MERCAD_VN_ANTE_ACUM;} else {var PESO_FSE_TRANSPORT_MERCAD_NAO_MOSTRAR = PESO_FSE_TRANSPORT_MERCAD_VN_REAL_ACUM; var PESO_FSE_TRANSPORT_MERCAD_EFICIENCIA = PESO_FSE_TRANSPORT_MERCAD_VN_ANTE_ACUM-PESO_FSE_TRANSPORT_MERCAD_VN_REAL_ACUM;}

                                                                                                                                                                        if (@Html.Raw(Json.Encode(ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_REAL_ACUM = 0; } else { var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_REAL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_REAL_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_REAL_ACUM"]))); };
                                                                                                                                                                            if (@Html.Raw(Json.Encode(ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANTE_ACUM = 0; } else { var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANTE_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_DESL_ESTAD_TRANSPORT_ANTE_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANTE_ACUM"]))); };
                                                                                                                                                                                if (PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_REAL_ACUM>PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANTE_ACUM) {var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_NAO_MOSTRAR = PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANTE_ACUM; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_INEFICIENCIA = PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_REAL_ACUM-PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANTE_ACUM;} else {var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_NAO_MOSTRAR = PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_REAL_ACUM; var PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_EFICIENCIA = PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANTE_ACUM-PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_REAL_ACUM;}

                                                                                                                                                                                if (@Html.Raw(Json.Encode(ViewData["FSE_RENDAS_ALUGUERES_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_RENDAS_ALUGUERES_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_RENDAS_ALUGUERES_VN_REAL_ACUM = 0; } else { var PESO_FSE_RENDAS_ALUGUERES_VN_REAL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_REAL_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_REAL_ACUM"]))); };
                                                                                                                                                                                    if (@Html.Raw(Json.Encode(ViewData["FSE_RENDAS_ALUGUERES_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_RENDAS_ALUGUERES_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_RENDAS_ALUGUERES_VN_ANTE_ACUM = 0; } else { var PESO_FSE_RENDAS_ALUGUERES_VN_ANTE_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_RENDAS_ALUGUERES_ANTE_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANTE_ACUM"]))); };
                                                                                                                                                                                        if (PESO_FSE_RENDAS_ALUGUERES_VN_REAL_ACUM>PESO_FSE_RENDAS_ALUGUERES_VN_ANTE_ACUM) {var PESO_FSE_RENDAS_ALUGUERES_NAO_MOSTRAR = PESO_FSE_RENDAS_ALUGUERES_VN_ANTE_ACUM; var PESO_FSE_RENDAS_ALUGUERES_INEFICIENCIA = PESO_FSE_RENDAS_ALUGUERES_VN_REAL_ACUM-PESO_FSE_RENDAS_ALUGUERES_VN_ANTE_ACUM;} else {var PESO_FSE_RENDAS_ALUGUERES_NAO_MOSTRAR = PESO_FSE_RENDAS_ALUGUERES_VN_REAL_ACUM; var PESO_FSE_RENDAS_ALUGUERES_EFICIENCIA = PESO_FSE_RENDAS_ALUGUERES_VN_ANTE_ACUM-PESO_FSE_RENDAS_ALUGUERES_VN_REAL_ACUM;}

                                                                                                                                                                                        if (@Html.Raw(Json.Encode(ViewData["FSE_COMUNICACAO_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_COMUNICACAO_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_COMUNICACAO_VN_REAL_ACUM = 0; } else { var PESO_FSE_COMUNICACAO_VN_REAL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_REAL_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_REAL_ACUM"]))); };
                                                                                                                                                                                            if (@Html.Raw(Json.Encode(ViewData["FSE_COMUNICACAO_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_COMUNICACAO_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_COMUNICACAO_VN_ANTE_ACUM = 0; } else { var PESO_FSE_COMUNICACAO_VN_ANTE_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMUNICACAO_ANTE_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANTE_ACUM"]))); };
                                                                                                                                                                                                if (PESO_FSE_COMUNICACAO_VN_REAL_ACUM>PESO_FSE_COMUNICACAO_VN_ANTE_ACUM) {var PESO_FSE_COMUNICACAO_NAO_MOSTRAR = PESO_FSE_COMUNICACAO_VN_ANTE_ACUM; var PESO_FSE_COMUNICACAO_INEFICIENCIA = PESO_FSE_COMUNICACAO_VN_REAL_ACUM-PESO_FSE_COMUNICACAO_VN_ANTE_ACUM;} else {var PESO_FSE_COMUNICACAO_NAO_MOSTRAR = PESO_FSE_COMUNICACAO_VN_REAL_ACUM; var PESO_FSE_COMUNICACAO_EFICIENCIA = PESO_FSE_COMUNICACAO_VN_ANTE_ACUM-PESO_FSE_COMUNICACAO_VN_REAL_ACUM;}

                                                                                                                                                                                                if (@Html.Raw(Json.Encode(ViewData["FSE_SEGUROS_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_SEGUROS_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_SEGUROS_VN_REAL_ACUM = 0; } else { var PESO_FSE_SEGUROS_VN_REAL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_REAL_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_REAL_ACUM"]))); };
                                                                                                                                                                                                    if (@Html.Raw(Json.Encode(ViewData["FSE_SEGUROS_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_SEGUROS_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_SEGUROS_VN_ANTE_ACUM = 0; } else { var PESO_FSE_SEGUROS_VN_ANTE_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SEGUROS_ANTE_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANTE_ACUM"]))); };
                                                                                                                                                                                                        if (PESO_FSE_SEGUROS_VN_REAL_ACUM>PESO_FSE_SEGUROS_VN_ANTE_ACUM) {var PESO_FSE_SEGUROS_NAO_MOSTRAR = PESO_FSE_SEGUROS_VN_ANTE_ACUM; var PESO_FSE_SEGUROS_INEFICIENCIA = PESO_FSE_SEGUROS_VN_REAL_ACUM-PESO_FSE_SEGUROS_VN_ANTE_ACUM;} else {var PESO_FSE_SEGUROS_NAO_MOSTRAR = PESO_FSE_SEGUROS_VN_REAL_ACUM; var PESO_FSE_SEGUROS_EFICIENCIA = PESO_FSE_SEGUROS_VN_ANTE_ACUM-PESO_FSE_SEGUROS_VN_REAL_ACUM;}


  if (@Html.Raw(Json.Encode(ViewData["FSE_ROYALITIES_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_ROYALITIES_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_ROYALITIES_VN_REAL_ACUM = 0; } else { var PESO_FSE_ROYALITIES_VN_REAL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_REAL_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_REAL_ACUM"]))); };
  if (@Html.Raw(Json.Encode(ViewData["FSE_ROYALITIES_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_ROYALITIES_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_ROYALITIES_VN_ANTE_ACUM = 0; } else { var PESO_FSE_ROYALITIES_VN_ANTE_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ROYALITIES_ANTE_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANTE_ACUM"]))); };
  if (PESO_FSE_ROYALITIES_VN_REAL_ACUM>PESO_FSE_ROYALITIES_VN_ANTE_ACUM) {var PESO_FSE_ROYALITIES_NAO_MOSTRAR = PESO_FSE_ROYALITIES_VN_ANTE_ACUM; var PESO_FSE_ROYALITIES_INEFICIENCIA = PESO_FSE_ROYALITIES_VN_REAL_ACUM-PESO_FSE_ROYALITIES_VN_ANTE_ACUM;} else {var PESO_FSE_ROYALITIES_NAO_MOSTRAR = PESO_FSE_ROYALITIES_VN_REAL_ACUM; var PESO_FSE_ROYALITIES_EFICIENCIA = PESO_FSE_ROYALITIES_VN_ANTE_ACUM-PESO_FSE_ROYALITIES_VN_REAL_ACUM;}

  if (@Html.Raw(Json.Encode(ViewData["FSE_CONTENS_NOTARIADO_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_CONTENS_NOTARIADO_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_CONTENS_NOTARIADO_VN_REAL_ACUM = 0; } else { var PESO_FSE_CONTENS_NOTARIADO_VN_REAL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_REAL_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_REAL_ACUM"]))); };
  if (@Html.Raw(Json.Encode(ViewData["FSE_CONTENS_NOTARIADO_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_CONTENS_NOTARIADO_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_CONTENS_NOTARIADO_VN_ANTE_ACUM = 0; } else { var PESO_FSE_CONTENS_NOTARIADO_VN_ANTE_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONTENS_NOTARIADO_ANTE_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANTE_ACUM"]))); };
  if (PESO_FSE_CONTENS_NOTARIADO_VN_REAL_ACUM>PESO_FSE_CONTENS_NOTARIADO_VN_ANTE_ACUM) {var PESO_FSE_CONTENS_NOTARIADO_NAO_MOSTRAR = PESO_FSE_CONTENS_NOTARIADO_VN_ANTE_ACUM; var PESO_FSE_CONTENS_NOTARIADO_INEFICIENCIA = PESO_FSE_CONTENS_NOTARIADO_VN_REAL_ACUM-PESO_FSE_CONTENS_NOTARIADO_VN_ANTE_ACUM;} else {var PESO_FSE_CONTENS_NOTARIADO_NAO_MOSTRAR = PESO_FSE_CONTENS_NOTARIADO_VN_REAL_ACUM; var PESO_FSE_CONTENS_NOTARIADO_EFICIENCIA = PESO_FSE_CONTENS_NOTARIADO_VN_ANTE_ACUM-PESO_FSE_CONTENS_NOTARIADO_VN_REAL_ACUM;}

  if (@Html.Raw(Json.Encode(ViewData["FSE_DESP_RESPRESENT_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_DESP_RESPRESENT_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_DESP_RESPRESENT_VN_REAL_ACUM = 0; } else { var PESO_FSE_DESP_RESPRESENT_VN_REAL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_REAL_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_REAL_ACUM"]))); };
  if (@Html.Raw(Json.Encode(ViewData["FSE_DESP_RESPRESENT_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_DESP_RESPRESENT_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_DESP_RESPRESENT_VN_ANTE_ACUM = 0; } else { var PESO_FSE_DESP_RESPRESENT_VN_ANTE_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_DESP_RESPRESENT_ANTE_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANTE_ACUM"]))); };
  if (PESO_FSE_DESP_RESPRESENT_VN_REAL_ACUM>PESO_FSE_DESP_RESPRESENT_VN_ANTE_ACUM) {var PESO_FSE_DESP_RESPRESENT_NAO_MOSTRAR = PESO_FSE_DESP_RESPRESENT_VN_ANTE_ACUM; var PESO_FSE_DESP_RESPRESENT_INEFICIENCIA = PESO_FSE_DESP_RESPRESENT_VN_REAL_ACUM-PESO_FSE_DESP_RESPRESENT_VN_ANTE_ACUM;} else {var PESO_FSE_DESP_RESPRESENT_NAO_MOSTRAR = PESO_FSE_DESP_RESPRESENT_VN_REAL_ACUM; var PESO_FSE_DESP_RESPRESENT_EFICIENCIA = PESO_FSE_DESP_RESPRESENT_VN_ANTE_ACUM-PESO_FSE_DESP_RESPRESENT_VN_REAL_ACUM;}

  if (@Html.Raw(Json.Encode(ViewData["FSE_LIMP_HIG_CONFORT_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_LIMP_HIG_CONFORT_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_LIMP_HIG_CONFORT_VN_REAL_ACUM = 0; } else { var PESO_FSE_LIMP_HIG_CONFORT_VN_REAL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_REAL_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_REAL_ACUM"]))); };
  if (@Html.Raw(Json.Encode(ViewData["FSE_LIMP_HIG_CONFORT_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_LIMP_HIG_CONFORT_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_LIMP_HIG_CONFORT_VN_ANTE_ACUM = 0; } else { var PESO_FSE_LIMP_HIG_CONFORT_VN_ANTE_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIMP_HIG_CONFORT_ANTE_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANTE_ACUM"]))); };
  if (PESO_FSE_LIMP_HIG_CONFORT_VN_REAL_ACUM>PESO_FSE_LIMP_HIG_CONFORT_VN_ANTE_ACUM) {var PESO_FSE_LIMP_HIG_CONFORT_NAO_MOSTRAR = PESO_FSE_LIMP_HIG_CONFORT_VN_ANTE_ACUM; var PESO_FSE_LIMP_HIG_CONFORT_INEFICIENCIA = PESO_FSE_LIMP_HIG_CONFORT_VN_REAL_ACUM-PESO_FSE_LIMP_HIG_CONFORT_VN_ANTE_ACUM;} else {var PESO_FSE_LIMP_HIG_CONFORT_NAO_MOSTRAR = PESO_FSE_LIMP_HIG_CONFORT_VN_REAL_ACUM; var PESO_FSE_LIMP_HIG_CONFORT_EFICIENCIA = PESO_FSE_LIMP_HIG_CONFORT_VN_ANTE_ACUM-PESO_FSE_LIMP_HIG_CONFORT_VN_REAL_ACUM;}

  if (@Html.Raw(Json.Encode(ViewData["FSE_OUTROS_SERV_DIVERSOS_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_REAL_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_REAL_ACUM = 0; } else { var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_REAL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_REAL_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_REAL_ACUM"]))); };
  if (@Html.Raw(Json.Encode(ViewData["FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc") || @Html.Raw(Json.Encode(ViewData["IND_VN_ANTE_ACUM"]))==("calc")) { var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANTE_ACUM = 0; } else { var PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANTE_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_DIVERSOS_ANTE_ACUM"]))) / @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANTE_ACUM"]))); };
  if (PESO_FSE_OUTROS_SERV_DIVERSOS_VN_REAL_ACUM>PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANTE_ACUM) {var PESO_FSE_OUTROS_SERV_DIVERSOS_NAO_MOSTRAR = PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANTE_ACUM; var PESO_FSE_OUTROS_SERV_DIVERSOS_INEFICIENCIA = PESO_FSE_OUTROS_SERV_DIVERSOS_VN_REAL_ACUM-PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANTE_ACUM;} else {var PESO_FSE_OUTROS_SERV_DIVERSOS_NAO_MOSTRAR = PESO_FSE_OUTROS_SERV_DIVERSOS_VN_REAL_ACUM; var PESO_FSE_OUTROS_SERV_DIVERSOS_EFICIENCIA = PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANTE_ACUM-PESO_FSE_OUTROS_SERV_DIVERSOS_VN_REAL_ACUM;}


  Chart.defaults.groupableBar = Chart.helpers.clone(Chart.defaults.bar);

   var helpers = Chart.helpers;
   Chart.controllers.groupableBar = Chart.controllers.bar.extend({
       draw: function(ease) {
           Chart.controllers.bar.prototype.draw.apply(this, arguments);

           var self = this;
           // check if this is the last dataset in this stack
           if (!this.chart.data.datasets.some(function (dataset, index) { return (dataset.stack === self.getDataset().stack && index > self.index); })) {
               var ctx = this.chart.chart.ctx;
               ctx.save();
               ctx.textAlign = 'center';
               ctx.textBaseline = 'bottom';
               ctx.fillStyle = this.chart.options.defaultFontColor;
               // loop through all its rectangles and draw the label
               helpers.each(self.getMeta().data, function (rectangle, index) {
                   ctx.fillText(this.getDataset().stack, rectangle._model.x, rectangle._model.y)
               }, this);
               ctx.restore();
           }
       },

       calculateBarX: function (index, datasetIndex) {
           // position the bars based on the stack index
           var stackIndex = this.getMeta().stackIndex;
           return Chart.controllers.bar.prototype.calculateBarX.apply(this, [index, stackIndex]);
       },

       hideOtherStacks: function (datasetIndex) {
           var meta = this.getMeta();
           var stackIndex = meta.stackIndex;

           this.hiddens = [];
           for (var i = 0; i < datasetIndex; i++) {
               var dsMeta = this.chart.getDatasetMeta(i);
               if (dsMeta.stackIndex !== stackIndex) {
                   this.hiddens.push(dsMeta.hidden);
                   dsMeta.hidden = true;
               }
           }
       },

       unhideOtherStacks: function (datasetIndex) {
           var meta = this.getMeta();
           var stackIndex = meta.stackIndex;

           for (var i = 0; i < datasetIndex; i++) {
               var dsMeta = this.chart.getDatasetMeta(i);
               if (dsMeta.stackIndex !== stackIndex) {
                   dsMeta.hidden = this.hiddens.unshift();
               }
           }
       },

       calculateBarY: function (index, datasetIndex) {
           this.hideOtherStacks(datasetIndex);
           var barY = Chart.controllers.bar.prototype.calculateBarY.apply(this, [index, datasetIndex]);
           this.unhideOtherStacks(datasetIndex);
           return barY;
       },

       calculateBarBase: function (datasetIndex, index) {
           this.hideOtherStacks(datasetIndex);
           var barBase = Chart.controllers.bar.prototype.calculateBarBase.apply(this, [datasetIndex, index]);
           this.unhideOtherStacks(datasetIndex);
           return barBase;
       },

       getBarCount: function () {
           var stacks = [];

           // put the stack index in the dataset meta
           Chart.helpers.each(this.chart.data.datasets, function (dataset, datasetIndex) {
               var meta = this.chart.getDatasetMeta(datasetIndex);
               if (meta.bar && this.chart.isDatasetVisible(datasetIndex)) {
                   var stackIndex = stacks.indexOf(dataset.stack);
                   if (stackIndex === -1) {
                       stackIndex = stacks.length;
                       stacks.push(dataset.stack);
                   }
                   meta.stackIndex = stackIndex;
               }
           }, this);

           this.getMeta().stacks = stacks;
           return stacks.length;
       },
   });

   var data = {
       labels: ["Subcontratos",
                "Trabalhos Especializados",
                "Publicidade e Propaganda",
                "Vigilância e Segurança",
                "Honorários",
                "Comissões",
                "Conservação Reperação",
                "Outros de Serviços Especializados",
                "Ferramentas e Utensílios",
                "Livros e Documentação Técnica",
                "Material de Escritório",
                "Artigos para Oferta",
                "Outros de Materiais",
                "Electricidade",
                "Combustiveis",
                "Água",
                "Outros de Energia e Fluidos",
                "Deslocações e Estadas",
                "Transporte de Pessoal",
                "Transporte de Mercadorias",
                "Outros de Deslocações, Estadas e Transportes",
                "Rendas e Alugeres",
                "Comunicação",
                "Seguros",
                "Royalities",
                "Contensioso e Notariado",
                "Despesas de Representação",
                "Limpeza, Higiene e Conforto",
                "Outros de Serviços Diversos"],
       datasets: [
         {
             label: 'Peso FSE vs VN(ac) ' + '20'+ANO_VERSAO_REAL_,
             backgroundColor: "rgba(126,42,02,0.3)",
             data: [
                    (PESO_FSE_SUBCONTRATOS_VN_REAL_ACUM*100).toFixed(3),
                    (PESO_FSE_TRAB_ESPECIAL_VN_REAL_ACUM*100).toFixed(3),
                    (PESO_FSE_PUB_PROPAG_VN_REAL_ACUM*100).toFixed(3),
                    (PESO_FSE_VIG_SEGURANCA_VN_REAL_ACUM*100).toFixed(3),
                    (PESO_FSE_HONORARIOS_VN_REAL_ACUM*100).toFixed(3),
                    (PESO_FSE_COMISSOES_VN_REAL_ACUM*100).toFixed(3),
                    (PESO_FSE_CONSERV_REPAR_VN_REAL_ACUM*100).toFixed(3),
                    (PESO_FSE_OUTROS_SERV_ESPECIAL_VN_REAL_ACUM*100).toFixed(3),
                    (PESO_FSE_FERRAM_UTENS_VN_REAL_ACUM*100).toFixed(3),
                    (PESO_FSE_LIVR_DOCUM_TEC_VN_REAL_ACUM*100).toFixed(3),
                    (PESO_FSE_MAT_ESCRITOR_VN_REAL_ACUM*100).toFixed(3),
                    (PESO_FSE_ART_OFERTA_VN_REAL_ACUM*100).toFixed(3),
                    (PESO_FSE_OUTROS_MATERIAIS_VN_REAL_ACUM*100).toFixed(3),
                    (PESO_FSE_ELECTRICIDADE_VN_REAL_ACUM*100).toFixed(3),
                    (PESO_FSE_COMBUSTIVEIS_VN_REAL_ACUM*100).toFixed(3),
                    (PESO_FSE_AGUA_VN_REAL_ACUM*100).toFixed(3),
                    (PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_REAL_ACUM*100).toFixed(3),
                    (PESO_FSE_DESLOC_ESTADAS_VN_REAL_ACUM*100).toFixed(3),
                    (PESO_FSE_TRANSPORT_PESSOAL_VN_REAL_ACUM*100).toFixed(3),
                    (PESO_FSE_TRANSPORT_MERCAD_VN_REAL_ACUM*100).toFixed(3),
                    (PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_REAL_ACUM*100).toFixed(3),
                    (PESO_FSE_RENDAS_ALUGUERES_VN_REAL_ACUM*100).toFixed(3),
                    (PESO_FSE_COMUNICACAO_VN_REAL_ACUM*100).toFixed(3),
                    (PESO_FSE_SEGUROS_VN_REAL_ACUM*100).toFixed(3),
                    (PESO_FSE_ROYALITIES_VN_REAL_ACUM*100).toFixed(3),
                    (PESO_FSE_CONTENS_NOTARIADO_VN_REAL_ACUM*100).toFixed(3),
                    (PESO_FSE_DESP_RESPRESENT_VN_REAL_ACUM*100).toFixed(3),
                    (PESO_FSE_LIMP_HIG_CONFORT_VN_REAL_ACUM*100).toFixed(3),
                    (PESO_FSE_OUTROS_SERV_DIVERSOS_VN_REAL_ACUM*100).toFixed(3),
             ],
             stack: 'Stack 1'
         },
         {
             label: "Não Mostrar",
             backgroundColor: "rgba(255,255,255,0.2)",
             data: [
                 (PESO_FSE_SUBCONTRATOS_NAO_MOSTRAR*100).toFixed(3),
                 (PESO_FSE_TRAB_ESPECIAL_NAO_MOSTRAR*100).toFixed(3),
                 (PESO_FSE_PUB_PROPAG_NAO_MOSTRAR*100).toFixed(3),
                 (PESO_FSE_VIG_SEGURANCA_NAO_MOSTRAR*100).toFixed(3),
                 (PESO_FSE_HONORARIOS_NAO_MOSTRAR*100).toFixed(3),
                 (PESO_FSE_COMISSOES_NAO_MOSTRAR*100).toFixed(3),
                 (PESO_FSE_CONSERV_REPAR_NAO_MOSTRAR*100).toFixed(3),
                 (PESO_FSE_OUTROS_SERV_ESPECIAL_NAO_MOSTRAR*100).toFixed(3),
                 (PESO_FSE_FERRAM_UTENS_NAO_MOSTRAR*100).toFixed(3),
                 (PESO_FSE_LIVR_DOCUM_TEC_NAO_MOSTRAR*100).toFixed(3),
                 (PESO_FSE_MAT_ESCRITOR_NAO_MOSTRAR*100).toFixed(3),
                 (PESO_FSE_ART_OFERTA_NAO_MOSTRAR*100).toFixed(3),
                 (PESO_FSE_OUTROS_MATERIAIS_NAO_MOSTRAR*100).toFixed(3),
                 (PESO_FSE_ELECTRICIDADE_NAO_MOSTRAR*100).toFixed(3),
                 (PESO_FSE_COMBUSTIVEIS_NAO_MOSTRAR*100).toFixed(3),
                 (PESO_FSE_AGUA_NAO_MOSTRAR*100).toFixed(3),
                 (PESO_FSE_OUTROS_ENERG_FLUIDOS_NAO_MOSTRAR*100).toFixed(3),
                 (PESO_FSE_DESLOC_ESTADAS_NAO_MOSTRAR*100).toFixed(3),
                 (PESO_FSE_TRANSPORT_PESSOAL_NAO_MOSTRAR*100).toFixed(3),
                 (PESO_FSE_TRANSPORT_MERCAD_NAO_MOSTRAR*100).toFixed(3),
                 (PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_NAO_MOSTRAR*100).toFixed(3),
                 (PESO_FSE_RENDAS_ALUGUERES_NAO_MOSTRAR*100).toFixed(3),
                 (PESO_FSE_COMUNICACAO_NAO_MOSTRAR*100).toFixed(3),
                 (PESO_FSE_SEGUROS_NAO_MOSTRAR*100).toFixed(3),
                 (PESO_FSE_ROYALITIES_NAO_MOSTRAR*100).toFixed(3),
                 (PESO_FSE_CONTENS_NOTARIADO_NAO_MOSTRAR*100).toFixed(3),
                 (PESO_FSE_DESP_RESPRESENT_NAO_MOSTRAR*100).toFixed(3),
                 (PESO_FSE_LIMP_HIG_CONFORT_NAO_MOSTRAR*100).toFixed(3),
                 (PESO_FSE_OUTROS_SERV_DIVERSOS_NAO_MOSTRAR*100).toFixed(3),
             ],
             stack: 'Stack 2'
         },
          {
              label: "Ineficiência",
              backgroundColor: "rgba(255,99,132,0.9)",
              data: [
                  (PESO_FSE_SUBCONTRATOS_INEFICIENCIA*100).toFixed(3),
                  (PESO_FSE_TRAB_ESPECIAL_INEFICIENCIA*100).toFixed(3),
                  (PESO_FSE_PUB_PROPAG_INEFICIENCIA*100).toFixed(3),
                  (PESO_FSE_VIG_SEGURANCA_INEFICIENCIA*100).toFixed(3),
                  (PESO_FSE_HONORARIOS_INEFICIENCIA*100).toFixed(3),
                  (PESO_FSE_COMISSOES_INEFICIENCIA*100).toFixed(3),
                  (PESO_FSE_CONSERV_REPAR_INEFICIENCIA*100).toFixed(3),
                  (PESO_FSE_OUTROS_SERV_ESPECIAL_INEFICIENCIA*100).toFixed(3),
                  (PESO_FSE_FERRAM_UTENS_INEFICIENCIA*100).toFixed(3),
                  (PESO_FSE_LIVR_DOCUM_TEC_INEFICIENCIA*100).toFixed(3),
                  (PESO_FSE_MAT_ESCRITOR_INEFICIENCIA*100).toFixed(3),
                  (PESO_FSE_ART_OFERTA_INEFICIENCIA*100).toFixed(3),
                  (PESO_FSE_OUTROS_MATERIAIS_INEFICIENCIA*100).toFixed(3),
                  (PESO_FSE_ELECTRICIDADE_INEFICIENCIA*100).toFixed(3),
                  (PESO_FSE_COMBUSTIVEIS_INEFICIENCIA*100).toFixed(3),
                  (PESO_FSE_AGUA_INEFICIENCIA*100).toFixed(3),
                  (PESO_FSE_OUTROS_ENERG_FLUIDOS_INEFICIENCIA*100).toFixed(3),
                  (PESO_FSE_DESLOC_ESTADAS_INEFICIENCIA*100).toFixed(3),
                  (PESO_FSE_TRANSPORT_PESSOAL_INEFICIENCIA*100).toFixed(3),
                  (PESO_FSE_TRANSPORT_MERCAD_INEFICIENCIA*100).toFixed(3),
                  (PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_INEFICIENCIA*100).toFixed(3),
                  (PESO_FSE_RENDAS_ALUGUERES_INEFICIENCIA*100).toFixed(3),
                  (PESO_FSE_COMUNICACAO_INEFICIENCIA*100).toFixed(3),
                  (PESO_FSE_SEGUROS_INEFICIENCIA*100).toFixed(3),
                  (PESO_FSE_ROYALITIES_INEFICIENCIA*100).toFixed(3),
                  (PESO_FSE_CONTENS_NOTARIADO_INEFICIENCIA*100).toFixed(3),
                  (PESO_FSE_DESP_RESPRESENT_INEFICIENCIA*100).toFixed(3),
                  (PESO_FSE_LIMP_HIG_CONFORT_INEFICIENCIA*100).toFixed(3),
                  (PESO_FSE_OUTROS_SERV_DIVERSOS_INEFICIENCIA*100).toFixed(3),
              ],
              stack: 'Stack 2'
          },
         {
             label: "Eficiência",
             backgroundColor: "rgba(99,255,132,0.9)",
             data: [
                 (PESO_FSE_SUBCONTRATOS_EFICIENCIA*100).toFixed(3),
                 (PESO_FSE_TRAB_ESPECIAL_EFICIENCIA*100).toFixed(3),
                 (PESO_FSE_PUB_PROPAG_EFICIENCIA*100).toFixed(3),
                 (PESO_FSE_VIG_SEGURANCA_EFICIENCIA*100).toFixed(3),
                 (PESO_FSE_HONORARIOS_EFICIENCIA*100).toFixed(3),
                 (PESO_FSE_COMISSOES_EFICIENCIA*100).toFixed(3),
                 (PESO_FSE_CONSERV_REPAR_EFICIENCIA*100).toFixed(3),
                 (PESO_FSE_OUTROS_SERV_ESPECIAL_EFICIENCIA*100).toFixed(3),
                 (PESO_FSE_FERRAM_UTENS_EFICIENCIA*100).toFixed(3),
                 (PESO_FSE_LIVR_DOCUM_TEC_EFICIENCIA*100).toFixed(3),
                 (PESO_FSE_MAT_ESCRITOR_EFICIENCIA*100).toFixed(3),
                 (PESO_FSE_ART_OFERTA_EFICIENCIA*100).toFixed(3),
                 (PESO_FSE_OUTROS_MATERIAIS_EFICIENCIA*100).toFixed(3),
                 (PESO_FSE_ELECTRICIDADE_EFICIENCIA*100).toFixed(3),
                 (PESO_FSE_COMBUSTIVEIS_EFICIENCIA*100).toFixed(3),
                 (PESO_FSE_AGUA_EFICIENCIA*100).toFixed(3),
                 (PESO_FSE_OUTROS_ENERG_FLUIDOS_EFICIENCIA*100).toFixed(3),
                 (PESO_FSE_DESLOC_ESTADAS_EFICIENCIA*100).toFixed(3),
                 (PESO_FSE_TRANSPORT_PESSOAL_EFICIENCIA*100).toFixed(3),
                 (PESO_FSE_TRANSPORT_MERCAD_EFICIENCIA*100).toFixed(3),
                 (PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_EFICIENCIA*100).toFixed(3),
                 (PESO_FSE_RENDAS_ALUGUERES_EFICIENCIA*100).toFixed(3),
                 (PESO_FSE_COMUNICACAO_EFICIENCIA*100).toFixed(3),
                 (PESO_FSE_SEGUROS_EFICIENCIA*100).toFixed(3),
                 (PESO_FSE_ROYALITIES_EFICIENCIA*100).toFixed(3),
                 (PESO_FSE_CONTENS_NOTARIADO_EFICIENCIA*100).toFixed(3),
                 (PESO_FSE_DESP_RESPRESENT_EFICIENCIA*100).toFixed(3),
                 (PESO_FSE_LIMP_HIG_CONFORT_EFICIENCIA*100).toFixed(3),
                 (PESO_FSE_OUTROS_SERV_DIVERSOS_EFICIENCIA*100).toFixed(3),
             ],
             stack: 'Stack 2'
         },


         {
             label: 'Peso FSE vs VN(ac) ' + '20'+ANO_VERSAO_ANTE_,
             backgroundColor: "rgba(0,75,0,0.3)",
             data: [
                 (PESO_FSE_SUBCONTRATOS_VN_ANTE_ACUM *100).toFixed(3),
                 (PESO_FSE_TRAB_ESPECIAL_VN_ANTE_ACUM *100).toFixed(3),
                 (PESO_FSE_PUB_PROPAG_VN_ANTE_ACUM *100).toFixed(3),
                 (PESO_FSE_VIG_SEGURANCA_VN_ANTE_ACUM *100).toFixed(3),
                 (PESO_FSE_HONORARIOS_VN_ANTE_ACUM *100).toFixed(3),
                 (PESO_FSE_COMISSOES_VN_ANTE_ACUM *100).toFixed(3),
                 (PESO_FSE_CONSERV_REPAR_VN_ANTE_ACUM *100).toFixed(3),
                 (PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANTE_ACUM *100).toFixed(3),
                 (PESO_FSE_FERRAM_UTENS_VN_ANTE_ACUM *100).toFixed(3),
                 (PESO_FSE_LIVR_DOCUM_TEC_VN_ANTE_ACUM *100).toFixed(3),
                 (PESO_FSE_MAT_ESCRITOR_VN_ANTE_ACUM *100).toFixed(3),
                 (PESO_FSE_ART_OFERTA_VN_ANTE_ACUM *100).toFixed(3),
                 (PESO_FSE_OUTROS_MATERIAIS_VN_ANTE_ACUM *100).toFixed(3),
                 (PESO_FSE_ELECTRICIDADE_VN_ANTE_ACUM *100).toFixed(3),
                 (PESO_FSE_COMBUSTIVEIS_VN_ANTE_ACUM *100).toFixed(3),
                 (PESO_FSE_AGUA_VN_ANTE_ACUM *100).toFixed(3),
                 (PESO_FSE_OUTROS_ENERG_FLUIDOS_VN_ANTE_ACUM *100).toFixed(3),
                 (PESO_FSE_DESLOC_ESTADAS_VN_ANTE_ACUM *100).toFixed(3),
                 (PESO_FSE_TRANSPORT_PESSOAL_VN_ANTE_ACUM *100).toFixed(3),
                 (PESO_FSE_TRANSPORT_MERCAD_VN_ANTE_ACUM *100).toFixed(3),
                 (PESO_FSE_OUTROS_DESL_ESTAD_TRANSPORT_VN_ANTE_ACUM *100).toFixed(3),
                 (PESO_FSE_RENDAS_ALUGUERES_VN_ANTE_ACUM *100).toFixed(3),
                 (PESO_FSE_COMUNICACAO_VN_ANTE_ACUM *100).toFixed(3),
                 (PESO_FSE_SEGUROS_VN_ANTE_ACUM *100).toFixed(3),
                 (PESO_FSE_ROYALITIES_VN_ANTE_ACUM *100).toFixed(3),
                 (PESO_FSE_CONTENS_NOTARIADO_VN_ANTE_ACUM *100).toFixed(3),
                 (PESO_FSE_DESP_RESPRESENT_VN_ANTE_ACUM *100).toFixed(3),
                 (PESO_FSE_LIMP_HIG_CONFORT_VN_ANTE_ACUM *100).toFixed(3),
                 (PESO_FSE_OUTROS_SERV_DIVERSOS_VN_ANTE_ACUM *100).toFixed(3),
             ],
             stack: 'Stack 3'
         },

       ]
   };


   var ctx = document.getElementById("Peso_FSE_Comp").getContext("2d");
   new Chart(ctx, {
       type: 'horizontalBar',
       data: data,
       options: {

           legend: {
               display: true,
               labels: {

                   filter: function (legendItem, data) {
                       return legendItem.text != "Não Mostrar"
                   },
               },
           },
           scales: {
               xAxes: [{

                   stacked: true,

                   ticks: {
                       min: 0,
                       callback: function(value, index, values) {
                           return value.toLocaleString()+ "%";},
                   },

               }],
               yAxes: [{
                   ticks: {
                       beginAtZero: true,

                   },
                   stacked: true,
               }]

           }

       }
   });

@*</script>*@



                         @*---------------------------------MONSTAR/OCULTAR LINHAS DE CONFIGURAÇÃO DE INTERVALOS DE MESES DA TABELA----------------------------------------------------------*@
            var grid_mes_ini_ano_n = document.getElementById("grid_mes_ini_ano_n");
            var grid_mes_ini_ano_n_1 = document.getElementById("grid_mes_ini_ano_n-1");
            var grid_mes_fin_ano_n = document.getElementById("grid_mes_fin_ano_n");
            var grid_mes_fin_ano_n_1 = document.getElementById("grid_mes_fin_ano_n-1");
            var grid_mes_acum_ano_n = document.getElementById("grid_mes_acum_ano_n");
            var grid_mes_acum_ano_n_1 = document.getElementById("grid_mes_acum_ano_n-1");

            $(".oculta_na_impressao").hide();
            $(function () {
                $("#Mostrar").click(function () {
                    //$("#grid00").show();
                    if (userAgent.search(/(android|avantgo|blackberry|bolt|boost|cricket|docomo|fone|hiptop|mini|mobi|palm|phone|pie|tablet|up\.browser|up\.link|webos|wos)/i) != -1) {
                        if ($("#FSE_MENSAL_COMP_wrapper tr.oculta_na_impressao ").is(":visible") == false) { $("#FSE_MENSAL_COMP_wrapper tr.oculta_na_impressao").show(); $("#FSE_MENSAL_COMP tr.oculta_na_impressao").hide(); } else { $("#FSE_MENSAL_COMP_wrapper tr.oculta_na_impressao").hide(); };

                        var linha_1 = $(".dataTables_scrollHeadInner").html().replace("height: 0px; display: table-row;", "display: table-row;");
                        $(".dataTables_scrollHeadInner").html(linha_1);
                        var linha_2 = $(".DTFC_LeftHeadWrapper").html().replace("height: 0px; display: table-row;", "display: table-row;");
                        $(".DTFC_LeftHeadWrapper").html(linha_2);
                        var linha_1_celula = $(".dataTables_scrollHeadInner").html().replace("height: 0px; display: table-row;", "display: table-row;");
                        $(".dataTables_scrollHeadInner").html(linha_1_celula);
                        var linha_2_celula = $(".DTFC_LeftHeadWrapper").html().replace("height: 0px; display: table-row;", "display: table-row;");
                        $(".DTFC_LeftHeadWrapper").html(linha_2_celula);



                    } else { if ($("#FSE_MENSAL_COMP_wrapper tr.oculta_na_impressao ").is(":visible") == false) { $("#FSE_MENSAL_COMP tr.oculta_na_impressao").show(); } else { $("#FSE_MENSAL_COMP tr.oculta_na_impressao").hide(); }; }
                    if ($("#FSE_MENSAL_COMP_wrapper").find("#grid_mes_ini_ano_n_td").is(':empty') == true) {
                        $("#FSE_MENSAL_COMP_wrapper").find("#grid_mes_ini_ano_n_td").html(grid_mes_ini_ano_n);
                        $("#FSE_MENSAL_COMP_wrapper").find("#grid_mes_ini_ano_n-1_td").html(grid_mes_ini_ano_n_1);
                        $("#FSE_MENSAL_COMP_wrapper").find("#grid_mes_fin_ano_n_td").html(grid_mes_fin_ano_n);
                        $("#FSE_MENSAL_COMP_wrapper").find("#grid_mes_fin_ano_n-1_td").html(grid_mes_fin_ano_n_1);
                        $("#FSE_MENSAL_COMP_wrapper").find("#grid_mes_acum_ano_n_td").html(grid_mes_acum_ano_n);
                        $("#FSE_MENSAL_COMP_wrapper").find("#grid_mes_acum_ano_n-1_td").html(grid_mes_acum_ano_n_1);
                        $("#FSE_MENSAL_COMP_wrapper div.oculta_na_impressao_").show();
                    }

                });

                $("div.oculta_na_impressao_").hide();





            });



           @*------------------------------OCUTO CABEÇALHOS DE GRELHA-------------------------------------------------------------*@
            //$("#grid th").find('"a[href*=' + "'" + "ID" + "&'" + ']"').parent().addClass('id');
            //$("#grid th").find('"a[href*=' + "'" + "id_camp_calc" + "&'" + ']"').parent().addClass('id_camp_calc');
            //$("#grid th").find('"a[href*=' + "'" + "desc_camp_calc" + "&'" + ']"').parent().addClass('desc_camp_calc');
            ////$("#grid th").find('"a[href*=' + "'" + "campocalc_resultado" + "&'" + ']"').parent().addClass('campocalc_resultado');

            //$("#grid ").find(".id").hide();
            //$("#grid ").find(".id_camp_calc").hide();
            //$("#grid ").find(".desc_camp_calc").hide();
            //var alt_Valor_da_Variavel = $("#grid th").parent().html().replace('Valor da Variavel', 'Mês');
            //$("#grid th").parent().html(alt_Valor_da_Variavel)

            //--------------------------------TRATO os CAMPOS de SELECCAO DO MÊS--------------------------


            //$(" .campocalc_resultado ").click(function () {

            //    //alert("teste");
            //    if ($(this).children().attr('class') != "input") {
            //        var id = $(this).parent().find(".id").html();
            //        var idconteudoOriginal = $(this).parent().parent().parent().parent().parent().attr('id');
            //        //var findidconteudoOriginal = '.' + idconteudoOriginal + '';


            //        var conteudoOriginal = $(this).text();



            //        var ReplaceHrefID = $("#GRAVAROPER_DIRXX form").html();



            //        $(this).html("<input class='input' value='" + conteudoOriginal + "'/>");
            //        $(this).children().first().focus();

            //    }


            //    // NOTA TA: Keypress significa que a instrução é cumprida quando o utilizador faz "enter"
            //    $(this).children().first().keypress(function (e) {
            //        if (e.which == 13) {

            //            if ($(this).parent().parent().parent().parent().find('.GRAVAR').text() == "") {
            //                $(this).parent().parent().parent().parent().prepend(ReplaceHrefID);
            //            }
            //            else { $(this).parent().parent().parent().parent().find('.GRAVAR').html(ReplaceHrefID) }


            //            //NOTA TA: Aqui re-faço a href do botão com todos os campos preenchidos de origem
            //            var ValorInicial_id_camp = id;
            //            var ReplaceHref_id_camp = $(this).parent().parent().parent().parent().find('.GRAVAR').html().replace('id_camp=id_camp', 'id_camp' + '=' + ValorInicial_id_camp);
            //            $(this).parent().parent().parent().parent().find('.GRAVAR').html(ReplaceHref_id_camp);


            //            var hrefalterar1 = $(this).parent().parent().parent().parent().find('.GRAVAR').html();

            //            var valor = $(this).val()
            //            if ($(this).val() == "" ||  $(this).val() <= 0 || $(this).val() >=13 || valor != parseInt(valor, 10)) {
            //                var novoConteudo = conteudoOriginal;
            //                alert("Por favor, Insira um Valor de 1 a 12.")
            //            }
            //            else {
            //                var novoConteudo = $(this).val();
            //            }




            //            $(this).parent().text(novoConteudo);
            //            $(this).parent().removeClass("celulaEmEdicao");


            //            var ReplaceHref1 = hrefalterar1.replace('campocalc_resultado=campocalc_resultado', 'campocalc_resultado' + '=' + novoConteudo);

            //            $('#' + idconteudoOriginal).find('.GRAVAR').html(ReplaceHref1);


                        //-------------------INICIO: ACRESCENTEI para evitar passo debotão GRAVAR----
                        //var href_alt = document.querySelector('#' + idconteudoOriginal+ ' .GRAVAR a').href
                        //var href_alt_ = href_alt.replace('"','').replace('amp;','').replace('amp;','')

                        //var x = document.getElementsByClassName("GRAVAR");
                        //var i;
                        //for (i = 0; i < x.length; i++) {
                        //    x[i].style.display = "none";

                        //}

                        ////alert(ReplaceHref1);

                        //window.location.href = href_alt_

                        //-------------------FIM: ACRESCENTEI para evitar passo debotão GRAVAR----
            //                              }

            //    });


            //})


             @*--------------------------Aqui trato o Botão para configuração do Campo-----------------------------------------------------------------*@




            $(".webgrid-table td").click(function () {
                var idconteudoOriginal = $(this).attr('itemid');
                var versaoconteudoOriginal = $(this).attr('itemref');

                 //alert(idconteudoOriginal);
                if (typeof idconteudoOriginal === "undefined")
             { }
             else {
                    var ReplaceHrefID = $("#CONFIGURARXX form").html().replace('id_camp_calc=id_camp_calc', 'id_camp_calc' + '=' + idconteudoOriginal).replace('versao=versao', 'versao' + '=' + versaoconteudoOriginal);
                    if ($(this).find('.CONFIGURAR_CAMPO').text() == "") {
                        $(this).prepend(ReplaceHrefID);
             }
             }

                 //alert($(this).find('.CONFIGURAR_CAMPO').text());
             })

        })


            //------------------ NOTA TA: INICIO DE TRATAMENTO DE TABELA COM DATATABLE-------------------


            var userAgent = navigator.userAgent.toLowerCase();
            if (userAgent.search(/(android|avantgo|blackberry|bolt|boost|cricket|docomo|fone|hiptop|mini|mobi|palm|phone|pie|tablet|up\.browser|up\.link|webos|wos)/i) != -1) {
                var table = $('#FSE_MENSAL_COMP').DataTable({
                    aaSorting: [],
                    columnDefs: [
                      { orderable: false, targets: '_all' }
                    ],
                    scrollY: "800px",
                    scrollX: true,
                    scrollCollapse: true,
                    paging: false,

                    fixedColumns: {
                        leftColumns: 1

                    },
                    buttons: [
                            'copy', 'csv', 'print',
                     {
                         extend: 'pdfHtml5',
                         orientation: 'landscape',
                         pageSize: 'LEGAL'
                     },

                    {
                        extend: 'excelHtml5',
                        customize: function (xlsx) {
                            var sheet = xlsx.xl.worksheets['sheet1.xml'];
                            //nota ta: exemplo de como pintar coluna a melhorar
                            //$('row c[r^="A"]', sheet).each( function () {
                            // $(this).attr( 's', '15' );});
                        }
                    }
                    ],

                });
                $('#btnExport1').attr('style', 'display:block');
            }

                //--------------NOTA TA: SE NÃO FOR MOBILE DOU UM TRATENTO DIFERENTE-------


            else {
                var table = $('#FSE_MENSAL_COMP').DataTable({
                    aaSorting: [],
                    dom: 'Bfrtip',
                    columnDefs: [
                    { orderable: false, targets: '_all' }
                    ],
                    paging: false,
                    responsive: false,
                    fixedHeader: true,

                    // scrollY:        "800",
                    // scrollX:        true,
                    //scrollCollapse: true,
                    //paging:         false,
                    //fixedColumns:   {
                    //    leftColumns: 1,
                    //    rightColumns: 1
                    //},





                    buttons: [
                        'copy', 'csv', 'print',
                    {
                        extend: 'pdfHtml5',
                        orientation: 'landscape',
                        pageSize: 'LEGAL'
                    },

                    {
                        extend: 'excelHtml5',
                        customize: function (xlsx) {
                            var sheet = xlsx.xl.worksheets['sheet1.xml'];
                            //nota ta: exemplo de como pintar coluna a melhorar
                            //$('row c[r^="A"]', sheet).each( function () {
                            // $(this).attr( 's', '15' );});
                        }
                    }
                    ],



                });

                //NOTA TA: AQUI DEVERIA CONSEGUIR FIXAR O HEADER, MAS NÃO ESTOU A CONSEGUIR... A MELHORAR
                //new $.fn.dataTable.FixedHeader(table);
            }

            $(".DTFC_LeftBodyWrapper").css("top", "10px");
            $('button').addClass('btn-blue');

            //------------------ NOTA TA: FIM DE TRATAMENTO DE TABELA COM DATATABLE-------------------



    </script>


    @*-----------------------------NOTA TA: INICIO DE EXTRAIR PARA EXCEL E HTML ---------------------------------------------------------*@

    <script type="text/javascript">
            function fnExcelReport(table, name) {
                var table1 = '#' + table
                var ccs_style = $("#ccs_style").html();
                var styletabela = $(table1).attr("class");
                var indexOf_Ini_styletabela = $("#ccs_style").html().indexOf(styletabela)
                var indexOf_Fim_styletabela = ccs_style.substring(indexOf_Ini_styletabela, 999999999999).indexOf("}");
                var ccs_style_tabela = ccs_style.substring(indexOf_Ini_styletabela, 999999999999).substring(0, indexOf_Fim_styletabela).replace("{", "").replace(styletabela, "");


                var tab_text = "<table style=" + "'" + ccs_style_tabela + "'" + "><tr>";
                var textRange; var j = 0; var i = 0;
                tab = document.getElementById(table); // id of table



                for (j = 0 ; j < tab.rows.length ; j++) {
                    var tab_rows = tab.rows[j].innerHTML;
                    for (i = 0 ; i < tab.rows[j].cells.length ; i++) {

                        var texto_linha = tab_rows;
                        var style_celula_ini = texto_linha.indexOf('class="');
                        var style_celula_fim = texto_linha.substring(style_celula_ini, 999999999999).replace('class="', '').indexOf('"');
                        var style_celula = texto_linha.substring(style_celula_ini, 999999999999).replace('class="', '').substring(0, style_celula_fim);

                        var indexOf_Ini_styletabela = $("#ccs_style").html().indexOf(style_celula)
                        var indexOf_Fim_styletabela = ccs_style.substring(indexOf_Ini_styletabela, 999999999999).indexOf("}");
                        var ccs_style_tabela = ccs_style.substring(indexOf_Ini_styletabela, 999999999999).substring(0, indexOf_Fim_styletabela).replace("{", "").replace(style_celula, "");

                        tab_rows = tab_rows.replace('class="' + style_celula + '"', 'style="' + ccs_style_tabela + '"')

                    }

                    tab_text = tab_text + tab_rows + "</tr>";
                    //tab_text=tab_text+"</tr>";
                }

                tab_text = tab_text + "</table>";
                tab_text = tab_text.split('&nbsp;').join('.');
                tab_text = tab_text.replace(/<A[^>]*>|<\/A>/g, "");//remove if u want links in your table
                tab_text = tab_text.replace(/<img[^>]*>/gi, ""); // remove if u want images in your table
                tab_text = tab_text.replace(/<input[^>]*>|<\/input>/gi, ""); // reomves input params

                var ua = window.navigator.userAgent;
                var msie = ua.indexOf("MSIE ");

                if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\:11\./))      // If Internet Explorer
                {
                    txtArea1.document.open("txt/html", "replace");
                    txtArea1.document.write(tab_text);
                    txtArea1.document.close();
                    txtArea1.focus();
                    sa = txtArea1.document.execCommand("SaveAs", true, "Transferir.xls");

                    return (sa);
                }
                else                 //other browser not tested on IE 11

                 sa = window.open('data:application/vnd.ms-excel,' + encodeURIComponent(tab_text));

                return (sa);


            }
    </script>

    @*-----------------------------NOTA TA: FIM DE EXTRAIR PARA EXCEL E HTML ---------------------------------------------------------*@
}

