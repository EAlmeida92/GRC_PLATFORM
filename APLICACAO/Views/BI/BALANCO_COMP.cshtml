@{
    ViewBag.Title = "BALANCO_COMP";
}





<style id="ccs_style"  type="text/css">
    .webgrid-table
    {
        font-family: "Trebuchet MS" , Arial, Helvetica, sans-serif;
        font-size: 13px;
        width: 100%;
        display: table;
        border: solid 1px #FFFFFF;
        background-color: white;
        text-align: right;
        
    }
    .webgrid-table td, th
    {
             
        border: solid 1px #FFFFFF;
        padding: 3px 7px 2px;
    }
    .webgrid-header
    {
      padding: 6px 5px;
      text-align: center;
      background-color: #e8eef4;
      border-bottom: 2px solid #A4A4A4;
      height: 60px;

    }
        .webgrid-header_
    {
      padding: 6px 5px;
      text-align: center;
      background-color: #e8eef4;
      border-bottom: 2px solid #A4A4A4;
      height: 30px;

    }
    .webgrid-footer
    {
    }
    .webgrid-row-style
    {
        text-align: right;
        padding: 3px 7px 2px;
    }
    .webgrid-rubrica
    {
         text-align: right;
        background-color: #EAF2D3;
        padding: 3px 7px 2px;

    }
        .webgrid-rubrica-sub
    {
         text-align: center;
        background-color: #EAF2D3;   
       
        padding: 3px 7px 2px;

    }
                .webgrid-rubrica-TOTAL
    {
         text-align: center;
        background-color: #02020a;   
        color: white;
        padding: 3px 7px 2px;

    }
        .webgrid-total
    {
         text-align: right;
        background-color: #EAF2D3;
        padding: 3px 7px 2px;
    }
         .webgrid-total-sub
    {
         text-align: center;
        background-color: #EAF2D3;   
        color: white;
        padding: 3px 7px 2px;
    }
                 .webgrid-total-TOTAL
    {
         text-align: center;
        background-color: #02020a;   
        color: white;
        padding: 3px 7px 2px;
    }
        .webgrid-selected-row
    {
        text-align: right;   
        border: solid 1px #FFFFFF;
        padding: 3px 7px 2px;
    }
.Webgrid_col_data
    {
  text-align: center;
    }

    .input {
     width: 50px;
     height: 25px;

        text-align: justify;
        background-color: #EAF2D3;
        padding: 3px 4px 2px;
       text-overflow:clip;
    
    }
        .GRAVAR
    {
        font-family: "Trebuchet MS" , Arial, Helvetica, sans-serif;
        font-size: 15px;
        color:#eaf2d3;
         background-color: #d2d4f1        
    }
    .campocalc_resultado  {
         background-color: #E3DFFF;
         text-align: center;
    }
    .oculta_na_impressao {
                
        height: 30px;
        display:none;
    }     
        .titulos_mapas {
        background-color: #7F7F7F;
        text-align: center;
        color: #FFFFFF;
        vertical-align: middle;
        font-size: 22px;
        font-weight: bold;
    }
       /*NOTA table::after CSS param TOOLTIPS*/

.tooltip {
  position: relative;
  /*display: inline-block;*/
  /*border-bottom: 1px dotted black;*/
}

.tooltip .tooltiptext {
  visibility: hidden;
  /*width: 125px;*/
  width: 240px;
  background-color: #555;
  color: #fff;
  text-align: center;
  border-radius: 6px;
  padding: 5px 0;
  position: absolute;
  z-index: 1;
  bottom: 125%;
  left: 50%;
  /*margin-left: -60px;*/
  margin-left: -10px;
  opacity: 0;
  transition: opacity 1s;
}

.tooltip .tooltiptext::after {
  content: "";
  position: absolute;
  top: 100%;
  /*left: 50%;*/
  left: 5%;
  margin-left: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: #555 transparent transparent transparent;
}

.tooltip:hover .tooltiptext {
  visibility: visible;
  opacity: 1;
}
    .calcular
{display:none;
 width:100%;
 text-align:center;
 
}

    /*NOTA table::AQUI DEFINO  O  STYLE DOS BOTÕES*/

.btn:focus, .btn::-moz-focus-inner{
  outline:none;
  border:none;
}
.btn{
  font-family: arial;
  font-size:14px;
  text-transform: uppercase;
  font-weight:700;
  border:none;
  padding:10px;
  cursor: pointer;
  display:inline-block;
  text-decoration: none;
  width: auto;
}
.btn-green{
  background:green;
  color:#fff;
   border:#fff;
  box-shadow:0 5px 0 #006000 /*rgba(0, 96, 0, 0.6)*/;
    width: auto;
}
.btn-green:hover{
  background:#006000;
  box-shadow:0 5px 0 #003f00;
}
.btn-blue{
  background:rgba(0,0,139, 0.6);
  color:#fff;
   border:#fff;
  box-shadow:0 5px 0 rgba(0,0,59, 0.6);
    width: auto;
}
.btn-blue:hover{
  background:#2153a2;
  box-shadow:0 5px 0 #00003B;
}
.btn-purple{
  background:purple; opacity:0.6;
  border:#fff;
  color:#fff;
  box-shadow:0 5px 0 #670167 /*rgba(103, 1, 103, 0.6)*/;
    width: auto;
}
.btn-purple:hover{
  background:#670167;
  box-shadow:0 5px 0 #470047;
}
.btn-red{
  background:red; opacity:0.7;
  border:#fff;
  color:#fff;
  box-shadow:0 5px 0 #d20000 /*rgba(210, 0, 0, 0.6)*/;
    width: auto;
}
.btn-red:hover{
  background:#d20000;
  box-shadow:0 5px 0 #b00000;
}
.btn-orange{
  background:rgb(204 , 112 , 0); opacity:0.6;
  border:#fff;
  color:#fff;
  box-shadow:0 5px 0 rgb(204 , 112 , 0)/*rgba(210, 0, 0, 0.6)*/;
    width: auto;
}
.btn-orange:hover{
  background:rgb(204 , 112 , 0);
  box-shadow:0 5px 0 rgb(204 , 112 , 0);
}
.btn-brown{
  background:rgb(102, 0, 0); opacity:0.6;
  border:#fff;
  color:#fff;
  box-shadow:0 5px 0 rgb(102, 0, 0)/*rgba(210, 0, 0, 0.6)*/;
    width: auto;
}
.btn-brown:hover{
  background:rgb(102, 0, 0);
  box-shadow:0 5px 0 rgb(102, 0, 0);
}
.btn-green:active,.btn-blue:active, .btn-purple:active, .btn-red:active, .btn-orange:active, .btn-brown:active{
  position:relative;
  top:5px;
  box-shadow:inherit;
}
        option {
               direction: rtl; 
    }
    </style>
@{
    var ANO_VERSAO_REAL = @ViewData["ANO_VERSAO_REAL"];
    var ANO_VERSAO_ANTE = @ViewData["ANO_VERSAO_ANTE"];
    var MES_ACUM_REAL = @ViewData["MES_ACUM_REAL"];        
    var MES_ACUM_ANTE = @ViewData["MES_ACUM_ANTE"];
    var MES_INI_PER_REAL = @ViewData["MES_INI_PER_REAL"];
    var MES_INI_PER_ANTE = @ViewData["MES_INI_PER_ANTE"];
    var MES_FIN_PER_REAL = @ViewData["MES_FIN_PER_REAL"];
    var MES_FIN_PER_ANTE = @ViewData["MES_FIN_PER_ANTE"]; 
}



<h2 id="balanco_comp_titulo_tabela">BALANÇO - COMPARATIVO @Html.Raw((string.Format("{0:N}",@ANO_VERSAO_REAL))) vs @Html.Raw((string.Format("{0:N}",@ANO_VERSAO_ANTE)))</h2>
<p></p>
<p></p>
<table id="botoes">
    <tr>
        <td>
            <button type="button" name="Mostrar" id="Mostrar" class="btn-brown"> Configurar Intervalos de Análise</button>
        </td>
        <td style="display:none">
            <iframe id="txtArea1" style="display:none"></iframe>
        </td>
        <td>
            <button type=button id="btnExport1" class="btn-blue" style="display:none" onclick="fnExcelReport('BALANCO_COMP', 'Export HTML Table to Excel')">Excel</button>
        </td>
    </tr>
</table><p></p>



<div class="calcular">
    <h3 style="background-color:blueviolet; color:white;">Estamos a calcular os dados desta tabela. Iremos refrescando a página até que toda a tabela esteja calculada. </h3>
    <p style="padding-bottom:5px"></p>
</div>

<table id="BALANCO_COMP" class="webgrid-table" border="1">
    <thead>
        <tr class="oculta_na_impressao">
            <td class="webgrid-header_" style="background-color:#efeeef; border-color:#efeeef;text-align:right;vertical-align:middle; padding-bottom:1px">Período a analisar - Mês Inicial : </td>
            <td id="grid_mes_ini_ano_n_td" class="webgrid-header_" style="background-color:#efeeef; border-color:#efeeef; text-align:right; padding-left:35px"></td>
            <td id="grid_mes_ini_ano_n-1_td" class="webgrid-header_" style="background-color:#efeeef; border-color:#efeeef; padding-left:35px"></td>
            <td class="webgrid-header_" colspan="6" style="background-color:#efeeef; border-color:#efeeef"> </td>


        </tr>
        <tr class="oculta_na_impressao" style="background-color:#efeeef; border-color:#efeeef">
            <td class="webgrid-header_" style="background-color:#efeeef; border-color:#efeeef; text-align:right;vertical-align:bottom;vertical-align:middle; padding-bottom:1px">Período a analisar - Mês Final: </td>
            <td id="grid_mes_fin_ano_n_td" class="webgrid-header_" style="background-color:#efeeef; border-color:#efeeef; padding-left:35px"></td>
            <td id="grid_mes_fin_ano_n-1_td" class="webgrid-header_" style="background-color:#efeeef; border-color:#efeeef; padding-left:35px"></td>
            <td class="webgrid-header_" colspan="2" style="background-color:#efeeef; border-color:#efeeef; text-align:right;vertical-align:middle; padding-bottom:1px">Acumulado de Jan até ao Mês: </td>
            <td id="grid_mes_acum_ano_n-1_td" class="webgrid-header_" style="background-color:#efeeef; border-color:#efeeef; padding-left:35px"></td>
            <td id="grid_mes_acum_ano_n_td" class="webgrid-header_" style="background-color:#efeeef; border-color:#efeeef; padding-left:35px"></td>
            <td class="webgrid-header_" colspan="2" style="background-color:#efeeef; border-color:#efeeef"> </td>
        </tr>
        <tr>
            <td class="webgrid-header"> Rúbrica </td>
            <td class="webgrid-header">
                Média de
                @{if (MES_INI_PER_REAL.Equals("1"))
                    { <text>Jan</text>;
                    }
                    else
                    {
                        if (MES_INI_PER_REAL.Equals("2"))
                        { <text>Fev</text>;
                        }
                        else
                        {
                            if (MES_INI_PER_REAL.Equals("3"))
                            { <text>Mar</text>;
                            }
                            else
                            {
                                if (MES_INI_PER_REAL.Equals("4"))
                                { <text>Abr</text>;
                                }
                                else
                                {
                                    if (MES_INI_PER_REAL.Equals("5"))
                                    { <text>Mai</text>;
                                    }
                                    else
                                    {
                                        if (MES_INI_PER_REAL.Equals("6"))
                                        { <text>Jun</text>;
                                        }
                                        else
                                        {
                                            if (MES_INI_PER_REAL.Equals("7"))
                                            { <text>Jul</text>;
                                            }
                                            else
                                            {
                                                if (MES_INI_PER_REAL.Equals("8"))
                                                { <text>Ago</text>;
                                                }
                                                else
                                                {
                                                    if (MES_INI_PER_REAL.Equals("9"))
                                                    { <text>Set</text>;
                                                    }
                                                    else
                                                    {
                                                        if (MES_INI_PER_REAL.Equals("10"))
                                                        { <text>Out</text>;
                                                        }
                                                        else
                                                        {
                                                            if (MES_INI_PER_REAL.Equals("11"))
                                                            { <text>Nov</text>;
                                                            }
                                                            else
                                                            {
                                                                if (MES_INI_PER_REAL.Equals("12"))
                                                                { <text>Dez</text>;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }}  a
                @{if (MES_FIN_PER_REAL.Equals("1"))
                    { <text>Jan</text>;
                    }
                    else
                    {
                        if (MES_FIN_PER_REAL.Equals("2"))
                        { <text>Fev</text>;
                        }
                        else
                        {
                            if (MES_FIN_PER_REAL.Equals("3"))
                            { <text>Mar</text>;
                            }
                            else
                            {
                                if (MES_FIN_PER_REAL.Equals("4"))
                                { <text>Abr</text>;
                                }
                                else
                                {
                                    if (MES_FIN_PER_REAL.Equals("5"))
                                    { <text>Mai</text>;
                                    }
                                    else
                                    {
                                        if (MES_FIN_PER_REAL.Equals("6"))
                                        { <text>Jun</text>;
                                        }
                                        else
                                        {
                                            if (MES_FIN_PER_REAL.Equals("7"))
                                            { <text>Jul</text>;
                                            }
                                            else
                                            {
                                                if (MES_FIN_PER_REAL.Equals("8"))
                                                { <text>Ago</text>;
                                                }
                                                else
                                                {
                                                    if (MES_FIN_PER_REAL.Equals("9"))
                                                    { <text>Set</text>;
                                                    }
                                                    else
                                                    {
                                                        if (MES_FIN_PER_REAL.Equals("10"))
                                                        { <text>Out</text>;
                                                        }
                                                        else
                                                        {
                                                            if (MES_FIN_PER_REAL.Equals("11"))
                                                            { <text>Nov</text>;
                                                            }
                                                            else
                                                            {
                                                                if (MES_FIN_PER_REAL.Equals("12"))
                                                                { <text>Dez</text>;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }}
                de @Html.Raw((string.Format("{0:N}", @ANO_VERSAO_REAL)))
            </td>
            <td class="webgrid-header">
                Média de
                @{if (MES_INI_PER_ANTE.Equals("1"))
                    { <text>Jan</text>;
                    }
                    else
                    {
                        if (MES_INI_PER_ANTE.Equals("2"))
                        { <text>Fev</text>;
                        }
                        else
                        {
                            if (MES_INI_PER_ANTE.Equals("3"))
                            { <text>Mar</text>;
                            }
                            else
                            {
                                if (MES_INI_PER_ANTE.Equals("4"))
                                { <text>Abr</text>;
                                }
                                else
                                {
                                    if (MES_INI_PER_ANTE.Equals("5"))
                                    { <text>Mai</text>;
                                    }
                                    else
                                    {
                                        if (MES_INI_PER_ANTE.Equals("6"))
                                        { <text>Jun</text>;
                                        }
                                        else
                                        {
                                            if (MES_INI_PER_ANTE.Equals("7"))
                                            { <text>Jul</text>;
                                            }
                                            else
                                            {
                                                if (MES_INI_PER_ANTE.Equals("8"))
                                                { <text>Ago</text>;
                                                }
                                                else
                                                {
                                                    if (MES_INI_PER_ANTE.Equals("9"))
                                                    { <text>Set</text>;
                                                    }
                                                    else
                                                    {
                                                        if (MES_INI_PER_ANTE.Equals("10"))
                                                        { <text>Out</text>;
                                                        }
                                                        else
                                                        {
                                                            if (MES_INI_PER_ANTE.Equals("11"))
                                                            { <text>Nov</text>;
                                                            }
                                                            else
                                                            {
                                                                if (MES_INI_PER_ANTE.Equals("12"))
                                                                { <text>Dez</text>;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }}  a
                @{if (MES_FIN_PER_ANTE.Equals("1"))
                    { <text>Jan</text>;
                    }
                    else
                    {
                        if (MES_FIN_PER_ANTE.Equals("2"))
                        { <text>Fev</text>;
                        }
                        else
                        {
                            if (MES_FIN_PER_ANTE.Equals("3"))
                            { <text>Mar</text>;
                            }
                            else
                            {
                                if (MES_FIN_PER_ANTE.Equals("4"))
                                { <text>Abr</text>;
                                }
                                else
                                {
                                    if (MES_FIN_PER_ANTE.Equals("5"))
                                    { <text>Mai</text>;
                                    }
                                    else
                                    {
                                        if (MES_FIN_PER_ANTE.Equals("6"))
                                        { <text>Jun</text>;
                                        }
                                        else
                                        {
                                            if (MES_FIN_PER_ANTE.Equals("7"))
                                            { <text>Jul</text>;
                                            }
                                            else
                                            {
                                                if (MES_FIN_PER_ANTE.Equals("8"))
                                                { <text>Ago</text>;
                                                }
                                                else
                                                {
                                                    if (MES_FIN_PER_ANTE.Equals("9"))
                                                    { <text>Set</text>;
                                                    }
                                                    else
                                                    {
                                                        if (MES_FIN_PER_ANTE.Equals("10"))
                                                        { <text>Out</text>;
                                                        }
                                                        else
                                                        {
                                                            if (MES_FIN_PER_ANTE.Equals("11"))
                                                            { <text>Nov</text>;
                                                            }
                                                            else
                                                            {
                                                                if (MES_FIN_PER_ANTE.Equals("12"))
                                                                { <text>Dez</text>;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }}
                de @Html.Raw((string.Format("{0:N}", @ANO_VERSAO_ANTE)))
            </td>
            <td class="webgrid-header"> Var Per %  </td>
            <td class="webgrid-header"> Total  do ano @Html.Raw((string.Format("{0:N}", @ANO_VERSAO_ANTE)))  </td>
            <td class="webgrid-header">
                Acum de Jan a
                @{if (MES_ACUM_ANTE.Equals("1"))
                    { <text>Jan</text>;
                    }
                    else
                    {
                        if (MES_ACUM_ANTE.Equals("2"))
                        { <text>Fev</text>;
                        }
                        else
                        {
                            if (MES_ACUM_ANTE.Equals("3"))
                            { <text>Mar</text>;
                            }
                            else
                            {
                                if (MES_ACUM_ANTE.Equals("4"))
                                { <text>Abr</text>;
                                }
                                else
                                {
                                    if (MES_ACUM_ANTE.Equals("5"))
                                    { <text>Mai</text>;
                                    }
                                    else
                                    {
                                        if (MES_ACUM_ANTE.Equals("6"))
                                        { <text>Jun</text>;
                                        }
                                        else
                                        {
                                            if (MES_ACUM_ANTE.Equals("7"))
                                            { <text>Jul</text>;
                                            }
                                            else
                                            {
                                                if (MES_ACUM_ANTE.Equals("8"))
                                                { <text>Ago</text>;
                                                }
                                                else
                                                {
                                                    if (MES_ACUM_ANTE.Equals("9"))
                                                    { <text>Set</text>;
                                                    }
                                                    else
                                                    {
                                                        if (MES_ACUM_ANTE.Equals("10"))
                                                        { <text>Out</text>;
                                                        }
                                                        else
                                                        {
                                                            if (MES_ACUM_ANTE.Equals("11"))
                                                            { <text>Nov</text>;
                                                            }
                                                            else
                                                            {
                                                                if (MES_ACUM_ANTE.Equals("12"))
                                                                { <text>Dez</text>;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }}
                de @Html.Raw((string.Format("{0:N}", @ANO_VERSAO_ANTE)))
            </td>
            <td class="webgrid-header">
                Acum de Jan a
                @{if (MES_ACUM_REAL.Equals("1"))
                    { <text>Jan</text>;
                    }
                    else
                    {
                        if (MES_ACUM_REAL.Equals("2"))
                        { <text>Fev</text>;
                        }
                        else
                        {
                            if (MES_ACUM_REAL.Equals("3"))
                            { <text>Mar</text>;
                            }
                            else
                            {
                                if (MES_ACUM_REAL.Equals("4"))
                                { <text>Abr</text>;
                                }
                                else
                                {
                                    if (MES_ACUM_REAL.Equals("5"))
                                    { <text>Mai</text>;
                                    }
                                    else
                                    {
                                        if (MES_ACUM_REAL.Equals("6"))
                                        { <text>Jun</text>;
                                        }
                                        else
                                        {
                                            if (MES_ACUM_REAL.Equals("7"))
                                            { <text>Jul</text>;
                                            }
                                            else
                                            {
                                                if (MES_ACUM_REAL.Equals("8"))
                                                { <text>Ago</text>;
                                                }
                                                else
                                                {
                                                    if (MES_ACUM_REAL.Equals("9"))
                                                    { <text>Set</text>;
                                                    }
                                                    else
                                                    {
                                                        if (MES_ACUM_REAL.Equals("10"))
                                                        { <text>Out</text>;
                                                        }
                                                        else
                                                        {
                                                            if (MES_ACUM_REAL.Equals("11"))
                                                            { <text>Nov</text>;
                                                            }
                                                            else
                                                            {
                                                                if (MES_ACUM_REAL.Equals("12"))
                                                                { <text>Dez</text>;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }}
                de @Html.Raw((string.Format("{0:N}", @ANO_VERSAO_REAL)))
            </td>
            <td class="webgrid-header"> Var Acum % </td>
            <td class="webgrid-header"> Var Acum </td>

        </tr>
    </thead>


<tr>
    <td  class="webgrid-rubrica-sub"> Activo não Corrente                           </td> 
    <td class="webgrid-rubrica-sub" id="ANC_TOTAL_REAL_PER" itemid="ANC_TOTAL_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["ANC_TOTAL_REAL_PER"])))  </td> 
    <td class="webgrid-rubrica-sub" id="ANC_TOTAL_ANTE_PER" itemid="ANC_TOTAL_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["ANC_TOTAL_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica-sub" id="ANC_TOTAL_COMP_PER_P" >  @if (@ViewData["ANC_TOTAL_REAL_PER"].Equals("calc") || @ViewData["ANC_TOTAL_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["ANC_TOTAL_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal ANC_TOTAL_REAL_PER = Convert.ToInt32(@ViewData["ANC_TOTAL_REAL_PER"]); decimal ANC_TOTAL_ANTE_PER = Convert.ToInt32(@ViewData["ANC_TOTAL_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((ANC_TOTAL_REAL_PER / ANC_TOTAL_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td class="webgrid-rubrica-sub" id="ANC_TOTAL_ANTE_TOTAL" itemid="ANC_TOTAL_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["ANC_TOTAL_ANTE_TOTAL"])))  </td> 
    <td class="webgrid-rubrica-sub" id="ANC_TOTAL_ANTE_ACUM" itemid="ANC_TOTAL_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["ANC_TOTAL_ANTE_ACUM"])))  </td> 
    <td class="webgrid-rubrica-sub" id="ANC_TOTAL_REAL_ACUM" itemid="ANC_TOTAL_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["ANC_TOTAL_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica-sub" id="ANC_TOTAL_COMP_ACUM_P" > @if (@ViewData["ANC_TOTAL_REAL_ACUM"].Equals("calc") || @ViewData["ANC_TOTAL_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["ANC_TOTAL_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal ANC_TOTAL_REAL_ACUM = Convert.ToInt32(@ViewData["ANC_TOTAL_REAL_ACUM"]); decimal ANC_TOTAL_ANTE_ACUM = Convert.ToInt32(@ViewData["ANC_TOTAL_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((ANC_TOTAL_REAL_ACUM / ANC_TOTAL_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica-sub" id="ANC_TOTAL_COMP_ACUM_B" > @if (@ViewData["ANC_TOTAL_REAL_ACUM"].Equals("calc") || @ViewData["ANC_TOTAL_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["ANC_TOTAL_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal ANC_TOTAL_REAL_ACUM = Convert.ToInt32(@ViewData["ANC_TOTAL_REAL_ACUM"]); decimal ANC_TOTAL_ANTE_ACUM = Convert.ToInt32(@ViewData["ANC_TOTAL_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((ANC_TOTAL_REAL_ACUM - ANC_TOTAL_ANTE_ACUM)))))} } </td>
 </tr>
    

<tr>
    <td  class="webgrid-rubrica"> Activos Tangíveis                           </td> 
    <td style="text-align:right" id="ANC_ACTIV_TANG_REAL_PER" itemid="ANC_ACTIV_TANG_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["ANC_ACTIV_TANG_REAL_PER"])))  </td> 
    <td style="text-align:right" id="ANC_ACTIV_TANG_ANTE_PER" itemid="ANC_ACTIV_TANG_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["ANC_ACTIV_TANG_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="ANC_ACTIV_TANG_COMP_PER_P" >  @if (@ViewData["ANC_ACTIV_TANG_REAL_PER"].Equals("calc") || @ViewData["ANC_ACTIV_TANG_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["ANC_ACTIV_TANG_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal ANC_ACTIV_TANG_REAL_PER = Convert.ToInt32(@ViewData["ANC_ACTIV_TANG_REAL_PER"]); decimal ANC_ACTIV_TANG_ANTE_PER = Convert.ToInt32(@ViewData["ANC_ACTIV_TANG_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((ANC_ACTIV_TANG_REAL_PER / ANC_ACTIV_TANG_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="ANC_ACTIV_TANG_ANTE_TOTAL" itemid="ANC_ACTIV_TANG_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["ANC_ACTIV_TANG_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="ANC_ACTIV_TANG_ANTE_ACUM" itemid="ANC_ACTIV_TANG_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["ANC_ACTIV_TANG_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="ANC_ACTIV_TANG_REAL_ACUM" itemid="ANC_ACTIV_TANG_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["ANC_ACTIV_TANG_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="ANC_ACTIV_TANG_COMP_ACUM_P" > @if (@ViewData["ANC_ACTIV_TANG_REAL_ACUM"].Equals("calc") || @ViewData["ANC_ACTIV_TANG_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["ANC_ACTIV_TANG_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal ANC_ACTIV_TANG_REAL_ACUM = Convert.ToInt32(@ViewData["ANC_ACTIV_TANG_REAL_ACUM"]); decimal ANC_ACTIV_TANG_ANTE_ACUM = Convert.ToInt32(@ViewData["ANC_ACTIV_TANG_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((ANC_ACTIV_TANG_REAL_ACUM / ANC_ACTIV_TANG_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="ANC_ACTIV_TANG_COMP_ACUM_B" > @if (@ViewData["ANC_ACTIV_TANG_REAL_ACUM"].Equals("calc") || @ViewData["ANC_ACTIV_TANG_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["ANC_ACTIV_TANG_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal ANC_ACTIV_TANG_REAL_ACUM = Convert.ToInt32(@ViewData["ANC_ACTIV_TANG_REAL_ACUM"]); decimal ANC_ACTIV_TANG_ANTE_ACUM = Convert.ToInt32(@ViewData["ANC_ACTIV_TANG_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((ANC_ACTIV_TANG_REAL_ACUM - ANC_ACTIV_TANG_ANTE_ACUM)))))} } </td>
 </tr>
<tr>
    <td  class="webgrid-rubrica"> Activos Intangíveis                           </td> 
    <td style="text-align:right" id="ANC_ACTIV_INTANG_REAL_PER" itemid="ANC_ACTIV_INTANG_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["ANC_ACTIV_INTANG_REAL_PER"])))  </td> 
    <td style="text-align:right" id="ANC_ACTIV_INTANG_ANTE_PER" itemid="ANC_ACTIV_INTANG_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["ANC_ACTIV_INTANG_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="ANC_ACTIV_INTANG_COMP_PER_P" >  @if (@ViewData["ANC_ACTIV_INTANG_REAL_PER"].Equals("calc") || @ViewData["ANC_ACTIV_INTANG_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["ANC_ACTIV_INTANG_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal ANC_ACTIV_INTANG_REAL_PER = Convert.ToInt32(@ViewData["ANC_ACTIV_INTANG_REAL_PER"]); decimal ANC_ACTIV_INTANG_ANTE_PER = Convert.ToInt32(@ViewData["ANC_ACTIV_INTANG_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((ANC_ACTIV_INTANG_REAL_PER / ANC_ACTIV_INTANG_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="ANC_ACTIV_INTANG_ANTE_TOTAL" itemid="ANC_ACTIV_INTANG_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["ANC_ACTIV_INTANG_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="ANC_ACTIV_INTANG_ANTE_ACUM" itemid="ANC_ACTIV_INTANG_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["ANC_ACTIV_INTANG_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="ANC_ACTIV_INTANG_REAL_ACUM" itemid="ANC_ACTIV_INTANG_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["ANC_ACTIV_INTANG_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="ANC_ACTIV_INTANG_COMP_ACUM_P" > @if (@ViewData["ANC_ACTIV_INTANG_REAL_ACUM"].Equals("calc") || @ViewData["ANC_ACTIV_INTANG_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["ANC_ACTIV_INTANG_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal ANC_ACTIV_INTANG_REAL_ACUM = Convert.ToInt32(@ViewData["ANC_ACTIV_INTANG_REAL_ACUM"]); decimal ANC_ACTIV_INTANG_ANTE_ACUM = Convert.ToInt32(@ViewData["ANC_ACTIV_INTANG_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((ANC_ACTIV_INTANG_REAL_ACUM / ANC_ACTIV_INTANG_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="ANC_ACTIV_INTANG_COMP_ACUM_B" > @if (@ViewData["ANC_ACTIV_INTANG_REAL_ACUM"].Equals("calc") || @ViewData["ANC_ACTIV_INTANG_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["ANC_ACTIV_INTANG_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal ANC_ACTIV_INTANG_REAL_ACUM = Convert.ToInt32(@ViewData["ANC_ACTIV_INTANG_REAL_ACUM"]); decimal ANC_ACTIV_INTANG_ANTE_ACUM = Convert.ToInt32(@ViewData["ANC_ACTIV_INTANG_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((ANC_ACTIV_INTANG_REAL_ACUM - ANC_ACTIV_INTANG_ANTE_ACUM)))))} } </td>
 </tr>

<tr>
    <td  class="webgrid-rubrica"> Outros Activos                           </td> 
    <td style="text-align:right" id="ANC_OUTR_ACTIV_REAL_PER" itemid="ANC_OUTR_ACTIV_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["ANC_OUTR_ACTIV_REAL_PER"])))  </td> 
    <td style="text-align:right" id="ANC_OUTR_ACTIV_ANTE_PER" itemid="ANC_OUTR_ACTIV_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["ANC_OUTR_ACTIV_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="ANC_OUTR_ACTIV_COMP_PER_P" >  @if (@ViewData["ANC_OUTR_ACTIV_REAL_PER"].Equals("calc") || @ViewData["ANC_OUTR_ACTIV_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["ANC_OUTR_ACTIV_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal ANC_OUTR_ACTIV_REAL_PER = Convert.ToInt32(@ViewData["ANC_OUTR_ACTIV_REAL_PER"]); decimal ANC_OUTR_ACTIV_ANTE_PER = Convert.ToInt32(@ViewData["ANC_OUTR_ACTIV_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((ANC_OUTR_ACTIV_REAL_PER / ANC_OUTR_ACTIV_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="ANC_OUTR_ACTIV_ANTE_TOTAL" itemid="ANC_OUTR_ACTIV_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["ANC_OUTR_ACTIV_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="ANC_OUTR_ACTIV_ANTE_ACUM" itemid="ANC_OUTR_ACTIV_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["ANC_OUTR_ACTIV_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="ANC_OUTR_ACTIV_REAL_ACUM" itemid="ANC_OUTR_ACTIV_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["ANC_OUTR_ACTIV_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="ANC_OUTR_ACTIV_COMP_ACUM_P" > @if (@ViewData["ANC_OUTR_ACTIV_REAL_ACUM"].Equals("calc") || @ViewData["ANC_OUTR_ACTIV_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["ANC_OUTR_ACTIV_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal ANC_OUTR_ACTIV_REAL_ACUM = Convert.ToInt32(@ViewData["ANC_OUTR_ACTIV_REAL_ACUM"]); decimal ANC_OUTR_ACTIV_ANTE_ACUM = Convert.ToInt32(@ViewData["ANC_OUTR_ACTIV_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((ANC_OUTR_ACTIV_REAL_ACUM / ANC_OUTR_ACTIV_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="ANC_OUTR_ACTIV_COMP_ACUM_B" > @if (@ViewData["ANC_OUTR_ACTIV_REAL_ACUM"].Equals("calc") || @ViewData["ANC_OUTR_ACTIV_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["ANC_OUTR_ACTIV_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal ANC_OUTR_ACTIV_REAL_ACUM = Convert.ToInt32(@ViewData["ANC_OUTR_ACTIV_REAL_ACUM"]); decimal ANC_OUTR_ACTIV_ANTE_ACUM = Convert.ToInt32(@ViewData["ANC_OUTR_ACTIV_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((ANC_OUTR_ACTIV_REAL_ACUM - ANC_OUTR_ACTIV_ANTE_ACUM)))))} } </td>
 </tr>

<tr>
    <td  class="webgrid-rubrica-sub"> Activo Corrente                           </td> 
    <td class="webgrid-rubrica-sub" id="AC_TOTAL_REAL_PER" itemid="AC_TOTAL_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_TOTAL_REAL_PER"])))  </td> 
    <td class="webgrid-rubrica-sub" id="AC_TOTAL_ANTE_PER" itemid="AC_TOTAL_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_TOTAL_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica-sub" id="AC_TOTAL_COMP_PER_P" >  @if (@ViewData["AC_TOTAL_REAL_PER"].Equals("calc") || @ViewData["AC_TOTAL_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["AC_TOTAL_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal AC_TOTAL_REAL_PER = Convert.ToInt32(@ViewData["AC_TOTAL_REAL_PER"]); decimal AC_TOTAL_ANTE_PER = Convert.ToInt32(@ViewData["AC_TOTAL_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((AC_TOTAL_REAL_PER / AC_TOTAL_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td class="webgrid-rubrica-sub" id="AC_TOTAL_ANTE_TOTAL" itemid="AC_TOTAL_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_TOTAL_ANTE_TOTAL"])))  </td> 
    <td class="webgrid-rubrica-sub" id="AC_TOTAL_ANTE_ACUM" itemid="AC_TOTAL_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_TOTAL_ANTE_ACUM"])))  </td> 
    <td class="webgrid-rubrica-sub" id="AC_TOTAL_REAL_ACUM" itemid="AC_TOTAL_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_TOTAL_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica-sub" id="AC_TOTAL_COMP_ACUM_P" > @if (@ViewData["AC_TOTAL_REAL_ACUM"].Equals("calc") || @ViewData["AC_TOTAL_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["AC_TOTAL_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal AC_TOTAL_REAL_ACUM = Convert.ToInt32(@ViewData["AC_TOTAL_REAL_ACUM"]); decimal AC_TOTAL_ANTE_ACUM = Convert.ToInt32(@ViewData["AC_TOTAL_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((AC_TOTAL_REAL_ACUM / AC_TOTAL_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica-sub" id="AC_TOTAL_COMP_ACUM_B" > @if (@ViewData["AC_TOTAL_REAL_ACUM"].Equals("calc") || @ViewData["AC_TOTAL_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["AC_TOTAL_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal AC_TOTAL_REAL_ACUM = Convert.ToInt32(@ViewData["AC_TOTAL_REAL_ACUM"]); decimal AC_TOTAL_ANTE_ACUM = Convert.ToInt32(@ViewData["AC_TOTAL_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((AC_TOTAL_REAL_ACUM - AC_TOTAL_ANTE_ACUM)))))} } </td>
 </tr>
<tr>
    <td  class="webgrid-rubrica"> Inventários                           </td> 
    <td style="text-align:right" id="AC_INVENTARIOS_REAL_PER" itemid="AC_INVENTARIOS_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_INVENTARIOS_REAL_PER"])))  </td> 
    <td style="text-align:right" id="AC_INVENTARIOS_ANTE_PER" itemid="AC_INVENTARIOS_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_INVENTARIOS_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="AC_INVENTARIOS_COMP_PER_P" >  @if (@ViewData["AC_INVENTARIOS_REAL_PER"].Equals("calc") || @ViewData["AC_INVENTARIOS_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["AC_INVENTARIOS_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal AC_INVENTARIOS_REAL_PER = Convert.ToInt32(@ViewData["AC_INVENTARIOS_REAL_PER"]); decimal AC_INVENTARIOS_ANTE_PER = Convert.ToInt32(@ViewData["AC_INVENTARIOS_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((AC_INVENTARIOS_REAL_PER / AC_INVENTARIOS_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="AC_INVENTARIOS_ANTE_TOTAL" itemid="AC_INVENTARIOS_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_INVENTARIOS_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="AC_INVENTARIOS_ANTE_ACUM" itemid="AC_INVENTARIOS_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_INVENTARIOS_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="AC_INVENTARIOS_REAL_ACUM" itemid="AC_INVENTARIOS_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_INVENTARIOS_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="AC_INVENTARIOS_COMP_ACUM_P" > @if (@ViewData["AC_INVENTARIOS_REAL_ACUM"].Equals("calc") || @ViewData["AC_INVENTARIOS_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["AC_INVENTARIOS_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal AC_INVENTARIOS_REAL_ACUM = Convert.ToInt32(@ViewData["AC_INVENTARIOS_REAL_ACUM"]); decimal AC_INVENTARIOS_ANTE_ACUM = Convert.ToInt32(@ViewData["AC_INVENTARIOS_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((AC_INVENTARIOS_REAL_ACUM / AC_INVENTARIOS_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="AC_INVENTARIOS_COMP_ACUM_B" > @if (@ViewData["AC_INVENTARIOS_REAL_ACUM"].Equals("calc") || @ViewData["AC_INVENTARIOS_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["AC_INVENTARIOS_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal AC_INVENTARIOS_REAL_ACUM = Convert.ToInt32(@ViewData["AC_INVENTARIOS_REAL_ACUM"]); decimal AC_INVENTARIOS_ANTE_ACUM = Convert.ToInt32(@ViewData["AC_INVENTARIOS_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((AC_INVENTARIOS_REAL_ACUM - AC_INVENTARIOS_ANTE_ACUM)))))} } </td>
 </tr>
    
<tr>
    <td  class="webgrid-rubrica"> Clientes                           </td> 
    <td style="text-align:right" id="AC_CLIENT_REAL_PER" itemid="AC_CLIENT_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_CLIENT_REAL_PER"])))  </td> 
    <td style="text-align:right" id="AC_CLIENT_ANTE_PER" itemid="AC_CLIENT_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_CLIENT_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="AC_CLIENT_COMP_PER_P" >  @if (@ViewData["AC_CLIENT_REAL_PER"].Equals("calc") || @ViewData["AC_CLIENT_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["AC_CLIENT_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal AC_CLIENT_REAL_PER = Convert.ToInt32(@ViewData["AC_CLIENT_REAL_PER"]); decimal AC_CLIENT_ANTE_PER = Convert.ToInt32(@ViewData["AC_CLIENT_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((AC_CLIENT_REAL_PER / AC_CLIENT_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="AC_CLIENT_ANTE_TOTAL" itemid="AC_CLIENT_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_CLIENT_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="AC_CLIENT_ANTE_ACUM" itemid="AC_CLIENT_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_CLIENT_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="AC_CLIENT_REAL_ACUM" itemid="AC_CLIENT_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_CLIENT_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="AC_CLIENT_COMP_ACUM_P" > @if (@ViewData["AC_CLIENT_REAL_ACUM"].Equals("calc") || @ViewData["AC_CLIENT_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["AC_CLIENT_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal AC_CLIENT_REAL_ACUM = Convert.ToInt32(@ViewData["AC_CLIENT_REAL_ACUM"]); decimal AC_CLIENT_ANTE_ACUM = Convert.ToInt32(@ViewData["AC_CLIENT_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((AC_CLIENT_REAL_ACUM / AC_CLIENT_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="AC_CLIENT_COMP_ACUM_B" > @if (@ViewData["AC_CLIENT_REAL_ACUM"].Equals("calc") || @ViewData["AC_CLIENT_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["AC_CLIENT_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal AC_CLIENT_REAL_ACUM = Convert.ToInt32(@ViewData["AC_CLIENT_REAL_ACUM"]); decimal AC_CLIENT_ANTE_ACUM = Convert.ToInt32(@ViewData["AC_CLIENT_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((AC_CLIENT_REAL_ACUM - AC_CLIENT_ANTE_ACUM)))))} } </td>
 </tr>
<tr>
    <td  class="webgrid-rubrica"> Estado e Outros Entes Públicos                           </td> 
    <td style="text-align:right" id="AC_OTR_DEV_ESTADO_REAL_PER" itemid="AC_OTR_DEV_ESTADO_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_OTR_DEV_ESTADO_REAL_PER"])))  </td> 
    <td style="text-align:right" id="AC_OTR_DEV_ESTADO_ANTE_PER" itemid="AC_OTR_DEV_ESTADO_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_OTR_DEV_ESTADO_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="AC_OTR_DEV_ESTADO_COMP_PER_P" >  @if (@ViewData["AC_OTR_DEV_ESTADO_REAL_PER"].Equals("calc") || @ViewData["AC_OTR_DEV_ESTADO_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["AC_OTR_DEV_ESTADO_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal AC_OTR_DEV_ESTADO_REAL_PER = Convert.ToInt32(@ViewData["AC_OTR_DEV_ESTADO_REAL_PER"]); decimal AC_OTR_DEV_ESTADO_ANTE_PER = Convert.ToInt32(@ViewData["AC_OTR_DEV_ESTADO_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((AC_OTR_DEV_ESTADO_REAL_PER / AC_OTR_DEV_ESTADO_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="AC_OTR_DEV_ESTADO_ANTE_TOTAL" itemid="AC_OTR_DEV_ESTADO_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_OTR_DEV_ESTADO_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="AC_OTR_DEV_ESTADO_ANTE_ACUM" itemid="AC_OTR_DEV_ESTADO_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_OTR_DEV_ESTADO_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="AC_OTR_DEV_ESTADO_REAL_ACUM" itemid="AC_OTR_DEV_ESTADO_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_OTR_DEV_ESTADO_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="AC_OTR_DEV_ESTADO_COMP_ACUM_P" > @if (@ViewData["AC_OTR_DEV_ESTADO_REAL_ACUM"].Equals("calc") || @ViewData["AC_OTR_DEV_ESTADO_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["AC_OTR_DEV_ESTADO_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal AC_OTR_DEV_ESTADO_REAL_ACUM = Convert.ToInt32(@ViewData["AC_OTR_DEV_ESTADO_REAL_ACUM"]); decimal AC_OTR_DEV_ESTADO_ANTE_ACUM = Convert.ToInt32(@ViewData["AC_OTR_DEV_ESTADO_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((AC_OTR_DEV_ESTADO_REAL_ACUM / AC_OTR_DEV_ESTADO_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="AC_OTR_DEV_ESTADO_COMP_ACUM_B" > @if (@ViewData["AC_OTR_DEV_ESTADO_REAL_ACUM"].Equals("calc") || @ViewData["AC_OTR_DEV_ESTADO_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["AC_OTR_DEV_ESTADO_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal AC_OTR_DEV_ESTADO_REAL_ACUM = Convert.ToInt32(@ViewData["AC_OTR_DEV_ESTADO_REAL_ACUM"]); decimal AC_OTR_DEV_ESTADO_ANTE_ACUM = Convert.ToInt32(@ViewData["AC_OTR_DEV_ESTADO_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((AC_OTR_DEV_ESTADO_REAL_ACUM - AC_OTR_DEV_ESTADO_ANTE_ACUM)))))} } </td>
 </tr>
    
<tr>
    <td  class="webgrid-rubrica"> Accionistas/sócios                           </td> 
    <td style="text-align:right" id="AC_OTR_DEV_ACCION_REAL_PER" itemid="AC_OTR_DEV_ACCION_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_OTR_DEV_ACCION_REAL_PER"])))  </td> 
    <td style="text-align:right" id="AC_OTR_DEV_ACCION_ANTE_PER" itemid="AC_OTR_DEV_ACCION_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_OTR_DEV_ACCION_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="AC_OTR_DEV_ACCION_COMP_PER_P" >  @if (@ViewData["AC_OTR_DEV_ACCION_REAL_PER"].Equals("calc") || @ViewData["AC_OTR_DEV_ACCION_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["AC_OTR_DEV_ACCION_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal AC_OTR_DEV_ACCION_REAL_PER = Convert.ToInt32(@ViewData["AC_OTR_DEV_ACCION_REAL_PER"]); decimal AC_OTR_DEV_ACCION_ANTE_PER = Convert.ToInt32(@ViewData["AC_OTR_DEV_ACCION_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((AC_OTR_DEV_ACCION_REAL_PER / AC_OTR_DEV_ACCION_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="AC_OTR_DEV_ACCION_ANTE_TOTAL" itemid="AC_OTR_DEV_ACCION_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_OTR_DEV_ACCION_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="AC_OTR_DEV_ACCION_ANTE_ACUM" itemid="AC_OTR_DEV_ACCION_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_OTR_DEV_ACCION_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="AC_OTR_DEV_ACCION_REAL_ACUM" itemid="AC_OTR_DEV_ACCION_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_OTR_DEV_ACCION_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="AC_OTR_DEV_ACCION_COMP_ACUM_P" > @if (@ViewData["AC_OTR_DEV_ACCION_REAL_ACUM"].Equals("calc") || @ViewData["AC_OTR_DEV_ACCION_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["AC_OTR_DEV_ACCION_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal AC_OTR_DEV_ACCION_REAL_ACUM = Convert.ToInt32(@ViewData["AC_OTR_DEV_ACCION_REAL_ACUM"]); decimal AC_OTR_DEV_ACCION_ANTE_ACUM = Convert.ToInt32(@ViewData["AC_OTR_DEV_ACCION_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((AC_OTR_DEV_ACCION_REAL_ACUM / AC_OTR_DEV_ACCION_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="AC_OTR_DEV_ACCION_COMP_ACUM_B" > @if (@ViewData["AC_OTR_DEV_ACCION_REAL_ACUM"].Equals("calc") || @ViewData["AC_OTR_DEV_ACCION_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["AC_OTR_DEV_ACCION_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal AC_OTR_DEV_ACCION_REAL_ACUM = Convert.ToInt32(@ViewData["AC_OTR_DEV_ACCION_REAL_ACUM"]); decimal AC_OTR_DEV_ACCION_ANTE_ACUM = Convert.ToInt32(@ViewData["AC_OTR_DEV_ACCION_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((AC_OTR_DEV_ACCION_REAL_ACUM - AC_OTR_DEV_ACCION_ANTE_ACUM)))))} } </td>
 </tr>
<tr>
    <td  class="webgrid-rubrica"> Diferimentos                           </td> 
    <td style="text-align:right" id="AC_OTR_ACT_DIF_GT_REC_REAL_PER" itemid="AC_OTR_ACT_DIF_GT_REC_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_OTR_ACT_DIF_GT_REC_REAL_PER"])))  </td> 
    <td style="text-align:right" id="AC_OTR_ACT_DIF_GT_REC_ANTE_PER" itemid="AC_OTR_ACT_DIF_GT_REC_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_OTR_ACT_DIF_GT_REC_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="AC_OTR_ACT_DIF_GT_REC_COMP_PER_P" >  @if (@ViewData["AC_OTR_ACT_DIF_GT_REC_REAL_PER"].Equals("calc") || @ViewData["AC_OTR_ACT_DIF_GT_REC_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["AC_OTR_ACT_DIF_GT_REC_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal AC_OTR_ACT_DIF_GT_REC_REAL_PER = Convert.ToInt32(@ViewData["AC_OTR_ACT_DIF_GT_REC_REAL_PER"]); decimal AC_OTR_ACT_DIF_GT_REC_ANTE_PER = Convert.ToInt32(@ViewData["AC_OTR_ACT_DIF_GT_REC_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((AC_OTR_ACT_DIF_GT_REC_REAL_PER / AC_OTR_ACT_DIF_GT_REC_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="AC_OTR_ACT_DIF_GT_REC_ANTE_TOTAL" itemid="AC_OTR_ACT_DIF_GT_REC_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_OTR_ACT_DIF_GT_REC_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="AC_OTR_ACT_DIF_GT_REC_ANTE_ACUM" itemid="AC_OTR_ACT_DIF_GT_REC_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_OTR_ACT_DIF_GT_REC_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="AC_OTR_ACT_DIF_GT_REC_REAL_ACUM" itemid="AC_OTR_ACT_DIF_GT_REC_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_OTR_ACT_DIF_GT_REC_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="AC_OTR_ACT_DIF_GT_REC_COMP_ACUM_P" > @if (@ViewData["AC_OTR_ACT_DIF_GT_REC_REAL_ACUM"].Equals("calc") || @ViewData["AC_OTR_ACT_DIF_GT_REC_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["AC_OTR_ACT_DIF_GT_REC_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal AC_OTR_ACT_DIF_GT_REC_REAL_ACUM = Convert.ToInt32(@ViewData["AC_OTR_ACT_DIF_GT_REC_REAL_ACUM"]); decimal AC_OTR_ACT_DIF_GT_REC_ANTE_ACUM = Convert.ToInt32(@ViewData["AC_OTR_ACT_DIF_GT_REC_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((AC_OTR_ACT_DIF_GT_REC_REAL_ACUM / AC_OTR_ACT_DIF_GT_REC_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="AC_OTR_ACT_DIF_GT_REC_COMP_ACUM_B" > @if (@ViewData["AC_OTR_ACT_DIF_GT_REC_REAL_ACUM"].Equals("calc") || @ViewData["AC_OTR_ACT_DIF_GT_REC_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["AC_OTR_ACT_DIF_GT_REC_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal AC_OTR_ACT_DIF_GT_REC_REAL_ACUM = Convert.ToInt32(@ViewData["AC_OTR_ACT_DIF_GT_REC_REAL_ACUM"]); decimal AC_OTR_ACT_DIF_GT_REC_ANTE_ACUM = Convert.ToInt32(@ViewData["AC_OTR_ACT_DIF_GT_REC_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((AC_OTR_ACT_DIF_GT_REC_REAL_ACUM - AC_OTR_ACT_DIF_GT_REC_ANTE_ACUM)))))} } </td>
 </tr>
    <tr>
    <td  class="webgrid-rubrica"> Disponibilidades                           </td> 
    <td style="text-align:right" id="AC_DISP_REAL_PER" itemid="AC_DISP_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_DISP_REAL_PER"])))  </td> 
    <td style="text-align:right" id="AC_DISP_ANTE_PER" itemid="AC_DISP_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_DISP_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="AC_DISP_COMP_PER_P" >  @if (@ViewData["AC_DISP_REAL_PER"].Equals("calc") || @ViewData["AC_DISP_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["AC_DISP_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal AC_DISP_REAL_PER = Convert.ToInt32(@ViewData["AC_DISP_REAL_PER"]); decimal AC_DISP_ANTE_PER = Convert.ToInt32(@ViewData["AC_DISP_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((AC_DISP_REAL_PER / AC_DISP_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="AC_DISP_ANTE_TOTAL" itemid="AC_DISP_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_DISP_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="AC_DISP_ANTE_ACUM" itemid="AC_DISP_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_DISP_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="AC_DISP_REAL_ACUM" itemid="AC_DISP_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_DISP_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="AC_DISP_COMP_ACUM_P" > @if (@ViewData["AC_DISP_REAL_ACUM"].Equals("calc") || @ViewData["AC_DISP_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["AC_DISP_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal AC_DISP_REAL_ACUM = Convert.ToInt32(@ViewData["AC_DISP_REAL_ACUM"]); decimal AC_DISP_ANTE_ACUM = Convert.ToInt32(@ViewData["AC_DISP_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((AC_DISP_REAL_ACUM / AC_DISP_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="AC_DISP_COMP_ACUM_B" > @if (@ViewData["AC_DISP_REAL_ACUM"].Equals("calc") || @ViewData["AC_DISP_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["AC_DISP_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal AC_DISP_REAL_ACUM = Convert.ToInt32(@ViewData["AC_DISP_REAL_ACUM"]); decimal AC_DISP_ANTE_ACUM = Convert.ToInt32(@ViewData["AC_DISP_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((AC_DISP_REAL_ACUM - AC_DISP_ANTE_ACUM)))))} } </td>
 </tr>
<tr>
    <td  class="webgrid-rubrica"> Outros                          </td> 
    <td style="text-align:right" id="AC_OTR_ACT_REAL_PER" itemid="AC_OTR_ACT_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_OTR_ACT_REAL_PER"])))  </td> 
    <td style="text-align:right" id="AC_OTR_ACT_ANTE_PER" itemid="AC_OTR_ACT_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_OTR_ACT_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="AC_OTR_ACT_COMP_PER_P" >  @if (@ViewData["AC_OTR_ACT_REAL_PER"].Equals("calc") || @ViewData["AC_OTR_ACT_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["AC_OTR_ACT_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal AC_OTR_ACT_REAL_PER = Convert.ToInt32(@ViewData["AC_OTR_ACT_REAL_PER"]); decimal AC_OTR_ACT_ANTE_PER = Convert.ToInt32(@ViewData["AC_OTR_ACT_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((AC_OTR_ACT_REAL_PER / AC_OTR_ACT_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="AC_OTR_ACT_ANTE_TOTAL" itemid="AC_OTR_ACT_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_OTR_ACT_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="AC_OTR_ACT_ANTE_ACUM" itemid="AC_OTR_ACT_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_OTR_ACT_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="AC_OTR_ACT_REAL_ACUM" itemid="AC_OTR_ACT_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["AC_OTR_ACT_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="AC_OTR_ACT_COMP_ACUM_P" > @if (@ViewData["AC_OTR_ACT_REAL_ACUM"].Equals("calc") || @ViewData["AC_OTR_ACT_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["AC_OTR_ACT_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal AC_OTR_ACT_REAL_ACUM = Convert.ToInt32(@ViewData["AC_OTR_ACT_REAL_ACUM"]); decimal AC_OTR_ACT_ANTE_ACUM = Convert.ToInt32(@ViewData["AC_OTR_ACT_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((AC_OTR_ACT_REAL_ACUM / AC_OTR_ACT_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="AC_OTR_ACT_COMP_ACUM_B" > @if (@ViewData["AC_OTR_ACT_REAL_ACUM"].Equals("calc") || @ViewData["AC_OTR_ACT_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["AC_OTR_ACT_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal AC_OTR_ACT_REAL_ACUM = Convert.ToInt32(@ViewData["AC_OTR_ACT_REAL_ACUM"]); decimal AC_OTR_ACT_ANTE_ACUM = Convert.ToInt32(@ViewData["AC_OTR_ACT_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((AC_OTR_ACT_REAL_ACUM - AC_OTR_ACT_ANTE_ACUM)))))} } </td>
 </tr>
<tr>
    <td   class="webgrid-rubrica-TOTAL"> TOTAL DO ACTIVO                            </td> 
    <td  class="webgrid-rubrica-TOTAL" id="ACTIVO_TOTAL_REAL_PER" itemid="ACTIVO_TOTAL_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["ACTIVO_TOTAL_REAL_PER"])))  </td> 
    <td  class="webgrid-rubrica-TOTAL" id="ACTIVO_TOTAL_ANTE_PER" itemid="ACTIVO_TOTAL_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["ACTIVO_TOTAL_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica-TOTAL" id="ACTIVO_TOTAL_COMP_PER_P" >  @if (@ViewData["ACTIVO_TOTAL_REAL_PER"].Equals("calc") || @ViewData["ACTIVO_TOTAL_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["ACTIVO_TOTAL_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal ACTIVO_TOTAL_REAL_PER = Convert.ToInt32(@ViewData["ACTIVO_TOTAL_REAL_PER"]); decimal ACTIVO_TOTAL_ANTE_PER = Convert.ToInt32(@ViewData["ACTIVO_TOTAL_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((ACTIVO_TOTAL_REAL_PER / ACTIVO_TOTAL_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td  class="webgrid-rubrica-TOTAL" id="ACTIVO_TOTAL_ANTE_TOTAL" itemid="ACTIVO_TOTAL_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["ACTIVO_TOTAL_ANTE_TOTAL"])))  </td> 
    <td  class="webgrid-rubrica-TOTAL" id="ACTIVO_TOTAL_ANTE_ACUM" itemid="ACTIVO_TOTAL_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["ACTIVO_TOTAL_ANTE_ACUM"])))  </td> 
    <td  class="webgrid-rubrica-TOTAL" id="ACTIVO_TOTAL_REAL_ACUM" itemid="ACTIVO_TOTAL_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["ACTIVO_TOTAL_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica-TOTAL" id="ACTIVO_TOTAL_COMP_ACUM_P" > @if (@ViewData["ACTIVO_TOTAL_REAL_ACUM"].Equals("calc") || @ViewData["ACTIVO_TOTAL_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["ACTIVO_TOTAL_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal ACTIVO_TOTAL_REAL_ACUM = Convert.ToInt32(@ViewData["ACTIVO_TOTAL_REAL_ACUM"]); decimal ACTIVO_TOTAL_ANTE_ACUM = Convert.ToInt32(@ViewData["ACTIVO_TOTAL_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((ACTIVO_TOTAL_REAL_ACUM / ACTIVO_TOTAL_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica-TOTAL" id="ACTIVO_TOTAL_COMP_ACUM_B" > @if (@ViewData["ACTIVO_TOTAL_REAL_ACUM"].Equals("calc") || @ViewData["ACTIVO_TOTAL_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["ACTIVO_TOTAL_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal ACTIVO_TOTAL_REAL_ACUM = Convert.ToInt32(@ViewData["ACTIVO_TOTAL_REAL_ACUM"]); decimal ACTIVO_TOTAL_ANTE_ACUM = Convert.ToInt32(@ViewData["ACTIVO_TOTAL_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((ACTIVO_TOTAL_REAL_ACUM - ACTIVO_TOTAL_ANTE_ACUM)))))} } </td>
 </tr>
    

<tr>
    <td  class="webgrid-rubrica-sub"> Total Capital Próprio                            </td> 
    <td class="webgrid-rubrica-sub" id="CP_TOTAL_REAL_PER" itemid="CP_TOTAL_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["CP_TOTAL_REAL_PER"])))  </td> 
    <td class="webgrid-rubrica-sub" id="CP_TOTAL_ANTE_PER" itemid="CP_TOTAL_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["CP_TOTAL_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica-sub" id="CP_TOTAL_COMP_PER_P" >  @if (@ViewData["CP_TOTAL_REAL_PER"].Equals("calc") || @ViewData["CP_TOTAL_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["CP_TOTAL_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal CP_TOTAL_REAL_PER = Convert.ToInt32(@ViewData["CP_TOTAL_REAL_PER"]); decimal CP_TOTAL_ANTE_PER = Convert.ToInt32(@ViewData["CP_TOTAL_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((CP_TOTAL_REAL_PER / CP_TOTAL_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td class="webgrid-rubrica-sub" id="CP_TOTAL_ANTE_TOTAL" itemid="CP_TOTAL_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["CP_TOTAL_ANTE_TOTAL"])))  </td> 
    <td class="webgrid-rubrica-sub" id="CP_TOTAL_ANTE_ACUM" itemid="CP_TOTAL_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["CP_TOTAL_ANTE_ACUM"])))  </td> 
    <td class="webgrid-rubrica-sub" id="CP_TOTAL_REAL_ACUM" itemid="CP_TOTAL_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["CP_TOTAL_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica-sub" id="CP_TOTAL_COMP_ACUM_P" > @if (@ViewData["CP_TOTAL_REAL_ACUM"].Equals("calc") || @ViewData["CP_TOTAL_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["CP_TOTAL_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal CP_TOTAL_REAL_ACUM = Convert.ToInt32(@ViewData["CP_TOTAL_REAL_ACUM"]); decimal CP_TOTAL_ANTE_ACUM = Convert.ToInt32(@ViewData["CP_TOTAL_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((CP_TOTAL_REAL_ACUM / CP_TOTAL_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica-sub" id="CP_TOTAL_COMP_ACUM_B" > @if (@ViewData["CP_TOTAL_REAL_ACUM"].Equals("calc") || @ViewData["CP_TOTAL_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["CP_TOTAL_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal CP_TOTAL_REAL_ACUM = Convert.ToInt32(@ViewData["CP_TOTAL_REAL_ACUM"]); decimal CP_TOTAL_ANTE_ACUM = Convert.ToInt32(@ViewData["CP_TOTAL_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((CP_TOTAL_REAL_ACUM - CP_TOTAL_ANTE_ACUM)))))} } </td>
 </tr>

<tr>
    <td  class="webgrid-rubrica"> Capital Realizado                            </td> 
    <td style="text-align:right" id="CP_CAPIT_REAL_PER" itemid="CP_CAPIT_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["CP_CAPIT_REAL_PER"])))  </td> 
    <td style="text-align:right" id="CP_CAPIT_ANTE_PER" itemid="CP_CAPIT_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["CP_CAPIT_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="CP_CAPIT_COMP_PER_P" >  @if (@ViewData["CP_CAPIT_REAL_PER"].Equals("calc") || @ViewData["CP_CAPIT_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["CP_CAPIT_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal CP_CAPIT_REAL_PER = Convert.ToInt32(@ViewData["CP_CAPIT_REAL_PER"]); decimal CP_CAPIT_ANTE_PER = Convert.ToInt32(@ViewData["CP_CAPIT_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((CP_CAPIT_REAL_PER / CP_CAPIT_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="CP_CAPIT_ANTE_TOTAL" itemid="CP_CAPIT_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["CP_CAPIT_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="CP_CAPIT_ANTE_ACUM" itemid="CP_CAPIT_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["CP_CAPIT_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="CP_CAPIT_REAL_ACUM" itemid="CP_CAPIT_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["CP_CAPIT_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="CP_CAPIT_COMP_ACUM_P" > @if (@ViewData["CP_CAPIT_REAL_ACUM"].Equals("calc") || @ViewData["CP_CAPIT_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["CP_CAPIT_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal CP_CAPIT_REAL_ACUM = Convert.ToInt32(@ViewData["CP_CAPIT_REAL_ACUM"]); decimal CP_CAPIT_ANTE_ACUM = Convert.ToInt32(@ViewData["CP_CAPIT_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((CP_CAPIT_REAL_ACUM / CP_CAPIT_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="CP_CAPIT_COMP_ACUM_B" > @if (@ViewData["CP_CAPIT_REAL_ACUM"].Equals("calc") || @ViewData["CP_CAPIT_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["CP_CAPIT_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal CP_CAPIT_REAL_ACUM = Convert.ToInt32(@ViewData["CP_CAPIT_REAL_ACUM"]); decimal CP_CAPIT_ANTE_ACUM = Convert.ToInt32(@ViewData["CP_CAPIT_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((CP_CAPIT_REAL_ACUM - CP_CAPIT_ANTE_ACUM)))))} } </td>
 </tr>
<tr>
    <td  class="webgrid-rubrica"> Subsídios                            </td> 
    <td style="text-align:right" id="CP_OTR_VAR_SUBS_REAL_PER" itemid="CP_OTR_VAR_SUBS_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["CP_OTR_VAR_SUBS_REAL_PER"])))  </td> 
    <td style="text-align:right" id="CP_OTR_VAR_SUBS_ANTE_PER" itemid="CP_OTR_VAR_SUBS_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["CP_OTR_VAR_SUBS_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="CP_OTR_VAR_SUBS_COMP_PER_P" >  @if (@ViewData["CP_OTR_VAR_SUBS_REAL_PER"].Equals("calc") || @ViewData["CP_OTR_VAR_SUBS_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["CP_OTR_VAR_SUBS_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal CP_OTR_VAR_SUBS_REAL_PER = Convert.ToInt32(@ViewData["CP_OTR_VAR_SUBS_REAL_PER"]); decimal CP_OTR_VAR_SUBS_ANTE_PER = Convert.ToInt32(@ViewData["CP_OTR_VAR_SUBS_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((CP_OTR_VAR_SUBS_REAL_PER / CP_OTR_VAR_SUBS_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="CP_OTR_VAR_SUBS_ANTE_TOTAL" itemid="CP_OTR_VAR_SUBS_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["CP_OTR_VAR_SUBS_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="CP_OTR_VAR_SUBS_ANTE_ACUM" itemid="CP_OTR_VAR_SUBS_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["CP_OTR_VAR_SUBS_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="CP_OTR_VAR_SUBS_REAL_ACUM" itemid="CP_OTR_VAR_SUBS_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["CP_OTR_VAR_SUBS_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="CP_OTR_VAR_SUBS_COMP_ACUM_P" > @if (@ViewData["CP_OTR_VAR_SUBS_REAL_ACUM"].Equals("calc") || @ViewData["CP_OTR_VAR_SUBS_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["CP_OTR_VAR_SUBS_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal CP_OTR_VAR_SUBS_REAL_ACUM = Convert.ToInt32(@ViewData["CP_OTR_VAR_SUBS_REAL_ACUM"]); decimal CP_OTR_VAR_SUBS_ANTE_ACUM = Convert.ToInt32(@ViewData["CP_OTR_VAR_SUBS_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((CP_OTR_VAR_SUBS_REAL_ACUM / CP_OTR_VAR_SUBS_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="CP_OTR_VAR_SUBS_COMP_ACUM_B" > @if (@ViewData["CP_OTR_VAR_SUBS_REAL_ACUM"].Equals("calc") || @ViewData["CP_OTR_VAR_SUBS_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["CP_OTR_VAR_SUBS_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal CP_OTR_VAR_SUBS_REAL_ACUM = Convert.ToInt32(@ViewData["CP_OTR_VAR_SUBS_REAL_ACUM"]); decimal CP_OTR_VAR_SUBS_ANTE_ACUM = Convert.ToInt32(@ViewData["CP_OTR_VAR_SUBS_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((CP_OTR_VAR_SUBS_REAL_ACUM - CP_OTR_VAR_SUBS_ANTE_ACUM)))))} } </td>
 </tr>
<tr>
    <td  class="webgrid-rubrica"> Outros                           </td> 
    <td style="text-align:right" id="CP_OTR_VAR_REAL_PER" itemid="CP_OTR_VAR_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["CP_OTR_VAR_REAL_PER"])))  </td> 
    <td style="text-align:right" id="CP_OTR_VAR_ANTE_PER" itemid="CP_OTR_VAR_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["CP_OTR_VAR_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="CP_OTR_VAR_COMP_PER_P" >  @if (@ViewData["CP_OTR_VAR_REAL_PER"].Equals("calc") || @ViewData["CP_OTR_VAR_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["CP_OTR_VAR_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal CP_OTR_VAR_REAL_PER = Convert.ToInt32(@ViewData["CP_OTR_VAR_REAL_PER"]); decimal CP_OTR_VAR_ANTE_PER = Convert.ToInt32(@ViewData["CP_OTR_VAR_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((CP_OTR_VAR_REAL_PER / CP_OTR_VAR_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="CP_OTR_VAR_ANTE_TOTAL" itemid="CP_OTR_VAR_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["CP_OTR_VAR_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="CP_OTR_VAR_ANTE_ACUM" itemid="CP_OTR_VAR_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["CP_OTR_VAR_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="CP_OTR_VAR_REAL_ACUM" itemid="CP_OTR_VAR_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["CP_OTR_VAR_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="CP_OTR_VAR_COMP_ACUM_P" > @if (@ViewData["CP_OTR_VAR_REAL_ACUM"].Equals("calc") || @ViewData["CP_OTR_VAR_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["CP_OTR_VAR_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal CP_OTR_VAR_REAL_ACUM = Convert.ToInt32(@ViewData["CP_OTR_VAR_REAL_ACUM"]); decimal CP_OTR_VAR_ANTE_ACUM = Convert.ToInt32(@ViewData["CP_OTR_VAR_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((CP_OTR_VAR_REAL_ACUM / CP_OTR_VAR_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="CP_OTR_VAR_COMP_ACUM_B" > @if (@ViewData["CP_OTR_VAR_REAL_ACUM"].Equals("calc") || @ViewData["CP_OTR_VAR_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["CP_OTR_VAR_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal CP_OTR_VAR_REAL_ACUM = Convert.ToInt32(@ViewData["CP_OTR_VAR_REAL_ACUM"]); decimal CP_OTR_VAR_ANTE_ACUM = Convert.ToInt32(@ViewData["CP_OTR_VAR_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((CP_OTR_VAR_REAL_ACUM - CP_OTR_VAR_ANTE_ACUM)))))} } </td>
 </tr>
<tr>
    <td  class="webgrid-rubrica"> Resultado Líquido do Exercício                            </td> 
    <td style="text-align:right" id="CP_OTR_RLE_REAL_PER" itemid="CP_OTR_RLE_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["CP_OTR_RLE_REAL_PER"])))  </td> 
    <td style="text-align:right" id="CP_OTR_RLE_ANTE_PER" itemid="CP_OTR_RLE_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["CP_OTR_RLE_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="CP_OTR_RLE_COMP_PER_P" >  @if (@ViewData["CP_OTR_RLE_REAL_PER"].Equals("calc") || @ViewData["CP_OTR_RLE_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["CP_OTR_RLE_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal CP_OTR_RLE_REAL_PER = Convert.ToInt32(@ViewData["CP_OTR_RLE_REAL_PER"]); decimal CP_OTR_RLE_ANTE_PER = Convert.ToInt32(@ViewData["CP_OTR_RLE_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((CP_OTR_RLE_REAL_PER / CP_OTR_RLE_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="CP_OTR_RLE_ANTE_TOTAL" itemid="CP_OTR_RLE_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["CP_OTR_RLE_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="CP_OTR_RLE_ANTE_ACUM" itemid="CP_OTR_RLE_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["CP_OTR_RLE_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="CP_OTR_RLE_REAL_ACUM" itemid="CP_OTR_RLE_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["CP_OTR_RLE_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="CP_OTR_RLE_COMP_ACUM_P" > @if (@ViewData["CP_OTR_RLE_REAL_ACUM"].Equals("calc") || @ViewData["CP_OTR_RLE_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["CP_OTR_RLE_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal CP_OTR_RLE_REAL_ACUM = Convert.ToInt32(@ViewData["CP_OTR_RLE_REAL_ACUM"]); decimal CP_OTR_RLE_ANTE_ACUM = Convert.ToInt32(@ViewData["CP_OTR_RLE_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((CP_OTR_RLE_REAL_ACUM / CP_OTR_RLE_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="CP_OTR_RLE_COMP_ACUM_B" > @if (@ViewData["CP_OTR_RLE_REAL_ACUM"].Equals("calc") || @ViewData["CP_OTR_RLE_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["CP_OTR_RLE_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal CP_OTR_RLE_REAL_ACUM = Convert.ToInt32(@ViewData["CP_OTR_RLE_REAL_ACUM"]); decimal CP_OTR_RLE_ANTE_ACUM = Convert.ToInt32(@ViewData["CP_OTR_RLE_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((CP_OTR_RLE_REAL_ACUM - CP_OTR_RLE_ANTE_ACUM)))))} } </td>
 </tr>
   
<tr>
    <td  class="webgrid-rubrica-sub"> Passivo não Corrente                             </td> 
    <td class="webgrid-rubrica-sub" id="PNC_TOTAL_REAL_PER" itemid="PNC_TOTAL_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["PNC_TOTAL_REAL_PER"])))  </td> 
    <td class="webgrid-rubrica-sub" id="PNC_TOTAL_ANTE_PER" itemid="PNC_TOTAL_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["PNC_TOTAL_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica-sub" id="PNC_TOTAL_COMP_PER_P" >  @if (@ViewData["PNC_TOTAL_REAL_PER"].Equals("calc") || @ViewData["PNC_TOTAL_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["PNC_TOTAL_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal PNC_TOTAL_REAL_PER = Convert.ToInt32(@ViewData["PNC_TOTAL_REAL_PER"]); decimal PNC_TOTAL_ANTE_PER = Convert.ToInt32(@ViewData["PNC_TOTAL_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((PNC_TOTAL_REAL_PER / PNC_TOTAL_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td class="webgrid-rubrica-sub" id="PNC_TOTAL_ANTE_TOTAL" itemid="PNC_TOTAL_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["PNC_TOTAL_ANTE_TOTAL"])))  </td> 
    <td class="webgrid-rubrica-sub" id="PNC_TOTAL_ANTE_ACUM" itemid="PNC_TOTAL_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["PNC_TOTAL_ANTE_ACUM"])))  </td> 
    <td class="webgrid-rubrica-sub" id="PNC_TOTAL_REAL_ACUM" itemid="PNC_TOTAL_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["PNC_TOTAL_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica-sub" id="PNC_TOTAL_COMP_ACUM_P" > @if (@ViewData["PNC_TOTAL_REAL_ACUM"].Equals("calc") || @ViewData["PNC_TOTAL_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["PNC_TOTAL_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal PNC_TOTAL_REAL_ACUM = Convert.ToInt32(@ViewData["PNC_TOTAL_REAL_ACUM"]); decimal PNC_TOTAL_ANTE_ACUM = Convert.ToInt32(@ViewData["PNC_TOTAL_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((PNC_TOTAL_REAL_ACUM / PNC_TOTAL_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica-sub" id="PNC_TOTAL_COMP_ACUM_B" > @if (@ViewData["PNC_TOTAL_REAL_ACUM"].Equals("calc") || @ViewData["PNC_TOTAL_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["PNC_TOTAL_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal PNC_TOTAL_REAL_ACUM = Convert.ToInt32(@ViewData["PNC_TOTAL_REAL_ACUM"]); decimal PNC_TOTAL_ANTE_ACUM = Convert.ToInt32(@ViewData["PNC_TOTAL_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((PNC_TOTAL_REAL_ACUM - PNC_TOTAL_ANTE_ACUM)))))} } </td>
 </tr>
    
<tr>
    <td  class="webgrid-rubrica"> Financiamentos obtidos                            </td> 
    <td style="text-align:right" id="PNC_FIN_REAL_PER" itemid="PNC_FIN_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["PNC_FIN_REAL_PER"])))  </td> 
    <td style="text-align:right" id="PNC_FIN_ANTE_PER" itemid="PNC_FIN_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["PNC_FIN_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="PNC_FIN_COMP_PER_P" >  @if (@ViewData["PNC_FIN_REAL_PER"].Equals("calc") || @ViewData["PNC_FIN_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["PNC_FIN_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal PNC_FIN_REAL_PER = Convert.ToInt32(@ViewData["PNC_FIN_REAL_PER"]); decimal PNC_FIN_ANTE_PER = Convert.ToInt32(@ViewData["PNC_FIN_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((PNC_FIN_REAL_PER / PNC_FIN_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="PNC_FIN_ANTE_TOTAL" itemid="PNC_FIN_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["PNC_FIN_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="PNC_FIN_ANTE_ACUM" itemid="PNC_FIN_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["PNC_FIN_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="PNC_FIN_REAL_ACUM" itemid="PNC_FIN_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["PNC_FIN_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="PNC_FIN_COMP_ACUM_P" > @if (@ViewData["PNC_FIN_REAL_ACUM"].Equals("calc") || @ViewData["PNC_FIN_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["PNC_FIN_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal PNC_FIN_REAL_ACUM = Convert.ToInt32(@ViewData["PNC_FIN_REAL_ACUM"]); decimal PNC_FIN_ANTE_ACUM = Convert.ToInt32(@ViewData["PNC_FIN_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((PNC_FIN_REAL_ACUM / PNC_FIN_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="PNC_FIN_COMP_ACUM_B" > @if (@ViewData["PNC_FIN_REAL_ACUM"].Equals("calc") || @ViewData["PNC_FIN_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["PNC_FIN_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal PNC_FIN_REAL_ACUM = Convert.ToInt32(@ViewData["PNC_FIN_REAL_ACUM"]); decimal PNC_FIN_ANTE_ACUM = Convert.ToInt32(@ViewData["PNC_FIN_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((PNC_FIN_REAL_ACUM - PNC_FIN_ANTE_ACUM)))))} } </td>
 </tr>
    
<tr>
    <td  class="webgrid-rubrica"> Outros                           </td> 
    <td style="text-align:right" id="PNC_OTR_REAL_PER" itemid="PNC_OTR_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["PNC_OTR_REAL_PER"])))  </td> 
    <td style="text-align:right" id="PNC_OTR_ANTE_PER" itemid="PNC_OTR_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["PNC_OTR_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="PNC_OTR_COMP_PER_P" >  @if (@ViewData["PNC_OTR_REAL_PER"].Equals("calc") || @ViewData["PNC_OTR_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["PNC_OTR_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal PNC_OTR_REAL_PER = Convert.ToInt32(@ViewData["PNC_OTR_REAL_PER"]); decimal PNC_OTR_ANTE_PER = Convert.ToInt32(@ViewData["PNC_OTR_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((PNC_OTR_REAL_PER / PNC_OTR_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="PNC_OTR_ANTE_TOTAL" itemid="PNC_OTR_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["PNC_OTR_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="PNC_OTR_ANTE_ACUM" itemid="PNC_OTR_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["PNC_OTR_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="PNC_OTR_REAL_ACUM" itemid="PNC_OTR_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["PNC_OTR_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="PNC_OTR_COMP_ACUM_P" > @if (@ViewData["PNC_OTR_REAL_ACUM"].Equals("calc") || @ViewData["PNC_OTR_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["PNC_OTR_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal PNC_OTR_REAL_ACUM = Convert.ToInt32(@ViewData["PNC_OTR_REAL_ACUM"]); decimal PNC_OTR_ANTE_ACUM = Convert.ToInt32(@ViewData["PNC_OTR_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((PNC_OTR_REAL_ACUM / PNC_OTR_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="PNC_OTR_COMP_ACUM_B" > @if (@ViewData["PNC_OTR_REAL_ACUM"].Equals("calc") || @ViewData["PNC_OTR_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["PNC_OTR_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal PNC_OTR_REAL_ACUM = Convert.ToInt32(@ViewData["PNC_OTR_REAL_ACUM"]); decimal PNC_OTR_ANTE_ACUM = Convert.ToInt32(@ViewData["PNC_OTR_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((PNC_OTR_REAL_ACUM - PNC_OTR_ANTE_ACUM)))))} } </td>
 </tr>

<tr>
    <td  class="webgrid-rubrica-sub"> Passivo Corrente                          </td> 
    <td class="webgrid-rubrica-sub" id="PC_TOTAL_REAL_PER" itemid="PC_TOTAL_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["PC_TOTAL_REAL_PER"])))  </td> 
    <td class="webgrid-rubrica-sub" id="PC_TOTAL_ANTE_PER" itemid="PC_TOTAL_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["PC_TOTAL_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica-sub" id="PC_TOTAL_COMP_PER_P" >  @if (@ViewData["PC_TOTAL_REAL_PER"].Equals("calc") || @ViewData["PC_TOTAL_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["PC_TOTAL_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal PC_TOTAL_REAL_PER = Convert.ToInt32(@ViewData["PC_TOTAL_REAL_PER"]); decimal PC_TOTAL_ANTE_PER = Convert.ToInt32(@ViewData["PC_TOTAL_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((PC_TOTAL_REAL_PER / PC_TOTAL_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td class="webgrid-rubrica-sub" id="PC_TOTAL_ANTE_TOTAL" itemid="PC_TOTAL_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["PC_TOTAL_ANTE_TOTAL"])))  </td> 
    <td class="webgrid-rubrica-sub" id="PC_TOTAL_ANTE_ACUM" itemid="PC_TOTAL_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["PC_TOTAL_ANTE_ACUM"])))  </td> 
    <td class="webgrid-rubrica-sub" id="PC_TOTAL_REAL_ACUM" itemid="PC_TOTAL_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["PC_TOTAL_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica-sub" id="PC_TOTAL_COMP_ACUM_P" > @if (@ViewData["PC_TOTAL_REAL_ACUM"].Equals("calc") || @ViewData["PC_TOTAL_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["PC_TOTAL_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal PC_TOTAL_REAL_ACUM = Convert.ToInt32(@ViewData["PC_TOTAL_REAL_ACUM"]); decimal PC_TOTAL_ANTE_ACUM = Convert.ToInt32(@ViewData["PC_TOTAL_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((PC_TOTAL_REAL_ACUM / PC_TOTAL_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica-sub" id="PC_TOTAL_COMP_ACUM_B" > @if (@ViewData["PC_TOTAL_REAL_ACUM"].Equals("calc") || @ViewData["PC_TOTAL_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["PC_TOTAL_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal PC_TOTAL_REAL_ACUM = Convert.ToInt32(@ViewData["PC_TOTAL_REAL_ACUM"]); decimal PC_TOTAL_ANTE_ACUM = Convert.ToInt32(@ViewData["PC_TOTAL_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((PC_TOTAL_REAL_ACUM - PC_TOTAL_ANTE_ACUM)))))} } </td>
 </tr>
    <tr>
    <td  class="webgrid-rubrica"> Fornecedores                            </td> 
    <td style="text-align:right" id="PC_FORN_REAL_PER" itemid="PC_FORN_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["PC_FORN_REAL_PER"])))  </td> 
    <td style="text-align:right" id="PC_FORN_ANTE_PER" itemid="PC_FORN_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["PC_FORN_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="PC_FORN_COMP_PER_P" >  @if (@ViewData["PC_FORN_REAL_PER"].Equals("calc") || @ViewData["PC_FORN_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["PC_FORN_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal PC_FORN_REAL_PER = Convert.ToInt32(@ViewData["PC_FORN_REAL_PER"]); decimal PC_FORN_ANTE_PER = Convert.ToInt32(@ViewData["PC_FORN_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((PC_FORN_REAL_PER / PC_FORN_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="PC_FORN_ANTE_TOTAL" itemid="PC_FORN_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["PC_FORN_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="PC_FORN_ANTE_ACUM" itemid="PC_FORN_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["PC_FORN_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="PC_FORN_REAL_ACUM" itemid="PC_FORN_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["PC_FORN_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="PC_FORN_COMP_ACUM_P" > @if (@ViewData["PC_FORN_REAL_ACUM"].Equals("calc") || @ViewData["PC_FORN_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["PC_FORN_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal PC_FORN_REAL_ACUM = Convert.ToInt32(@ViewData["PC_FORN_REAL_ACUM"]); decimal PC_FORN_ANTE_ACUM = Convert.ToInt32(@ViewData["PC_FORN_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((PC_FORN_REAL_ACUM / PC_FORN_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="PC_FORN_COMP_ACUM_B" > @if (@ViewData["PC_FORN_REAL_ACUM"].Equals("calc") || @ViewData["PC_FORN_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["PC_FORN_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal PC_FORN_REAL_ACUM = Convert.ToInt32(@ViewData["PC_FORN_REAL_ACUM"]); decimal PC_FORN_ANTE_ACUM = Convert.ToInt32(@ViewData["PC_FORN_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((PC_FORN_REAL_ACUM - PC_FORN_ANTE_ACUM)))))} } </td>
 </tr>
    
<tr>
    <td  class="webgrid-rubrica"> Estado e Outros Entes Públicos                          </td> 
    <td style="text-align:right" id="PC_OTR_CRE_ESTADO_REAL_PER" itemid="PC_OTR_CRE_ESTADO_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["PC_OTR_CRE_ESTADO_REAL_PER"])))  </td> 
    <td style="text-align:right" id="PC_OTR_CRE_ESTADO_ANTE_PER" itemid="PC_OTR_CRE_ESTADO_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["PC_OTR_CRE_ESTADO_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="PC_OTR_CRE_ESTADO_COMP_PER_P" >  @if (@ViewData["PC_OTR_CRE_ESTADO_REAL_PER"].Equals("calc") || @ViewData["PC_OTR_CRE_ESTADO_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["PC_OTR_CRE_ESTADO_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal PC_OTR_CRE_ESTADO_REAL_PER = Convert.ToInt32(@ViewData["PC_OTR_CRE_ESTADO_REAL_PER"]); decimal PC_OTR_CRE_ESTADO_ANTE_PER = Convert.ToInt32(@ViewData["PC_OTR_CRE_ESTADO_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((PC_OTR_CRE_ESTADO_REAL_PER / PC_OTR_CRE_ESTADO_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="PC_OTR_CRE_ESTADO_ANTE_TOTAL" itemid="PC_OTR_CRE_ESTADO_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["PC_OTR_CRE_ESTADO_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="PC_OTR_CRE_ESTADO_ANTE_ACUM" itemid="PC_OTR_CRE_ESTADO_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["PC_OTR_CRE_ESTADO_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="PC_OTR_CRE_ESTADO_REAL_ACUM" itemid="PC_OTR_CRE_ESTADO_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["PC_OTR_CRE_ESTADO_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="PC_OTR_CRE_ESTADO_COMP_ACUM_P" > @if (@ViewData["PC_OTR_CRE_ESTADO_REAL_ACUM"].Equals("calc") || @ViewData["PC_OTR_CRE_ESTADO_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["PC_OTR_CRE_ESTADO_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal PC_OTR_CRE_ESTADO_REAL_ACUM = Convert.ToInt32(@ViewData["PC_OTR_CRE_ESTADO_REAL_ACUM"]); decimal PC_OTR_CRE_ESTADO_ANTE_ACUM = Convert.ToInt32(@ViewData["PC_OTR_CRE_ESTADO_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((PC_OTR_CRE_ESTADO_REAL_ACUM / PC_OTR_CRE_ESTADO_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="PC_OTR_CRE_ESTADO_COMP_ACUM_B" > @if (@ViewData["PC_OTR_CRE_ESTADO_REAL_ACUM"].Equals("calc") || @ViewData["PC_OTR_CRE_ESTADO_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["PC_OTR_CRE_ESTADO_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal PC_OTR_CRE_ESTADO_REAL_ACUM = Convert.ToInt32(@ViewData["PC_OTR_CRE_ESTADO_REAL_ACUM"]); decimal PC_OTR_CRE_ESTADO_ANTE_ACUM = Convert.ToInt32(@ViewData["PC_OTR_CRE_ESTADO_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((PC_OTR_CRE_ESTADO_REAL_ACUM - PC_OTR_CRE_ESTADO_ANTE_ACUM)))))} } </td>
 </tr>

<tr>
    <td  class="webgrid-rubrica"> Accionistas                            </td> 
    <td style="text-align:right" id="PC_OTR_CRE_ACCION_REAL_PER" itemid="PC_OTR_CRE_ACCION_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["PC_OTR_CRE_ACCION_REAL_PER"])))  </td> 
    <td style="text-align:right" id="PC_OTR_CRE_ACCION_ANTE_PER" itemid="PC_OTR_CRE_ACCION_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["PC_OTR_CRE_ACCION_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="PC_OTR_CRE_ACCION_COMP_PER_P" >  @if (@ViewData["PC_OTR_CRE_ACCION_REAL_PER"].Equals("calc") || @ViewData["PC_OTR_CRE_ACCION_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["PC_OTR_CRE_ACCION_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal PC_OTR_CRE_ACCION_REAL_PER = Convert.ToInt32(@ViewData["PC_OTR_CRE_ACCION_REAL_PER"]); decimal PC_OTR_CRE_ACCION_ANTE_PER = Convert.ToInt32(@ViewData["PC_OTR_CRE_ACCION_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((PC_OTR_CRE_ACCION_REAL_PER / PC_OTR_CRE_ACCION_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="PC_OTR_CRE_ACCION_ANTE_TOTAL" itemid="PC_OTR_CRE_ACCION_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["PC_OTR_CRE_ACCION_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="PC_OTR_CRE_ACCION_ANTE_ACUM" itemid="PC_OTR_CRE_ACCION_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["PC_OTR_CRE_ACCION_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="PC_OTR_CRE_ACCION_REAL_ACUM" itemid="PC_OTR_CRE_ACCION_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["PC_OTR_CRE_ACCION_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="PC_OTR_CRE_ACCION_COMP_ACUM_P" > @if (@ViewData["PC_OTR_CRE_ACCION_REAL_ACUM"].Equals("calc") || @ViewData["PC_OTR_CRE_ACCION_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["PC_OTR_CRE_ACCION_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal PC_OTR_CRE_ACCION_REAL_ACUM = Convert.ToInt32(@ViewData["PC_OTR_CRE_ACCION_REAL_ACUM"]); decimal PC_OTR_CRE_ACCION_ANTE_ACUM = Convert.ToInt32(@ViewData["PC_OTR_CRE_ACCION_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((PC_OTR_CRE_ACCION_REAL_ACUM / PC_OTR_CRE_ACCION_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="PC_OTR_CRE_ACCION_COMP_ACUM_B" > @if (@ViewData["PC_OTR_CRE_ACCION_REAL_ACUM"].Equals("calc") || @ViewData["PC_OTR_CRE_ACCION_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["PC_OTR_CRE_ACCION_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal PC_OTR_CRE_ACCION_REAL_ACUM = Convert.ToInt32(@ViewData["PC_OTR_CRE_ACCION_REAL_ACUM"]); decimal PC_OTR_CRE_ACCION_ANTE_ACUM = Convert.ToInt32(@ViewData["PC_OTR_CRE_ACCION_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((PC_OTR_CRE_ACCION_REAL_ACUM - PC_OTR_CRE_ACCION_ANTE_ACUM)))))} } </td>
 </tr>


<tr>
    <td  class="webgrid-rubrica"> Financiamentos obtidos                            </td> 
    <td style="text-align:right" id="PC_FIN_REAL_PER" itemid="PC_FIN_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["PC_FIN_REAL_PER"])))  </td> 
    <td style="text-align:right" id="PC_FIN_ANTE_PER" itemid="PC_FIN_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["PC_FIN_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="PC_FIN_COMP_PER_P" >  @if (@ViewData["PC_FIN_REAL_PER"].Equals("calc") || @ViewData["PC_FIN_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["PC_FIN_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal PC_FIN_REAL_PER = Convert.ToInt32(@ViewData["PC_FIN_REAL_PER"]); decimal PC_FIN_ANTE_PER = Convert.ToInt32(@ViewData["PC_FIN_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((PC_FIN_REAL_PER / PC_FIN_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="PC_FIN_ANTE_TOTAL" itemid="PC_FIN_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["PC_FIN_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="PC_FIN_ANTE_ACUM" itemid="PC_FIN_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["PC_FIN_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="PC_FIN_REAL_ACUM" itemid="PC_FIN_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["PC_FIN_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="PC_FIN_COMP_ACUM_P" > @if (@ViewData["PC_FIN_REAL_ACUM"].Equals("calc") || @ViewData["PC_FIN_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["PC_FIN_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal PC_FIN_REAL_ACUM = Convert.ToInt32(@ViewData["PC_FIN_REAL_ACUM"]); decimal PC_FIN_ANTE_ACUM = Convert.ToInt32(@ViewData["PC_FIN_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((PC_FIN_REAL_ACUM / PC_FIN_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="PC_FIN_COMP_ACUM_B" > @if (@ViewData["PC_FIN_REAL_ACUM"].Equals("calc") || @ViewData["PC_FIN_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["PC_FIN_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal PC_FIN_REAL_ACUM = Convert.ToInt32(@ViewData["PC_FIN_REAL_ACUM"]); decimal PC_FIN_ANTE_ACUM = Convert.ToInt32(@ViewData["PC_FIN_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((PC_FIN_REAL_ACUM - PC_FIN_ANTE_ACUM)))))} } </td>
 </tr>
    <tr>
    <td  class="webgrid-rubrica"> Diferimentos                            </td> 
    <td style="text-align:right" id="PC_OTR_PAS_DIFER_REAL_PER" itemid="PC_OTR_PAS_DIFER_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["PC_OTR_PAS_DIFER_REAL_PER"])))  </td> 
    <td style="text-align:right" id="PC_OTR_PAS_DIFER_ANTE_PER" itemid="PC_OTR_PAS_DIFER_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["PC_OTR_PAS_DIFER_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="PC_OTR_PAS_DIFER_COMP_PER_P" >  @if (@ViewData["PC_OTR_PAS_DIFER_REAL_PER"].Equals("calc") || @ViewData["PC_OTR_PAS_DIFER_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["PC_OTR_PAS_DIFER_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal PC_OTR_PAS_DIFER_REAL_PER = Convert.ToInt32(@ViewData["PC_OTR_PAS_DIFER_REAL_PER"]); decimal PC_OTR_PAS_DIFER_ANTE_PER = Convert.ToInt32(@ViewData["PC_OTR_PAS_DIFER_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((PC_OTR_PAS_DIFER_REAL_PER / PC_OTR_PAS_DIFER_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="PC_OTR_PAS_DIFER_ANTE_TOTAL" itemid="PC_OTR_PAS_DIFER_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["PC_OTR_PAS_DIFER_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="PC_OTR_PAS_DIFER_ANTE_ACUM" itemid="PC_OTR_PAS_DIFER_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["PC_OTR_PAS_DIFER_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="PC_OTR_PAS_DIFER_REAL_ACUM" itemid="PC_OTR_PAS_DIFER_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["PC_OTR_PAS_DIFER_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="PC_OTR_PAS_DIFER_COMP_ACUM_P" > @if (@ViewData["PC_OTR_PAS_DIFER_REAL_ACUM"].Equals("calc") || @ViewData["PC_OTR_PAS_DIFER_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["PC_OTR_PAS_DIFER_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal PC_OTR_PAS_DIFER_REAL_ACUM = Convert.ToInt32(@ViewData["PC_OTR_PAS_DIFER_REAL_ACUM"]); decimal PC_OTR_PAS_DIFER_ANTE_ACUM = Convert.ToInt32(@ViewData["PC_OTR_PAS_DIFER_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((PC_OTR_PAS_DIFER_REAL_ACUM / PC_OTR_PAS_DIFER_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="PC_OTR_PAS_DIFER_COMP_ACUM_B" > @if (@ViewData["PC_OTR_PAS_DIFER_REAL_ACUM"].Equals("calc") || @ViewData["PC_OTR_PAS_DIFER_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["PC_OTR_PAS_DIFER_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal PC_OTR_PAS_DIFER_REAL_ACUM = Convert.ToInt32(@ViewData["PC_OTR_PAS_DIFER_REAL_ACUM"]); decimal PC_OTR_PAS_DIFER_ANTE_ACUM = Convert.ToInt32(@ViewData["PC_OTR_PAS_DIFER_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((PC_OTR_PAS_DIFER_REAL_ACUM - PC_OTR_PAS_DIFER_ANTE_ACUM)))))} } </td>
 </tr>
    
<tr>
    <td  class="webgrid-rubrica"> Outros                            </td> 
    <td style="text-align:right" id="PC_OTR_PAS_OTR_REAL_PER" itemid="PC_OTR_PAS_OTR_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["PC_OTR_PAS_OTR_REAL_PER"])))  </td> 
    <td style="text-align:right" id="PC_OTR_PAS_OTR_ANTE_PER" itemid="PC_OTR_PAS_OTR_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["PC_OTR_PAS_OTR_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="PC_OTR_PAS_OTR_COMP_PER_P" >  @if (@ViewData["PC_OTR_PAS_OTR_REAL_PER"].Equals("calc") || @ViewData["PC_OTR_PAS_OTR_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["PC_OTR_PAS_OTR_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal PC_OTR_PAS_OTR_REAL_PER = Convert.ToInt32(@ViewData["PC_OTR_PAS_OTR_REAL_PER"]); decimal PC_OTR_PAS_OTR_ANTE_PER = Convert.ToInt32(@ViewData["PC_OTR_PAS_OTR_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((PC_OTR_PAS_OTR_REAL_PER / PC_OTR_PAS_OTR_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="PC_OTR_PAS_OTR_ANTE_TOTAL" itemid="PC_OTR_PAS_OTR_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["PC_OTR_PAS_OTR_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="PC_OTR_PAS_OTR_ANTE_ACUM" itemid="PC_OTR_PAS_OTR_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["PC_OTR_PAS_OTR_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="PC_OTR_PAS_OTR_REAL_ACUM" itemid="PC_OTR_PAS_OTR_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["PC_OTR_PAS_OTR_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="PC_OTR_PAS_OTR_COMP_ACUM_P" > @if (@ViewData["PC_OTR_PAS_OTR_REAL_ACUM"].Equals("calc") || @ViewData["PC_OTR_PAS_OTR_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["PC_OTR_PAS_OTR_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal PC_OTR_PAS_OTR_REAL_ACUM = Convert.ToInt32(@ViewData["PC_OTR_PAS_OTR_REAL_ACUM"]); decimal PC_OTR_PAS_OTR_ANTE_ACUM = Convert.ToInt32(@ViewData["PC_OTR_PAS_OTR_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((PC_OTR_PAS_OTR_REAL_ACUM / PC_OTR_PAS_OTR_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="PC_OTR_PAS_OTR_COMP_ACUM_B" > @if (@ViewData["PC_OTR_PAS_OTR_REAL_ACUM"].Equals("calc") || @ViewData["PC_OTR_PAS_OTR_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["PC_OTR_PAS_OTR_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal PC_OTR_PAS_OTR_REAL_ACUM = Convert.ToInt32(@ViewData["PC_OTR_PAS_OTR_REAL_ACUM"]); decimal PC_OTR_PAS_OTR_ANTE_ACUM = Convert.ToInt32(@ViewData["PC_OTR_PAS_OTR_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((PC_OTR_PAS_OTR_REAL_ACUM - PC_OTR_PAS_OTR_ANTE_ACUM)))))} } </td>
 </tr>

<tr>
    <td  class="webgrid-rubrica-TOTAL"> TOTAL CAPITAL PRÓPRIO + PASSIVO                             </td> 
    <td class="webgrid-rubrica-TOTAL" id="CP_E_PASSIVO_TOTAL_REAL_PER" itemid="CP_E_PASSIVO_TOTAL_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["CP_E_PASSIVO_TOTAL_REAL_PER"])))  </td> 
    <td class="webgrid-rubrica-TOTAL" id="CP_E_PASSIVO_TOTAL_ANTE_PER" itemid="CP_E_PASSIVO_TOTAL_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["CP_E_PASSIVO_TOTAL_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica-TOTAL" id="CP_E_PASSIVO_TOTAL_COMP_PER_P" >  @if (@ViewData["CP_E_PASSIVO_TOTAL_REAL_PER"].Equals("calc") || @ViewData["CP_E_PASSIVO_TOTAL_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["CP_E_PASSIVO_TOTAL_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal CP_E_PASSIVO_TOTAL_REAL_PER = Convert.ToInt32(@ViewData["CP_E_PASSIVO_TOTAL_REAL_PER"]); decimal CP_E_PASSIVO_TOTAL_ANTE_PER = Convert.ToInt32(@ViewData["CP_E_PASSIVO_TOTAL_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((CP_E_PASSIVO_TOTAL_REAL_PER / CP_E_PASSIVO_TOTAL_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td class="webgrid-rubrica-TOTAL" id="CP_E_PASSIVO_TOTAL_ANTE_TOTAL" itemid="CP_E_PASSIVO_TOTAL_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["CP_E_PASSIVO_TOTAL_ANTE_TOTAL"])))  </td> 
    <td class="webgrid-rubrica-TOTAL" id="CP_E_PASSIVO_TOTAL_ANTE_ACUM" itemid="CP_E_PASSIVO_TOTAL_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["CP_E_PASSIVO_TOTAL_ANTE_ACUM"])))  </td> 
    <td class="webgrid-rubrica-TOTAL" id="CP_E_PASSIVO_TOTAL_REAL_ACUM" itemid="CP_E_PASSIVO_TOTAL_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["CP_E_PASSIVO_TOTAL_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica-TOTAL" id="CP_E_PASSIVO_TOTAL_COMP_ACUM_P" > @if (@ViewData["CP_E_PASSIVO_TOTAL_REAL_ACUM"].Equals("calc") || @ViewData["CP_E_PASSIVO_TOTAL_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["CP_E_PASSIVO_TOTAL_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal CP_E_PASSIVO_TOTAL_REAL_ACUM = Convert.ToInt32(@ViewData["CP_E_PASSIVO_TOTAL_REAL_ACUM"]); decimal CP_E_PASSIVO_TOTAL_ANTE_ACUM = Convert.ToInt32(@ViewData["CP_E_PASSIVO_TOTAL_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((CP_E_PASSIVO_TOTAL_REAL_ACUM / CP_E_PASSIVO_TOTAL_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica-TOTAL" id="CP_E_PASSIVO_TOTAL_COMP_ACUM_B" > @if (@ViewData["CP_E_PASSIVO_TOTAL_REAL_ACUM"].Equals("calc") || @ViewData["CP_E_PASSIVO_TOTAL_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["CP_E_PASSIVO_TOTAL_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal CP_E_PASSIVO_TOTAL_REAL_ACUM = Convert.ToInt32(@ViewData["CP_E_PASSIVO_TOTAL_REAL_ACUM"]); decimal CP_E_PASSIVO_TOTAL_ANTE_ACUM = Convert.ToInt32(@ViewData["CP_E_PASSIVO_TOTAL_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((CP_E_PASSIVO_TOTAL_REAL_ACUM - CP_E_PASSIVO_TOTAL_ANTE_ACUM)))))} } </td>
 </tr>


<tr id="dif_balanco">
    <td  class="webgrid-rubrica"> Diferenças do Balanço                            </td> 
    <td style="text-align:right" id="DIF_BALANCO_REAL_PER" itemid="DIF_BALANCO_PER" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["DIF_BALANCO_REAL_PER"])))  </td> 
    <td style="text-align:right" id="DIF_BALANCO_ANTE_PER" itemid="DIF_BALANCO_PER" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["DIF_BALANCO_ANTE_PER"])))  </td> 
    <td class="webgrid-rubrica" id="DIF_BALANCO_COMP_PER_P" >  @if (@ViewData["DIF_BALANCO_REAL_PER"].Equals("calc") || @ViewData["DIF_BALANCO_ANTE_PER"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["DIF_BALANCO_ANTE_PER"]).Equals(0)){<text>    -</text> ;} else { decimal DIF_BALANCO_REAL_PER = Convert.ToInt32(@ViewData["DIF_BALANCO_REAL_PER"]); decimal DIF_BALANCO_ANTE_PER = Convert.ToInt32(@ViewData["DIF_BALANCO_ANTE_PER"]);   @Html.Raw((string.Format("{0:N}", ((DIF_BALANCO_REAL_PER / DIF_BALANCO_ANTE_PER) * 100) - 100)))<text>%</text>} } </td>
    <td style="text-align:right" id="DIF_BALANCO_ANTE_TOTAL" itemid="DIF_BALANCO_TOTAL" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["DIF_BALANCO_ANTE_TOTAL"])))  </td> 
    <td style="text-align:right" id="DIF_BALANCO_ANTE_ACUM" itemid="DIF_BALANCO_ACUM" itemref="@ViewData["versao_ante"]">@Html.Raw((string.Format("{0:N}",@ViewData["DIF_BALANCO_ANTE_ACUM"])))  </td> 
    <td style="text-align:right" id="DIF_BALANCO_REAL_ACUM" itemid="DIF_BALANCO_ACUM" itemref="@ViewData["versao_real"]">@Html.Raw((string.Format("{0:N}",@ViewData["DIF_BALANCO_REAL_ACUM"])))  </td> 
     <td class="webgrid-rubrica" id="DIF_BALANCO_COMP_ACUM_P" > @if (@ViewData["DIF_BALANCO_REAL_ACUM"].Equals("calc") || @ViewData["DIF_BALANCO_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["DIF_BALANCO_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal DIF_BALANCO_REAL_ACUM = Convert.ToInt32(@ViewData["DIF_BALANCO_REAL_ACUM"]); decimal DIF_BALANCO_ANTE_ACUM = Convert.ToInt32(@ViewData["DIF_BALANCO_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((DIF_BALANCO_REAL_ACUM / DIF_BALANCO_ANTE_ACUM) * 100) - 100)))<text>%</text>} } </td>
     <td class="webgrid-rubrica" id="DIF_BALANCO_COMP_ACUM_B" > @if (@ViewData["DIF_BALANCO_REAL_ACUM"].Equals("calc") || @ViewData["DIF_BALANCO_ANTE_ACUM"].Equals("calc")) { <text>    -</text> } else {if (Convert.ToInt32(@ViewData["DIF_BALANCO_ANTE_ACUM"]).Equals(0)){<text>    -</text> ;} else { decimal DIF_BALANCO_REAL_ACUM = Convert.ToInt32(@ViewData["DIF_BALANCO_REAL_ACUM"]); decimal DIF_BALANCO_ANTE_ACUM = Convert.ToInt32(@ViewData["DIF_BALANCO_ANTE_ACUM"]);   @Html.Raw((string.Format("{0:N}", ((DIF_BALANCO_REAL_ACUM - DIF_BALANCO_ANTE_ACUM)))))} } </td>
 </tr>
 







  </table>






  @if (@ViewData["ACTIVO_TOTAL_REAL_ACUM"].Equals("calc") || @ViewData["ACTIVO_TOTAL_ANTE_ACUM"].Equals("calc") || @ViewData["CP_TOTAL_REAL_ACUM"].Equals("calc") || @ViewData["CP_TOTAL_ANTE_ACUM"].Equals("calc") || @ViewData["IND_AUTOM_FINANC_REAL_ACUM"].Equals("calc") || @ViewData["IND_AUTOM_FINANC_ANTE_ACUM"].Equals("calc") ) {<canvas id="GRAFICO_BALANCO_RESUMIDOCOMP_COMP"  style="display:none"></canvas>} else { if ((Convert.ToDecimal(@ViewData["ACTIVO_TOTAL_REAL_ACUM"])) == 0) {<canvas id="GRAFICO_BALANCO_RESUMIDOCOMP_COMP"  style="display:none"></canvas>} else { 
          <div class="page-breaker"></div> 
<table id="BALANCO_COMP_ACUMULADO_COMP_quadro" class="graficos_textos" style="width:100%; height:50%">
     <tr style="max-height:50px"> <td class="titulos_mapas"  colspan="2"> Balanço </td> </tr>
     <tr>
        <td  style="width:50%"> O Total do Ativo em @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"]) atingiu o valor de 
             @if (@ViewData["ACTIVO_TOTAL_REAL_ACUM"].Equals("calc") ) { <text>    -</text>  } else {@Html.Raw((string.Format("{0:N}",(Convert.ToDecimal(@ViewData["ACTIVO_TOTAL_REAL_ACUM"])))))} €,
           sendo que em  @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"]) era de
       @if ( @ViewData["ACTIVO_TOTAL_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["ACTIVO_TOTAL_ANTE_ACUM"]) ))))} €,
   verificando-se @if (@ViewData["ACTIVO_TOTAL_REAL_ACUM"].Equals("calc") || @ViewData["ACTIVO_TOTAL_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else {if ((Convert.ToDecimal(@ViewData["ACTIVO_TOTAL_REAL_ACUM"]) ) >= (Convert.ToDecimal(@ViewData["ACTIVO_TOTAL_ANTE_ACUM"]) ))         {  <text> um crescimento de </text> ; }  else   {  <text> uma diminuição de </text>  ; }}
    @if (@ViewData["ACTIVO_TOTAL_REAL_ACUM"].Equals("calc") || @ViewData["ACTIVO_TOTAL_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else { if ((Convert.ToInt32(@ViewData["ACTIVO_TOTAL_ANTE_ACUM"])).Equals(0)){<text> 100 %</text>  } else { decimal ACTIVO_TOTAL_REAL_ACUM = Convert.ToInt32(@ViewData["ACTIVO_TOTAL_REAL_ACUM"]) ; decimal ACTIVO_TOTAL_ANTE_ACUM = Convert.ToInt32(@ViewData["ACTIVO_TOTAL_ANTE_ACUM"]) ; @Html.Raw((string.Format("{0:N}", ((ACTIVO_TOTAL_REAL_ACUM / ACTIVO_TOTAL_ANTE_ACUM) * 100) - 100))) <text>%</text>} }.
    <p  style="margin-bottom: 0.4em;">
        O Total do Capital Próprio  em @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"]) atingiu o valor de 
             @if (@ViewData["CP_TOTAL_REAL_ACUM"].Equals("calc") ) { <text>    -</text>  } else {@Html.Raw((string.Format("{0:N}",(Convert.ToDecimal(@ViewData["CP_TOTAL_REAL_ACUM"])))))} €,
           sendo que em  @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"]) era de
       @if ( @ViewData["CP_TOTAL_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["CP_TOTAL_ANTE_ACUM"]) ))))} €,
   verificando-se @if (@ViewData["CP_TOTAL_REAL_ACUM"].Equals("calc") || @ViewData["CP_TOTAL_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else {if ((Convert.ToDecimal(@ViewData["CP_TOTAL_REAL_ACUM"]) ) >= (Convert.ToDecimal(@ViewData["CP_TOTAL_ANTE_ACUM"]) ))         {  <text> um crescimento de </text> ; }  else   {  <text> uma diminuição de </text>  ; }}
    @if (@ViewData["CP_TOTAL_REAL_ACUM"].Equals("calc") || @ViewData["CP_TOTAL_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else { if ((Convert.ToInt32(@ViewData["CP_TOTAL_ANTE_ACUM"])).Equals(0)){<text> 100 %</text>  } else { decimal CP_TOTAL_REAL_ACUM = Convert.ToInt32(@ViewData["CP_TOTAL_REAL_ACUM"]) ; decimal CP_TOTAL_ANTE_ACUM = Convert.ToInt32(@ViewData["CP_TOTAL_ANTE_ACUM"]) ; @Html.Raw((string.Format("{0:N}", ((CP_TOTAL_REAL_ACUM / CP_TOTAL_ANTE_ACUM) * 100) - 100))) <text>%</text>} }.
       <p  style="margin-bottom: 0.4em;">
        Assim, a Autonomia Financeira  em @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"]) atingiu o valor de 
             @if (@ViewData["IND_AUTOM_FINANC_REAL_ACUM"].Equals("calc") ) { <text>    -</text>  } else {@Html.Raw((string.Format("{0:N}",(Convert.ToDecimal(@ViewData["IND_AUTOM_FINANC_REAL_ACUM"])))))<text>%</text>} ,
           sendo que em  @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"]) era de
       @if ( @ViewData["IND_AUTOM_FINANC_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["IND_AUTOM_FINANC_ANTE_ACUM"]) ))))<text>%</text>} ,
   verificando-se @if (@ViewData["IND_AUTOM_FINANC_REAL_ACUM"].Equals("calc") || @ViewData["IND_AUTOM_FINANC_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else {if ((Convert.ToDecimal(@ViewData["IND_AUTOM_FINANC_REAL_ACUM"]) ) >= (Convert.ToDecimal(@ViewData["IND_AUTOM_FINANC_ANTE_ACUM"]) ))         {  <text> um aumento de </text> ; }  else   {  <text> uma redução de </text>  ; }}
    @if (@ViewData["IND_AUTOM_FINANC_REAL_ACUM"].Equals("calc") || @ViewData["IND_AUTOM_FINANC_ANTE_ACUM"].Equals("calc") ) { <text>    -</text>  } else { if ((Convert.ToInt32(@ViewData["IND_AUTOM_FINANC_ANTE_ACUM"])).Equals(0)){<text> 100 %</text>  } else { decimal IND_AUTOM_FINANC_REAL_ACUM = Convert.ToInt32(@ViewData["IND_AUTOM_FINANC_REAL_ACUM"]) ; decimal IND_AUTOM_FINANC_ANTE_ACUM = Convert.ToInt32(@ViewData["IND_AUTOM_FINANC_ANTE_ACUM"]) ; @Html.Raw((string.Format("{0:N}", ((IND_AUTOM_FINANC_REAL_ACUM - IND_AUTOM_FINANC_ANTE_ACUM) ) ))) <text>%</text>} }.
    </td>
      
         <td style="width:100%">
             <canvas type="submit" id="GRAFICO_BALANCO_RESUMIDOCOMP_COMP"></canvas>
         </td>
     </tr>
    </table>
    }}



@*<div id="GRAVAROPER_DIRXX"  style="display:none">
   

    @using (Html.BeginForm("BI_CONF_VERSAO_VARIAVEIS_USER_ALT", "BI", FormMethod.Get))
    {
       <div id="GRAVAR" class="GRAVAR">
    @Html.ActionLink("GRAVAR","BI_CONF_VERSAO_VARIAVEIS_USER_ALT", "BI", new { 
    Pesquisa_User = "tjalmeida",  id_camp = "id_camp", campocalc_resultado="campocalc_resultado"}, null)
</div> 
       
    }
</div>*@

<div id="CONFIGURARXX" style="display:none">
   

    @using (Html.BeginForm("GRC_ALERTAS_RESUMO", "GRC", FormMethod.Get))
    {
       <div id="CONFIGURAR_CAMPO" class="CONFIGURAR_CAMPO">
        @Html.ActionLink("Configurar","BI_CAMP_CALC", "BI", new { id_camp_calc = "id_camp_calc", Pesquisa_User = "tjalmeida", versao="versao"}, null)
       </div> 
            
    }
</div>

@*<div id="grid_mes_ini_ano_n" class="oculta_na_impressao_ tooltip"> <span class="tooltiptext">Clique para definir outro mês, pressionando a tecla Enter para Gravar. </span> @Html.Action("BI_CONF_VERSAO_VARIAVEIS_USER_Result", "BI", new { Pesquisa_User = "tjalmeida", versao = @ViewData["versao_real"], ANO = "", MES_INI_PER = "MES_INI_PER", MES_FIN_PER = "", MES_ACUM = "", TIPO_APUR_CMVMC = "" }) </div>*@
<div id="grid_mes_ini_ano_n" class="oculta_na_impressao_ tooltip">
    @using (Html.BeginForm("BI_CONF_VERSAO_VARIAVEIS_USER_ALT", "BI", new { Pesquisa_User = "tjalmeida", versao = @ViewData["versao_real"], id_camp = ViewData["ID_MES_INI_PER_REAL"], FormMethod.Get }))
    { <div class="tooltip" style="width:100%">
        @Html.DropDownList("campocalc_resultado", new SelectList(ViewBag.LISTA_MESES_REAL, "id_mes", "mes", ViewData["MES_INI_PER_REAL"]), new
   {
       @class = "form -control",
       @style = "width:100%; height:30px; text-align-last:center;",
       onchange = "this.form.submit();"@*, dir = "rtl"*@ })
        <span class="tooltiptext">Clique na lista para selecionar outro mês para a Análise do Periodo Corrente.</span>
    </div>
    }
</div>
@*<div id="grid_mes_ini_ano_n-1" class="oculta_na_impressao_ tooltip"> <span class="tooltiptext">Clique para definir outro mês, pressionando a tecla Enter para Gravar. </span> @Html.Action("BI_CONF_VERSAO_VARIAVEIS_USER_Result", "BI", new { Pesquisa_User = "tjalmeida", versao = @ViewData["versao_ante"], ANO = "", MES_INI_PER = "MES_INI_PER", MES_FIN_PER = "", MES_ACUM = "", TIPO_APUR_CMVMC = "" }) </div>*@
<div id="grid_mes_ini_ano_n-1" class="oculta_na_impressao_ tooltip">
    @using (Html.BeginForm("BI_CONF_VERSAO_VARIAVEIS_USER_ALT", "BI", new { Pesquisa_User = "tjalmeida", versao = @ViewData["versao_ante"], id_camp = ViewData["ID_MES_INI_PER_ANTE"], FormMethod.Get }))
            { <div class="tooltip" style="width:100%">
        @Html.DropDownList("campocalc_resultado", new SelectList(ViewBag.LISTA_MESES_ANTE, "id_mes", "mes", ViewData["MES_INI_PER_ANTE"]), new { @class = "form -control", @style = "width:100%; height:30px; text-align-last:center;", onchange = "this.form.submit();" })
        <span class="tooltiptext">Clique na lista para selecionar outro mês para a Análise do Periodo Corrente.</span>
    </div>
    }
</div>
@*<div id="grid_mes_fin_ano_n" class="oculta_na_impressao_ tooltip"> <span class="tooltiptext">Clique para definir outro mês, pressionando a tecla Enter para Gravar. </span> @Html.Action("BI_CONF_VERSAO_VARIAVEIS_USER_Result", "BI", new { Pesquisa_User = "tjalmeida", versao = @ViewData["versao_real"], ANO = "", MES_INI_PER = "", MES_FIN_PER = "MES_FIN_PER", MES_ACUM = "", TIPO_APUR_CMVMC = "" }) </div>*@
<div id="grid_mes_fin_ano_n" class="oculta_na_impressao_ tooltip">
    @using (Html.BeginForm("BI_CONF_VERSAO_VARIAVEIS_USER_ALT", "BI", new { Pesquisa_User = "tjalmeida", versao = @ViewData["versao_real"], id_camp = ViewData["ID_MES_FIN_PER_REAL"], FormMethod.Get }))
    { <div class="tooltip" style="width:100%">
        @Html.DropDownList("campocalc_resultado", new SelectList(ViewBag.LISTA_MESES_REAL, "id_mes", "mes", ViewData["MES_FIN_PER_REAL"]), new { @class = "form -control", @style = "width:100%; height:30px; text-align-last:center;", onchange = "this.form.submit();" })
        <span class="tooltiptext">Clique na lista para selecionar outro mês para a Análise do Periodo Corrente.</span>
    </div>
    }
</div>
@*<div id="grid_mes_fin_ano_n-1" class="oculta_na_impressao_ tooltip"> <span class="tooltiptext">Clique para definir outro mês, pressionando a tecla Enter para Gravar. </span> @Html.Action("BI_CONF_VERSAO_VARIAVEIS_USER_Result", "BI", new { Pesquisa_User = "tjalmeida", versao = @ViewData["versao_ante"], ANO = "", MES_INI_PER = "", MES_FIN_PER = "MES_FIN_PER", MES_ACUM = "", TIPO_APUR_CMVMC = "" }) </div>*@
<div id="grid_mes_fin_ano_n-1" class="oculta_na_impressao_ tooltip">
    @using (Html.BeginForm("BI_CONF_VERSAO_VARIAVEIS_USER_ALT", "BI", new { Pesquisa_User = "tjalmeida", versao = @ViewData["versao_ante"], id_camp = ViewData["ID_MES_FIN_PER_ANTE"], FormMethod.Get }))
            { <div class="tooltip" style="width:100%">
        @Html.DropDownList("campocalc_resultado", new SelectList(ViewBag.LISTA_MESES_ANTE, "id_mes", "mes", ViewData["MES_FIN_PER_ANTE"]), new { @class = "form -control", @style = "width:100%; height:30px; text-align-last:center;", onchange = "this.form.submit();" })
        <span class="tooltiptext">Clique na lista para selecionar outro mês para a Análise do Periodo Corrente.</span>
    </div>
    }
</div>
@*<div id="grid_mes_acum_ano_n" class="oculta_na_impressao_ tooltip"> <span class="tooltiptext">Clique para definir outro mês, pressionando a tecla Enter para Gravar. </span> @Html.Action("BI_CONF_VERSAO_VARIAVEIS_USER_Result", "BI", new { Pesquisa_User = "tjalmeida", versao = @ViewData["versao_real"], ANO = "", MES_INI_PER = "", MES_FIN_PER = "", MES_ACUM = "MES_ACUM", TIPO_APUR_CMVMC = "" }) </div>*@
<div id="grid_mes_acum_ano_n" class="oculta_na_impressao_ tooltip">
    @using (Html.BeginForm("BI_CONF_VERSAO_VARIAVEIS_USER_ALT", "BI", new { Pesquisa_User = "tjalmeida", versao = @ViewData["versao_real"], id_camp = ViewData["ID_MES_ACUM_REAL"], FormMethod.Get }))
            { <div class="tooltip" style="width:100%">
        @Html.DropDownList("campocalc_resultado", new SelectList(ViewBag.LISTA_MESES_REAL, "id_mes", "mes", ViewData["MES_ACUM_REAL"]), new { @class = "form -control", @style = "width:100%; height:30px; text-align-last:center;", onchange = "this.form.submit();" })
        <span class="tooltiptext">Clique na lista para selecionar outro mês para a Análise do Acumulado.</span>
    </div>
    }
</div>
@*<div id="grid_mes_acum_ano_n-1" class="oculta_na_impressao_ tooltip"> <span class="tooltiptext">Clique para definir outro mês, pressionando a tecla Enter para Gravar. </span> @Html.Action("BI_CONF_VERSAO_VARIAVEIS_USER_Result", "BI", new { Pesquisa_User = "tjalmeida", versao = @ViewData["versao_ante"], ANO = "", MES_INI_PER = "", MES_FIN_PER = "", MES_ACUM = "MES_ACUM", TIPO_APUR_CMVMC = "" }) </div>*@
<div id="grid_mes_acum_ano_n-1" class="oculta_na_impressao_ tooltip">
    @using (Html.BeginForm("BI_CONF_VERSAO_VARIAVEIS_USER_ALT", "BI", new { Pesquisa_User = "tjalmeida", versao = @ViewData["versao_ante"], id_camp = ViewData["ID_MES_ACUM_ANTE"], FormMethod.Get }))
    { <div class="tooltip" style="width:100%">
        @Html.DropDownList("campocalc_resultado", new SelectList(ViewBag.LISTA_MESES_ANTE, "id_mes", "mes", ViewData["MES_ACUM_ANTE"]), new { @class = "form -control", @style = "width:100%; height:30px; text-align-last:center;", onchange = "this.form.submit();" })
        <span class="tooltiptext">Clique na lista para selecionar outro mês para a Análise do Acumulado.</span>
    </div>
    }
</div>


@section scripts {



@{int DESATIVA_DATATBLE = Convert.ToInt32(@ViewData["desativa_datatable"]);
}
@if (DESATIVA_DATATBLE.Equals(1)) { }
else
{

    <script src="@Url.Content("~/Scripts/jquery.dataTables.min.js")"></script>
    <script src="@Url.Content("~/Scripts/dataTables.fixedColumns.min.js")"></script>
    <script src="@Url.Content("~/Scripts/dataTables.buttons.min.js")"></script>
    <script src="@Url.Content("~/Scripts/buttons.flash.min.js")"></script>
    <script src="@Url.Content("~/Scripts/jszip.min.js")"></script>
    <script src="@Url.Content("~/Scripts/pdfmake.min.js")"></script>
    <script src="@Url.Content("~/Scripts/vfs_fonts.js")"></script>
    <script src="@Url.Content("~/Scripts/buttons.html5.min.js")"></script>
    <script src="@Url.Content("~/Scripts/buttons.print.min.js")"></script>
    <script src="@Url.Content("~/Scripts/dataTables.responsive.min.js")"></script>
    <script src="@Url.Content("~/Scripts/dataTables.fixedHeader.min.js")"></script>
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/fixedheader/3.1.2/css/fixedHeader.dataTables.min.css">
}

<script src="@Url.Content("~/Scripts/chart.js@2.8.0.js")"></script>

    <script type="text/javascript">

        //NOTA TA: REFRESCA PAGINA DE 20 EM 20 SEGUNDOS SE HEXISTIREM CÉLULAS A CALCULAR

        setTimeout(function () {
            var num_car = $('#BALANCO_COMP td').text().length
            var num_car_ = $('#BALANCO_COMP td').text().replace('calc', '').length

            if (num_car == num_car_) { } else
            {
                window.location.reload(1);

            }
        }, 20000);


        $(document).ready(function () {




            var num_car = $('#BALANCO_COMP td').text().length
            var num_car_ = $('#BALANCO_COMP td').text().replace('calc', '').length

            if (num_car == num_car_) { } else
            {

                $(".calcular").attr('style', 'display:block');
            }


@*------------------------------------------------GRAFICO_BALANCO_RESUMIDOCOMP_COMP-----------------------------------------------------------*@
            var ANO_VERSAO_REAL = @Html.Raw((string.Format("{0:0}", ViewData["ANO_VERSAO_REAL"])));
            var ANO_VERSAO_REAL_ = ANO_VERSAO_REAL.toString().substr(ANO_VERSAO_REAL.toString().length - 2,ANO_VERSAO_REAL.toString().length);

            var ANO_VERSAO_ANTE = @Html.Raw((string.Format("{0:0}", ViewData["ANO_VERSAO_ANTE"])));
            var ANO_VERSAO_ANTE_ = ANO_VERSAO_ANTE.toString().substr(ANO_VERSAO_ANTE.toString().length - 2,ANO_VERSAO_ANTE.toString().length);



    if(@ViewData["MES_ACUM_REAL"]<1){ var IND_AUTOM_FINANC_ANO_N_JANEIRO = 'nd'; var IND_AUTOM_FINANC_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var IND_AUTOM_FINANC_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_JANEIRO"]))); var IND_AUTOM_FINANC_ANO_N_JANEIRO_MAX_MIN = IND_AUTOM_FINANC_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var IND_AUTOM_FINANC_ANO_N_FEVEREIRO = 'nd'; var IND_AUTOM_FINANC_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var IND_AUTOM_FINANC_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_FEVEREIRO"]))); var IND_AUTOM_FINANC_ANO_N_FEVEREIRO_MAX_MIN = IND_AUTOM_FINANC_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var IND_AUTOM_FINANC_ANO_N_MARCO = 'nd'; var IND_AUTOM_FINANC_ANO_N_MARCO_MAX_MIN = 0;  } else { var IND_AUTOM_FINANC_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_MARCO"]))); var IND_AUTOM_FINANC_ANO_N_MARCO_MAX_MIN = IND_AUTOM_FINANC_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var IND_AUTOM_FINANC_ANO_N_ABRIL = 'nd'; var IND_AUTOM_FINANC_ANO_N_ABRIL_MAX_MIN = 0;  } else { var IND_AUTOM_FINANC_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_ABRIL"]))); var IND_AUTOM_FINANC_ANO_N_ABRIL_MAX_MIN = IND_AUTOM_FINANC_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var IND_AUTOM_FINANC_ANO_N_MAIO = 'nd'; var IND_AUTOM_FINANC_ANO_N_MAIO_MAX_MIN = 0;  } else { var IND_AUTOM_FINANC_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_MAIO"]))); var IND_AUTOM_FINANC_ANO_N_MAIO_MAX_MIN = IND_AUTOM_FINANC_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var IND_AUTOM_FINANC_ANO_N_JUNHO = 'nd'; var IND_AUTOM_FINANC_ANO_N_JUNHO_MAX_MIN = 0;  } else { var IND_AUTOM_FINANC_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_JUNHO"]))); var IND_AUTOM_FINANC_ANO_N_JUNHO_MAX_MIN = IND_AUTOM_FINANC_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var IND_AUTOM_FINANC_ANO_N_JULHO = 'nd'; var IND_AUTOM_FINANC_ANO_N_JULHO_MAX_MIN = 0;  } else { var IND_AUTOM_FINANC_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_JULHO"]))); var IND_AUTOM_FINANC_ANO_N_JULHO_MAX_MIN = IND_AUTOM_FINANC_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var IND_AUTOM_FINANC_ANO_N_AGOSTO = 'nd'; var IND_AUTOM_FINANC_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var IND_AUTOM_FINANC_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_AGOSTO"]))); var IND_AUTOM_FINANC_ANO_N_AGOSTO_MAX_MIN = IND_AUTOM_FINANC_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var IND_AUTOM_FINANC_ANO_N_SETEMBRO = 'nd'; var IND_AUTOM_FINANC_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var IND_AUTOM_FINANC_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_SETEMBRO"]))); var IND_AUTOM_FINANC_ANO_N_SETEMBRO_MAX_MIN = IND_AUTOM_FINANC_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var IND_AUTOM_FINANC_ANO_N_OUTUBRO = 'nd'; var IND_AUTOM_FINANC_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var IND_AUTOM_FINANC_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_OUTUBRO"]))); var IND_AUTOM_FINANC_ANO_N_OUTUBRO_MAX_MIN = IND_AUTOM_FINANC_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var IND_AUTOM_FINANC_ANO_N_NOVEMBRO = 'nd'; var IND_AUTOM_FINANC_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var IND_AUTOM_FINANC_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_NOVEMBRO"]))); var IND_AUTOM_FINANC_ANO_N_NOVEMBRO_MAX_MIN = IND_AUTOM_FINANC_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var IND_AUTOM_FINANC_ANO_N_DEZEMBRO = 'nd'; var IND_AUTOM_FINANC_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var IND_AUTOM_FINANC_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_DEZEMBRO"]))); var IND_AUTOM_FINANC_ANO_N_DEZEMBRO_MAX_MIN = IND_AUTOM_FINANC_ANO_N_DEZEMBRO };

    if(@ViewData["MES_ACUM_REAL"]<1){ var ACTIVO_TOTAL_ANO_N_JANEIRO = 'nd'; var ACTIVO_TOTAL_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var ACTIVO_TOTAL_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_JANEIRO"]))); var ACTIVO_TOTAL_ANO_N_JANEIRO_MAX_MIN = ACTIVO_TOTAL_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var ACTIVO_TOTAL_ANO_N_FEVEREIRO = 'nd'; var ACTIVO_TOTAL_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var ACTIVO_TOTAL_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_FEVEREIRO"]))); var ACTIVO_TOTAL_ANO_N_FEVEREIRO_MAX_MIN = ACTIVO_TOTAL_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var ACTIVO_TOTAL_ANO_N_MARCO = 'nd'; var ACTIVO_TOTAL_ANO_N_MARCO_MAX_MIN = 0;  } else { var ACTIVO_TOTAL_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_MARCO"]))); var ACTIVO_TOTAL_ANO_N_MARCO_MAX_MIN = ACTIVO_TOTAL_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var ACTIVO_TOTAL_ANO_N_ABRIL = 'nd'; var ACTIVO_TOTAL_ANO_N_ABRIL_MAX_MIN = 0;  } else { var ACTIVO_TOTAL_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_ABRIL"]))); var ACTIVO_TOTAL_ANO_N_ABRIL_MAX_MIN = ACTIVO_TOTAL_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var ACTIVO_TOTAL_ANO_N_MAIO = 'nd'; var ACTIVO_TOTAL_ANO_N_MAIO_MAX_MIN = 0;  } else { var ACTIVO_TOTAL_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_MAIO"]))); var ACTIVO_TOTAL_ANO_N_MAIO_MAX_MIN = ACTIVO_TOTAL_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var ACTIVO_TOTAL_ANO_N_JUNHO = 'nd'; var ACTIVO_TOTAL_ANO_N_JUNHO_MAX_MIN = 0;  } else { var ACTIVO_TOTAL_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_JUNHO"]))); var ACTIVO_TOTAL_ANO_N_JUNHO_MAX_MIN = ACTIVO_TOTAL_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var ACTIVO_TOTAL_ANO_N_JULHO = 'nd'; var ACTIVO_TOTAL_ANO_N_JULHO_MAX_MIN = 0;  } else { var ACTIVO_TOTAL_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_JULHO"]))); var ACTIVO_TOTAL_ANO_N_JULHO_MAX_MIN = ACTIVO_TOTAL_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var ACTIVO_TOTAL_ANO_N_AGOSTO = 'nd'; var ACTIVO_TOTAL_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var ACTIVO_TOTAL_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_AGOSTO"]))); var ACTIVO_TOTAL_ANO_N_AGOSTO_MAX_MIN = ACTIVO_TOTAL_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var ACTIVO_TOTAL_ANO_N_SETEMBRO = 'nd'; var ACTIVO_TOTAL_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var ACTIVO_TOTAL_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_SETEMBRO"]))); var ACTIVO_TOTAL_ANO_N_SETEMBRO_MAX_MIN = ACTIVO_TOTAL_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var ACTIVO_TOTAL_ANO_N_OUTUBRO = 'nd'; var ACTIVO_TOTAL_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var ACTIVO_TOTAL_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_OUTUBRO"]))); var ACTIVO_TOTAL_ANO_N_OUTUBRO_MAX_MIN = ACTIVO_TOTAL_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var ACTIVO_TOTAL_ANO_N_NOVEMBRO = 'nd'; var ACTIVO_TOTAL_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var ACTIVO_TOTAL_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_NOVEMBRO"]))); var ACTIVO_TOTAL_ANO_N_NOVEMBRO_MAX_MIN = ACTIVO_TOTAL_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var ACTIVO_TOTAL_ANO_N_DEZEMBRO = 'nd'; var ACTIVO_TOTAL_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var ACTIVO_TOTAL_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_DEZEMBRO"]))); var ACTIVO_TOTAL_ANO_N_DEZEMBRO_MAX_MIN = ACTIVO_TOTAL_ANO_N_DEZEMBRO };



    var Balanco_ResumidoComp_Eixo_max_princ= Math.max( IND_AUTOM_FINANC_ANO_N_JANEIRO_MAX_MIN,
                       IND_AUTOM_FINANC_ANO_N_FEVEREIRO_MAX_MIN,
                       IND_AUTOM_FINANC_ANO_N_MARCO_MAX_MIN,
                       IND_AUTOM_FINANC_ANO_N_ABRIL_MAX_MIN,
                       IND_AUTOM_FINANC_ANO_N_MAIO_MAX_MIN,
                       IND_AUTOM_FINANC_ANO_N_JUNHO_MAX_MIN,
                       IND_AUTOM_FINANC_ANO_N_JULHO_MAX_MIN,
                       IND_AUTOM_FINANC_ANO_N_AGOSTO_MAX_MIN,
                       IND_AUTOM_FINANC_ANO_N_SETEMBRO_MAX_MIN,
                       IND_AUTOM_FINANC_ANO_N_OUTUBRO_MAX_MIN,
                       IND_AUTOM_FINANC_ANO_N_NOVEMBRO_MAX_MIN,
                       IND_AUTOM_FINANC_ANO_N_DEZEMBRO_MAX_MIN,

                       @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_1_JANEIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_1_FEVEREIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_1_MARCO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_1_ABRIL"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_1_MAIO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_1_JUNHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_1_JULHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_1_AGOSTO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_1_SETEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_1_OUTUBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_1_NOVEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_1_DEZEMBRO"])))
                             );
    var Balanco_ResumidoComp_Eixo_min_princ= Math.min(  IND_AUTOM_FINANC_ANO_N_JANEIRO_MAX_MIN,
                       IND_AUTOM_FINANC_ANO_N_FEVEREIRO_MAX_MIN,
                       IND_AUTOM_FINANC_ANO_N_MARCO_MAX_MIN,
                       IND_AUTOM_FINANC_ANO_N_ABRIL_MAX_MIN,
                       IND_AUTOM_FINANC_ANO_N_MAIO_MAX_MIN,
                       IND_AUTOM_FINANC_ANO_N_JUNHO_MAX_MIN,
                       IND_AUTOM_FINANC_ANO_N_JULHO_MAX_MIN,
                       IND_AUTOM_FINANC_ANO_N_AGOSTO_MAX_MIN,
                       IND_AUTOM_FINANC_ANO_N_SETEMBRO_MAX_MIN,
                       IND_AUTOM_FINANC_ANO_N_OUTUBRO_MAX_MIN,
                       IND_AUTOM_FINANC_ANO_N_NOVEMBRO_MAX_MIN,
                       IND_AUTOM_FINANC_ANO_N_DEZEMBRO_MAX_MIN,

                           @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_1_JANEIRO"]))),
                           @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_1_FEVEREIRO"]))),
                           @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_1_MARCO"]))),
                           @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_1_ABRIL"]))),
                           @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_1_MAIO"]))),
                           @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_1_JUNHO"]))),
                           @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_1_JULHO"]))),
                           @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_1_AGOSTO"]))),
                           @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_1_SETEMBRO"]))),
                           @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_1_OUTUBRO"]))),
                           @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_1_NOVEMBRO"]))),
                           @Html.Raw((string.Format("{0:0}", @ViewData["IND_AUTOM_FINANC_ANO_N_1_DEZEMBRO"])))
                           );
    var Balanco_ResumidoComp_Eixo_max_secon= Math.max(
                       ACTIVO_TOTAL_ANO_N_JANEIRO_MAX_MIN,
                       ACTIVO_TOTAL_ANO_N_FEVEREIRO_MAX_MIN ,
                       ACTIVO_TOTAL_ANO_N_MARCO_MAX_MIN ,
                       ACTIVO_TOTAL_ANO_N_ABRIL_MAX_MIN ,
                       ACTIVO_TOTAL_ANO_N_MAIO_MAX_MIN ,
                       ACTIVO_TOTAL_ANO_N_JUNHO_MAX_MIN ,
                       ACTIVO_TOTAL_ANO_N_JULHO_MAX_MIN ,
                       ACTIVO_TOTAL_ANO_N_AGOSTO_MAX_MIN ,
                       ACTIVO_TOTAL_ANO_N_SETEMBRO_MAX_MIN ,
                       ACTIVO_TOTAL_ANO_N_OUTUBRO_MAX_MIN ,
                       ACTIVO_TOTAL_ANO_N_NOVEMBRO_MAX_MIN ,
                       ACTIVO_TOTAL_ANO_N_DEZEMBRO_MAX_MIN ,



                            @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_DEZEMBRO"])))

                            );
    var Balanco_ResumidoComp_Eixo_min_secon= Math.min(
                       ACTIVO_TOTAL_ANO_N_JANEIRO_MAX_MIN ,
                       ACTIVO_TOTAL_ANO_N_FEVEREIRO_MAX_MIN ,
                       ACTIVO_TOTAL_ANO_N_MARCO_MAX_MIN ,
                       ACTIVO_TOTAL_ANO_N_ABRIL_MAX_MIN ,
                       ACTIVO_TOTAL_ANO_N_MAIO_MAX_MIN ,
                       ACTIVO_TOTAL_ANO_N_JUNHO_MAX_MIN ,
                       ACTIVO_TOTAL_ANO_N_JULHO_MAX_MIN ,
                       ACTIVO_TOTAL_ANO_N_AGOSTO_MAX_MIN ,
                       ACTIVO_TOTAL_ANO_N_SETEMBRO_MAX_MIN ,
                       ACTIVO_TOTAL_ANO_N_OUTUBRO_MAX_MIN ,
                       ACTIVO_TOTAL_ANO_N_NOVEMBRO_MAX_MIN ,
                       ACTIVO_TOTAL_ANO_N_DEZEMBRO_MAX_MIN ,


                           @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_DEZEMBRO"])))

                          );

    //NOTA TA: Aqui trato o minimo e o maximo do eixo principal
    if(Math.abs(Balanco_ResumidoComp_Eixo_max_princ)>=Math.abs(Balanco_ResumidoComp_Eixo_min_princ))
    {
        var Balanco_ResumidoComp_Eixo_max_princ_=(Math.ceil(Balanco_ResumidoComp_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(Balanco_ResumidoComp_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(Balanco_ResumidoComp_Eixo_max_princ),0).toString().length-1);
        var Balanco_ResumidoComp_Eixo_min_princ_= (Math.floor(Balanco_ResumidoComp_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(Balanco_ResumidoComp_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(Balanco_ResumidoComp_Eixo_max_princ),0).toString().length-1);
        //alert(Balanco_ResumidoComp_Eixo_max_princ_);
        //alert(Balanco_ResumidoComp_Eixo_min_princ_);
    }
    else
    {
        var Balanco_ResumidoComp_Eixo_max_princ_=(Math.ceil(Balanco_ResumidoComp_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(Balanco_ResumidoComp_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(Balanco_ResumidoComp_Eixo_min_princ),0).toString().length-1);
        var Balanco_ResumidoComp_Eixo_min_princ_= (Math.floor(Balanco_ResumidoComp_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(Balanco_ResumidoComp_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(Balanco_ResumidoComp_Eixo_min_princ),0).toString().length-1);}

    //NOTA TA: Aqui trato o minimo e o maximo do eixo secundario

    if(Math.abs(Balanco_ResumidoComp_Eixo_max_secon)>=Math.abs(Balanco_ResumidoComp_Eixo_min_secon))
    {
        var Balanco_ResumidoComp_Eixo_max_secon_=(Math.ceil(Balanco_ResumidoComp_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(Balanco_ResumidoComp_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(Balanco_ResumidoComp_Eixo_max_secon),0).toString().length-1);
        var Balanco_ResumidoComp_Eixo_min_secon_= (Math.floor(Balanco_ResumidoComp_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(Balanco_ResumidoComp_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(Balanco_ResumidoComp_Eixo_max_secon),0).toString().length-1);
        //alert(Balanco_ResumidoComp_Eixo_max_secon_);
        //alert(Balanco_ResumidoComp_Eixo_min_secon_);
    }
    else
    {
        var Balanco_ResumidoComp_Eixo_max_secon_=(Math.ceil(Balanco_ResumidoComp_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(Balanco_ResumidoComp_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(Balanco_ResumidoComp_Eixo_min_secon),0).toString().length-1);
        var Balanco_ResumidoComp_Eixo_min_secon_= (Math.floor(Balanco_ResumidoComp_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(Balanco_ResumidoComp_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(Balanco_ResumidoComp_Eixo_min_secon),0).toString().length-1);}


    if(Math.abs(Balanco_ResumidoComp_Eixo_min_princ)/Math.abs(Balanco_ResumidoComp_Eixo_max_princ)>=Math.abs(Balanco_ResumidoComp_Eixo_min_secon)/Math.abs(Balanco_ResumidoComp_Eixo_max_secon))
    { if(Balanco_ResumidoComp_Eixo_max_princ > 0 && Balanco_ResumidoComp_Eixo_min_princ <0 ){ var Balanco_ResumidoComp_Eixo_min_secon__=(Balanco_ResumidoComp_Eixo_min_princ_*Balanco_ResumidoComp_Eixo_max_secon_)/Balanco_ResumidoComp_Eixo_max_princ_;} else { var Balanco_ResumidoComp_Eixo_min_secon__=Balanco_ResumidoComp_Eixo_min_secon_;}
        if(Balanco_ResumidoComp_Eixo_max_secon > 0 && Balanco_ResumidoComp_Eixo_min_secon <0 ){ var Balanco_ResumidoComp_Eixo_min_princ__=(Balanco_ResumidoComp_Eixo_min_secon__*Balanco_ResumidoComp_Eixo_max_princ_)/Balanco_ResumidoComp_Eixo_max_secon_;} else { var Balanco_ResumidoComp_Eixo_min_princ__=Balanco_ResumidoComp_Eixo_min_princ_;}}
    else
    {if(Balanco_ResumidoComp_Eixo_max_secon > 0 && Balanco_ResumidoComp_Eixo_min_secon <0 ){ var Balanco_ResumidoComp_Eixo_min_princ__=(Balanco_ResumidoComp_Eixo_min_secon_*Balanco_ResumidoComp_Eixo_max_princ_)/Balanco_ResumidoComp_Eixo_max_secon_;} else { var Balanco_ResumidoComp_Eixo_min_princ__=Balanco_ResumidoComp_Eixo_min_princ_;}
        if(Balanco_ResumidoComp_Eixo_max_princ > 0 && Balanco_ResumidoComp_Eixo_min_princ <0 ){ var Balanco_ResumidoComp_Eixo_min_secon__=(Balanco_ResumidoComp_Eixo_min_princ__*Balanco_ResumidoComp_Eixo_max_secon_)/Balanco_ResumidoComp_Eixo_max_princ_;} else { var Balanco_ResumidoComp_Eixo_min_secon__=Balanco_ResumidoComp_Eixo_min_secon_;}
    }



    if(Math.abs(Balanco_ResumidoComp_Eixo_max_princ)/Math.abs(Balanco_ResumidoComp_Eixo_min_princ)>=Math.abs(Balanco_ResumidoComp_Eixo_max_secon)/Math.abs(Balanco_ResumidoComp_Eixo_min_secon))
    { if(Balanco_ResumidoComp_Eixo_min_princ > 0 && Balanco_ResumidoComp_Eixo_max_princ <0 ){ var Balanco_ResumidoComp_Eixo_max_secon__=(Balanco_ResumidoComp_Eixo_max_princ_*Balanco_ResumidoComp_Eixo_min_secon_)/Balanco_ResumidoComp_Eixo_min_princ_;} else { var Balanco_ResumidoComp_Eixo_max_secon__=Balanco_ResumidoComp_Eixo_max_secon_;}
        if(Balanco_ResumidoComp_Eixo_min_secon > 0 && Balanco_ResumidoComp_Eixo_max_secon <0 ){ var Balanco_ResumidoComp_Eixo_max_princ__=(Balanco_ResumidoComp_Eixo_max_secon__*Balanco_ResumidoComp_Eixo_min_princ_)/Balanco_ResumidoComp_Eixo_min_secon_;} else { var Balanco_ResumidoComp_Eixo_max_princ__=Balanco_ResumidoComp_Eixo_max_princ_;}}
    else
    {if(Balanco_ResumidoComp_Eixo_min_secon > 0 && Balanco_ResumidoComp_Eixo_max_secon <0 ){ var Balanco_ResumidoComp_Eixo_max_princ__=(Balanco_ResumidoComp_Eixo_max_secon_*Balanco_ResumidoComp_Eixo_min_princ_)/Balanco_ResumidoComp_Eixo_min_secon_;} else { var Balanco_ResumidoComp_Eixo_max_princ__=Balanco_ResumidoComp_Eixo_max_princ_;}
        if(Balanco_ResumidoComp_Eixo_min_princ > 0 && Balanco_ResumidoComp_Eixo_max_princ <0 ){ var Balanco_ResumidoComp_Eixo_max_secon__=(Balanco_ResumidoComp_Eixo_max_princ__*Balanco_ResumidoComp_Eixo_min_secon_)/Balanco_ResumidoComp_Eixo_min_princ_;} else { var Balanco_ResumidoComp_Eixo_max_secon__=Balanco_ResumidoComp_Eixo_max_secon_;}
    }


    var GRAFICO_BALANCO_RESUMIDOCOMP_COMP=document.getElementById('GRAFICO_BALANCO_RESUMIDOCOMP_COMP').getContext('2d');

    var GRAFICO_BALANCO_RESUMIDOCOMP_COMP=new Chart(GRAFICO_BALANCO_RESUMIDOCOMP_COMP, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
                                    {
                                        label:  'Auton ' + ANO_VERSAO_REAL_,

                                        yAxisID: 'A',
                                        //backgroundColor: 'rgb(255, 255, 255)',
                                        borderColor: 'rgb(204,102,0)',
                                        data: [
                                       IND_AUTOM_FINANC_ANO_N_JANEIRO ,
                                       IND_AUTOM_FINANC_ANO_N_FEVEREIRO ,
                                       IND_AUTOM_FINANC_ANO_N_MARCO ,
                                       IND_AUTOM_FINANC_ANO_N_ABRIL ,
                                       IND_AUTOM_FINANC_ANO_N_MAIO ,
                                       IND_AUTOM_FINANC_ANO_N_JUNHO ,
                                       IND_AUTOM_FINANC_ANO_N_JULHO ,
                                       IND_AUTOM_FINANC_ANO_N_AGOSTO ,
                                       IND_AUTOM_FINANC_ANO_N_SETEMBRO ,
                                       IND_AUTOM_FINANC_ANO_N_OUTUBRO ,
                                       IND_AUTOM_FINANC_ANO_N_NOVEMBRO ,
                                       IND_AUTOM_FINANC_ANO_N_DEZEMBRO ,
                                        ],
                                        type: 'line'


                                    },
                {
                    label:  'Ativ ' + ANO_VERSAO_REAL_,
                    yAxisID: 'B',
                    backgroundColor: 'rgb(238, 173, 0)',
                    borderColor: 'rgb(238, 173, 0)',
                    data: [
                   ACTIVO_TOTAL_ANO_N_JANEIRO ,
                   ACTIVO_TOTAL_ANO_N_FEVEREIRO ,
                   ACTIVO_TOTAL_ANO_N_MARCO ,
                   ACTIVO_TOTAL_ANO_N_ABRIL ,
                   ACTIVO_TOTAL_ANO_N_MAIO ,
                   ACTIVO_TOTAL_ANO_N_JUNHO ,
                   ACTIVO_TOTAL_ANO_N_JULHO ,
                   ACTIVO_TOTAL_ANO_N_AGOSTO ,
                   ACTIVO_TOTAL_ANO_N_SETEMBRO ,
                   ACTIVO_TOTAL_ANO_N_OUTUBRO ,
                   ACTIVO_TOTAL_ANO_N_NOVEMBRO ,
                   ACTIVO_TOTAL_ANO_N_DEZEMBRO ,
                    ],
                    type: 'bar'


                },
                {
                    label: 'Ativ ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(135, 191 , 97, 0.7)',
                    borderColor:  'rgba(135, 191 , 97, 0.7)',
                    data: [
                         @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_JANEIRO"]))),
                        @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_FEVEREIRO"]))),
                        @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_MARCO"]))),
                        @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_ABRIL"]))),
                        @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_MAIO"]))),
                        @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_JUNHO"]))),
                        @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_JULHO"]))),
                        @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_AGOSTO"]))),
                        @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_SETEMBRO"]))),
                        @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_OUTUBRO"]))),
                        @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_NOVEMBRO"]))),
                        @Html.Raw((string.Format("{0:0}", @ViewData["ACTIVO_TOTAL_ANO_N_1_DEZEMBRO"]))),


                    ],
                },
            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'ACTIVO_TOTAL e DEM. RESULT.',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [

                    { id: 'A',
                        type: 'linear',
                        position: 'left',
                        ticks: {
                            min: Math.round(Balanco_ResumidoComp_Eixo_min_princ__,0),
                            max:  Math.round(Balanco_ResumidoComp_Eixo_max_princ__,0),
                            beginAtZero: false,
                            callback: function(value, index, values) {
                                return value.toLocaleString()+ "%";
                            }
                        }
                    },



                {    id: 'B',
                    type: 'linear',
                    position: 'right',
                    ticks: {
                        min: Math.round(Balanco_ResumidoComp_Eixo_min_secon__,0),
                        max:  Math.round(Balanco_ResumidoComp_Eixo_max_secon__,0),
                        beginAtZero: false,
                        callback: function(value, index, values) {
                            return value.toLocaleString();
                        }
                    }
                }



                ]
            }
        },

    });



                         @*---------------------------------MONSTAR/OCULTAR LINHAS DE CONFIGURAÇÃO DE INTERVALOS DE MESES DA TABELA----------------------------------------------------------*@
            var grid_mes_ini_ano_n = document.getElementById("grid_mes_ini_ano_n");
            var grid_mes_ini_ano_n_1 = document.getElementById("grid_mes_ini_ano_n-1");
            var grid_mes_fin_ano_n = document.getElementById("grid_mes_fin_ano_n");
            var grid_mes_fin_ano_n_1 = document.getElementById("grid_mes_fin_ano_n-1");
            var grid_mes_acum_ano_n = document.getElementById("grid_mes_acum_ano_n");
            var grid_mes_acum_ano_n_1 = document.getElementById("grid_mes_acum_ano_n-1");

            $(".oculta_na_impressao").hide();
            $(function () {
                $("#Mostrar").click(function () {
                    //$("#grid00").show();
                    if (userAgent.search(/(android|avantgo|blackberry|bolt|boost|cricket|docomo|fone|hiptop|mini|mobi|palm|phone|pie|tablet|up\.browser|up\.link|webos|wos)/i) != -1) {
                        if ($("#BALANCO_COMP_wrapper tr.oculta_na_impressao ").is(":visible") == false) { $("#BALANCO_COMP_wrapper tr.oculta_na_impressao").show(); $("#BALANCO_COMP tr.oculta_na_impressao").hide(); } else { $("#BALANCO_COMP_wrapper tr.oculta_na_impressao").hide(); };

                        var linha_1 = $(".dataTables_scrollHeadInner").html().replace("height: 0px; display: table-row;", "display: table-row;");
                        $(".dataTables_scrollHeadInner").html(linha_1);
                        var linha_2 = $(".DTFC_LeftHeadWrapper").html().replace("height: 0px; display: table-row;", "display: table-row;");
                        $(".DTFC_LeftHeadWrapper").html(linha_2);
                        var linha_1_celula = $(".dataTables_scrollHeadInner").html().replace("height: 0px; display: table-row;", "display: table-row;");
                        $(".dataTables_scrollHeadInner").html(linha_1_celula);
                        var linha_2_celula = $(".DTFC_LeftHeadWrapper").html().replace("height: 0px; display: table-row;", "display: table-row;");
                        $(".DTFC_LeftHeadWrapper").html(linha_2_celula);



                    } else { if ($("#BALANCO_COMP_wrapper tr.oculta_na_impressao ").is(":visible") == false) { $("#BALANCO_COMP tr.oculta_na_impressao").show(); } else { $("#BALANCO_COMP tr.oculta_na_impressao").hide(); }; }
                    if ($("#BALANCO_COMP_wrapper").find("#grid_mes_ini_ano_n_td").is(':empty') == true) {
                        $("#BALANCO_COMP_wrapper").find("#grid_mes_ini_ano_n_td").html(grid_mes_ini_ano_n);
                        $("#BALANCO_COMP_wrapper").find("#grid_mes_ini_ano_n-1_td").html(grid_mes_ini_ano_n_1);
                        $("#BALANCO_COMP_wrapper").find("#grid_mes_fin_ano_n_td").html(grid_mes_fin_ano_n);
                        $("#BALANCO_COMP_wrapper").find("#grid_mes_fin_ano_n-1_td").html(grid_mes_fin_ano_n_1);
                        $("#BALANCO_COMP_wrapper").find("#grid_mes_acum_ano_n_td").html(grid_mes_acum_ano_n);
                        $("#BALANCO_COMP_wrapper").find("#grid_mes_acum_ano_n-1_td").html(grid_mes_acum_ano_n_1);
                        $("#BALANCO_COMP_wrapper div.oculta_na_impressao_").show();
                    }

                });

                $("div.oculta_na_impressao_").hide();





            });



           @*------------------------------OCUTO CABEÇALHOS DE GRELHA-------------------------------------------------------------*@
            //$("#grid th").find('"a[href*=' + "'" + "ID" + "&'" + ']"').parent().addClass('id');
            //$("#grid th").find('"a[href*=' + "'" + "id_camp_calc" + "&'" + ']"').parent().addClass('id_camp_calc');
            //$("#grid th").find('"a[href*=' + "'" + "desc_camp_calc" + "&'" + ']"').parent().addClass('desc_camp_calc');
            ////$("#grid th").find('"a[href*=' + "'" + "campocalc_resultado" + "&'" + ']"').parent().addClass('campocalc_resultado');

            //$("#grid ").find(".id").hide();
            //$("#grid ").find(".id_camp_calc").hide();
            //$("#grid ").find(".desc_camp_calc").hide();
            //var alt_Valor_da_Variavel = $("#grid th").parent().html().replace('Valor da Variavel', 'Mês');
            //$("#grid th").parent().html(alt_Valor_da_Variavel)

            //--------------------------------TRATO os CAMPOS de SELECCAO DO MÊS--------------------------


            //$(" .campocalc_resultado ").click(function () {

            //    //alert("teste");
            //    if ($(this).children().attr('class') != "input") {
            //        var id = $(this).parent().find(".id").html();
            //        var idconteudoOriginal = $(this).parent().parent().parent().parent().parent().attr('id');
            //        //var findidconteudoOriginal = '.' + idconteudoOriginal + '';


            //        var conteudoOriginal = $(this).text();



            //        var ReplaceHrefID = $("#GRAVAROPER_DIRXX form").html();



            //        $(this).html("<input class='input' value='" + conteudoOriginal + "'/>");
            //        $(this).children().first().focus();

            //    }


            //    // NOTA TA: Keypress significa que a instrução é cumprida quando o utilizador faz "enter"
            //    $(this).children().first().keypress(function (e) {
            //        if (e.which == 13) {

            //            if ($(this).parent().parent().parent().parent().find('.GRAVAR').text() == "") {
            //                $(this).parent().parent().parent().parent().prepend(ReplaceHrefID);
            //            }
            //            else { $(this).parent().parent().parent().parent().find('.GRAVAR').html(ReplaceHrefID) }


            //            //NOTA TA: Aqui re-faço a href do botão com todos os campos preenchidos de origem
            //            var ValorInicial_id_camp = id;
            //            var ReplaceHref_id_camp = $(this).parent().parent().parent().parent().find('.GRAVAR').html().replace('id_camp=id_camp', 'id_camp' + '=' + ValorInicial_id_camp);
            //            $(this).parent().parent().parent().parent().find('.GRAVAR').html(ReplaceHref_id_camp);


            //            var hrefalterar1 = $(this).parent().parent().parent().parent().find('.GRAVAR').html();

            //            var valor = $(this).val()
            //            if ($(this).val() == "" ||  $(this).val() <= 0 || $(this).val() >=13 || valor != parseInt(valor, 10)) {
            //                var novoConteudo = conteudoOriginal;
            //                alert("Por favor, Insira um Valor de 1 a 12.")
            //            }
            //            else {
            //                var novoConteudo = $(this).val();
            //            }




            //            $(this).parent().text(novoConteudo);
            //            $(this).parent().removeClass("celulaEmEdicao");


            //            var ReplaceHref1 = hrefalterar1.replace('campocalc_resultado=campocalc_resultado', 'campocalc_resultado' + '=' + novoConteudo);

            //            $('#' + idconteudoOriginal).find('.GRAVAR').html(ReplaceHref1);


            //            //-------------------INICIO: ACRESCENTEI para evitar passo debotão GRAVAR----
            //            var href_alt = document.querySelector('#' + idconteudoOriginal+ ' .GRAVAR a').href
            //            var href_alt_ = href_alt.replace('"','').replace('amp;','').replace('amp;','')

            //            var x = document.getElementsByClassName("GRAVAR");
            //            var i;
            //            for (i = 0; i < x.length; i++) {
            //                x[i].style.display = "none";

            //            }

            //            //alert(ReplaceHref1);

            //            window.location.href = href_alt_

                        //-------------------FIM: ACRESCENTEI para evitar passo debotão GRAVAR----
            //                              }

            //    });


            //})


             @*--------------------------Aqui trato o Botão para configuração do Campo-----------------------------------------------------------------*@




            $(".webgrid-table td").click(function () {
                var idconteudoOriginal = $(this).attr('itemid');
                var versaoconteudoOriginal = $(this).attr('itemref');

                 //alert(idconteudoOriginal);
                if (typeof idconteudoOriginal === "undefined")
             { }
             else {
                    var ReplaceHrefID = $("#CONFIGURARXX form").html().replace('id_camp_calc=id_camp_calc', 'id_camp_calc' + '=' + idconteudoOriginal).replace('versao=versao', 'versao' + '=' + versaoconteudoOriginal);
                    if ($(this).find('.CONFIGURAR_CAMPO').text() == "") {
                        $(this).prepend(ReplaceHrefID);
             }
             }

                 //alert($(this).find('.CONFIGURAR_CAMPO').text());
             })

        })


            //------------------ NOTA TA: INICIO DE TRATAMENTO DE TABELA COM DATATABLE-------------------


            var userAgent = navigator.userAgent.toLowerCase();
            if (userAgent.search(/(android|avantgo|blackberry|bolt|boost|cricket|docomo|fone|hiptop|mini|mobi|palm|phone|pie|tablet|up\.browser|up\.link|webos|wos)/i) != -1) {
                var table = $('#BALANCO_COMP').DataTable({
                    aaSorting: [],
                    columnDefs: [
                      { orderable: false, targets: '_all' }
                    ],
                    scrollY: "800px",
                    scrollX: true,
                    scrollCollapse: true,
                    paging: false,

                    fixedColumns: {
                        leftColumns: 1

                    },
                    buttons: [
                            'copy', 'csv', 'print',
                     {
                         extend: 'pdfHtml5',
                         orientation: 'landscape',
                         pageSize: 'LEGAL'
                     },

                    {
                        extend: 'excelHtml5',
                        customize: function (xlsx) {
                            var sheet = xlsx.xl.worksheets['sheet1.xml'];
                            //nota ta: exemplo de como pintar coluna a melhorar
                            //$('row c[r^="A"]', sheet).each( function () {
                            // $(this).attr( 's', '15' );});
                        }
                    }
                    ],

                });
                $('#btnExport1').attr('style', 'display:block');
            }

                //--------------NOTA TA: SE NÃO FOR MOBILE DOU UM TRATENTO DIFERENTE-------


            else {
                var table = $('#BALANCO_COMP').DataTable({
                    aaSorting: [],
                    dom: 'Bfrtip',
                    columnDefs: [
                    { orderable: false, targets: '_all' }
                    ],
                    paging: false,
                    responsive: false,
                    fixedHeader: true,

                    // scrollY:        "800",
                    // scrollX:        true,
                    //scrollCollapse: true,
                    //paging:         false,
                    //fixedColumns:   {
                    //    leftColumns: 1,
                    //    rightColumns: 1
                    //},





                    buttons: [
                        'copy', 'csv', 'print',
                    {
                        extend: 'pdfHtml5',
                        orientation: 'landscape',
                        pageSize: 'LEGAL'
                    },

                    {
                        extend: 'excelHtml5',
                        customize: function (xlsx) {
                            var sheet = xlsx.xl.worksheets['sheet1.xml'];
                            //nota ta: exemplo de como pintar coluna a melhorar
                            //$('row c[r^="A"]', sheet).each( function () {
                            // $(this).attr( 's', '15' );});
                        }
                    }
                    ],



                });

                //NOTA TA: AQUI DEVERIA CONSEGUIR FIXAR O HEADER, MAS NÃO ESTOU A CONSEGUIR... A MELHORAR
                //new $.fn.dataTable.FixedHeader(table);
            }

            $(".DTFC_LeftBodyWrapper").css("top", "10px");
            $('button').addClass('btn-blue');

            //------------------ NOTA TA: FIM DE TRATAMENTO DE TABELA COM DATATABLE-------------------



    </script>


    @*-----------------------------NOTA TA: INICIO DE EXTRAIR PARA EXCEL E HTML ---------------------------------------------------------*@

    <script type="text/javascript">
            function fnExcelReport(table, name) {
                var table1 = '#' + table
                var ccs_style = $("#ccs_style").html();
                var styletabela = $(table1).attr("class");
                var indexOf_Ini_styletabela = $("#ccs_style").html().indexOf(styletabela)
                var indexOf_Fim_styletabela = ccs_style.substring(indexOf_Ini_styletabela, 999999999999).indexOf("}");
                var ccs_style_tabela = ccs_style.substring(indexOf_Ini_styletabela, 999999999999).substring(0, indexOf_Fim_styletabela).replace("{", "").replace(styletabela, "");


                var tab_text = "<table style=" + "'" + ccs_style_tabela + "'" + "><tr>";
                var textRange; var j = 0; var i = 0;
                tab = document.getElementById(table); // id of table



                for (j = 0 ; j < tab.rows.length ; j++) {
                    var tab_rows = tab.rows[j].innerHTML;
                    for (i = 0 ; i < tab.rows[j].cells.length ; i++) {

                        var texto_linha = tab_rows;
                        var style_celula_ini = texto_linha.indexOf('class="');
                        var style_celula_fim = texto_linha.substring(style_celula_ini, 999999999999).replace('class="', '').indexOf('"');
                        var style_celula = texto_linha.substring(style_celula_ini, 999999999999).replace('class="', '').substring(0, style_celula_fim);

                        var indexOf_Ini_styletabela = $("#ccs_style").html().indexOf(style_celula)
                        var indexOf_Fim_styletabela = ccs_style.substring(indexOf_Ini_styletabela, 999999999999).indexOf("}");
                        var ccs_style_tabela = ccs_style.substring(indexOf_Ini_styletabela, 999999999999).substring(0, indexOf_Fim_styletabela).replace("{", "").replace(style_celula, "");

                        tab_rows = tab_rows.replace('class="' + style_celula + '"', 'style="' + ccs_style_tabela + '"')

                    }

                    tab_text = tab_text + tab_rows + "</tr>";
                    //tab_text=tab_text+"</tr>";
                }

                tab_text = tab_text + "</table>";
                tab_text = tab_text.split('&nbsp;').join('.');
                tab_text = tab_text.replace(/<A[^>]*>|<\/A>/g, "");//remove if u want links in your table
                tab_text = tab_text.replace(/<img[^>]*>/gi, ""); // remove if u want images in your table
                tab_text = tab_text.replace(/<input[^>]*>|<\/input>/gi, ""); // reomves input params

                var ua = window.navigator.userAgent;
                var msie = ua.indexOf("MSIE ");

                if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\:11\./))      // If Internet Explorer
                {
                    txtArea1.document.open("txt/html", "replace");
                    txtArea1.document.write(tab_text);
                    txtArea1.document.close();
                    txtArea1.focus();
                    sa = txtArea1.document.execCommand("SaveAs", true, "Transferir.xls");

                    return (sa);
                }
                else                 //other browser not tested on IE 11

                 sa = window.open('data:application/vnd.ms-excel,' + encodeURIComponent(tab_text));

                return (sa);


            }
    </script>

    @*-----------------------------NOTA TA: FIM DE EXTRAIR PARA EXCEL E HTML ---------------------------------------------------------*@
}



