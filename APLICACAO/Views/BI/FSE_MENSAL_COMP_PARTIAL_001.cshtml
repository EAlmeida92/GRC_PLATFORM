


<style id="ccs_style" type="text/css">
    .webgrid-table {
        font-family: "Trebuchet MS", Arial, Helvetica, sans-serif;
        font-size: 13px;
        width: 100%;
        display: table;
        border: solid 1px #FFFFFF;
        background-color: white;
        text-align: right;
    }

        .webgrid-table td, th {
            border: solid 1px #FFFFFF;
            padding: 3px 7px 2px;
            text-align: right;
        }

    .webgrid-header {
        padding: 6px 5px;
        text-align: center;
        background-color: #e8eef4;
        border-bottom: 2px solid #A4A4A4;
        height: 40px;
    }

    .webgrid-footer {
    }

    .webgrid-row-style {
        text-align: right;
        padding: 3px 7px 2px;
    }

    .webgrid-rubrica {
        text-align: right;
        background-color: #EAF2D3;
        padding: 3px 7px 2px;
    }

    .webgrid-total {
        text-align: right;
        background-color: #EAF2D3;
        padding: 3px 7px 2px;
    }

    .webgrid-selected-row {
        text-align: right;
        border: solid 1px #FFFFFF;
        padding: 3px 7px 2px;
    }

    .Webgrid_col_data {
        text-align: center;
    }

    .input {
        width: 50px;
        height: 25px;
        text-align: justify;
        background-color: #EAF2D3;
        padding: 3px 4px 2px;
        text-overflow: clip;
    }

    .GRAVAR {
        font-family: "Trebuchet MS", Arial, Helvetica, sans-serif;
        font-size: 15px;
        color: #eaf2d3;
        background-color: #d2d4f1;
    }

    .campocalc_resultado {
        background-color: #E3DFFF;
        text-align: center;
    }

    /*.oculta_na_impressao {
        height: 30px;
    }*/

    .titulos_mapas {
        background-color: #7F7F7F;
        text-align: center;
        color: #FFFFFF;
        vertical-align: middle;
        font-size: 22px;
        font-weight: bold;
    }

    .page-breaker {
        display: block;
        clear: both;
        page-break-after: always;
    }
</style>

@{
    var ANO_VERSAO_REAL = @ViewData["ANO_VERSAO_REAL"];
    var ANO_VERSAO_ANTE = @ViewData["ANO_VERSAO_ANTE"];
    var MES_ACUM_REAL = @ViewData["MES_ACUM_REAL"];
    var MES_ACUM_ANTE = @ViewData["MES_ACUM_ANTE"];
    var MES_INI_PER_REAL = @ViewData["MES_INI_PER_REAL"];
    var MES_INI_PER_ANTE = @ViewData["MES_INI_PER_ANTE"];
    var MES_FIN_PER_REAL = @ViewData["MES_FIN_PER_REAL"];
    var MES_FIN_PER_ANTE = @ViewData["MES_FIN_PER_ANTE"];
}


@if (@ViewData["FSE_SUBCONTRATOS_REAL_ACUM"].Equals("calc")) {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_002"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_003" style="display:none"></canvas>}
else
{
    if ((Convert.ToDecimal(@ViewData["FSE_SUBCONTRATOS_REAL_ACUM"])) == 0) {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_002"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_003" style="display:none"></canvas>}
    else
    {  <table class="graficos_textos">
        <tr class="quebra"> <td class="titulos_mapas" colspan="2"> Subcontratos </td> </tr>
        <tr>
            <td style="width:50%">
                <p>
                    Os Subcontratos, em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])) atingiram o valor de
                    @if (@ViewData["FSE_SUBCONTRATOS_REAL_ACUM"].Equals("calc"))
                    { <text>calc.</text> }
                    else
                    { @Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_SUBCONTRATOS_REAL_ACUM"])))))} €,
                    sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiram o valor de
                    @if (@ViewData["FSE_SUBCONTRATOS_ANTE_ACUM"].Equals("calc"))
                    { <text>calc.</text> }
                    else
                    {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_SUBCONTRATOS_ANTE_ACUM"])))))} €,
                    verificando-se @if (@ViewData["FSE_SUBCONTRATOS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_SUBCONTRATOS_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToDecimal(@ViewData["FSE_SUBCONTRATOS_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_SUBCONTRATOS_ANTE_ACUM"])))
                        {  <text> um crescimento de </text> ;
                        }
                        else
                        {  <text> uma diminuição de </text>  ;
                        }
                    }
                    @if (@ViewData["FSE_SUBCONTRATOS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_SUBCONTRATOS_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToInt32(@ViewData["FSE_SUBCONTRATOS_ANTE_ACUM"])).Equals(0))
                        {<text> 0 %</text>  }
                        else
                        {
                            decimal FSE_SUBCONTRATOS_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_SUBCONTRATOS_REAL_ACUM"]); decimal FSE_SUBCONTRATOS_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_SUBCONTRATOS_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((FSE_SUBCONTRATOS_REAL_ACUM - FSE_SUBCONTRATOS_ANTE_ACUM) / Math.Abs(FSE_SUBCONTRATOS_ANTE_ACUM)) * 100))) <text>%</text>}
                    }.
                </p>
                <p>
                    No mesmo período a Variação do Volume de Negócios (inclui Variação de Produção) foi de
                    @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0))
                        {<text> 0 %</text>  }
                        else
                        {
                            decimal IND_VN_REAL_ACUM = Convert.ToInt32(@ViewData["IND_VN_REAL_ACUM"]); decimal IND_VN_ANTE_ACUM = Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((IND_VN_REAL_ACUM - IND_VN_ANTE_ACUM) / Math.Abs(IND_VN_ANTE_ACUM)) * 100))) <text>%</text>}
                    }.
                    @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") || @ViewData["FSE_SUBCONTRATOS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_SUBCONTRATOS_ANTE_ACUM"].Equals("calc") || Convert.ToDecimal(@ViewData["FSE_SUBCONTRATOS_ANTE_ACUM"]).Equals(0) || Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]).Equals(0))
                    { <text></text> }
                    else
                    {
                        if (((Convert.ToDecimal(@ViewData["FSE_SUBCONTRATOS_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["FSE_SUBCONTRATOS_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["FSE_SUBCONTRATOS_ANTE_ACUM"]))) * 100 >= ((Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))) * 100)
                        {  <text>Sendo a variação dos Subcontratos superior à variação do Volume de Negócios verifica-se uma perda relativa de Rentabilidade Operacional </text> ;
                        }
                        else
                        {  <text>Sendo a variação dos Subcontratos inferior à variação do Volume de Negócios verifica-se um ganho relativo de Rentabilidade Operacional </text> ;
                        }
                    }.
                </p>
            </td>
            <td style="width:50%">
                <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_002"></canvas>
            </td>
        </tr>
        <tr>
            <td style="width:50%">
                <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_003"></canvas>
            </td>
            <td style="width:50%">
                O Peso dos Subcontratos no Volume de Negócios (VN: inclui variação de Produção), em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])), atingiu o valor de
                @if (@ViewData["FSE_SUBCONTRATOS_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc"))
                { <text>calc.</text>  }
                else
                {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_SUBCONTRATOS_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) * 100)))} %
                sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiu o valor de
                @if (@ViewData["FSE_SUBCONTRATOS_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>calc.</text>  }
                else
                {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_SUBCONTRATOS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) * 100)))} %,
                verificando-se @if (@ViewData["FSE_SUBCONTRATOS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_SUBCONTRATOS_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>    -</text>  }
                else
                {
                    if ((Convert.ToDecimal(@ViewData["FSE_SUBCONTRATOS_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_SUBCONTRATOS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])))
                    {  <text> uma diminuição de eficiência </text> ;
                    }
                    else
                    {  <text> um aumento de eficiência de </text>  ;
                    }
                }
                @if (@ViewData["FSE_SUBCONTRATOS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_SUBCONTRATOS_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>    -</text>  }
                else
                {
                    if ((Convert.ToDecimal(@ViewData["FSE_SUBCONTRATOS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0))
                    {<text> 0 %</text>  }
                    else
                    {
                        decimal PESO_FSE_SUBCONTRATOS_VN_REAL_ACUM = Convert.ToDecimal(@ViewData["FSE_SUBCONTRATOS_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]); decimal PESO_FSE_SUBCONTRATOS_VN_ANTE_ACUM = Convert.ToDecimal(@ViewData["FSE_SUBCONTRATOS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((PESO_FSE_SUBCONTRATOS_VN_REAL_ACUM - PESO_FSE_SUBCONTRATOS_VN_ANTE_ACUM)) * 100 * -1))) <text>%</text>}
                }.
            </td>

        </tr>


    </table> }
}  @if (@ViewData["FSE_TRAB_ESPECIAL_REAL_ACUM"].Equals("calc")) {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_004"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_005" style="display:none"></canvas>}
else
{
    if ((Convert.ToDecimal(@ViewData["FSE_TRAB_ESPECIAL_REAL_ACUM"])) == 0) {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_004"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_005" style="display:none"></canvas>}
    else
    { <div class="page-breaker"></div>
    <table class="graficos_textos">
        <tr> <td class="titulos_mapas" colspan="2"> Trabalhos Especializados </td> </tr>
        <tr>
            <td style="width:50%">
                <p>
                    Os Trabalhos Especializados, em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])) atingiram o valor de
                    @if (@ViewData["FSE_TRAB_ESPECIAL_REAL_ACUM"].Equals("calc"))
                    { <text>calc.</text> }
                    else
                    { @Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_TRAB_ESPECIAL_REAL_ACUM"])))))} €,
                    sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiram o valor de
                    @if (@ViewData["FSE_TRAB_ESPECIAL_ANTE_ACUM"].Equals("calc"))
                    { <text>calc.</text> }
                    else
                    {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_TRAB_ESPECIAL_ANTE_ACUM"])))))} €,
                    verificando-se @if (@ViewData["FSE_TRAB_ESPECIAL_REAL_ACUM"].Equals("calc") || @ViewData["FSE_TRAB_ESPECIAL_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToDecimal(@ViewData["FSE_TRAB_ESPECIAL_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_TRAB_ESPECIAL_ANTE_ACUM"])))
                        {  <text> um crescimento de </text> ;
                        }
                        else
                        {  <text> uma diminuição de </text>  ;
                        }
                    }
                    @if (@ViewData["FSE_TRAB_ESPECIAL_REAL_ACUM"].Equals("calc") || @ViewData["FSE_TRAB_ESPECIAL_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToInt32(@ViewData["FSE_TRAB_ESPECIAL_ANTE_ACUM"])).Equals(0))
                        {<text> 0 %</text>  }
                        else
                        {
                            decimal FSE_TRAB_ESPECIAL_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_TRAB_ESPECIAL_REAL_ACUM"]); decimal FSE_TRAB_ESPECIAL_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_TRAB_ESPECIAL_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((FSE_TRAB_ESPECIAL_REAL_ACUM - FSE_TRAB_ESPECIAL_ANTE_ACUM) / Math.Abs(FSE_TRAB_ESPECIAL_ANTE_ACUM)) * 100))) <text>%</text>}
                    }.
                </p>
                <p>
                    No mesmo período a Variação do Volume de Negócios (inclui Variação de Produção) foi de
                    @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0))
                        {<text> 0 %</text>  }
                        else
                        {
                            decimal IND_VN_REAL_ACUM = Convert.ToInt32(@ViewData["IND_VN_REAL_ACUM"]); decimal IND_VN_ANTE_ACUM = Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((IND_VN_REAL_ACUM - IND_VN_ANTE_ACUM) / Math.Abs(IND_VN_ANTE_ACUM)) * 100))) <text>%</text>}
                    }.
                    @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") || @ViewData["FSE_TRAB_ESPECIAL_REAL_ACUM"].Equals("calc") || @ViewData["FSE_TRAB_ESPECIAL_ANTE_ACUM"].Equals("calc") || Convert.ToDecimal(@ViewData["FSE_TRAB_ESPECIAL_ANTE_ACUM"]).Equals(0) || Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]).Equals(0))
                    { <text></text> }
                    else
                    {
                        if (((Convert.ToDecimal(@ViewData["FSE_TRAB_ESPECIAL_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["FSE_TRAB_ESPECIAL_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["FSE_TRAB_ESPECIAL_ANTE_ACUM"]))) * 100 >= ((Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))) * 100)
                        {  <text>Sendo a variação dos Trabalhos Especializados superior à variação do Volume de Negócios verifica-se uma perda relativa de Rentabilidade Operacional </text> ;
                        }
                        else
                        {  <text>Sendo a variação dos Trabalhos Especializados inferior à variação do Volume de Negócios verifica-se um ganho relativo de Rentabilidade Operacional </text> ;
                        }
                    }.
                </p>
            </td>
            <td style="width:50%">
                <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_004"></canvas>
            </td>
        </tr>
        <tr>
            <td style="width:50%">
                <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_005"></canvas>
            </td>
            <td style="width:50%">
                O Peso dos Trabalhos Especializados no Volume de Negócios (VN: inclui variação de Produção), em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])), atingiu o valor de
                @if (@ViewData["FSE_TRAB_ESPECIAL_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc"))
                { <text>calc.</text>  }
                else
                {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_TRAB_ESPECIAL_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) * 100)))} %
                sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiu o valor de
                @if (@ViewData["FSE_TRAB_ESPECIAL_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>calc.</text>  }
                else
                {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_TRAB_ESPECIAL_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) * 100)))} %,
                verificando-se @if (@ViewData["FSE_TRAB_ESPECIAL_REAL_ACUM"].Equals("calc") || @ViewData["FSE_TRAB_ESPECIAL_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>    -</text>  }
                else
                {
                    if ((Convert.ToDecimal(@ViewData["FSE_TRAB_ESPECIAL_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_TRAB_ESPECIAL_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])))
                    {  <text> uma diminuição de eficiência </text> ;
                    }
                    else
                    {  <text> um aumento de eficiência de </text>  ;
                    }
                }
                @if (@ViewData["FSE_TRAB_ESPECIAL_REAL_ACUM"].Equals("calc") || @ViewData["FSE_TRAB_ESPECIAL_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>    -</text>  }
                else
                {
                    if ((Convert.ToDecimal(@ViewData["FSE_TRAB_ESPECIAL_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0))
                    {<text> 0 %</text>  }
                    else
                    {
                        decimal PESO_FSE_TRAB_ESPECIAL_VN_REAL_ACUM = Convert.ToDecimal(@ViewData["FSE_TRAB_ESPECIAL_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]); decimal PESO_FSE_TRAB_ESPECIAL_VN_ANTE_ACUM = Convert.ToDecimal(@ViewData["FSE_TRAB_ESPECIAL_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((PESO_FSE_TRAB_ESPECIAL_VN_REAL_ACUM - PESO_FSE_TRAB_ESPECIAL_VN_ANTE_ACUM)) * 100 * -1))) <text>%</text>}
                }.
            </td>

        </tr>
    </table> }
}  @if (@ViewData["FSE_PUB_PROPAG_REAL_ACUM"].Equals("calc")) {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_006"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_007" style="display:none"></canvas>}
else
{
    if ((Convert.ToDecimal(@ViewData["FSE_PUB_PROPAG_REAL_ACUM"])) == 0) {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_006"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_007" style="display:none"></canvas>}
    else
    { <div class="page-breaker"></div>
    <table class="graficos_textos">
        <tr> <td class="titulos_mapas" colspan="2"> Publicidade e Propaganda </td> </tr>
        <tr>
            <td style="width:50%">
                <p>
                    A Publicidade e Propaganda, em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])) atingiram o valor de
                    @if (@ViewData["FSE_PUB_PROPAG_REAL_ACUM"].Equals("calc"))
                    { <text>calc.</text> }
                    else
                    { @Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_PUB_PROPAG_REAL_ACUM"])))))} €,
                    sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiram o valor de
                    @if (@ViewData["FSE_PUB_PROPAG_ANTE_ACUM"].Equals("calc"))
                    { <text>calc.</text> }
                    else
                    {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_PUB_PROPAG_ANTE_ACUM"])))))} €,
                    verificando-se @if (@ViewData["FSE_PUB_PROPAG_REAL_ACUM"].Equals("calc") || @ViewData["FSE_PUB_PROPAG_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToDecimal(@ViewData["FSE_PUB_PROPAG_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_PUB_PROPAG_ANTE_ACUM"])))
                        {  <text> um crescimento de </text> ;
                        }
                        else
                        {  <text> uma diminuição de </text>  ;
                        }
                    }
                    @if (@ViewData["FSE_PUB_PROPAG_REAL_ACUM"].Equals("calc") || @ViewData["FSE_PUB_PROPAG_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToInt32(@ViewData["FSE_PUB_PROPAG_ANTE_ACUM"])).Equals(0))
                        {<text> 0 %</text>  }
                        else
                        {
                            decimal FSE_PUB_PROPAG_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_PUB_PROPAG_REAL_ACUM"]); decimal FSE_PUB_PROPAG_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_PUB_PROPAG_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((FSE_PUB_PROPAG_REAL_ACUM - FSE_PUB_PROPAG_ANTE_ACUM) / Math.Abs(FSE_PUB_PROPAG_ANTE_ACUM)) * 100))) <text>%</text>}
                    }.
                </p>
                <p>
                    No mesmo período a Variação do Volume de Negócios (inclui Variação de Produção) foi de
                    @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0))
                        {<text> 0 %</text>  }
                        else
                        {
                            decimal IND_VN_REAL_ACUM = Convert.ToInt32(@ViewData["IND_VN_REAL_ACUM"]); decimal IND_VN_ANTE_ACUM = Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((IND_VN_REAL_ACUM - IND_VN_ANTE_ACUM) / Math.Abs(IND_VN_ANTE_ACUM)) * 100))) <text>%</text>}
                    }.
                    @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") || @ViewData["FSE_PUB_PROPAG_REAL_ACUM"].Equals("calc") || @ViewData["FSE_PUB_PROPAG_ANTE_ACUM"].Equals("calc") || Convert.ToDecimal(@ViewData["FSE_PUB_PROPAG_ANTE_ACUM"]).Equals(0) || Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]).Equals(0))
                    { <text></text> }
                    else
                    {
                        if (((Convert.ToDecimal(@ViewData["FSE_PUB_PROPAG_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["FSE_PUB_PROPAG_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["FSE_PUB_PROPAG_ANTE_ACUM"]))) * 100 >= ((Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))) * 100)
                        {  <text>Sendo a variação da Publicidade e Propaganda superior à variação do Volume de Negócios verifica-se uma perda relativa de Rentabilidade Operacional </text> ;
                        }
                        else
                        {  <text>Sendo a variação da Publicidade e Propaganda inferior à variação do Volume de Negócios verifica-se um ganho relativo de Rentabilidade Operacional </text> ;
                        }
                    }.
                </p>
            </td>
            <td style="width:50%">
                <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_006"></canvas>
            </td>
        </tr>
        <tr>
            <td style="width:50%">
                <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_007"></canvas>
            </td>
            <td style="width:50%">
                O Peso da Publicidade e Propaganda no Volume de Negócios (VN: inclui variação de Produção), em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])), atingiu o valor de
                @if (@ViewData["FSE_PUB_PROPAG_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc"))
                { <text>calc.</text>  }
                else
                {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_PUB_PROPAG_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) * 100)))} %
                sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiu o valor de
                @if (@ViewData["FSE_PUB_PROPAG_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>calc.</text>  }
                else
                {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_PUB_PROPAG_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) * 100)))} %,
                verificando-se @if (@ViewData["FSE_PUB_PROPAG_REAL_ACUM"].Equals("calc") || @ViewData["FSE_PUB_PROPAG_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>    -</text>  }
                else
                {
                    if ((Convert.ToDecimal(@ViewData["FSE_PUB_PROPAG_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_PUB_PROPAG_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])))
                    {  <text> uma diminuição de eficiência </text> ;
                    }
                    else
                    {  <text> um aumento de eficiência de </text>  ;
                    }
                }
                @if (@ViewData["FSE_PUB_PROPAG_REAL_ACUM"].Equals("calc") || @ViewData["FSE_PUB_PROPAG_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>    -</text>  }
                else
                {
                    if ((Convert.ToDecimal(@ViewData["FSE_PUB_PROPAG_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0))
                    {<text> 0 %</text>  }
                    else
                    {
                        decimal PESO_FSE_PUB_PROPAG_VN_REAL_ACUM = Convert.ToDecimal(@ViewData["FSE_PUB_PROPAG_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]); decimal PESO_FSE_PUB_PROPAG_VN_ANTE_ACUM = Convert.ToDecimal(@ViewData["FSE_PUB_PROPAG_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((PESO_FSE_PUB_PROPAG_VN_REAL_ACUM - PESO_FSE_PUB_PROPAG_VN_ANTE_ACUM)) * 100 * -1))) <text>%</text>}
                }.
            </td>

        </tr>
    </table> }
}  @if (@ViewData["FSE_VIG_SEGURANCA_REAL_ACUM"].Equals("calc")) {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_008"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_009" style="display:none"></canvas>}
else
{
    if ((Convert.ToDecimal(@ViewData["FSE_VIG_SEGURANCA_REAL_ACUM"])) == 0) {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_008"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_009" style="display:none"></canvas>}
    else
    { <div class="page-breaker"></div>
    <table class="graficos_textos">
        <tr> <td class="titulos_mapas" colspan="2"> Vigilância e Segurança </td> </tr>
        <tr>
            <td style="width:50%">
                <p>
                    A Vigilância e Segurança, em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])) atingiram o valor de
                    @if (@ViewData["FSE_VIG_SEGURANCA_REAL_ACUM"].Equals("calc"))
                    { <text>calc.</text> }
                    else
                    { @Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_VIG_SEGURANCA_REAL_ACUM"])))))} €,
                    sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiram o valor de
                    @if (@ViewData["FSE_VIG_SEGURANCA_ANTE_ACUM"].Equals("calc"))
                    { <text>calc.</text> }
                    else
                    {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_VIG_SEGURANCA_ANTE_ACUM"])))))} €,
                    verificando-se @if (@ViewData["FSE_VIG_SEGURANCA_REAL_ACUM"].Equals("calc") || @ViewData["FSE_VIG_SEGURANCA_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToDecimal(@ViewData["FSE_VIG_SEGURANCA_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_VIG_SEGURANCA_ANTE_ACUM"])))
                        {  <text> um crescimento de </text> ;
                        }
                        else
                        {  <text> uma diminuição de </text>  ;
                        }
                    }
                    @if (@ViewData["FSE_VIG_SEGURANCA_REAL_ACUM"].Equals("calc") || @ViewData["FSE_VIG_SEGURANCA_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToInt32(@ViewData["FSE_VIG_SEGURANCA_ANTE_ACUM"])).Equals(0))
                        {<text> 0 %</text>  }
                        else
                        {
                            decimal FSE_VIG_SEGURANCA_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_VIG_SEGURANCA_REAL_ACUM"]); decimal FSE_VIG_SEGURANCA_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_VIG_SEGURANCA_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((FSE_VIG_SEGURANCA_REAL_ACUM - FSE_VIG_SEGURANCA_ANTE_ACUM) / Math.Abs(FSE_VIG_SEGURANCA_ANTE_ACUM)) * 100))) <text>%</text>}
                    }.
                </p>
                <p>
                    No mesmo período a Variação do Volume de Negócios (inclui Variação de Produção) foi de
                    @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0))
                        {<text> 0 %</text>  }
                        else
                        {
                            decimal IND_VN_REAL_ACUM = Convert.ToInt32(@ViewData["IND_VN_REAL_ACUM"]); decimal IND_VN_ANTE_ACUM = Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((IND_VN_REAL_ACUM - IND_VN_ANTE_ACUM) / Math.Abs(IND_VN_ANTE_ACUM)) * 100))) <text>%</text>}
                    }.
                    @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") || @ViewData["FSE_VIG_SEGURANCA_REAL_ACUM"].Equals("calc") || @ViewData["FSE_VIG_SEGURANCA_ANTE_ACUM"].Equals("calc") || Convert.ToDecimal(@ViewData["FSE_VIG_SEGURANCA_ANTE_ACUM"]).Equals(0) || Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]).Equals(0))
                    { <text></text> }
                    else
                    {
                        if (((Convert.ToDecimal(@ViewData["FSE_VIG_SEGURANCA_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["FSE_VIG_SEGURANCA_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["FSE_VIG_SEGURANCA_ANTE_ACUM"]))) * 100 >= ((Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))) * 100)
                        {  <text>Sendo a variação da Vigilância e Segurança superior à variação do Volume de Negócios verifica-se uma perda relativa de Rentabilidade Operacional </text> ;
                        }
                        else
                        {  <text>Sendo a variação da Vigilância e Segurança inferior à variação do Volume de Negócios verifica-se um ganho relativo de Rentabilidade Operacional </text> ;
                        }
                    }.
                </p>
            </td>
            <td style="width:50%">
                <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_008"></canvas>
            </td>
        </tr>
        <tr>
            <td style="width:50%">
                <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_009"></canvas>
            </td>
            <td style="width:50%">
                O Peso da Vigilância e Segurança no Volume de Negócios (VN: inclui variação de Produção), em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])), atingiu o valor de
                @if (@ViewData["FSE_VIG_SEGURANCA_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc"))
                { <text>calc.</text>  }
                else
                {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_VIG_SEGURANCA_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) * 100)))} %
                sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiu o valor de
                @if (@ViewData["FSE_VIG_SEGURANCA_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>calc.</text>  }
                else
                {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_VIG_SEGURANCA_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) * 100)))} %,
                verificando-se @if (@ViewData["FSE_VIG_SEGURANCA_REAL_ACUM"].Equals("calc") || @ViewData["FSE_VIG_SEGURANCA_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>    -</text>  }
                else
                {
                    if ((Convert.ToDecimal(@ViewData["FSE_VIG_SEGURANCA_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_VIG_SEGURANCA_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])))
                    {  <text> uma diminuição de eficiência </text> ;
                    }
                    else
                    {  <text> um aumento de eficiência de </text>  ;
                    }
                }
                @if (@ViewData["FSE_VIG_SEGURANCA_REAL_ACUM"].Equals("calc") || @ViewData["FSE_VIG_SEGURANCA_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>    -</text>  }
                else
                {
                    if ((Convert.ToDecimal(@ViewData["FSE_VIG_SEGURANCA_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0))
                    {<text> 0 %</text>  }
                    else
                    {
                        decimal PESO_FSE_VIG_SEGURANCA_VN_REAL_ACUM = Convert.ToDecimal(@ViewData["FSE_VIG_SEGURANCA_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]); decimal PESO_FSE_VIG_SEGURANCA_VN_ANTE_ACUM = Convert.ToDecimal(@ViewData["FSE_VIG_SEGURANCA_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((PESO_FSE_VIG_SEGURANCA_VN_REAL_ACUM - PESO_FSE_VIG_SEGURANCA_VN_ANTE_ACUM)) * 100 * -1))) <text>%</text>}
                }.
            </td>

        </tr>
    </table> }
}  @if (@ViewData["FSE_HONORARIOS_REAL_ACUM"].Equals("calc")) {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_010"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_011" style="display:none"></canvas>}
else
{
    if ((Convert.ToDecimal(@ViewData["FSE_HONORARIOS_REAL_ACUM"])) == 0) {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_010"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_011" style="display:none"></canvas>}
    else
    { <div class="page-breaker"></div>
    <table class="graficos_textos">
        <tr> <td class="titulos_mapas" colspan="2"> Honorários </td> </tr>
        <tr>
            <td style="width:50%">
                <p>
                    Os Honorários, em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])) atingiram o valor de
                    @if (@ViewData["FSE_HONORARIOS_REAL_ACUM"].Equals("calc"))
                    { <text>calc.</text> }
                    else
                    { @Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_HONORARIOS_REAL_ACUM"])))))} €,
                    sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiram o valor de
                    @if (@ViewData["FSE_HONORARIOS_ANTE_ACUM"].Equals("calc"))
                    { <text>calc.</text> }
                    else
                    {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_HONORARIOS_ANTE_ACUM"])))))} €,
                    verificando-se @if (@ViewData["FSE_HONORARIOS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_HONORARIOS_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToDecimal(@ViewData["FSE_HONORARIOS_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_HONORARIOS_ANTE_ACUM"])))
                        {  <text> um crescimento de </text> ;
                        }
                        else
                        {  <text> uma diminuição de </text>  ;
                        }
                    }
                    @if (@ViewData["FSE_HONORARIOS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_HONORARIOS_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToInt32(@ViewData["FSE_HONORARIOS_ANTE_ACUM"])).Equals(0))
                        {<text> 0 %</text>  }
                        else
                        {
                            decimal FSE_HONORARIOS_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_HONORARIOS_REAL_ACUM"]); decimal FSE_HONORARIOS_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_HONORARIOS_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((FSE_HONORARIOS_REAL_ACUM - FSE_HONORARIOS_ANTE_ACUM) / Math.Abs(FSE_HONORARIOS_ANTE_ACUM)) * 100))) <text>%</text>}
                    }.
                </p>
                <p>
                    No mesmo período a Variação do Volume de Negócios (inclui Variação de Produção) foi de
                    @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0))
                        {<text> 0 %</text>  }
                        else
                        {
                            decimal IND_VN_REAL_ACUM = Convert.ToInt32(@ViewData["IND_VN_REAL_ACUM"]); decimal IND_VN_ANTE_ACUM = Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((IND_VN_REAL_ACUM - IND_VN_ANTE_ACUM) / Math.Abs(IND_VN_ANTE_ACUM)) * 100))) <text>%</text>}
                    }.
                    @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") || @ViewData["FSE_HONORARIOS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_HONORARIOS_ANTE_ACUM"].Equals("calc") || Convert.ToDecimal(@ViewData["FSE_HONORARIOS_ANTE_ACUM"]).Equals(0) || Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]).Equals(0))
                    { <text></text> }
                    else
                    {
                        if (((Convert.ToDecimal(@ViewData["FSE_HONORARIOS_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["FSE_HONORARIOS_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["FSE_HONORARIOS_ANTE_ACUM"]))) * 100 >= ((Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))) * 100)
                        {  <text>Sendo a variação dos Honorários superior à variação do Volume de Negócios verifica-se uma perda relativa de Rentabilidade Operacional </text> ;
                        }
                        else
                        {  <text>Sendo a variação dos Honorários inferior à variação do Volume de Negócios verifica-se um ganho relativo de Rentabilidade Operacional </text> ;
                        }
                    }.
                </p>
            </td>
            <td style="width:50%">
                <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_010"></canvas>
            </td>
        </tr>
        <tr>
            <td style="width:50%">
                <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_011"></canvas>
            </td>
            <td style="width:50%">
                O Peso dos Honorários no Volume de Negócios (VN: inclui variação de Produção), em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])), atingiu o valor de
                @if (@ViewData["FSE_HONORARIOS_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc"))
                { <text>calc.</text>  }
                else
                {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_HONORARIOS_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) * 100)))} %
                sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiu o valor de
                @if (@ViewData["FSE_HONORARIOS_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>calc.</text>  }
                else
                {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_HONORARIOS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) * 100)))} %,
                verificando-se @if (@ViewData["FSE_HONORARIOS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_HONORARIOS_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>    -</text>  }
                else
                {
                    if ((Convert.ToDecimal(@ViewData["FSE_HONORARIOS_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_HONORARIOS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])))
                    {  <text> uma diminuição de eficiência </text> ;
                    }
                    else
                    {  <text> um aumento de eficiência de </text>  ;
                    }
                }
                @if (@ViewData["FSE_HONORARIOS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_HONORARIOS_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>    -</text>  }
                else
                {
                    if ((Convert.ToDecimal(@ViewData["FSE_HONORARIOS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0))
                    {<text> 0 %</text>  }
                    else
                    {
                        decimal PESO_FSE_HONORARIOS_VN_REAL_ACUM = Convert.ToDecimal(@ViewData["FSE_HONORARIOS_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]); decimal PESO_FSE_HONORARIOS_VN_ANTE_ACUM = Convert.ToDecimal(@ViewData["FSE_HONORARIOS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((PESO_FSE_HONORARIOS_VN_REAL_ACUM - PESO_FSE_HONORARIOS_VN_ANTE_ACUM)) * 100 * -1))) <text>%</text>}
                }.
            </td>

        </tr>
    </table> }
}  @if (@ViewData["FSE_COMISSOES_REAL_ACUM"].Equals("calc")) {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_012"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_013" style="display:none"></canvas>}
else
{
    if ((Convert.ToDecimal(@ViewData["FSE_COMISSOES_REAL_ACUM"])) == 0) {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_012"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_013" style="display:none"></canvas>}
    else
    { <div class="page-breaker"></div>
    <table class="graficos_textos">
        <tr> <td class="titulos_mapas" colspan="2"> Comissões </td> </tr>
        <tr>
            <td style="width:50%">
                <p>
                    As Comissões, em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])) atingiram o valor de
                    @if (@ViewData["FSE_COMISSOES_REAL_ACUM"].Equals("calc"))
                    { <text>calc.</text> }
                    else
                    { @Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_COMISSOES_REAL_ACUM"])))))} €,
                    sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiram o valor de
                    @if (@ViewData["FSE_COMISSOES_ANTE_ACUM"].Equals("calc"))
                    { <text>calc.</text> }
                    else
                    {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_COMISSOES_ANTE_ACUM"])))))} €,
                    verificando-se @if (@ViewData["FSE_COMISSOES_REAL_ACUM"].Equals("calc") || @ViewData["FSE_COMISSOES_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToDecimal(@ViewData["FSE_COMISSOES_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_COMISSOES_ANTE_ACUM"])))
                        {  <text> um crescimento de </text> ;
                        }
                        else
                        {  <text> uma diminuição de </text>  ;
                        }
                    }
                    @if (@ViewData["FSE_COMISSOES_REAL_ACUM"].Equals("calc") || @ViewData["FSE_COMISSOES_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToInt32(@ViewData["FSE_COMISSOES_ANTE_ACUM"])).Equals(0))
                        {<text> 0 %</text>  }
                        else
                        {
                            decimal FSE_COMISSOES_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_COMISSOES_REAL_ACUM"]); decimal FSE_COMISSOES_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_COMISSOES_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((FSE_COMISSOES_REAL_ACUM - FSE_COMISSOES_ANTE_ACUM) / Math.Abs(FSE_COMISSOES_ANTE_ACUM)) * 100))) <text>%</text>}
                    }.
                </p>
                <p>
                    No mesmo período a Variação do Volume de Negócios (inclui Variação de Produção) foi de
                    @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0))
                        {<text> 0 %</text>  }
                        else
                        {
                            decimal IND_VN_REAL_ACUM = Convert.ToInt32(@ViewData["IND_VN_REAL_ACUM"]); decimal IND_VN_ANTE_ACUM = Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((IND_VN_REAL_ACUM - IND_VN_ANTE_ACUM) / Math.Abs(IND_VN_ANTE_ACUM)) * 100))) <text>%</text>}
                    }.
                    @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") || @ViewData["FSE_COMISSOES_REAL_ACUM"].Equals("calc") || @ViewData["FSE_COMISSOES_ANTE_ACUM"].Equals("calc") || Convert.ToDecimal(@ViewData["FSE_COMISSOES_ANTE_ACUM"]).Equals(0) || Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]).Equals(0))
                    { <text></text> }
                    else
                    {
                        if (((Convert.ToDecimal(@ViewData["FSE_COMISSOES_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["FSE_COMISSOES_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["FSE_COMISSOES_ANTE_ACUM"]))) * 100 >= ((Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))) * 100)
                        {  <text>Sendo a variação das Comissões superior à variação do Volume de Negócios verifica-se uma perda relativa de Rentabilidade Operacional </text> ;
                        }
                        else
                        {  <text>Sendo a variação das Comissões inferior à variação do Volume de Negócios verifica-se um ganho relativo de Rentabilidade Operacional </text> ;
                        }
                    }.
                </p>
            </td>
            <td style="width:50%">
                <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_012"></canvas>
            </td>
        </tr>
        <tr>
            <td style="width:50%">
                <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_013"></canvas>
            </td>
            <td style="width:50%">
                O Peso das Comissões no Volume de Negócios (VN: inclui variação de Produção), em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])), atingiu o valor de
                @if (@ViewData["FSE_COMISSOES_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc"))
                { <text>calc.</text>  }
                else
                {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_COMISSOES_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) * 100)))} %
                sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiu o valor de
                @if (@ViewData["FSE_COMISSOES_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>calc.</text>  }
                else
                {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_COMISSOES_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) * 100)))} %,
                verificando-se @if (@ViewData["FSE_COMISSOES_REAL_ACUM"].Equals("calc") || @ViewData["FSE_COMISSOES_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>    -</text>  }
                else
                {
                    if ((Convert.ToDecimal(@ViewData["FSE_COMISSOES_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_COMISSOES_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])))
                    {  <text> uma diminuição de eficiência </text> ;
                    }
                    else
                    {  <text> um aumento de eficiência de </text>  ;
                    }
                }
                @if (@ViewData["FSE_COMISSOES_REAL_ACUM"].Equals("calc") || @ViewData["FSE_COMISSOES_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>    -</text>  }
                else
                {
                    if ((Convert.ToDecimal(@ViewData["FSE_COMISSOES_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0))
                    {<text> 0 %</text>  }
                    else
                    {
                        decimal PESO_FSE_COMISSOES_VN_REAL_ACUM = Convert.ToDecimal(@ViewData["FSE_COMISSOES_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]); decimal PESO_FSE_COMISSOES_VN_ANTE_ACUM = Convert.ToDecimal(@ViewData["FSE_COMISSOES_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((PESO_FSE_COMISSOES_VN_REAL_ACUM - PESO_FSE_COMISSOES_VN_ANTE_ACUM)) * 100 * -1))) <text>%</text>}
                }.
            </td>

        </tr>
    </table> }
}  @if (@ViewData["FSE_CONSERV_REPAR_REAL_ACUM"].Equals("calc")) {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_014"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_015" style="display:none"></canvas>}
else
{
    if ((Convert.ToDecimal(@ViewData["FSE_CONSERV_REPAR_REAL_ACUM"])) == 0) {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_014"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_015" style="display:none"></canvas>}
    else
    { <div class="page-breaker"></div>
    <table class="graficos_textos">
        <tr> <td class="titulos_mapas" colspan="2"> Conservação Reperação </td> </tr>
        <tr>
            <td style="width:50%">
                <p>
                    A Conservação Reperação, em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])) atingiram o valor de
                    @if (@ViewData["FSE_CONSERV_REPAR_REAL_ACUM"].Equals("calc"))
                    { <text>calc.</text> }
                    else
                    { @Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_CONSERV_REPAR_REAL_ACUM"])))))} €,
                    sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiram o valor de
                    @if (@ViewData["FSE_CONSERV_REPAR_ANTE_ACUM"].Equals("calc"))
                    { <text>calc.</text> }
                    else
                    {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_CONSERV_REPAR_ANTE_ACUM"])))))} €,
                    verificando-se @if (@ViewData["FSE_CONSERV_REPAR_REAL_ACUM"].Equals("calc") || @ViewData["FSE_CONSERV_REPAR_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToDecimal(@ViewData["FSE_CONSERV_REPAR_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_CONSERV_REPAR_ANTE_ACUM"])))
                        {  <text> um crescimento de </text> ;
                        }
                        else
                        {  <text> uma diminuição de </text>  ;
                        }
                    }
                    @if (@ViewData["FSE_CONSERV_REPAR_REAL_ACUM"].Equals("calc") || @ViewData["FSE_CONSERV_REPAR_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToInt32(@ViewData["FSE_CONSERV_REPAR_ANTE_ACUM"])).Equals(0))
                        {<text> 0 %</text>  }
                        else
                        {
                            decimal FSE_CONSERV_REPAR_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_CONSERV_REPAR_REAL_ACUM"]); decimal FSE_CONSERV_REPAR_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_CONSERV_REPAR_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((FSE_CONSERV_REPAR_REAL_ACUM - FSE_CONSERV_REPAR_ANTE_ACUM) / Math.Abs(FSE_CONSERV_REPAR_ANTE_ACUM)) * 100))) <text>%</text>}
                    }.
                </p>
                <p>
                    No mesmo período a Variação do Volume de Negócios (inclui Variação de Produção) foi de
                    @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0))
                        {<text> 0 %</text>  }
                        else
                        {
                            decimal IND_VN_REAL_ACUM = Convert.ToInt32(@ViewData["IND_VN_REAL_ACUM"]); decimal IND_VN_ANTE_ACUM = Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((IND_VN_REAL_ACUM - IND_VN_ANTE_ACUM) / Math.Abs(IND_VN_ANTE_ACUM)) * 100))) <text>%</text>}
                    }.
                    @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") || @ViewData["FSE_CONSERV_REPAR_REAL_ACUM"].Equals("calc") || @ViewData["FSE_CONSERV_REPAR_ANTE_ACUM"].Equals("calc") || Convert.ToDecimal(@ViewData["FSE_CONSERV_REPAR_ANTE_ACUM"]).Equals(0) || Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]).Equals(0))
                    { <text></text> }
                    else
                    {
                        if (((Convert.ToDecimal(@ViewData["FSE_CONSERV_REPAR_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["FSE_CONSERV_REPAR_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["FSE_CONSERV_REPAR_ANTE_ACUM"]))) * 100 >= ((Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))) * 100)
                        {  <text>Sendo a variação da Conservação Reperação superior à variação do Volume de Negócios verifica-se uma perda relativa de Rentabilidade Operacional </text> ;
                        }
                        else
                        {  <text>Sendo a variação da Conservação Reperação inferior à variação do Volume de Negócios verifica-se um ganho relativo de Rentabilidade Operacional </text> ;
                        }
                    }.
                </p>
            </td>
            <td style="width:50%">
                <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_014"></canvas>
            </td>
        </tr>
        <tr>
            <td style="width:50%">
                <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_015"></canvas>
            </td>
            <td style="width:50%">
                O Peso da Conservação Reperação no Volume de Negócios (VN: inclui variação de Produção), em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])), atingiu o valor de
                @if (@ViewData["FSE_CONSERV_REPAR_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc"))
                { <text>calc.</text>  }
                else
                {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_CONSERV_REPAR_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) * 100)))} %
                sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiu o valor de
                @if (@ViewData["FSE_CONSERV_REPAR_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>calc.</text>  }
                else
                {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_CONSERV_REPAR_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) * 100)))} %,
                verificando-se @if (@ViewData["FSE_CONSERV_REPAR_REAL_ACUM"].Equals("calc") || @ViewData["FSE_CONSERV_REPAR_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>    -</text>  }
                else
                {
                    if ((Convert.ToDecimal(@ViewData["FSE_CONSERV_REPAR_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_CONSERV_REPAR_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])))
                    {  <text> uma diminuição de eficiência </text> ;
                    }
                    else
                    {  <text> um aumento de eficiência de </text>  ;
                    }
                }
                @if (@ViewData["FSE_CONSERV_REPAR_REAL_ACUM"].Equals("calc") || @ViewData["FSE_CONSERV_REPAR_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>    -</text>  }
                else
                {
                    if ((Convert.ToDecimal(@ViewData["FSE_CONSERV_REPAR_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0))
                    {<text> 0 %</text>  }
                    else
                    {
                        decimal PESO_FSE_CONSERV_REPAR_VN_REAL_ACUM = Convert.ToDecimal(@ViewData["FSE_CONSERV_REPAR_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]); decimal PESO_FSE_CONSERV_REPAR_VN_ANTE_ACUM = Convert.ToDecimal(@ViewData["FSE_CONSERV_REPAR_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((PESO_FSE_CONSERV_REPAR_VN_REAL_ACUM - PESO_FSE_CONSERV_REPAR_VN_ANTE_ACUM)) * 100 * -1))) <text>%</text>}
                }.
            </td>

        </tr>
    </table> }
}  @if (@ViewData["FSE_OUTROS_SERV_ESPECIAL_REAL_ACUM"].Equals("calc")) {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_016"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_017" style="display:none"></canvas>}
else
{
    if ((Convert.ToDecimal(@ViewData["FSE_OUTROS_SERV_ESPECIAL_REAL_ACUM"])) == 0) {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_016"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_017" style="display:none"></canvas>}
    else
    { <div class="page-breaker"></div>
    <table class="graficos_textos">
        <tr> <td class="titulos_mapas" colspan="2"> Outros de Serviços Especializados </td> </tr>
        <tr>
            <td style="width:50%">
                <p>
                    Os Outros de Serviços Especializados, em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])) atingiram o valor de
                    @if (@ViewData["FSE_OUTROS_SERV_ESPECIAL_REAL_ACUM"].Equals("calc"))
                    { <text>calc.</text> }
                    else
                    { @Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_OUTROS_SERV_ESPECIAL_REAL_ACUM"])))))} €,
                    sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiram o valor de
                    @if (@ViewData["FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM"].Equals("calc"))
                    { <text>calc.</text> }
                    else
                    {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM"])))))} €,
                    verificando-se @if (@ViewData["FSE_OUTROS_SERV_ESPECIAL_REAL_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToDecimal(@ViewData["FSE_OUTROS_SERV_ESPECIAL_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM"])))
                        {  <text> um crescimento de </text> ;
                        }
                        else
                        {  <text> uma diminuição de </text>  ;
                        }
                    }
                    @if (@ViewData["FSE_OUTROS_SERV_ESPECIAL_REAL_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToInt32(@ViewData["FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM"])).Equals(0))
                        {<text> 0 %</text>  }
                        else
                        {
                            decimal FSE_OUTROS_SERV_ESPECIAL_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_OUTROS_SERV_ESPECIAL_REAL_ACUM"]); decimal FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((FSE_OUTROS_SERV_ESPECIAL_REAL_ACUM - FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM) / Math.Abs(FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM)) * 100))) <text>%</text>}
                    }.
                </p>
                <p>
                    No mesmo período a Variação do Volume de Negócios (inclui Variação de Produção) foi de
                    @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0))
                        {<text> 0 %</text>  }
                        else
                        {
                            decimal IND_VN_REAL_ACUM = Convert.ToInt32(@ViewData["IND_VN_REAL_ACUM"]); decimal IND_VN_ANTE_ACUM = Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((IND_VN_REAL_ACUM - IND_VN_ANTE_ACUM) / Math.Abs(IND_VN_ANTE_ACUM)) * 100))) <text>%</text>}
                    }.
                    @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_SERV_ESPECIAL_REAL_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM"].Equals("calc") || Convert.ToDecimal(@ViewData["FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM"]).Equals(0) || Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]).Equals(0))
                    { <text></text> }
                    else
                    {
                        if (((Convert.ToDecimal(@ViewData["FSE_OUTROS_SERV_ESPECIAL_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM"]))) * 100 >= ((Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))) * 100)
                        {  <text>Sendo a variação dos Outros de Serviços Especializados superior à variação do Volume de Negócios verifica-se uma perda relativa de Rentabilidade Operacional </text> ;
                        }
                        else
                        {  <text>Sendo a variação dos Outros de Serviços Especializados inferior à variação do Volume de Negócios verifica-se um ganho relativo de Rentabilidade Operacional </text> ;
                        }
                    }.
                </p>
            </td>
            <td style="width:50%">
                <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_016"></canvas>
            </td>
        </tr>
        <tr>
            <td style="width:50%">
                <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_017"></canvas>
            </td>
            <td style="width:50%">
                O Peso dos Outros de Serviços Especializados no Volume de Negócios (VN: inclui variação de Produção), em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])), atingiu o valor de
                @if (@ViewData["FSE_OUTROS_SERV_ESPECIAL_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc"))
                { <text>calc.</text>  }
                else
                {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_OUTROS_SERV_ESPECIAL_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) * 100)))} %
                sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiu o valor de
                @if (@ViewData["FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>calc.</text>  }
                else
                {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) * 100)))} %,
                verificando-se @if (@ViewData["FSE_OUTROS_SERV_ESPECIAL_REAL_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>    -</text>  }
                else
                {
                    if ((Convert.ToDecimal(@ViewData["FSE_OUTROS_SERV_ESPECIAL_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])))
                    {  <text> uma diminuição de eficiência </text> ;
                    }
                    else
                    {  <text> um aumento de eficiência de </text>  ;
                    }
                }
                @if (@ViewData["FSE_OUTROS_SERV_ESPECIAL_REAL_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>    -</text>  }
                else
                {
                    if ((Convert.ToDecimal(@ViewData["FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0))
                    {<text> 0 %</text>  }
                    else
                    {
                        decimal PESO_FSE_OUTROS_SERV_ESPECIAL_VN_REAL_ACUM = Convert.ToDecimal(@ViewData["FSE_OUTROS_SERV_ESPECIAL_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]); decimal PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANTE_ACUM = Convert.ToDecimal(@ViewData["FSE_OUTROS_SERV_ESPECIAL_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((PESO_FSE_OUTROS_SERV_ESPECIAL_VN_REAL_ACUM - PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANTE_ACUM)) * 100 * -1))) <text>%</text>}
                }.
            </td>

        </tr>
    </table> }
}  @if (@ViewData["FSE_FERRAM_UTENS_REAL_ACUM"].Equals("calc")) {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_018"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_019" style="display:none"></canvas>}
else
{
    if ((Convert.ToDecimal(@ViewData["FSE_FERRAM_UTENS_REAL_ACUM"])) == 0) {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_018"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_019" style="display:none"></canvas>}
    else
    { <div class="page-breaker"></div>
    <table class="graficos_textos">
        <tr> <td class="titulos_mapas" colspan="2"> Ferramentas e Utensílios </td> </tr>
        <tr>
            <td style="width:50%">
                <p>
                    As Ferramentas e Utensílios, em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])) atingiram o valor de
                    @if (@ViewData["FSE_FERRAM_UTENS_REAL_ACUM"].Equals("calc"))
                    { <text>calc.</text> }
                    else
                    { @Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_FERRAM_UTENS_REAL_ACUM"])))))} €,
                    sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiram o valor de
                    @if (@ViewData["FSE_FERRAM_UTENS_ANTE_ACUM"].Equals("calc"))
                    { <text>calc.</text> }
                    else
                    {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_FERRAM_UTENS_ANTE_ACUM"])))))} €,
                    verificando-se @if (@ViewData["FSE_FERRAM_UTENS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_FERRAM_UTENS_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToDecimal(@ViewData["FSE_FERRAM_UTENS_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_FERRAM_UTENS_ANTE_ACUM"])))
                        {  <text> um crescimento de </text> ;
                        }
                        else
                        {  <text> uma diminuição de </text>  ;
                        }
                    }
                    @if (@ViewData["FSE_FERRAM_UTENS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_FERRAM_UTENS_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToInt32(@ViewData["FSE_FERRAM_UTENS_ANTE_ACUM"])).Equals(0))
                        {<text> 0 %</text>  }
                        else
                        {
                            decimal FSE_FERRAM_UTENS_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_FERRAM_UTENS_REAL_ACUM"]); decimal FSE_FERRAM_UTENS_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_FERRAM_UTENS_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((FSE_FERRAM_UTENS_REAL_ACUM - FSE_FERRAM_UTENS_ANTE_ACUM) / Math.Abs(FSE_FERRAM_UTENS_ANTE_ACUM)) * 100))) <text>%</text>}
                    }.
                </p>
                <p>
                    No mesmo período a Variação do Volume de Negócios (inclui Variação de Produção) foi de
                    @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0))
                        {<text> 0 %</text>  }
                        else
                        {
                            decimal IND_VN_REAL_ACUM = Convert.ToInt32(@ViewData["IND_VN_REAL_ACUM"]); decimal IND_VN_ANTE_ACUM = Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((IND_VN_REAL_ACUM - IND_VN_ANTE_ACUM) / Math.Abs(IND_VN_ANTE_ACUM)) * 100))) <text>%</text>}
                    }.
                    @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") || @ViewData["FSE_FERRAM_UTENS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_FERRAM_UTENS_ANTE_ACUM"].Equals("calc") || Convert.ToDecimal(@ViewData["FSE_FERRAM_UTENS_ANTE_ACUM"]).Equals(0) || Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]).Equals(0))
                    { <text></text> }
                    else
                    {
                        if (((Convert.ToDecimal(@ViewData["FSE_FERRAM_UTENS_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["FSE_FERRAM_UTENS_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["FSE_FERRAM_UTENS_ANTE_ACUM"]))) * 100 >= ((Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))) * 100)
                        {  <text>Sendo a variação das Ferramentas e Utensílios superior à variação do Volume de Negócios verifica-se uma perda relativa de Rentabilidade Operacional </text> ;
                        }
                        else
                        {  <text>Sendo a variação das Ferramentas e Utensílios inferior à variação do Volume de Negócios verifica-se um ganho relativo de Rentabilidade Operacional </text> ;
                        }
                    }.
                </p>
            </td>
            <td style="width:50%">
                <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_018"></canvas>
            </td>
        </tr>
        <tr>
            <td style="width:50%">
                <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_019"></canvas>
            </td>
            <td style="width:50%">
                O Peso das Ferramentas e Utensílios no Volume de Negócios (VN: inclui variação de Produção), em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])), atingiu o valor de
                @if (@ViewData["FSE_FERRAM_UTENS_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc"))
                { <text>calc.</text>  }
                else
                {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_FERRAM_UTENS_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) * 100)))} %
                sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiu o valor de
                @if (@ViewData["FSE_FERRAM_UTENS_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>calc.</text>  }
                else
                {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_FERRAM_UTENS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) * 100)))} %,
                verificando-se @if (@ViewData["FSE_FERRAM_UTENS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_FERRAM_UTENS_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>    -</text>  }
                else
                {
                    if ((Convert.ToDecimal(@ViewData["FSE_FERRAM_UTENS_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_FERRAM_UTENS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])))
                    {  <text> uma diminuição de eficiência </text> ;
                    }
                    else
                    {  <text> um aumento de eficiência de </text>  ;
                    }
                }
                @if (@ViewData["FSE_FERRAM_UTENS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_FERRAM_UTENS_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>    -</text>  }
                else
                {
                    if ((Convert.ToDecimal(@ViewData["FSE_FERRAM_UTENS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0))
                    {<text> 0 %</text>  }
                    else
                    {
                        decimal PESO_FSE_FERRAM_UTENS_VN_REAL_ACUM = Convert.ToDecimal(@ViewData["FSE_FERRAM_UTENS_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]); decimal PESO_FSE_FERRAM_UTENS_VN_ANTE_ACUM = Convert.ToDecimal(@ViewData["FSE_FERRAM_UTENS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((PESO_FSE_FERRAM_UTENS_VN_REAL_ACUM - PESO_FSE_FERRAM_UTENS_VN_ANTE_ACUM)) * 100 * -1))) <text>%</text>}
                }.
            </td>

        </tr>

    </table> }
}  @if (@ViewData["FSE_LIVR_DOCUM_TEC_REAL_ACUM"].Equals("calc")) {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_020"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_021" style="display:none"></canvas>}
else
{
    if ((Convert.ToDecimal(@ViewData["FSE_LIVR_DOCUM_TEC_REAL_ACUM"])) == 0) {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_020"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_021" style="display:none"></canvas>}
    else
    { <div class="page-breaker"></div>
    <table class="graficos_textos">
        <tr> <td class="titulos_mapas" colspan="2"> Livros e Documentação Técnica </td> </tr>
        <tr>
            <td style="width:50%">
                <p>
                    Os Livros e Documentação Técnica, em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])) atingiram o valor de
                    @if (@ViewData["FSE_LIVR_DOCUM_TEC_REAL_ACUM"].Equals("calc"))
                    { <text>calc.</text> }
                    else
                    { @Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_LIVR_DOCUM_TEC_REAL_ACUM"])))))} €,
                    sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiram o valor de
                    @if (@ViewData["FSE_LIVR_DOCUM_TEC_ANTE_ACUM"].Equals("calc"))
                    { <text>calc.</text> }
                    else
                    {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_LIVR_DOCUM_TEC_ANTE_ACUM"])))))} €,
                    verificando-se @if (@ViewData["FSE_LIVR_DOCUM_TEC_REAL_ACUM"].Equals("calc") || @ViewData["FSE_LIVR_DOCUM_TEC_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToDecimal(@ViewData["FSE_LIVR_DOCUM_TEC_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_LIVR_DOCUM_TEC_ANTE_ACUM"])))
                        {  <text> um crescimento de </text> ;
                        }
                        else
                        {  <text> uma diminuição de </text>  ;
                        }
                    }
                    @if (@ViewData["FSE_LIVR_DOCUM_TEC_REAL_ACUM"].Equals("calc") || @ViewData["FSE_LIVR_DOCUM_TEC_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToInt32(@ViewData["FSE_LIVR_DOCUM_TEC_ANTE_ACUM"])).Equals(0))
                        {<text> 0 %</text>  }
                        else
                        {
                            decimal FSE_LIVR_DOCUM_TEC_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_LIVR_DOCUM_TEC_REAL_ACUM"]); decimal FSE_LIVR_DOCUM_TEC_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_LIVR_DOCUM_TEC_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((FSE_LIVR_DOCUM_TEC_REAL_ACUM - FSE_LIVR_DOCUM_TEC_ANTE_ACUM) / Math.Abs(FSE_LIVR_DOCUM_TEC_ANTE_ACUM)) * 100))) <text>%</text>}
                    }.
                </p>
                <p>
                    No mesmo período a Variação do Volume de Negócios (inclui Variação de Produção) foi de
                    @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0))
                        {<text> 0 %</text>  }
                        else
                        {
                            decimal IND_VN_REAL_ACUM = Convert.ToInt32(@ViewData["IND_VN_REAL_ACUM"]); decimal IND_VN_ANTE_ACUM = Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((IND_VN_REAL_ACUM - IND_VN_ANTE_ACUM) / Math.Abs(IND_VN_ANTE_ACUM)) * 100))) <text>%</text>}
                    }.
                    @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") || @ViewData["FSE_LIVR_DOCUM_TEC_REAL_ACUM"].Equals("calc") || @ViewData["FSE_LIVR_DOCUM_TEC_ANTE_ACUM"].Equals("calc") || Convert.ToDecimal(@ViewData["FSE_LIVR_DOCUM_TEC_ANTE_ACUM"]).Equals(0) || Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]).Equals(0))
                    { <text></text> }
                    else
                    {
                        if (((Convert.ToDecimal(@ViewData["FSE_LIVR_DOCUM_TEC_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["FSE_LIVR_DOCUM_TEC_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["FSE_LIVR_DOCUM_TEC_ANTE_ACUM"]))) * 100 >= ((Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))) * 100)
                        {  <text>Sendo a variação dos Livros e Documentação Técnica superior à variação do Volume de Negócios verifica-se uma perda relativa de Rentabilidade Operacional </text> ;
                        }
                        else
                        {  <text>Sendo a variação dos Livros e Documentação Técnica inferior à variação do Volume de Negócios verifica-se um ganho relativo de Rentabilidade Operacional </text> ;
                        }
                    }.
                </p>
            </td>
            <td style="width:50%">
                <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_020"></canvas>
            </td>
        </tr>
        <tr>
            <td style="width:50%">
                <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_021"></canvas>
            </td>
            <td style="width:50%">
                O Peso dos Livros e Documentação Técnica no Volume de Negócios (VN: inclui variação de Produção), em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])), atingiu o valor de
                @if (@ViewData["FSE_LIVR_DOCUM_TEC_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc"))
                { <text>calc.</text>  }
                else
                {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_LIVR_DOCUM_TEC_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) * 100)))} %
                sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiu o valor de
                @if (@ViewData["FSE_LIVR_DOCUM_TEC_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>calc.</text>  }
                else
                {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_LIVR_DOCUM_TEC_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) * 100)))} %,
                verificando-se @if (@ViewData["FSE_LIVR_DOCUM_TEC_REAL_ACUM"].Equals("calc") || @ViewData["FSE_LIVR_DOCUM_TEC_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>    -</text>  }
                else
                {
                    if ((Convert.ToDecimal(@ViewData["FSE_LIVR_DOCUM_TEC_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_LIVR_DOCUM_TEC_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])))
                    {  <text> uma diminuição de eficiência </text> ;
                    }
                    else
                    {  <text> um aumento de eficiência de </text>  ;
                    }
                }
                @if (@ViewData["FSE_LIVR_DOCUM_TEC_REAL_ACUM"].Equals("calc") || @ViewData["FSE_LIVR_DOCUM_TEC_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>    -</text>  }
                else
                {
                    if ((Convert.ToDecimal(@ViewData["FSE_LIVR_DOCUM_TEC_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0))
                    {<text> 0 %</text>  }
                    else
                    {
                        decimal PESO_FSE_LIVR_DOCUM_TEC_VN_REAL_ACUM = Convert.ToDecimal(@ViewData["FSE_LIVR_DOCUM_TEC_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]); decimal PESO_FSE_LIVR_DOCUM_TEC_VN_ANTE_ACUM = Convert.ToDecimal(@ViewData["FSE_LIVR_DOCUM_TEC_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((PESO_FSE_LIVR_DOCUM_TEC_VN_REAL_ACUM - PESO_FSE_LIVR_DOCUM_TEC_VN_ANTE_ACUM)) * 100 * -1))) <text>%</text>}
                }.
            </td>

        </tr>
    </table> }
}  @if (@ViewData["FSE_MAT_ESCRITOR_REAL_ACUM"].Equals("calc")) {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_022"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_023" style="display:none"></canvas>}
else
{
    if ((Convert.ToDecimal(@ViewData["FSE_MAT_ESCRITOR_REAL_ACUM"])) == 0) {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_022"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_023" style="display:none"></canvas>}
    else
    { <div class="page-breaker"></div>
    <table class="graficos_textos">
        <tr> <td class="titulos_mapas" colspan="2"> Material de Escritório </td> </tr>
        <tr>
            <td style="width:50%">
                <p>
                    O Material de Escritório, em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])) atingiram o valor de
                    @if (@ViewData["FSE_MAT_ESCRITOR_REAL_ACUM"].Equals("calc"))
                    { <text>calc.</text> }
                    else
                    { @Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_MAT_ESCRITOR_REAL_ACUM"])))))} €,
                    sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiram o valor de
                    @if (@ViewData["FSE_MAT_ESCRITOR_ANTE_ACUM"].Equals("calc"))
                    { <text>calc.</text> }
                    else
                    {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_MAT_ESCRITOR_ANTE_ACUM"])))))} €,
                    verificando-se @if (@ViewData["FSE_MAT_ESCRITOR_REAL_ACUM"].Equals("calc") || @ViewData["FSE_MAT_ESCRITOR_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToDecimal(@ViewData["FSE_MAT_ESCRITOR_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_MAT_ESCRITOR_ANTE_ACUM"])))
                        {  <text> um crescimento de </text> ;
                        }
                        else
                        {  <text> uma diminuição de </text>  ;
                        }
                    }
                    @if (@ViewData["FSE_MAT_ESCRITOR_REAL_ACUM"].Equals("calc") || @ViewData["FSE_MAT_ESCRITOR_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToInt32(@ViewData["FSE_MAT_ESCRITOR_ANTE_ACUM"])).Equals(0))
                        {<text> 0 %</text>  }
                        else
                        {
                            decimal FSE_MAT_ESCRITOR_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_MAT_ESCRITOR_REAL_ACUM"]); decimal FSE_MAT_ESCRITOR_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_MAT_ESCRITOR_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((FSE_MAT_ESCRITOR_REAL_ACUM - FSE_MAT_ESCRITOR_ANTE_ACUM) / Math.Abs(FSE_MAT_ESCRITOR_ANTE_ACUM)) * 100))) <text>%</text>}
                    }.
                </p>
                <p>
                    No mesmo período a Variação do Volume de Negócios (inclui Variação de Produção) foi de
                    @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0))
                        {<text> 0 %</text>  }
                        else
                        {
                            decimal IND_VN_REAL_ACUM = Convert.ToInt32(@ViewData["IND_VN_REAL_ACUM"]); decimal IND_VN_ANTE_ACUM = Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((IND_VN_REAL_ACUM - IND_VN_ANTE_ACUM) / Math.Abs(IND_VN_ANTE_ACUM)) * 100))) <text>%</text>}
                    }.
                    @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") || @ViewData["FSE_MAT_ESCRITOR_REAL_ACUM"].Equals("calc") || @ViewData["FSE_MAT_ESCRITOR_ANTE_ACUM"].Equals("calc") || Convert.ToDecimal(@ViewData["FSE_MAT_ESCRITOR_ANTE_ACUM"]).Equals(0) || Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]).Equals(0))
                    { <text></text> }
                    else
                    {
                        if (((Convert.ToDecimal(@ViewData["FSE_MAT_ESCRITOR_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["FSE_MAT_ESCRITOR_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["FSE_MAT_ESCRITOR_ANTE_ACUM"]))) * 100 >= ((Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))) * 100)
                        {  <text>Sendo a variação do Material de Escritório superior à variação do Volume de Negócios verifica-se uma perda relativa de Rentabilidade Operacional </text> ;
                        }
                        else
                        {  <text>Sendo a variação do Material de Escritório inferior à variação do Volume de Negócios verifica-se um ganho relativo de Rentabilidade Operacional </text> ;
                        }
                    }.
                </p>
            </td>
            <td style="width:50%">
                <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_022"></canvas>
            </td>
        </tr>
        <tr>
            <td style="width:50%">
                <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_023"></canvas>
            </td>
            <td style="width:50%">
                O Peso do Material de Escritório no Volume de Negócios (VN: inclui variação de Produção), em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])), atingiu o valor de
                @if (@ViewData["FSE_MAT_ESCRITOR_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc"))
                { <text>calc.</text>  }
                else
                {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_MAT_ESCRITOR_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) * 100)))} %
                sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiu o valor de
                @if (@ViewData["FSE_MAT_ESCRITOR_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>calc.</text>  }
                else
                {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_MAT_ESCRITOR_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) * 100)))} %,
                verificando-se @if (@ViewData["FSE_MAT_ESCRITOR_REAL_ACUM"].Equals("calc") || @ViewData["FSE_MAT_ESCRITOR_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>    -</text>  }
                else
                {
                    if ((Convert.ToDecimal(@ViewData["FSE_MAT_ESCRITOR_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_MAT_ESCRITOR_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])))
                    {  <text> uma diminuição de eficiência </text> ;
                    }
                    else
                    {  <text> um aumento de eficiência de </text>  ;
                    }
                }
                @if (@ViewData["FSE_MAT_ESCRITOR_REAL_ACUM"].Equals("calc") || @ViewData["FSE_MAT_ESCRITOR_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>    -</text>  }
                else
                {
                    if ((Convert.ToDecimal(@ViewData["FSE_MAT_ESCRITOR_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0))
                    {<text> 0 %</text>  }
                    else
                    {
                        decimal PESO_FSE_MAT_ESCRITOR_VN_REAL_ACUM = Convert.ToDecimal(@ViewData["FSE_MAT_ESCRITOR_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]); decimal PESO_FSE_MAT_ESCRITOR_VN_ANTE_ACUM = Convert.ToDecimal(@ViewData["FSE_MAT_ESCRITOR_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((PESO_FSE_MAT_ESCRITOR_VN_REAL_ACUM - PESO_FSE_MAT_ESCRITOR_VN_ANTE_ACUM)) * 100 * -1))) <text>%</text>}
                }.
            </td>

        </tr>
    </table> }
}  @if (@ViewData["FSE_ART_OFERTA_REAL_ACUM"].Equals("calc")) {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_024"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_025" style="display:none"></canvas>}
else
{
    if ((Convert.ToDecimal(@ViewData["FSE_ART_OFERTA_REAL_ACUM"])) == 0) {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_024"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_025" style="display:none"></canvas>}
    else
    { <div class="page-breaker"></div>
    <table class="graficos_textos">
        <tr> <td class="titulos_mapas" colspan="2"> Artigos para Oferta </td> </tr>
        <tr>
            <td style="width:50%">
                <p>
                    Os Artigos para Oferta, em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])) atingiram o valor de
                    @if (@ViewData["FSE_ART_OFERTA_REAL_ACUM"].Equals("calc"))
                    { <text>calc.</text> }
                    else
                    { @Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_ART_OFERTA_REAL_ACUM"])))))} €,
                    sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiram o valor de
                    @if (@ViewData["FSE_ART_OFERTA_ANTE_ACUM"].Equals("calc"))
                    { <text>calc.</text> }
                    else
                    {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_ART_OFERTA_ANTE_ACUM"])))))} €,
                    verificando-se @if (@ViewData["FSE_ART_OFERTA_REAL_ACUM"].Equals("calc") || @ViewData["FSE_ART_OFERTA_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToDecimal(@ViewData["FSE_ART_OFERTA_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_ART_OFERTA_ANTE_ACUM"])))
                        {  <text> um crescimento de </text> ;
                        }
                        else
                        {  <text> uma diminuição de </text>  ;
                        }
                    }
                    @if (@ViewData["FSE_ART_OFERTA_REAL_ACUM"].Equals("calc") || @ViewData["FSE_ART_OFERTA_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToInt32(@ViewData["FSE_ART_OFERTA_ANTE_ACUM"])).Equals(0))
                        {<text> 0 %</text>  }
                        else
                        {
                            decimal FSE_ART_OFERTA_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_ART_OFERTA_REAL_ACUM"]); decimal FSE_ART_OFERTA_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_ART_OFERTA_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((FSE_ART_OFERTA_REAL_ACUM - FSE_ART_OFERTA_ANTE_ACUM) / Math.Abs(FSE_ART_OFERTA_ANTE_ACUM)) * 100))) <text>%</text>}
                    }.
                </p>
                <p>
                    No mesmo período a Variação do Volume de Negócios (inclui Variação de Produção) foi de
                    @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0))
                        {<text> 0 %</text>  }
                        else
                        {
                            decimal IND_VN_REAL_ACUM = Convert.ToInt32(@ViewData["IND_VN_REAL_ACUM"]); decimal IND_VN_ANTE_ACUM = Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((IND_VN_REAL_ACUM - IND_VN_ANTE_ACUM) / Math.Abs(IND_VN_ANTE_ACUM)) * 100))) <text>%</text>}
                    }.
                    @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") || @ViewData["FSE_ART_OFERTA_REAL_ACUM"].Equals("calc") || @ViewData["FSE_ART_OFERTA_ANTE_ACUM"].Equals("calc") || Convert.ToDecimal(@ViewData["FSE_ART_OFERTA_ANTE_ACUM"]).Equals(0) || Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]).Equals(0))
                    { <text></text> }
                    else
                    {
                        if (((Convert.ToDecimal(@ViewData["FSE_ART_OFERTA_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["FSE_ART_OFERTA_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["FSE_ART_OFERTA_ANTE_ACUM"]))) * 100 >= ((Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))) * 100)
                        {  <text>Sendo a variação dos Artigos para Oferta superior à variação do Volume de Negócios verifica-se uma perda relativa de Rentabilidade Operacional </text> ;
                        }
                        else
                        {  <text>Sendo a variação dos Artigos para Oferta inferior à variação do Volume de Negócios verifica-se um ganho relativo de Rentabilidade Operacional </text> ;
                        }
                    }.
                </p>
            </td>
            <td style="width:50%">
                <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_024"></canvas>
            </td>
        </tr>
        <tr>
            <td style="width:50%">
                <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_025"></canvas>
            </td>
            <td style="width:50%">
                O Peso dos Artigos para Oferta no Volume de Negócios (VN: inclui variação de Produção), em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])), atingiu o valor de
                @if (@ViewData["FSE_ART_OFERTA_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc"))
                { <text>calc.</text>  }
                else
                {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_ART_OFERTA_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) * 100)))} %
                sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiu o valor de
                @if (@ViewData["FSE_ART_OFERTA_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>calc.</text>  }
                else
                {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_ART_OFERTA_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) * 100)))} %,
                verificando-se @if (@ViewData["FSE_ART_OFERTA_REAL_ACUM"].Equals("calc") || @ViewData["FSE_ART_OFERTA_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>    -</text>  }
                else
                {
                    if ((Convert.ToDecimal(@ViewData["FSE_ART_OFERTA_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_ART_OFERTA_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])))
                    {  <text> uma diminuição de eficiência </text> ;
                    }
                    else
                    {  <text> um aumento de eficiência de </text>  ;
                    }
                }
                @if (@ViewData["FSE_ART_OFERTA_REAL_ACUM"].Equals("calc") || @ViewData["FSE_ART_OFERTA_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>    -</text>  }
                else
                {
                    if ((Convert.ToDecimal(@ViewData["FSE_ART_OFERTA_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0))
                    {<text> 0 %</text>  }
                    else
                    {
                        decimal PESO_FSE_ART_OFERTA_VN_REAL_ACUM = Convert.ToDecimal(@ViewData["FSE_ART_OFERTA_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]); decimal PESO_FSE_ART_OFERTA_VN_ANTE_ACUM = Convert.ToDecimal(@ViewData["FSE_ART_OFERTA_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((PESO_FSE_ART_OFERTA_VN_REAL_ACUM - PESO_FSE_ART_OFERTA_VN_ANTE_ACUM)) * 100 * -1))) <text>%</text>}
                }.
            </td>

        </tr>
    </table> }
}  @if (@ViewData["FSE_OUTROS_MATERIAIS_REAL_ACUM"].Equals("calc")) {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_026"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_027" style="display:none"></canvas>}
else
{
    if ((Convert.ToDecimal(@ViewData["FSE_OUTROS_MATERIAIS_REAL_ACUM"])) == 0) {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_026"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_027" style="display:none"></canvas>}
    else
    { <div class="page-breaker"></div>
    <table class="graficos_textos">
        <tr> <td class="titulos_mapas" colspan="2"> Outros de Materiais </td> </tr>
        <tr>
            <td style="width:50%">
                <p>
                    Os Outros de Materiais, em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])) atingiram o valor de
                    @if (@ViewData["FSE_OUTROS_MATERIAIS_REAL_ACUM"].Equals("calc"))
                    { <text>calc.</text> }
                    else
                    { @Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_OUTROS_MATERIAIS_REAL_ACUM"])))))} €,
                    sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiram o valor de
                    @if (@ViewData["FSE_OUTROS_MATERIAIS_ANTE_ACUM"].Equals("calc"))
                    { <text>calc.</text> }
                    else
                    {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_OUTROS_MATERIAIS_ANTE_ACUM"])))))} €,
                    verificando-se @if (@ViewData["FSE_OUTROS_MATERIAIS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_MATERIAIS_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToDecimal(@ViewData["FSE_OUTROS_MATERIAIS_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_OUTROS_MATERIAIS_ANTE_ACUM"])))
                        {  <text> um crescimento de </text> ;
                        }
                        else
                        {  <text> uma diminuição de </text>  ;
                        }
                    }
                    @if (@ViewData["FSE_OUTROS_MATERIAIS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_MATERIAIS_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToInt32(@ViewData["FSE_OUTROS_MATERIAIS_ANTE_ACUM"])).Equals(0))
                        {<text> 0 %</text>  }
                        else
                        {
                            decimal FSE_OUTROS_MATERIAIS_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_OUTROS_MATERIAIS_REAL_ACUM"]); decimal FSE_OUTROS_MATERIAIS_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_OUTROS_MATERIAIS_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((FSE_OUTROS_MATERIAIS_REAL_ACUM - FSE_OUTROS_MATERIAIS_ANTE_ACUM) / Math.Abs(FSE_OUTROS_MATERIAIS_ANTE_ACUM)) * 100))) <text>%</text>}
                    }.
                </p>
                <p>
                    No mesmo período a Variação do Volume de Negócios (inclui Variação de Produção) foi de
                    @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0))
                        {<text> 0 %</text>  }
                        else
                        {
                            decimal IND_VN_REAL_ACUM = Convert.ToInt32(@ViewData["IND_VN_REAL_ACUM"]); decimal IND_VN_ANTE_ACUM = Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((IND_VN_REAL_ACUM - IND_VN_ANTE_ACUM) / Math.Abs(IND_VN_ANTE_ACUM)) * 100))) <text>%</text>}
                    }.
                    @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_MATERIAIS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_MATERIAIS_ANTE_ACUM"].Equals("calc") || Convert.ToDecimal(@ViewData["FSE_OUTROS_MATERIAIS_ANTE_ACUM"]).Equals(0) || Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]).Equals(0))
                    { <text></text> }
                    else
                    {
                        if (((Convert.ToDecimal(@ViewData["FSE_OUTROS_MATERIAIS_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["FSE_OUTROS_MATERIAIS_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["FSE_OUTROS_MATERIAIS_ANTE_ACUM"]))) * 100 >= ((Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))) * 100)
                        {  <text>Sendo a variação dos Outros de Materiais superior à variação do Volume de Negócios verifica-se uma perda relativa de Rentabilidade Operacional </text> ;
                        }
                        else
                        {  <text>Sendo a variação dos Outros de Materiais inferior à variação do Volume de Negócios verifica-se um ganho relativo de Rentabilidade Operacional </text> ;
                        }
                    }.
                </p>
            </td>
            <td style="width:50%">
                <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_026"></canvas>
            </td>
        </tr>
        <tr>
            <td style="width:50%">
                <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_027"></canvas>
            </td>
            <td style="width:50%">
                O Peso dos Outros de Materiais no Volume de Negócios (VN: inclui variação de Produção), em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])), atingiu o valor de
                @if (@ViewData["FSE_OUTROS_MATERIAIS_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc"))
                { <text>calc.</text>  }
                else
                {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_OUTROS_MATERIAIS_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) * 100)))} %
                sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiu o valor de
                @if (@ViewData["FSE_OUTROS_MATERIAIS_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>calc.</text>  }
                else
                {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_OUTROS_MATERIAIS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) * 100)))} %,
                verificando-se @if (@ViewData["FSE_OUTROS_MATERIAIS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_MATERIAIS_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>    -</text>  }
                else
                {
                    if ((Convert.ToDecimal(@ViewData["FSE_OUTROS_MATERIAIS_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_OUTROS_MATERIAIS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])))
                    {  <text> uma diminuição de eficiência </text> ;
                    }
                    else
                    {  <text> um aumento de eficiência de </text>  ;
                    }
                }
                @if (@ViewData["FSE_OUTROS_MATERIAIS_REAL_ACUM"].Equals("calc") || @ViewData["FSE_OUTROS_MATERIAIS_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>    -</text>  }
                else
                {
                    if ((Convert.ToDecimal(@ViewData["FSE_OUTROS_MATERIAIS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0))
                    {<text> 0 %</text>  }
                    else
                    {
                        decimal PESO_FSE_OUTROS_MATERIAIS_VN_REAL_ACUM = Convert.ToDecimal(@ViewData["FSE_OUTROS_MATERIAIS_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]); decimal PESO_FSE_OUTROS_MATERIAIS_VN_ANTE_ACUM = Convert.ToDecimal(@ViewData["FSE_OUTROS_MATERIAIS_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((PESO_FSE_OUTROS_MATERIAIS_VN_REAL_ACUM - PESO_FSE_OUTROS_MATERIAIS_VN_ANTE_ACUM)) * 100 * -1))) <text>%</text>}
                }.
            </td>

        </tr>
    </table> }
}  @if (@ViewData["FSE_ELECTRICIDADE_REAL_ACUM"].Equals("calc")) {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_028"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_029" style="display:none"></canvas>}
else
{
    if ((Convert.ToDecimal(@ViewData["FSE_ELECTRICIDADE_REAL_ACUM"])) == 0) {<canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_028"  style="display:none"></canvas><canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_029" style="display:none"></canvas>}
    else
    { <div class="page-breaker"></div>
    <table class="graficos_textos">
        <tr> <td class="titulos_mapas" colspan="2"> Electricidade </td> </tr>
        <tr>
            <td style="width:50%">
                <p>
                    A Electricidade, em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])) atingiram o valor de
                    @if (@ViewData["FSE_ELECTRICIDADE_REAL_ACUM"].Equals("calc"))
                    { <text>calc.</text> }
                    else
                    { @Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_ELECTRICIDADE_REAL_ACUM"])))))} €,
                    sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiram o valor de
                    @if (@ViewData["FSE_ELECTRICIDADE_ANTE_ACUM"].Equals("calc"))
                    { <text>calc.</text> }
                    else
                    {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_ELECTRICIDADE_ANTE_ACUM"])))))} €,
                    verificando-se @if (@ViewData["FSE_ELECTRICIDADE_REAL_ACUM"].Equals("calc") || @ViewData["FSE_ELECTRICIDADE_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToDecimal(@ViewData["FSE_ELECTRICIDADE_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_ELECTRICIDADE_ANTE_ACUM"])))
                        {  <text> um crescimento de </text> ;
                        }
                        else
                        {  <text> uma diminuição de </text>  ;
                        }
                    }
                    @if (@ViewData["FSE_ELECTRICIDADE_REAL_ACUM"].Equals("calc") || @ViewData["FSE_ELECTRICIDADE_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToInt32(@ViewData["FSE_ELECTRICIDADE_ANTE_ACUM"])).Equals(0))
                        {<text> 0 %</text>  }
                        else
                        {
                            decimal FSE_ELECTRICIDADE_REAL_ACUM = Convert.ToInt32(@ViewData["FSE_ELECTRICIDADE_REAL_ACUM"]); decimal FSE_ELECTRICIDADE_ANTE_ACUM = Convert.ToInt32(@ViewData["FSE_ELECTRICIDADE_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((FSE_ELECTRICIDADE_REAL_ACUM - FSE_ELECTRICIDADE_ANTE_ACUM) / Math.Abs(FSE_ELECTRICIDADE_ANTE_ACUM)) * 100))) <text>%</text>}
                    }.
                </p>
                <p>
                    No mesmo período a Variação do Volume de Negócios (inclui Variação de Produção) foi de
                    @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                    { <text>    -</text>  }
                    else
                    {
                        if ((Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0))
                        {<text> 0 %</text>  }
                        else
                        {
                            decimal IND_VN_REAL_ACUM = Convert.ToInt32(@ViewData["IND_VN_REAL_ACUM"]); decimal IND_VN_ANTE_ACUM = Convert.ToInt32(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((IND_VN_REAL_ACUM - IND_VN_ANTE_ACUM) / Math.Abs(IND_VN_ANTE_ACUM)) * 100))) <text>%</text>}
                    }.
                    @if (@ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc") || @ViewData["FSE_ELECTRICIDADE_REAL_ACUM"].Equals("calc") || @ViewData["FSE_ELECTRICIDADE_ANTE_ACUM"].Equals("calc") || Convert.ToDecimal(@ViewData["FSE_ELECTRICIDADE_ANTE_ACUM"]).Equals(0) || Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]).Equals(0))
                    { <text></text> }
                    else
                    {
                        if (((Convert.ToDecimal(@ViewData["FSE_ELECTRICIDADE_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["FSE_ELECTRICIDADE_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["FSE_ELECTRICIDADE_ANTE_ACUM"]))) * 100 >= ((Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]) - Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) / Math.Abs(Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]))) * 100)
                        {  <text>Sendo a variação da Electricidade superior à variação do Volume de Negócios verifica-se uma perda relativa de Rentabilidade Operacional </text> ;
                        }
                        else
                        {  <text>Sendo a variação da Electricidade inferior à variação do Volume de Negócios verifica-se um ganho relativo de Rentabilidade Operacional </text> ;
                        }
                    }.
                </p>
            </td>
            <td style="width:50%">
                <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_028"></canvas>
            </td>
        </tr>
        <tr>
            <td style="width:50%">
                <canvas id="GRAFICO_FSE_RESULT_MENSAL_COMP_029"></canvas>
            </td>
            <td style="width:50%">
                O Peso da Electricidade no Volume de Negócios (VN: inclui variação de Produção), em termos acumulados (de Jan a @Html.Raw(ViewData["MES_ACUM_REAL_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_REAL"])), atingiu o valor de
                @if (@ViewData["FSE_ELECTRICIDADE_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc"))
                { <text>calc.</text>  }
                else
                {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_ELECTRICIDADE_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) * 100)))} %
                sendo que no período (de Jan a @Html.Raw(ViewData["MES_ACUM_ANTE_EXTENSO"]) de @Html.Raw(ViewData["ANO_VERSAO_ANTE"])) atingiu o valor de
                @if (@ViewData["FSE_ELECTRICIDADE_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>calc.</text>  }
                else
                {@Html.Raw((string.Format("{0:N}", (Convert.ToDecimal(@ViewData["FSE_ELECTRICIDADE_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])) * 100)))} %,
                verificando-se @if (@ViewData["FSE_ELECTRICIDADE_REAL_ACUM"].Equals("calc") || @ViewData["FSE_ELECTRICIDADE_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>    -</text>  }
                else
                {
                    if ((Convert.ToDecimal(@ViewData["FSE_ELECTRICIDADE_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"])) >= (Convert.ToDecimal(@ViewData["FSE_ELECTRICIDADE_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])))
                    {  <text> uma diminuição de eficiência </text> ;
                    }
                    else
                    {  <text> um aumento de eficiência de </text>  ;
                    }
                }
                @if (@ViewData["FSE_ELECTRICIDADE_REAL_ACUM"].Equals("calc") || @ViewData["FSE_ELECTRICIDADE_ANTE_ACUM"].Equals("calc") || @ViewData["IND_VN_REAL_ACUM"].Equals("calc") || @ViewData["IND_VN_ANTE_ACUM"].Equals("calc"))
                { <text>    -</text>  }
                else
                {
                    if ((Convert.ToDecimal(@ViewData["FSE_ELECTRICIDADE_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"])).Equals(0))
                    {<text> 0 %</text>  }
                    else
                    {
                        decimal PESO_FSE_ELECTRICIDADE_VN_REAL_ACUM = Convert.ToDecimal(@ViewData["FSE_ELECTRICIDADE_REAL_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_REAL_ACUM"]); decimal PESO_FSE_ELECTRICIDADE_VN_ANTE_ACUM = Convert.ToDecimal(@ViewData["FSE_ELECTRICIDADE_ANTE_ACUM"]) / Convert.ToDecimal(@ViewData["IND_VN_ANTE_ACUM"]); @Html.Raw((string.Format("{0:N}", ((PESO_FSE_ELECTRICIDADE_VN_REAL_ACUM - PESO_FSE_ELECTRICIDADE_VN_ANTE_ACUM)) * 100 * -1))) <text>%</text>}
                }.
            </td>

        </tr>
    </table> }
}





<script src="@Url.Content("~/Scripts/chart.js@2.8.0.js")"></script>
@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_002-----------------------------------------------------------*@
<script>

    var ANO_VERSAO_REAL = @Html.Raw((string.Format("{0:0}", ViewData["ANO_VERSAO_REAL"])));
    var ANO_VERSAO_REAL_ = ANO_VERSAO_REAL.toString().substr(ANO_VERSAO_REAL.toString().length - 2,ANO_VERSAO_REAL.toString().length);

    var ANO_VERSAO_ANTE = @Html.Raw((string.Format("{0:0}", ViewData["ANO_VERSAO_ANTE"])));
    var ANO_VERSAO_ANTE_ = ANO_VERSAO_ANTE.toString().substr(ANO_VERSAO_ANTE.toString().length - 2,ANO_VERSAO_ANTE.toString().length);



    if(@ViewData["MES_ACUM_REAL"]<1){ var IND_VN_ANO_N_JANEIRO = 'nd'; var IND_VN_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JANEIRO"]))); var IND_VN_ANO_N_JANEIRO_MAX_MIN = IND_VN_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var IND_VN_ANO_N_FEVEREIRO = 'nd'; var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_FEVEREIRO"]))); var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = IND_VN_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var IND_VN_ANO_N_MARCO = 'nd'; var IND_VN_ANO_N_MARCO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MARCO"]))); var IND_VN_ANO_N_MARCO_MAX_MIN = IND_VN_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var IND_VN_ANO_N_ABRIL = 'nd'; var IND_VN_ANO_N_ABRIL_MAX_MIN = 0;  } else { var IND_VN_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_ABRIL"]))); var IND_VN_ANO_N_ABRIL_MAX_MIN = IND_VN_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var IND_VN_ANO_N_MAIO = 'nd'; var IND_VN_ANO_N_MAIO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MAIO"]))); var IND_VN_ANO_N_MAIO_MAX_MIN = IND_VN_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var IND_VN_ANO_N_JUNHO = 'nd'; var IND_VN_ANO_N_JUNHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JUNHO"]))); var IND_VN_ANO_N_JUNHO_MAX_MIN = IND_VN_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var IND_VN_ANO_N_JULHO = 'nd'; var IND_VN_ANO_N_JULHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JULHO"]))); var IND_VN_ANO_N_JULHO_MAX_MIN = IND_VN_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var IND_VN_ANO_N_AGOSTO = 'nd'; var IND_VN_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_AGOSTO"]))); var IND_VN_ANO_N_AGOSTO_MAX_MIN = IND_VN_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var IND_VN_ANO_N_SETEMBRO = 'nd'; var IND_VN_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_SETEMBRO"]))); var IND_VN_ANO_N_SETEMBRO_MAX_MIN = IND_VN_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var IND_VN_ANO_N_OUTUBRO = 'nd'; var IND_VN_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_OUTUBRO"]))); var IND_VN_ANO_N_OUTUBRO_MAX_MIN = IND_VN_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var IND_VN_ANO_N_NOVEMBRO = 'nd'; var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_NOVEMBRO"]))); var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = IND_VN_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var IND_VN_ANO_N_DEZEMBRO = 'nd'; var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_DEZEMBRO"]))); var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = IND_VN_ANO_N_DEZEMBRO };

    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_SUBCONTRATOS_ANO_N_JANEIRO = 'nd'; var FSE_SUBCONTRATOS_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var FSE_SUBCONTRATOS_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_JANEIRO"]))); var FSE_SUBCONTRATOS_ANO_N_JANEIRO_MAX_MIN = FSE_SUBCONTRATOS_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_SUBCONTRATOS_ANO_N_FEVEREIRO = 'nd'; var FSE_SUBCONTRATOS_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var FSE_SUBCONTRATOS_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_FEVEREIRO"]))); var FSE_SUBCONTRATOS_ANO_N_FEVEREIRO_MAX_MIN = FSE_SUBCONTRATOS_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_SUBCONTRATOS_ANO_N_MARCO = 'nd'; var FSE_SUBCONTRATOS_ANO_N_MARCO_MAX_MIN = 0;  } else { var FSE_SUBCONTRATOS_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_MARCO"]))); var FSE_SUBCONTRATOS_ANO_N_MARCO_MAX_MIN = FSE_SUBCONTRATOS_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_SUBCONTRATOS_ANO_N_ABRIL = 'nd'; var FSE_SUBCONTRATOS_ANO_N_ABRIL_MAX_MIN = 0;  } else { var FSE_SUBCONTRATOS_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_ABRIL"]))); var FSE_SUBCONTRATOS_ANO_N_ABRIL_MAX_MIN = FSE_SUBCONTRATOS_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_SUBCONTRATOS_ANO_N_MAIO = 'nd'; var FSE_SUBCONTRATOS_ANO_N_MAIO_MAX_MIN = 0;  } else { var FSE_SUBCONTRATOS_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_MAIO"]))); var FSE_SUBCONTRATOS_ANO_N_MAIO_MAX_MIN = FSE_SUBCONTRATOS_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_SUBCONTRATOS_ANO_N_JUNHO = 'nd'; var FSE_SUBCONTRATOS_ANO_N_JUNHO_MAX_MIN = 0;  } else { var FSE_SUBCONTRATOS_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_JUNHO"]))); var FSE_SUBCONTRATOS_ANO_N_JUNHO_MAX_MIN = FSE_SUBCONTRATOS_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_SUBCONTRATOS_ANO_N_JULHO = 'nd'; var FSE_SUBCONTRATOS_ANO_N_JULHO_MAX_MIN = 0;  } else { var FSE_SUBCONTRATOS_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_JULHO"]))); var FSE_SUBCONTRATOS_ANO_N_JULHO_MAX_MIN = FSE_SUBCONTRATOS_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_SUBCONTRATOS_ANO_N_AGOSTO = 'nd'; var FSE_SUBCONTRATOS_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var FSE_SUBCONTRATOS_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_AGOSTO"]))); var FSE_SUBCONTRATOS_ANO_N_AGOSTO_MAX_MIN = FSE_SUBCONTRATOS_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_SUBCONTRATOS_ANO_N_SETEMBRO = 'nd'; var FSE_SUBCONTRATOS_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var FSE_SUBCONTRATOS_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_SETEMBRO"]))); var FSE_SUBCONTRATOS_ANO_N_SETEMBRO_MAX_MIN = FSE_SUBCONTRATOS_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_SUBCONTRATOS_ANO_N_OUTUBRO = 'nd'; var FSE_SUBCONTRATOS_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var FSE_SUBCONTRATOS_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_OUTUBRO"]))); var FSE_SUBCONTRATOS_ANO_N_OUTUBRO_MAX_MIN = FSE_SUBCONTRATOS_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_SUBCONTRATOS_ANO_N_NOVEMBRO = 'nd'; var FSE_SUBCONTRATOS_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var FSE_SUBCONTRATOS_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_NOVEMBRO"]))); var FSE_SUBCONTRATOS_ANO_N_NOVEMBRO_MAX_MIN = FSE_SUBCONTRATOS_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_SUBCONTRATOS_ANO_N_DEZEMBRO = 'nd'; var FSE_SUBCONTRATOS_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var FSE_SUBCONTRATOS_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_DEZEMBRO"]))); var FSE_SUBCONTRATOS_ANO_N_DEZEMBRO_MAX_MIN = FSE_SUBCONTRATOS_ANO_N_DEZEMBRO };


    var FSE_SUBCONTRATOS_ANO_N_JANEIRO_ACUM = FSE_SUBCONTRATOS_ANO_N_JANEIRO;
    var FSE_SUBCONTRATOS_ANO_N_FEVEREIRO_ACUM = FSE_SUBCONTRATOS_ANO_N_FEVEREIRO + FSE_SUBCONTRATOS_ANO_N_JANEIRO_ACUM;
    var FSE_SUBCONTRATOS_ANO_N_MARCO_ACUM = FSE_SUBCONTRATOS_ANO_N_MARCO + FSE_SUBCONTRATOS_ANO_N_FEVEREIRO_ACUM;
    var FSE_SUBCONTRATOS_ANO_N_ABRIL_ACUM = FSE_SUBCONTRATOS_ANO_N_ABRIL + FSE_SUBCONTRATOS_ANO_N_MARCO_ACUM;
    var FSE_SUBCONTRATOS_ANO_N_MAIO_ACUM = FSE_SUBCONTRATOS_ANO_N_MAIO + FSE_SUBCONTRATOS_ANO_N_ABRIL_ACUM;
    var FSE_SUBCONTRATOS_ANO_N_JUNHO_ACUM = FSE_SUBCONTRATOS_ANO_N_JUNHO + FSE_SUBCONTRATOS_ANO_N_MAIO_ACUM;
    var FSE_SUBCONTRATOS_ANO_N_JULHO_ACUM = FSE_SUBCONTRATOS_ANO_N_JULHO + FSE_SUBCONTRATOS_ANO_N_JUNHO_ACUM;
    var FSE_SUBCONTRATOS_ANO_N_AGOSTO_ACUM = FSE_SUBCONTRATOS_ANO_N_AGOSTO + FSE_SUBCONTRATOS_ANO_N_JULHO_ACUM;
    var FSE_SUBCONTRATOS_ANO_N_SETEMBRO_ACUM = FSE_SUBCONTRATOS_ANO_N_SETEMBRO + FSE_SUBCONTRATOS_ANO_N_AGOSTO_ACUM;
    var FSE_SUBCONTRATOS_ANO_N_OUTUBRO_ACUM = FSE_SUBCONTRATOS_ANO_N_OUTUBRO + FSE_SUBCONTRATOS_ANO_N_SETEMBRO_ACUM;
    var FSE_SUBCONTRATOS_ANO_N_NOVEMBRO_ACUM = FSE_SUBCONTRATOS_ANO_N_NOVEMBRO + FSE_SUBCONTRATOS_ANO_N_OUTUBRO_ACUM;
    var FSE_SUBCONTRATOS_ANO_N_DEZEMBRO_ACUM = FSE_SUBCONTRATOS_ANO_N_DEZEMBRO + FSE_SUBCONTRATOS_ANO_N_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_SUBCONTRATOS_ANO_N_JANEIRO_ACUM = 'nd'; var FSE_SUBCONTRATOS_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var FSE_SUBCONTRATOS_ANO_N_JANEIRO_ACUM= FSE_SUBCONTRATOS_ANO_N_JANEIRO_ACUM; var FSE_SUBCONTRATOS_ANO_N_JANEIRO_ACUM_MAX_MIN = FSE_SUBCONTRATOS_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_SUBCONTRATOS_ANO_N_FEVEREIRO_ACUM = 'nd'; var FSE_SUBCONTRATOS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var FSE_SUBCONTRATOS_ANO_N_FEVEREIRO_ACUM= FSE_SUBCONTRATOS_ANO_N_FEVEREIRO_ACUM; var FSE_SUBCONTRATOS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = FSE_SUBCONTRATOS_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_SUBCONTRATOS_ANO_N_MARCO_ACUM = 'nd'; var FSE_SUBCONTRATOS_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var FSE_SUBCONTRATOS_ANO_N_MARCO_ACUM= FSE_SUBCONTRATOS_ANO_N_MARCO_ACUM; var FSE_SUBCONTRATOS_ANO_N_MARCO_ACUM_MAX_MIN = FSE_SUBCONTRATOS_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_SUBCONTRATOS_ANO_N_ABRIL_ACUM = 'nd'; var FSE_SUBCONTRATOS_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var FSE_SUBCONTRATOS_ANO_N_ABRIL_ACUM= FSE_SUBCONTRATOS_ANO_N_ABRIL_ACUM; var FSE_SUBCONTRATOS_ANO_N_ABRIL_ACUM_MAX_MIN = FSE_SUBCONTRATOS_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_SUBCONTRATOS_ANO_N_MAIO_ACUM = 'nd'; var FSE_SUBCONTRATOS_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var FSE_SUBCONTRATOS_ANO_N_MAIO_ACUM= FSE_SUBCONTRATOS_ANO_N_MAIO_ACUM; var FSE_SUBCONTRATOS_ANO_N_MAIO_ACUM_MAX_MIN = FSE_SUBCONTRATOS_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_SUBCONTRATOS_ANO_N_JUNHO_ACUM = 'nd'; var FSE_SUBCONTRATOS_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var FSE_SUBCONTRATOS_ANO_N_JUNHO_ACUM= FSE_SUBCONTRATOS_ANO_N_JUNHO_ACUM; var FSE_SUBCONTRATOS_ANO_N_JUNHO_ACUM_MAX_MIN = FSE_SUBCONTRATOS_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_SUBCONTRATOS_ANO_N_JULHO_ACUM = 'nd'; var FSE_SUBCONTRATOS_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var FSE_SUBCONTRATOS_ANO_N_JULHO_ACUM= FSE_SUBCONTRATOS_ANO_N_JULHO_ACUM; var FSE_SUBCONTRATOS_ANO_N_JULHO_ACUM_MAX_MIN = FSE_SUBCONTRATOS_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_SUBCONTRATOS_ANO_N_AGOSTO_ACUM = 'nd'; var FSE_SUBCONTRATOS_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var FSE_SUBCONTRATOS_ANO_N_AGOSTO_ACUM= FSE_SUBCONTRATOS_ANO_N_AGOSTO_ACUM; var FSE_SUBCONTRATOS_ANO_N_AGOSTO_ACUM_MAX_MIN = FSE_SUBCONTRATOS_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_SUBCONTRATOS_ANO_N_SETEMBRO_ACUM = 'nd'; var FSE_SUBCONTRATOS_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_SUBCONTRATOS_ANO_N_SETEMBRO_ACUM= FSE_SUBCONTRATOS_ANO_N_SETEMBRO_ACUM; var FSE_SUBCONTRATOS_ANO_N_SETEMBRO_ACUM_MAX_MIN = FSE_SUBCONTRATOS_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_SUBCONTRATOS_ANO_N_OUTUBRO_ACUM = 'nd'; var FSE_SUBCONTRATOS_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var FSE_SUBCONTRATOS_ANO_N_OUTUBRO_ACUM= FSE_SUBCONTRATOS_ANO_N_OUTUBRO_ACUM; var FSE_SUBCONTRATOS_ANO_N_OUTUBRO_ACUM_MAX_MIN = FSE_SUBCONTRATOS_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_SUBCONTRATOS_ANO_N_NOVEMBRO_ACUM = 'nd'; var FSE_SUBCONTRATOS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_SUBCONTRATOS_ANO_N_NOVEMBRO_ACUM= FSE_SUBCONTRATOS_ANO_N_NOVEMBRO_ACUM; var FSE_SUBCONTRATOS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = FSE_SUBCONTRATOS_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_SUBCONTRATOS_ANO_N_DEZEMBRO_ACUM = 'nd'; var FSE_SUBCONTRATOS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_SUBCONTRATOS_ANO_N_DEZEMBRO_ACUM= FSE_SUBCONTRATOS_ANO_N_DEZEMBRO_ACUM; var FSE_SUBCONTRATOS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = FSE_SUBCONTRATOS_ANO_N_DEZEMBRO_ACUM };




    var FSE_SUBCONTRATOS_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_JANEIRO"])));
    var FSE_SUBCONTRATOS_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_FEVEREIRO"]))) + FSE_SUBCONTRATOS_ANO_N_1_JANEIRO_ACUM;
    var FSE_SUBCONTRATOS_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_MARCO"]))) + FSE_SUBCONTRATOS_ANO_N_1_FEVEREIRO_ACUM;
    var FSE_SUBCONTRATOS_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_ABRIL"]))) + FSE_SUBCONTRATOS_ANO_N_1_MARCO_ACUM;
    var FSE_SUBCONTRATOS_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_MAIO"]))) + FSE_SUBCONTRATOS_ANO_N_1_ABRIL_ACUM;
    var FSE_SUBCONTRATOS_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_JUNHO"]))) + FSE_SUBCONTRATOS_ANO_N_1_MAIO_ACUM;
    var FSE_SUBCONTRATOS_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_JULHO"]))) + FSE_SUBCONTRATOS_ANO_N_1_JUNHO_ACUM;
    var FSE_SUBCONTRATOS_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_AGOSTO"]))) + FSE_SUBCONTRATOS_ANO_N_1_JULHO_ACUM;
    var FSE_SUBCONTRATOS_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_SETEMBRO"]))) + FSE_SUBCONTRATOS_ANO_N_1_AGOSTO_ACUM;
    var FSE_SUBCONTRATOS_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_OUTUBRO"]))) + FSE_SUBCONTRATOS_ANO_N_1_SETEMBRO_ACUM;
    var FSE_SUBCONTRATOS_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_NOVEMBRO"]))) + FSE_SUBCONTRATOS_ANO_N_1_OUTUBRO_ACUM;
    var FSE_SUBCONTRATOS_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_DEZEMBRO"]))) + FSE_SUBCONTRATOS_ANO_N_1_NOVEMBRO_ACUM;


    var FSE_SUBCONTRATOS_Mensal_Eixo_max_princ= Math.max(
                       FSE_SUBCONTRATOS_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_SUBCONTRATOS_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_SUBCONTRATOS_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_SUBCONTRATOS_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_SUBCONTRATOS_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_SUBCONTRATOS_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_SUBCONTRATOS_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_SUBCONTRATOS_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_SUBCONTRATOS_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_SUBCONTRATOS_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_SUBCONTRATOS_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_SUBCONTRATOS_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_SUBCONTRATOS_ANO_N_1_JANEIRO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_1_MARCO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_1_ABRIL_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_1_MAIO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_1_JUNHO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_1_JULHO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_1_AGOSTO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_1_SETEMBRO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_1_OUTUBRO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_1_DEZEMBRO_ACUM
                             );
    var FSE_SUBCONTRATOS_Mensal_Eixo_min_princ= Math.min(

                       FSE_SUBCONTRATOS_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_SUBCONTRATOS_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_SUBCONTRATOS_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_SUBCONTRATOS_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_SUBCONTRATOS_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_SUBCONTRATOS_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_SUBCONTRATOS_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_SUBCONTRATOS_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_SUBCONTRATOS_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_SUBCONTRATOS_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_SUBCONTRATOS_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_SUBCONTRATOS_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_SUBCONTRATOS_ANO_N_1_JANEIRO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_1_MARCO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_1_ABRIL_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_1_MAIO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_1_JUNHO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_1_JULHO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_1_AGOSTO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_1_SETEMBRO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_1_OUTUBRO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_1_DEZEMBRO_ACUM
                           );
    var FSE_SUBCONTRATOS_Mensal_Eixo_max_secon= Math.max(
                       FSE_SUBCONTRATOS_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_SUBCONTRATOS_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_SUBCONTRATOS_ANO_N_MARCO_MAX_MIN ,
                       FSE_SUBCONTRATOS_ANO_N_ABRIL_MAX_MIN ,
                       FSE_SUBCONTRATOS_ANO_N_MAIO_MAX_MIN ,
                       FSE_SUBCONTRATOS_ANO_N_JUNHO_MAX_MIN ,
                       FSE_SUBCONTRATOS_ANO_N_JULHO_MAX_MIN ,
                       FSE_SUBCONTRATOS_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_SUBCONTRATOS_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_SUBCONTRATOS_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_SUBCONTRATOS_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_SUBCONTRATOS_ANO_N_DEZEMBRO_MAX_MIN ,



                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_DEZEMBRO"])))

                            );
    var FSE_SUBCONTRATOS_Mensal_Eixo_min_secon= Math.min(
                       FSE_SUBCONTRATOS_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_SUBCONTRATOS_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_SUBCONTRATOS_ANO_N_MARCO_MAX_MIN ,
                       FSE_SUBCONTRATOS_ANO_N_ABRIL_MAX_MIN ,
                       FSE_SUBCONTRATOS_ANO_N_MAIO_MAX_MIN ,
                       FSE_SUBCONTRATOS_ANO_N_JUNHO_MAX_MIN ,
                       FSE_SUBCONTRATOS_ANO_N_JULHO_MAX_MIN ,
                       FSE_SUBCONTRATOS_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_SUBCONTRATOS_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_SUBCONTRATOS_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_SUBCONTRATOS_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_SUBCONTRATOS_ANO_N_DEZEMBRO_MAX_MIN ,


                           @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_DEZEMBRO"])))

                          );

    //NOTA TA: Aqui trato o minimo e o maximo do eixo principal
    if(Math.abs(FSE_SUBCONTRATOS_Mensal_Eixo_max_princ)>=Math.abs(FSE_SUBCONTRATOS_Mensal_Eixo_min_princ))
    {
        var FSE_SUBCONTRATOS_Mensal_Eixo_max_princ_=(Math.ceil(FSE_SUBCONTRATOS_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_SUBCONTRATOS_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_SUBCONTRATOS_Mensal_Eixo_max_princ),0).toString().length-1);
        var FSE_SUBCONTRATOS_Mensal_Eixo_min_princ_= (Math.floor(FSE_SUBCONTRATOS_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_SUBCONTRATOS_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_SUBCONTRATOS_Mensal_Eixo_max_princ),0).toString().length-1);
        //alert(FSE_SUBCONTRATOS_Mensal_Eixo_max_princ_);
        //alert(FSE_SUBCONTRATOS_Mensal_Eixo_min_princ_);
    }
    else
    {
        var FSE_SUBCONTRATOS_Mensal_Eixo_max_princ_=(Math.ceil(FSE_SUBCONTRATOS_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_SUBCONTRATOS_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_SUBCONTRATOS_Mensal_Eixo_min_princ),0).toString().length-1);
        var FSE_SUBCONTRATOS_Mensal_Eixo_min_princ_= (Math.floor(FSE_SUBCONTRATOS_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_SUBCONTRATOS_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_SUBCONTRATOS_Mensal_Eixo_min_princ),0).toString().length-1);}

    //NOTA TA: Aqui trato o minimo e o maximo do eixo secundario

    if(Math.abs(FSE_SUBCONTRATOS_Mensal_Eixo_max_secon)>=Math.abs(FSE_SUBCONTRATOS_Mensal_Eixo_min_secon))
    {
        var FSE_SUBCONTRATOS_Mensal_Eixo_max_secon_=(Math.ceil(FSE_SUBCONTRATOS_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_SUBCONTRATOS_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_SUBCONTRATOS_Mensal_Eixo_max_secon),0).toString().length-1);
        var FSE_SUBCONTRATOS_Mensal_Eixo_min_secon_= (Math.floor(FSE_SUBCONTRATOS_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_SUBCONTRATOS_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_SUBCONTRATOS_Mensal_Eixo_max_secon),0).toString().length-1);
        //alert(FSE_SUBCONTRATOS_Mensal_Eixo_max_secon_);
        //alert(FSE_SUBCONTRATOS_Mensal_Eixo_min_secon_);
    }
    else
    {
        var FSE_SUBCONTRATOS_Mensal_Eixo_max_secon_=(Math.ceil(FSE_SUBCONTRATOS_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_SUBCONTRATOS_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_SUBCONTRATOS_Mensal_Eixo_min_secon),0).toString().length-1);
        var FSE_SUBCONTRATOS_Mensal_Eixo_min_secon_= (Math.floor(FSE_SUBCONTRATOS_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_SUBCONTRATOS_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_SUBCONTRATOS_Mensal_Eixo_min_secon),0).toString().length-1);}


    if(Math.abs(FSE_SUBCONTRATOS_Mensal_Eixo_min_princ)/Math.abs(FSE_SUBCONTRATOS_Mensal_Eixo_max_princ)>=Math.abs(FSE_SUBCONTRATOS_Mensal_Eixo_min_secon)/Math.abs(FSE_SUBCONTRATOS_Mensal_Eixo_max_secon))
    { if(FSE_SUBCONTRATOS_Mensal_Eixo_max_princ > 0 && FSE_SUBCONTRATOS_Mensal_Eixo_min_princ <0 ){ var FSE_SUBCONTRATOS_Mensal_Eixo_min_secon__=(FSE_SUBCONTRATOS_Mensal_Eixo_min_princ_*FSE_SUBCONTRATOS_Mensal_Eixo_max_secon_)/FSE_SUBCONTRATOS_Mensal_Eixo_max_princ_;} else { var FSE_SUBCONTRATOS_Mensal_Eixo_min_secon__=FSE_SUBCONTRATOS_Mensal_Eixo_min_secon_;}
        if(FSE_SUBCONTRATOS_Mensal_Eixo_max_secon > 0 && FSE_SUBCONTRATOS_Mensal_Eixo_min_secon <0 ){ var FSE_SUBCONTRATOS_Mensal_Eixo_min_princ__=(FSE_SUBCONTRATOS_Mensal_Eixo_min_secon__*FSE_SUBCONTRATOS_Mensal_Eixo_max_princ_)/FSE_SUBCONTRATOS_Mensal_Eixo_max_secon_;} else { var FSE_SUBCONTRATOS_Mensal_Eixo_min_princ__=FSE_SUBCONTRATOS_Mensal_Eixo_min_princ_;}}
    else
    {if(FSE_SUBCONTRATOS_Mensal_Eixo_max_secon > 0 && FSE_SUBCONTRATOS_Mensal_Eixo_min_secon <0 ){ var FSE_SUBCONTRATOS_Mensal_Eixo_min_princ__=(FSE_SUBCONTRATOS_Mensal_Eixo_min_secon_*FSE_SUBCONTRATOS_Mensal_Eixo_max_princ_)/FSE_SUBCONTRATOS_Mensal_Eixo_max_secon_;} else { var FSE_SUBCONTRATOS_Mensal_Eixo_min_princ__=FSE_SUBCONTRATOS_Mensal_Eixo_min_princ_;}
        if(FSE_SUBCONTRATOS_Mensal_Eixo_max_princ > 0 && FSE_SUBCONTRATOS_Mensal_Eixo_min_princ <0 ){ var FSE_SUBCONTRATOS_Mensal_Eixo_min_secon__=(FSE_SUBCONTRATOS_Mensal_Eixo_min_princ__*FSE_SUBCONTRATOS_Mensal_Eixo_max_secon_)/FSE_SUBCONTRATOS_Mensal_Eixo_max_princ_;} else { var FSE_SUBCONTRATOS_Mensal_Eixo_min_secon__=FSE_SUBCONTRATOS_Mensal_Eixo_min_secon_;}
    }



    if(Math.abs(FSE_SUBCONTRATOS_Mensal_Eixo_max_princ)/Math.abs(FSE_SUBCONTRATOS_Mensal_Eixo_min_princ)>=Math.abs(FSE_SUBCONTRATOS_Mensal_Eixo_max_secon)/Math.abs(FSE_SUBCONTRATOS_Mensal_Eixo_min_secon))
    { if(FSE_SUBCONTRATOS_Mensal_Eixo_min_princ > 0 && FSE_SUBCONTRATOS_Mensal_Eixo_max_princ <0 ){ var FSE_SUBCONTRATOS_Mensal_Eixo_max_secon__=(FSE_SUBCONTRATOS_Mensal_Eixo_max_princ_*FSE_SUBCONTRATOS_Mensal_Eixo_min_secon_)/FSE_SUBCONTRATOS_Mensal_Eixo_min_princ_;} else { var FSE_SUBCONTRATOS_Mensal_Eixo_max_secon__=FSE_SUBCONTRATOS_Mensal_Eixo_max_secon_;}
        if(FSE_SUBCONTRATOS_Mensal_Eixo_min_secon > 0 && FSE_SUBCONTRATOS_Mensal_Eixo_max_secon <0 ){ var FSE_SUBCONTRATOS_Mensal_Eixo_max_princ__=(FSE_SUBCONTRATOS_Mensal_Eixo_max_secon__*FSE_SUBCONTRATOS_Mensal_Eixo_min_princ_)/FSE_SUBCONTRATOS_Mensal_Eixo_min_secon_;} else { var FSE_SUBCONTRATOS_Mensal_Eixo_max_princ__=FSE_SUBCONTRATOS_Mensal_Eixo_max_princ_;}}
    else
    {if(FSE_SUBCONTRATOS_Mensal_Eixo_min_secon > 0 && FSE_SUBCONTRATOS_Mensal_Eixo_max_secon <0 ){ var FSE_SUBCONTRATOS_Mensal_Eixo_max_princ__=(FSE_SUBCONTRATOS_Mensal_Eixo_max_secon_*FSE_SUBCONTRATOS_Mensal_Eixo_min_princ_)/FSE_SUBCONTRATOS_Mensal_Eixo_min_secon_;} else { var FSE_SUBCONTRATOS_Mensal_Eixo_max_princ__=FSE_SUBCONTRATOS_Mensal_Eixo_max_princ_;}
        if(FSE_SUBCONTRATOS_Mensal_Eixo_min_princ > 0 && FSE_SUBCONTRATOS_Mensal_Eixo_max_princ <0 ){ var FSE_SUBCONTRATOS_Mensal_Eixo_max_secon__=(FSE_SUBCONTRATOS_Mensal_Eixo_max_princ__*FSE_SUBCONTRATOS_Mensal_Eixo_min_secon_)/FSE_SUBCONTRATOS_Mensal_Eixo_min_princ_;} else { var FSE_SUBCONTRATOS_Mensal_Eixo_max_secon__=FSE_SUBCONTRATOS_Mensal_Eixo_max_secon_;}
    }

 var GRAFICO_FSE_RESULT_MENSAL_COMP_002=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_002').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_002=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_002, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label: 'Subcontratos(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   data: [
                       FSE_SUBCONTRATOS_ANO_N_JANEIRO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_FEVEREIRO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_MARCO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_ABRIL_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_MAIO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_JUNHO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_JULHO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_AGOSTO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_SETEMBRO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_OUTUBRO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_NOVEMBRO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_DEZEMBRO_ACUM,
                   ],
                   type: 'line'


               },
                              {
                                  label: 'Subcontratos(ac) ' + ANO_VERSAO_ANTE_,
                                  yAxisID: 'A',
                                  //backgroundColor: 'rgb(201, 10, 10)',
                                  borderColor: 'rgb(0,221,0)',
                                  data: [
                       FSE_SUBCONTRATOS_ANO_N_1_JANEIRO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_1_MARCO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_1_ABRIL_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_1_MAIO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_1_JUNHO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_1_JULHO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_1_AGOSTO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_1_SETEMBRO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_1_OUTUBRO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_SUBCONTRATOS_ANO_N_1_DEZEMBRO_ACUM,
                                  ],
                                  type: 'line'


                              },
                {
                    label:  'Subcontratos(m) ' + ANO_VERSAO_REAL_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(250 , 83 , 0, 0.5)',
                    borderColor: 'rgba(250 , 83 , 0, 0.5)',
                    data: [
                  FSE_SUBCONTRATOS_ANO_N_JANEIRO ,
                  FSE_SUBCONTRATOS_ANO_N_FEVEREIRO ,
                  FSE_SUBCONTRATOS_ANO_N_MARCO ,
                  FSE_SUBCONTRATOS_ANO_N_ABRIL,
                  FSE_SUBCONTRATOS_ANO_N_MAIO ,
                  FSE_SUBCONTRATOS_ANO_N_JUNHO ,
                  FSE_SUBCONTRATOS_ANO_N_JULHO ,
                  FSE_SUBCONTRATOS_ANO_N_AGOSTO ,
                  FSE_SUBCONTRATOS_ANO_N_SETEMBRO ,
                  FSE_SUBCONTRATOS_ANO_N_OUTUBRO ,
                  FSE_SUBCONTRATOS_ANO_N_NOVEMBRO ,
                  FSE_SUBCONTRATOS_ANO_N_DEZEMBRO ,
                    ],
                },
                {
                    label:  'Subcontratos(m) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(0,221,0, 0.4)',
                    borderColor: 'rgba(0,221,0, 0.4)',
                    data: [
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_JANEIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_FEVEREIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_MARCO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_ABRIL"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_MAIO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_JUNHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_JULHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_AGOSTO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_SETEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_OUTUBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_NOVEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_SUBCONTRATOS_ANO_N_1_DEZEMBRO"]))),
                    ],
                },


            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_SUBCONTRATOS_MENSAL_1',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                min:  Math.round(FSE_SUBCONTRATOS_Mensal_Eixo_min_princ__,0),
                                                max:  Math.round(FSE_SUBCONTRATOS_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString();
                                                }
                                            }
                                        },

                    { id: 'B',
                        type: 'linear',
                        position: 'right',
                        ticks: {
                            min: Math.round(FSE_SUBCONTRATOS_Mensal_Eixo_min_secon__,0),
                            max:  Math.round(FSE_SUBCONTRATOS_Mensal_Eixo_max_secon__,0),
                            beginAtZero: false,
                            callback: function(value, index, values) {
                                return value.toLocaleString();
                            }
                        }
                    },






                ]
            }
        },

    });

</script>
@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_003-----------------------------------------------------------*@
<script>

    var IND_VN_ANO_N_JANEIRO_ACUM = IND_VN_ANO_N_JANEIRO;
    var IND_VN_ANO_N_FEVEREIRO_ACUM = IND_VN_ANO_N_FEVEREIRO + IND_VN_ANO_N_JANEIRO_ACUM;
    var IND_VN_ANO_N_MARCO_ACUM = IND_VN_ANO_N_MARCO + IND_VN_ANO_N_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_ABRIL_ACUM = IND_VN_ANO_N_ABRIL + IND_VN_ANO_N_MARCO_ACUM;
    var IND_VN_ANO_N_MAIO_ACUM = IND_VN_ANO_N_MAIO + IND_VN_ANO_N_ABRIL_ACUM;
    var IND_VN_ANO_N_JUNHO_ACUM = IND_VN_ANO_N_JUNHO + IND_VN_ANO_N_MAIO_ACUM;
    var IND_VN_ANO_N_JULHO_ACUM = IND_VN_ANO_N_JULHO + IND_VN_ANO_N_JUNHO_ACUM;
    var IND_VN_ANO_N_AGOSTO_ACUM = IND_VN_ANO_N_AGOSTO + IND_VN_ANO_N_JULHO_ACUM;
    var IND_VN_ANO_N_SETEMBRO_ACUM = IND_VN_ANO_N_SETEMBRO + IND_VN_ANO_N_AGOSTO_ACUM;
    var IND_VN_ANO_N_OUTUBRO_ACUM = IND_VN_ANO_N_OUTUBRO + IND_VN_ANO_N_SETEMBRO_ACUM;
    var IND_VN_ANO_N_NOVEMBRO_ACUM = IND_VN_ANO_N_NOVEMBRO + IND_VN_ANO_N_OUTUBRO_ACUM;
    var IND_VN_ANO_N_DEZEMBRO_ACUM = IND_VN_ANO_N_DEZEMBRO + IND_VN_ANO_N_NOVEMBRO_ACUM;



    var IND_VN_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JANEIRO"])));
    var IND_VN_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_FEVEREIRO"]))) + IND_VN_ANO_N_1_JANEIRO_ACUM;
    var IND_VN_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MARCO"]))) + IND_VN_ANO_N_1_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_ABRIL"]))) + IND_VN_ANO_N_1_MARCO_ACUM;
    var IND_VN_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MAIO"]))) + IND_VN_ANO_N_1_ABRIL_ACUM;
    var IND_VN_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JUNHO"]))) + IND_VN_ANO_N_1_MAIO_ACUM;
    var IND_VN_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JULHO"]))) + IND_VN_ANO_N_1_JUNHO_ACUM;
    var IND_VN_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_AGOSTO"]))) + IND_VN_ANO_N_1_JULHO_ACUM;
    var IND_VN_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_SETEMBRO"]))) + IND_VN_ANO_N_1_AGOSTO_ACUM;
    var IND_VN_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_OUTUBRO"]))) + IND_VN_ANO_N_1_SETEMBRO_ACUM;
    var IND_VN_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_NOVEMBRO"]))) + IND_VN_ANO_N_1_OUTUBRO_ACUM;
    var IND_VN_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_DEZEMBRO"]))) + IND_VN_ANO_N_1_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_SUBCONTRATOS_VN_ANO_N_JANEIRO_ACUM = 'nd'; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SUBCONTRATOS_VN_ANO_N_JANEIRO_ACUM= FSE_SUBCONTRATOS_ANO_N_JANEIRO_ACUM/IND_VN_ANO_N_JANEIRO_ACUM*100; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = PESO_FSE_SUBCONTRATOS_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_SUBCONTRATOS_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SUBCONTRATOS_VN_ANO_N_FEVEREIRO_ACUM= FSE_SUBCONTRATOS_ANO_N_FEVEREIRO_ACUM/IND_VN_ANO_N_FEVEREIRO_ACUM*100; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_SUBCONTRATOS_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_SUBCONTRATOS_VN_ANO_N_MARCO_ACUM = 'nd'; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SUBCONTRATOS_VN_ANO_N_MARCO_ACUM= FSE_SUBCONTRATOS_ANO_N_MARCO_ACUM/IND_VN_ANO_N_MARCO_ACUM*100; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_MARCO_ACUM_MAX_MIN = PESO_FSE_SUBCONTRATOS_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_SUBCONTRATOS_VN_ANO_N_ABRIL_ACUM = 'nd'; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SUBCONTRATOS_VN_ANO_N_ABRIL_ACUM= FSE_SUBCONTRATOS_ANO_N_ABRIL_ACUM/IND_VN_ANO_N_ABRIL_ACUM*100; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_ABRIL_ACUM_MAX_MIN = PESO_FSE_SUBCONTRATOS_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_SUBCONTRATOS_VN_ANO_N_MAIO_ACUM = 'nd'; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SUBCONTRATOS_VN_ANO_N_MAIO_ACUM= FSE_SUBCONTRATOS_ANO_N_MAIO_ACUM/IND_VN_ANO_N_MAIO_ACUM*100; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_MAIO_ACUM_MAX_MIN = PESO_FSE_SUBCONTRATOS_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_SUBCONTRATOS_VN_ANO_N_JUNHO_ACUM = 'nd'; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SUBCONTRATOS_VN_ANO_N_JUNHO_ACUM= FSE_SUBCONTRATOS_ANO_N_JUNHO_ACUM/IND_VN_ANO_N_JUNHO_ACUM*100; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_JUNHO_ACUM_MAX_MIN = PESO_FSE_SUBCONTRATOS_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_SUBCONTRATOS_VN_ANO_N_JULHO_ACUM = 'nd'; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SUBCONTRATOS_VN_ANO_N_JULHO_ACUM= FSE_SUBCONTRATOS_ANO_N_JULHO_ACUM/IND_VN_ANO_N_JULHO_ACUM*100; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_JULHO_ACUM_MAX_MIN = PESO_FSE_SUBCONTRATOS_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_SUBCONTRATOS_VN_ANO_N_AGOSTO_ACUM = 'nd'; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SUBCONTRATOS_VN_ANO_N_AGOSTO_ACUM= FSE_SUBCONTRATOS_ANO_N_AGOSTO_ACUM/IND_VN_ANO_N_AGOSTO_ACUM*100; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = PESO_FSE_SUBCONTRATOS_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_SUBCONTRATOS_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SUBCONTRATOS_VN_ANO_N_SETEMBRO_ACUM= FSE_SUBCONTRATOS_ANO_N_SETEMBRO_ACUM/IND_VN_ANO_N_SETEMBRO_ACUM*100; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_SUBCONTRATOS_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_SUBCONTRATOS_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SUBCONTRATOS_VN_ANO_N_OUTUBRO_ACUM= FSE_SUBCONTRATOS_ANO_N_OUTUBRO_ACUM/IND_VN_ANO_N_OUTUBRO_ACUM*100; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_SUBCONTRATOS_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_SUBCONTRATOS_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SUBCONTRATOS_VN_ANO_N_NOVEMBRO_ACUM= FSE_SUBCONTRATOS_ANO_N_NOVEMBRO_ACUM/IND_VN_ANO_N_NOVEMBRO_ACUM*100; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_SUBCONTRATOS_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_SUBCONTRATOS_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SUBCONTRATOS_VN_ANO_N_DEZEMBRO_ACUM= FSE_SUBCONTRATOS_ANO_N_DEZEMBRO_ACUM/IND_VN_ANO_N_DEZEMBRO_ACUM*100; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_SUBCONTRATOS_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_JANEIRO_ACUM = 'nd'; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_JANEIRO_ACUM= FSE_SUBCONTRATOS_ANO_N_1_JANEIRO_ACUM/IND_VN_ANO_N_1_JANEIRO_ACUM*100; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_FEVEREIRO_ACUM= FSE_SUBCONTRATOS_ANO_N_1_FEVEREIRO_ACUM/IND_VN_ANO_N_1_FEVEREIRO_ACUM*100; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_MARCO_ACUM = 'nd'; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_MARCO_ACUM= FSE_SUBCONTRATOS_ANO_N_1_MARCO_ACUM/IND_VN_ANO_N_1_MARCO_ACUM*100; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_ABRIL_ACUM = 'nd'; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_ABRIL_ACUM= FSE_SUBCONTRATOS_ANO_N_1_ABRIL_ACUM/IND_VN_ANO_N_1_ABRIL_ACUM*100; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_MAIO_ACUM = 'nd'; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_MAIO_ACUM= FSE_SUBCONTRATOS_ANO_N_1_MAIO_ACUM/IND_VN_ANO_N_1_MAIO_ACUM*100; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_JUNHO_ACUM = 'nd'; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_JUNHO_ACUM= FSE_SUBCONTRATOS_ANO_N_1_JUNHO_ACUM/IND_VN_ANO_N_1_JUNHO_ACUM*100; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_JULHO_ACUM = 'nd'; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_JULHO_ACUM= FSE_SUBCONTRATOS_ANO_N_1_JULHO_ACUM/IND_VN_ANO_N_1_JULHO_ACUM*100; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_AGOSTO_ACUM = 'nd'; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_AGOSTO_ACUM= FSE_SUBCONTRATOS_ANO_N_1_AGOSTO_ACUM/IND_VN_ANO_N_1_AGOSTO_ACUM*100; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_SETEMBRO_ACUM = 'nd'; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_SETEMBRO_ACUM= FSE_SUBCONTRATOS_ANO_N_1_SETEMBRO_ACUM/IND_VN_ANO_N_1_SETEMBRO_ACUM*100; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_OUTUBRO_ACUM = 'nd'; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_OUTUBRO_ACUM= FSE_SUBCONTRATOS_ANO_N_1_OUTUBRO_ACUM/IND_VN_ANO_N_1_OUTUBRO_ACUM*100; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_NOVEMBRO_ACUM= FSE_SUBCONTRATOS_ANO_N_1_NOVEMBRO_ACUM/IND_VN_ANO_N_1_NOVEMBRO_ACUM*100; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_DEZEMBRO_ACUM= FSE_SUBCONTRATOS_ANO_N_1_DEZEMBRO_ACUM/IND_VN_ANO_N_1_DEZEMBRO_ACUM*100; var PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_VN_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JANEIRO_ACUM= ((IND_VN_ANO_N_JANEIRO_ACUM-IND_VN_ANO_N_1_JANEIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_JANEIRO_ACUM))*100; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_FEVEREIRO_ACUM= ((IND_VN_ANO_N_FEVEREIRO_ACUM-IND_VN_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_VN_ANO_N_MARCO_ACUM = 'nd'; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MARCO_ACUM= ((IND_VN_ANO_N_MARCO_ACUM-IND_VN_ANO_N_1_MARCO_ACUM)/Math.abs(IND_VN_ANO_N_1_MARCO_ACUM))*100; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = VAR_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_VN_ANO_N_ABRIL_ACUM = 'nd'; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_ABRIL_ACUM= ((IND_VN_ANO_N_ABRIL_ACUM-IND_VN_ANO_N_1_ABRIL_ACUM)/Math.abs(IND_VN_ANO_N_1_ABRIL_ACUM))*100; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_VN_ANO_N_MAIO_ACUM = 'nd'; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MAIO_ACUM= ((IND_VN_ANO_N_MAIO_ACUM-IND_VN_ANO_N_1_MAIO_ACUM)/Math.abs(IND_VN_ANO_N_1_MAIO_ACUM))*100; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = VAR_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_VN_ANO_N_JUNHO_ACUM = 'nd'; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JUNHO_ACUM= ((IND_VN_ANO_N_JUNHO_ACUM-IND_VN_ANO_N_1_JUNHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JUNHO_ACUM))*100; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_VN_ANO_N_JULHO_ACUM = 'nd'; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JULHO_ACUM= ((IND_VN_ANO_N_JULHO_ACUM-IND_VN_ANO_N_1_JULHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JULHO_ACUM))*100; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_VN_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_AGOSTO_ACUM= ((IND_VN_ANO_N_AGOSTO_ACUM-IND_VN_ANO_N_1_AGOSTO_ACUM)/Math.abs(IND_VN_ANO_N_1_AGOSTO_ACUM))*100; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_SETEMBRO_ACUM= ((IND_VN_ANO_N_SETEMBRO_ACUM-IND_VN_ANO_N_1_SETEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_OUTUBRO_ACUM= ((IND_VN_ANO_N_OUTUBRO_ACUM-IND_VN_ANO_N_1_OUTUBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_NOVEMBRO_ACUM= ((IND_VN_ANO_N_NOVEMBRO_ACUM-IND_VN_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_DEZEMBRO_ACUM= ((IND_VN_ANO_N_DEZEMBRO_ACUM-IND_VN_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_FSE_SUBCONTRATOS_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_FSE_SUBCONTRATOS_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_SUBCONTRATOS_ANO_N_JANEIRO_ACUM= ((FSE_SUBCONTRATOS_ANO_N_JANEIRO_ACUM-FSE_SUBCONTRATOS_ANO_N_1_JANEIRO_ACUM)/Math.abs(FSE_SUBCONTRATOS_ANO_N_1_JANEIRO_ACUM))*100; var VAR_FSE_SUBCONTRATOS_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_FSE_SUBCONTRATOS_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_FSE_SUBCONTRATOS_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_FSE_SUBCONTRATOS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_SUBCONTRATOS_ANO_N_FEVEREIRO_ACUM= ((FSE_SUBCONTRATOS_ANO_N_FEVEREIRO_ACUM-FSE_SUBCONTRATOS_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(FSE_SUBCONTRATOS_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_FSE_SUBCONTRATOS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_FSE_SUBCONTRATOS_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_FSE_SUBCONTRATOS_ANO_N_MARCO_ACUM = 'nd'; var VAR_FSE_SUBCONTRATOS_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_SUBCONTRATOS_ANO_N_MARCO_ACUM= ((FSE_SUBCONTRATOS_ANO_N_MARCO_ACUM-FSE_SUBCONTRATOS_ANO_N_1_MARCO_ACUM)/Math.abs(FSE_SUBCONTRATOS_ANO_N_1_MARCO_ACUM))*100; var VAR_FSE_SUBCONTRATOS_ANO_N_MARCO_ACUM_MAX_MIN = VAR_FSE_SUBCONTRATOS_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_FSE_SUBCONTRATOS_ANO_N_ABRIL_ACUM = 'nd'; var VAR_FSE_SUBCONTRATOS_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_SUBCONTRATOS_ANO_N_ABRIL_ACUM= ((FSE_SUBCONTRATOS_ANO_N_ABRIL_ACUM-FSE_SUBCONTRATOS_ANO_N_1_ABRIL_ACUM)/Math.abs(FSE_SUBCONTRATOS_ANO_N_1_ABRIL_ACUM))*100; var VAR_FSE_SUBCONTRATOS_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_FSE_SUBCONTRATOS_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_FSE_SUBCONTRATOS_ANO_N_MAIO_ACUM = 'nd'; var VAR_FSE_SUBCONTRATOS_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_SUBCONTRATOS_ANO_N_MAIO_ACUM= ((FSE_SUBCONTRATOS_ANO_N_MAIO_ACUM-FSE_SUBCONTRATOS_ANO_N_1_MAIO_ACUM)/Math.abs(FSE_SUBCONTRATOS_ANO_N_1_MAIO_ACUM))*100; var VAR_FSE_SUBCONTRATOS_ANO_N_MAIO_ACUM_MAX_MIN = VAR_FSE_SUBCONTRATOS_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_FSE_SUBCONTRATOS_ANO_N_JUNHO_ACUM = 'nd'; var VAR_FSE_SUBCONTRATOS_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_SUBCONTRATOS_ANO_N_JUNHO_ACUM= ((FSE_SUBCONTRATOS_ANO_N_JUNHO_ACUM-FSE_SUBCONTRATOS_ANO_N_1_JUNHO_ACUM)/Math.abs(FSE_SUBCONTRATOS_ANO_N_1_JUNHO_ACUM))*100; var VAR_FSE_SUBCONTRATOS_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_FSE_SUBCONTRATOS_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_FSE_SUBCONTRATOS_ANO_N_JULHO_ACUM = 'nd'; var VAR_FSE_SUBCONTRATOS_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_SUBCONTRATOS_ANO_N_JULHO_ACUM= ((FSE_SUBCONTRATOS_ANO_N_JULHO_ACUM-FSE_SUBCONTRATOS_ANO_N_1_JULHO_ACUM)/Math.abs(FSE_SUBCONTRATOS_ANO_N_1_JULHO_ACUM))*100; var VAR_FSE_SUBCONTRATOS_ANO_N_JULHO_ACUM_MAX_MIN = VAR_FSE_SUBCONTRATOS_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_FSE_SUBCONTRATOS_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_FSE_SUBCONTRATOS_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_SUBCONTRATOS_ANO_N_AGOSTO_ACUM= ((FSE_SUBCONTRATOS_ANO_N_AGOSTO_ACUM-FSE_SUBCONTRATOS_ANO_N_1_AGOSTO_ACUM)/Math.abs(FSE_SUBCONTRATOS_ANO_N_1_AGOSTO_ACUM))*100; var VAR_FSE_SUBCONTRATOS_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_FSE_SUBCONTRATOS_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_FSE_SUBCONTRATOS_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_FSE_SUBCONTRATOS_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_SUBCONTRATOS_ANO_N_SETEMBRO_ACUM= ((FSE_SUBCONTRATOS_ANO_N_SETEMBRO_ACUM-FSE_SUBCONTRATOS_ANO_N_1_SETEMBRO_ACUM)/Math.abs(FSE_SUBCONTRATOS_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_FSE_SUBCONTRATOS_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_FSE_SUBCONTRATOS_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_FSE_SUBCONTRATOS_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_FSE_SUBCONTRATOS_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_SUBCONTRATOS_ANO_N_OUTUBRO_ACUM= ((FSE_SUBCONTRATOS_ANO_N_OUTUBRO_ACUM-FSE_SUBCONTRATOS_ANO_N_1_OUTUBRO_ACUM)/Math.abs(FSE_SUBCONTRATOS_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_FSE_SUBCONTRATOS_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_FSE_SUBCONTRATOS_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_FSE_SUBCONTRATOS_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_FSE_SUBCONTRATOS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_SUBCONTRATOS_ANO_N_NOVEMBRO_ACUM= ((FSE_SUBCONTRATOS_ANO_N_NOVEMBRO_ACUM-FSE_SUBCONTRATOS_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(FSE_SUBCONTRATOS_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_FSE_SUBCONTRATOS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_FSE_SUBCONTRATOS_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_FSE_SUBCONTRATOS_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_FSE_SUBCONTRATOS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_SUBCONTRATOS_ANO_N_DEZEMBRO_ACUM= ((FSE_SUBCONTRATOS_ANO_N_DEZEMBRO_ACUM-FSE_SUBCONTRATOS_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(FSE_SUBCONTRATOS_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_FSE_SUBCONTRATOS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_FSE_SUBCONTRATOS_ANO_N_DEZEMBRO_ACUM };

    if( PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_JANEIRO_ACUM > PESO_FSE_SUBCONTRATOS_VN_ANO_N_JANEIRO_ACUM) { var  INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_JANEIRO_ACUM=PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_JANEIRO_ACUM ; } else { var  INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_JANEIRO_ACUM=PESO_FSE_SUBCONTRATOS_VN_ANO_N_JANEIRO_ACUM ; }
    if( PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_FEVEREIRO_ACUM > PESO_FSE_SUBCONTRATOS_VN_ANO_N_FEVEREIRO_ACUM) { var  INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_FEVEREIRO_ACUM=PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_FEVEREIRO_ACUM ; } else { var  INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_FEVEREIRO_ACUM=PESO_FSE_SUBCONTRATOS_VN_ANO_N_FEVEREIRO_ACUM ; }
    if( PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_MARCO_ACUM > PESO_FSE_SUBCONTRATOS_VN_ANO_N_MARCO_ACUM) { var  INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_MARCO_ACUM=PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_MARCO_ACUM ; } else { var  INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_MARCO_ACUM=PESO_FSE_SUBCONTRATOS_VN_ANO_N_MARCO_ACUM ; }
    if( PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_ABRIL_ACUM > PESO_FSE_SUBCONTRATOS_VN_ANO_N_ABRIL_ACUM) { var  INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_ABRIL_ACUM=PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_ABRIL_ACUM ; } else { var  INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_ABRIL_ACUM=PESO_FSE_SUBCONTRATOS_VN_ANO_N_ABRIL_ACUM ; }
    if( PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_MAIO_ACUM > PESO_FSE_SUBCONTRATOS_VN_ANO_N_MAIO_ACUM) { var  INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_MAIO_ACUM=PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_MAIO_ACUM ; } else { var  INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_MAIO_ACUM=PESO_FSE_SUBCONTRATOS_VN_ANO_N_MAIO_ACUM ; }
    if( PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_JUNHO_ACUM > PESO_FSE_SUBCONTRATOS_VN_ANO_N_JUNHO_ACUM) { var  INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_JUNHO_ACUM=PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_JUNHO_ACUM ; } else { var  INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_JUNHO_ACUM=PESO_FSE_SUBCONTRATOS_VN_ANO_N_JUNHO_ACUM ; }
    if( PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_JULHO_ACUM > PESO_FSE_SUBCONTRATOS_VN_ANO_N_JULHO_ACUM) { var  INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_JULHO_ACUM=PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_JULHO_ACUM ; } else { var  INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_JULHO_ACUM=PESO_FSE_SUBCONTRATOS_VN_ANO_N_JULHO_ACUM ; }
    if( PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_AGOSTO_ACUM > PESO_FSE_SUBCONTRATOS_VN_ANO_N_AGOSTO_ACUM) { var  INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_AGOSTO_ACUM=PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_AGOSTO_ACUM ; } else { var  INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_AGOSTO_ACUM=PESO_FSE_SUBCONTRATOS_VN_ANO_N_AGOSTO_ACUM ; }
    if( PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_SETEMBRO_ACUM > PESO_FSE_SUBCONTRATOS_VN_ANO_N_SETEMBRO_ACUM) { var  INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_SETEMBRO_ACUM=PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_SETEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_SETEMBRO_ACUM=PESO_FSE_SUBCONTRATOS_VN_ANO_N_SETEMBRO_ACUM ; }
    if( PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_OUTUBRO_ACUM > PESO_FSE_SUBCONTRATOS_VN_ANO_N_OUTUBRO_ACUM) { var  INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_OUTUBRO_ACUM=PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_OUTUBRO_ACUM ; } else { var  INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_OUTUBRO_ACUM=PESO_FSE_SUBCONTRATOS_VN_ANO_N_OUTUBRO_ACUM ; }
    if( PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_NOVEMBRO_ACUM > PESO_FSE_SUBCONTRATOS_VN_ANO_N_NOVEMBRO_ACUM) { var  INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_NOVEMBRO_ACUM=PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_NOVEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_NOVEMBRO_ACUM=PESO_FSE_SUBCONTRATOS_VN_ANO_N_NOVEMBRO_ACUM ; }
    if( PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_DEZEMBRO_ACUM > PESO_FSE_SUBCONTRATOS_VN_ANO_N_DEZEMBRO_ACUM) { var  INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_DEZEMBRO_ACUM=PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_DEZEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_DEZEMBRO_ACUM=PESO_FSE_SUBCONTRATOS_VN_ANO_N_DEZEMBRO_ACUM ; }



    var fillBetweenLinesPlugin = {
        afterDatasetsDraw: function (chart) {
            var ctx = chart.chart.ctx;
            var xaxis = chart.scales['x-axis-0'];
            var yaxis = chart.scales['y-axis-0'];
            var datasets = chart.data.datasets;
            ctx.save();

            for (var d = 0; d < datasets.length; d++) {
                var dataset = datasets[d];
                if (dataset.fillBetweenSet == undefined) {
                    continue;
                }

                // get meta for both data sets
                var meta1 = chart.getDatasetMeta(d);
                var meta2 = chart.getDatasetMeta(dataset.fillBetweenSet);

                // do not draw fill if one of the datasets is hidden
                if (meta1.hidden || meta2.hidden) continue;

                // create fill areas in pairs
                for (var p = 0; p < meta1.data.length-1;p++) {
                    // if null skip
                    if (dataset.data[p] == null || dataset.data[p+1] == null) continue;

                    ctx.beginPath();

                    // trace line 1
                    var curr = meta1.data[p];
                    var next = meta1.data[p+1];
                    ctx.moveTo(curr._view.x, curr._view.y);
                    ctx.lineTo(curr._view.x, curr._view.y);
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(next._view.x, curr._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        ctx.bezierCurveTo(
                          curr._view.controlPointNextX,
                          curr._view.controlPointNextY,
                          next._view.controlPointPreviousX,
                          next._view.controlPointPreviousY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // connect dataset1 to dataset2
                    var curr = meta2.data[p+1];
                    var next = meta2.data[p];
                    ctx.lineTo(curr._view.x, curr._view.y);

                    // trace BACKWORDS set2 to complete the box
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(curr._view.x, next._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        // reverse bezier
                        ctx.bezierCurveTo(
                          curr._view.controlPointPreviousX,
                          curr._view.controlPointPreviousY,
                          next._view.controlPointNextX,
                          next._view.controlPointNextY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // close the loop and fill with shading
                    ctx.closePath();
                    ctx.fillStyle = dataset.fillBetweenColor || "rgba(0,0,0,0.1)";
                    ctx.fill();
                } // end for p loop
            }
        } // end afterDatasetsDraw
    }; // end fillBetweenLinesPlugin

    Chart.pluginService.register(fillBetweenLinesPlugin);



    var GRAFICO_FSE_RESULT_MENSAL_COMP_003=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_003').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_003=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_003, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label:  'Peso SubcontratosvsVN(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   //borderColor: "#F00",
                   fill: false,
                   steppedLine: false,
                   tension: 0.5,
                   fillBetweenSet: 1,
                   fillBetweenColor: "rgba(0, 221, 0, 0.1)",
                   data: [
                   PESO_FSE_SUBCONTRATOS_VN_ANO_N_JANEIRO_ACUM,
                   PESO_FSE_SUBCONTRATOS_VN_ANO_N_FEVEREIRO_ACUM,
                   PESO_FSE_SUBCONTRATOS_VN_ANO_N_MARCO_ACUM,
                   PESO_FSE_SUBCONTRATOS_VN_ANO_N_ABRIL_ACUM,
                   PESO_FSE_SUBCONTRATOS_VN_ANO_N_MAIO_ACUM,
                   PESO_FSE_SUBCONTRATOS_VN_ANO_N_JUNHO_ACUM,
                   PESO_FSE_SUBCONTRATOS_VN_ANO_N_JULHO_ACUM,
                   PESO_FSE_SUBCONTRATOS_VN_ANO_N_AGOSTO_ACUM,
                   PESO_FSE_SUBCONTRATOS_VN_ANO_N_SETEMBRO_ACUM,
                   PESO_FSE_SUBCONTRATOS_VN_ANO_N_OUTUBRO_ACUM,
                   PESO_FSE_SUBCONTRATOS_VN_ANO_N_NOVEMBRO_ACUM,
                   PESO_FSE_SUBCONTRATOS_VN_ANO_N_DEZEMBRO_ACUM,

                   ],
                   type: 'line'


               },
                {
                    label: 'Peso SubcontratosvsVN(ac) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'A',
                    //backgroundColor: 'rgb(17, 121, 240)',
                    borderColor: 'rgb(0,221,0)',
                    //borderColor: "#00F",
                    fill: false,
                    steppedLine: false,
                    tension: 0.5,
                    data: [
                   PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_JANEIRO_ACUM,
                   PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_FEVEREIRO_ACUM,
                   PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_MARCO_ACUM,
                   PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_ABRIL_ACUM,
                   PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_MAIO_ACUM,
                   PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_JUNHO_ACUM,
                   PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_JULHO_ACUM,
                   PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_AGOSTO_ACUM,
                   PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_SETEMBRO_ACUM,
                   PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_OUTUBRO_ACUM,
                   PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_NOVEMBRO_ACUM,
                   PESO_FSE_SUBCONTRATOS_VN_ANO_N_1_DEZEMBRO_ACUM,
                    ],
                    type: 'line'
                },
    {
        label: 'Ineficiência',
        yAxisID: 'A',
        backgroundColor: "rgba(255, 0, 0, 0.2)",
        borderColor: 'rgba(255, 255, 255, 0.1)',
        //borderColor: "#0D0",
        fill: false,
        steppedLine: false,
        tension: 0.5,
        fillBetweenSet: 1,
        fillBetweenColor: "rgba(255, 0, 0, 0.2)",
        data: [
    INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_JANEIRO_ACUM,
    INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_FEVEREIRO_ACUM,
    INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_MARCO_ACUM,
    INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_ABRIL_ACUM,
    INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_MAIO_ACUM,
    INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_JUNHO_ACUM,
    INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_JULHO_ACUM,
    INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_AGOSTO_ACUM,
    INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_SETEMBRO_ACUM,
    INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_OUTUBRO_ACUM,
    INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_NOVEMBRO_ACUM,
    INEFICIENCIA_FSE_SUBCONTRATOS_ANO_N_DEZEMBRO_ACUM,
        ],
        type: 'line'
    },

            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_SUBCONTRATOS COMP',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                //min:  Math.round(FSE_SUBCONTRATOS_Mensal_Eixo_min_princ__,0),
                                                //max:  Math.round(FSE_SUBCONTRATOS_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString()+ "%";
                                                }
                                            }
                                        },

                    //{ id: 'B',
                    //type: 'linear',
                    //position: 'right',
                    //ticks: {
                    //    //min:  Math.round(FSE_SUBCONTRATOS_Mensal_Eixo_min_princ__,0),
                    //    //max:  Math.round(FSE_SUBCONTRATOS_Mensal_Eixo_max_princ__,0),
                    //    beginAtZero: true,
                    //    callback: function(value, index, values) {
                    //        return value.toLocaleString();
                    //        }
                    //    }
                    //},






                ]
            }
        },

    });

</script>


@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_004-----------------------------------------------------------*@
<script>

    if(@ViewData["MES_ACUM_REAL"]<1){ var IND_VN_ANO_N_JANEIRO = 'nd'; var IND_VN_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JANEIRO"]))); var IND_VN_ANO_N_JANEIRO_MAX_MIN = IND_VN_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var IND_VN_ANO_N_FEVEREIRO = 'nd'; var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_FEVEREIRO"]))); var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = IND_VN_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var IND_VN_ANO_N_MARCO = 'nd'; var IND_VN_ANO_N_MARCO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MARCO"]))); var IND_VN_ANO_N_MARCO_MAX_MIN = IND_VN_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var IND_VN_ANO_N_ABRIL = 'nd'; var IND_VN_ANO_N_ABRIL_MAX_MIN = 0;  } else { var IND_VN_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_ABRIL"]))); var IND_VN_ANO_N_ABRIL_MAX_MIN = IND_VN_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var IND_VN_ANO_N_MAIO = 'nd'; var IND_VN_ANO_N_MAIO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MAIO"]))); var IND_VN_ANO_N_MAIO_MAX_MIN = IND_VN_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var IND_VN_ANO_N_JUNHO = 'nd'; var IND_VN_ANO_N_JUNHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JUNHO"]))); var IND_VN_ANO_N_JUNHO_MAX_MIN = IND_VN_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var IND_VN_ANO_N_JULHO = 'nd'; var IND_VN_ANO_N_JULHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JULHO"]))); var IND_VN_ANO_N_JULHO_MAX_MIN = IND_VN_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var IND_VN_ANO_N_AGOSTO = 'nd'; var IND_VN_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_AGOSTO"]))); var IND_VN_ANO_N_AGOSTO_MAX_MIN = IND_VN_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var IND_VN_ANO_N_SETEMBRO = 'nd'; var IND_VN_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_SETEMBRO"]))); var IND_VN_ANO_N_SETEMBRO_MAX_MIN = IND_VN_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var IND_VN_ANO_N_OUTUBRO = 'nd'; var IND_VN_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_OUTUBRO"]))); var IND_VN_ANO_N_OUTUBRO_MAX_MIN = IND_VN_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var IND_VN_ANO_N_NOVEMBRO = 'nd'; var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_NOVEMBRO"]))); var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = IND_VN_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var IND_VN_ANO_N_DEZEMBRO = 'nd'; var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_DEZEMBRO"]))); var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = IND_VN_ANO_N_DEZEMBRO };

    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_TRAB_ESPECIAL_ANO_N_JANEIRO = 'nd'; var FSE_TRAB_ESPECIAL_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var FSE_TRAB_ESPECIAL_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_JANEIRO"]))); var FSE_TRAB_ESPECIAL_ANO_N_JANEIRO_MAX_MIN = FSE_TRAB_ESPECIAL_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_TRAB_ESPECIAL_ANO_N_FEVEREIRO = 'nd'; var FSE_TRAB_ESPECIAL_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var FSE_TRAB_ESPECIAL_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_FEVEREIRO"]))); var FSE_TRAB_ESPECIAL_ANO_N_FEVEREIRO_MAX_MIN = FSE_TRAB_ESPECIAL_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_TRAB_ESPECIAL_ANO_N_MARCO = 'nd'; var FSE_TRAB_ESPECIAL_ANO_N_MARCO_MAX_MIN = 0;  } else { var FSE_TRAB_ESPECIAL_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_MARCO"]))); var FSE_TRAB_ESPECIAL_ANO_N_MARCO_MAX_MIN = FSE_TRAB_ESPECIAL_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_TRAB_ESPECIAL_ANO_N_ABRIL = 'nd'; var FSE_TRAB_ESPECIAL_ANO_N_ABRIL_MAX_MIN = 0;  } else { var FSE_TRAB_ESPECIAL_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_ABRIL"]))); var FSE_TRAB_ESPECIAL_ANO_N_ABRIL_MAX_MIN = FSE_TRAB_ESPECIAL_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_TRAB_ESPECIAL_ANO_N_MAIO = 'nd'; var FSE_TRAB_ESPECIAL_ANO_N_MAIO_MAX_MIN = 0;  } else { var FSE_TRAB_ESPECIAL_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_MAIO"]))); var FSE_TRAB_ESPECIAL_ANO_N_MAIO_MAX_MIN = FSE_TRAB_ESPECIAL_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_TRAB_ESPECIAL_ANO_N_JUNHO = 'nd'; var FSE_TRAB_ESPECIAL_ANO_N_JUNHO_MAX_MIN = 0;  } else { var FSE_TRAB_ESPECIAL_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_JUNHO"]))); var FSE_TRAB_ESPECIAL_ANO_N_JUNHO_MAX_MIN = FSE_TRAB_ESPECIAL_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_TRAB_ESPECIAL_ANO_N_JULHO = 'nd'; var FSE_TRAB_ESPECIAL_ANO_N_JULHO_MAX_MIN = 0;  } else { var FSE_TRAB_ESPECIAL_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_JULHO"]))); var FSE_TRAB_ESPECIAL_ANO_N_JULHO_MAX_MIN = FSE_TRAB_ESPECIAL_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_TRAB_ESPECIAL_ANO_N_AGOSTO = 'nd'; var FSE_TRAB_ESPECIAL_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var FSE_TRAB_ESPECIAL_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_AGOSTO"]))); var FSE_TRAB_ESPECIAL_ANO_N_AGOSTO_MAX_MIN = FSE_TRAB_ESPECIAL_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_TRAB_ESPECIAL_ANO_N_SETEMBRO = 'nd'; var FSE_TRAB_ESPECIAL_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var FSE_TRAB_ESPECIAL_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_SETEMBRO"]))); var FSE_TRAB_ESPECIAL_ANO_N_SETEMBRO_MAX_MIN = FSE_TRAB_ESPECIAL_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_TRAB_ESPECIAL_ANO_N_OUTUBRO = 'nd'; var FSE_TRAB_ESPECIAL_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var FSE_TRAB_ESPECIAL_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_OUTUBRO"]))); var FSE_TRAB_ESPECIAL_ANO_N_OUTUBRO_MAX_MIN = FSE_TRAB_ESPECIAL_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_TRAB_ESPECIAL_ANO_N_NOVEMBRO = 'nd'; var FSE_TRAB_ESPECIAL_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var FSE_TRAB_ESPECIAL_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_NOVEMBRO"]))); var FSE_TRAB_ESPECIAL_ANO_N_NOVEMBRO_MAX_MIN = FSE_TRAB_ESPECIAL_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_TRAB_ESPECIAL_ANO_N_DEZEMBRO = 'nd'; var FSE_TRAB_ESPECIAL_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var FSE_TRAB_ESPECIAL_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_DEZEMBRO"]))); var FSE_TRAB_ESPECIAL_ANO_N_DEZEMBRO_MAX_MIN = FSE_TRAB_ESPECIAL_ANO_N_DEZEMBRO };


    var FSE_TRAB_ESPECIAL_ANO_N_JANEIRO_ACUM = FSE_TRAB_ESPECIAL_ANO_N_JANEIRO;
    var FSE_TRAB_ESPECIAL_ANO_N_FEVEREIRO_ACUM = FSE_TRAB_ESPECIAL_ANO_N_FEVEREIRO + FSE_TRAB_ESPECIAL_ANO_N_JANEIRO_ACUM;
    var FSE_TRAB_ESPECIAL_ANO_N_MARCO_ACUM = FSE_TRAB_ESPECIAL_ANO_N_MARCO + FSE_TRAB_ESPECIAL_ANO_N_FEVEREIRO_ACUM;
    var FSE_TRAB_ESPECIAL_ANO_N_ABRIL_ACUM = FSE_TRAB_ESPECIAL_ANO_N_ABRIL + FSE_TRAB_ESPECIAL_ANO_N_MARCO_ACUM;
    var FSE_TRAB_ESPECIAL_ANO_N_MAIO_ACUM = FSE_TRAB_ESPECIAL_ANO_N_MAIO + FSE_TRAB_ESPECIAL_ANO_N_ABRIL_ACUM;
    var FSE_TRAB_ESPECIAL_ANO_N_JUNHO_ACUM = FSE_TRAB_ESPECIAL_ANO_N_JUNHO + FSE_TRAB_ESPECIAL_ANO_N_MAIO_ACUM;
    var FSE_TRAB_ESPECIAL_ANO_N_JULHO_ACUM = FSE_TRAB_ESPECIAL_ANO_N_JULHO + FSE_TRAB_ESPECIAL_ANO_N_JUNHO_ACUM;
    var FSE_TRAB_ESPECIAL_ANO_N_AGOSTO_ACUM = FSE_TRAB_ESPECIAL_ANO_N_AGOSTO + FSE_TRAB_ESPECIAL_ANO_N_JULHO_ACUM;
    var FSE_TRAB_ESPECIAL_ANO_N_SETEMBRO_ACUM = FSE_TRAB_ESPECIAL_ANO_N_SETEMBRO + FSE_TRAB_ESPECIAL_ANO_N_AGOSTO_ACUM;
    var FSE_TRAB_ESPECIAL_ANO_N_OUTUBRO_ACUM = FSE_TRAB_ESPECIAL_ANO_N_OUTUBRO + FSE_TRAB_ESPECIAL_ANO_N_SETEMBRO_ACUM;
    var FSE_TRAB_ESPECIAL_ANO_N_NOVEMBRO_ACUM = FSE_TRAB_ESPECIAL_ANO_N_NOVEMBRO + FSE_TRAB_ESPECIAL_ANO_N_OUTUBRO_ACUM;
    var FSE_TRAB_ESPECIAL_ANO_N_DEZEMBRO_ACUM = FSE_TRAB_ESPECIAL_ANO_N_DEZEMBRO + FSE_TRAB_ESPECIAL_ANO_N_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_TRAB_ESPECIAL_ANO_N_JANEIRO_ACUM = 'nd'; var FSE_TRAB_ESPECIAL_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var FSE_TRAB_ESPECIAL_ANO_N_JANEIRO_ACUM= FSE_TRAB_ESPECIAL_ANO_N_JANEIRO_ACUM; var FSE_TRAB_ESPECIAL_ANO_N_JANEIRO_ACUM_MAX_MIN = FSE_TRAB_ESPECIAL_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_TRAB_ESPECIAL_ANO_N_FEVEREIRO_ACUM = 'nd'; var FSE_TRAB_ESPECIAL_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var FSE_TRAB_ESPECIAL_ANO_N_FEVEREIRO_ACUM= FSE_TRAB_ESPECIAL_ANO_N_FEVEREIRO_ACUM; var FSE_TRAB_ESPECIAL_ANO_N_FEVEREIRO_ACUM_MAX_MIN = FSE_TRAB_ESPECIAL_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_TRAB_ESPECIAL_ANO_N_MARCO_ACUM = 'nd'; var FSE_TRAB_ESPECIAL_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var FSE_TRAB_ESPECIAL_ANO_N_MARCO_ACUM= FSE_TRAB_ESPECIAL_ANO_N_MARCO_ACUM; var FSE_TRAB_ESPECIAL_ANO_N_MARCO_ACUM_MAX_MIN = FSE_TRAB_ESPECIAL_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_TRAB_ESPECIAL_ANO_N_ABRIL_ACUM = 'nd'; var FSE_TRAB_ESPECIAL_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var FSE_TRAB_ESPECIAL_ANO_N_ABRIL_ACUM= FSE_TRAB_ESPECIAL_ANO_N_ABRIL_ACUM; var FSE_TRAB_ESPECIAL_ANO_N_ABRIL_ACUM_MAX_MIN = FSE_TRAB_ESPECIAL_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_TRAB_ESPECIAL_ANO_N_MAIO_ACUM = 'nd'; var FSE_TRAB_ESPECIAL_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var FSE_TRAB_ESPECIAL_ANO_N_MAIO_ACUM= FSE_TRAB_ESPECIAL_ANO_N_MAIO_ACUM; var FSE_TRAB_ESPECIAL_ANO_N_MAIO_ACUM_MAX_MIN = FSE_TRAB_ESPECIAL_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_TRAB_ESPECIAL_ANO_N_JUNHO_ACUM = 'nd'; var FSE_TRAB_ESPECIAL_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var FSE_TRAB_ESPECIAL_ANO_N_JUNHO_ACUM= FSE_TRAB_ESPECIAL_ANO_N_JUNHO_ACUM; var FSE_TRAB_ESPECIAL_ANO_N_JUNHO_ACUM_MAX_MIN = FSE_TRAB_ESPECIAL_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_TRAB_ESPECIAL_ANO_N_JULHO_ACUM = 'nd'; var FSE_TRAB_ESPECIAL_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var FSE_TRAB_ESPECIAL_ANO_N_JULHO_ACUM= FSE_TRAB_ESPECIAL_ANO_N_JULHO_ACUM; var FSE_TRAB_ESPECIAL_ANO_N_JULHO_ACUM_MAX_MIN = FSE_TRAB_ESPECIAL_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_TRAB_ESPECIAL_ANO_N_AGOSTO_ACUM = 'nd'; var FSE_TRAB_ESPECIAL_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var FSE_TRAB_ESPECIAL_ANO_N_AGOSTO_ACUM= FSE_TRAB_ESPECIAL_ANO_N_AGOSTO_ACUM; var FSE_TRAB_ESPECIAL_ANO_N_AGOSTO_ACUM_MAX_MIN = FSE_TRAB_ESPECIAL_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_TRAB_ESPECIAL_ANO_N_SETEMBRO_ACUM = 'nd'; var FSE_TRAB_ESPECIAL_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_TRAB_ESPECIAL_ANO_N_SETEMBRO_ACUM= FSE_TRAB_ESPECIAL_ANO_N_SETEMBRO_ACUM; var FSE_TRAB_ESPECIAL_ANO_N_SETEMBRO_ACUM_MAX_MIN = FSE_TRAB_ESPECIAL_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_TRAB_ESPECIAL_ANO_N_OUTUBRO_ACUM = 'nd'; var FSE_TRAB_ESPECIAL_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var FSE_TRAB_ESPECIAL_ANO_N_OUTUBRO_ACUM= FSE_TRAB_ESPECIAL_ANO_N_OUTUBRO_ACUM; var FSE_TRAB_ESPECIAL_ANO_N_OUTUBRO_ACUM_MAX_MIN = FSE_TRAB_ESPECIAL_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_TRAB_ESPECIAL_ANO_N_NOVEMBRO_ACUM = 'nd'; var FSE_TRAB_ESPECIAL_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_TRAB_ESPECIAL_ANO_N_NOVEMBRO_ACUM= FSE_TRAB_ESPECIAL_ANO_N_NOVEMBRO_ACUM; var FSE_TRAB_ESPECIAL_ANO_N_NOVEMBRO_ACUM_MAX_MIN = FSE_TRAB_ESPECIAL_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_TRAB_ESPECIAL_ANO_N_DEZEMBRO_ACUM = 'nd'; var FSE_TRAB_ESPECIAL_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_TRAB_ESPECIAL_ANO_N_DEZEMBRO_ACUM= FSE_TRAB_ESPECIAL_ANO_N_DEZEMBRO_ACUM; var FSE_TRAB_ESPECIAL_ANO_N_DEZEMBRO_ACUM_MAX_MIN = FSE_TRAB_ESPECIAL_ANO_N_DEZEMBRO_ACUM };




    var FSE_TRAB_ESPECIAL_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_JANEIRO"])));
    var FSE_TRAB_ESPECIAL_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_FEVEREIRO"]))) + FSE_TRAB_ESPECIAL_ANO_N_1_JANEIRO_ACUM;
    var FSE_TRAB_ESPECIAL_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_MARCO"]))) + FSE_TRAB_ESPECIAL_ANO_N_1_FEVEREIRO_ACUM;
    var FSE_TRAB_ESPECIAL_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_ABRIL"]))) + FSE_TRAB_ESPECIAL_ANO_N_1_MARCO_ACUM;
    var FSE_TRAB_ESPECIAL_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_MAIO"]))) + FSE_TRAB_ESPECIAL_ANO_N_1_ABRIL_ACUM;
    var FSE_TRAB_ESPECIAL_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_JUNHO"]))) + FSE_TRAB_ESPECIAL_ANO_N_1_MAIO_ACUM;
    var FSE_TRAB_ESPECIAL_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_JULHO"]))) + FSE_TRAB_ESPECIAL_ANO_N_1_JUNHO_ACUM;
    var FSE_TRAB_ESPECIAL_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_AGOSTO"]))) + FSE_TRAB_ESPECIAL_ANO_N_1_JULHO_ACUM;
    var FSE_TRAB_ESPECIAL_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_SETEMBRO"]))) + FSE_TRAB_ESPECIAL_ANO_N_1_AGOSTO_ACUM;
    var FSE_TRAB_ESPECIAL_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_OUTUBRO"]))) + FSE_TRAB_ESPECIAL_ANO_N_1_SETEMBRO_ACUM;
    var FSE_TRAB_ESPECIAL_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_NOVEMBRO"]))) + FSE_TRAB_ESPECIAL_ANO_N_1_OUTUBRO_ACUM;
    var FSE_TRAB_ESPECIAL_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_DEZEMBRO"]))) + FSE_TRAB_ESPECIAL_ANO_N_1_NOVEMBRO_ACUM;


    var FSE_TRAB_ESPECIAL_Mensal_Eixo_max_princ= Math.max(
                       FSE_TRAB_ESPECIAL_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_TRAB_ESPECIAL_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_TRAB_ESPECIAL_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_TRAB_ESPECIAL_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_TRAB_ESPECIAL_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_TRAB_ESPECIAL_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_TRAB_ESPECIAL_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_TRAB_ESPECIAL_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_TRAB_ESPECIAL_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_TRAB_ESPECIAL_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_TRAB_ESPECIAL_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_TRAB_ESPECIAL_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_TRAB_ESPECIAL_ANO_N_1_JANEIRO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_1_MARCO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_1_ABRIL_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_1_MAIO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_1_JUNHO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_1_JULHO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_1_AGOSTO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_1_SETEMBRO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_1_OUTUBRO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_1_DEZEMBRO_ACUM
                             );
    var FSE_TRAB_ESPECIAL_Mensal_Eixo_min_princ= Math.min(

                       FSE_TRAB_ESPECIAL_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_TRAB_ESPECIAL_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_TRAB_ESPECIAL_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_TRAB_ESPECIAL_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_TRAB_ESPECIAL_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_TRAB_ESPECIAL_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_TRAB_ESPECIAL_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_TRAB_ESPECIAL_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_TRAB_ESPECIAL_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_TRAB_ESPECIAL_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_TRAB_ESPECIAL_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_TRAB_ESPECIAL_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_TRAB_ESPECIAL_ANO_N_1_JANEIRO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_1_MARCO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_1_ABRIL_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_1_MAIO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_1_JUNHO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_1_JULHO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_1_AGOSTO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_1_SETEMBRO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_1_OUTUBRO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_1_DEZEMBRO_ACUM
                           );
    var FSE_TRAB_ESPECIAL_Mensal_Eixo_max_secon= Math.max(
                       FSE_TRAB_ESPECIAL_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_TRAB_ESPECIAL_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_TRAB_ESPECIAL_ANO_N_MARCO_MAX_MIN ,
                       FSE_TRAB_ESPECIAL_ANO_N_ABRIL_MAX_MIN ,
                       FSE_TRAB_ESPECIAL_ANO_N_MAIO_MAX_MIN ,
                       FSE_TRAB_ESPECIAL_ANO_N_JUNHO_MAX_MIN ,
                       FSE_TRAB_ESPECIAL_ANO_N_JULHO_MAX_MIN ,
                       FSE_TRAB_ESPECIAL_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_TRAB_ESPECIAL_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_TRAB_ESPECIAL_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_TRAB_ESPECIAL_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_TRAB_ESPECIAL_ANO_N_DEZEMBRO_MAX_MIN ,



                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_DEZEMBRO"])))

                            );
    var FSE_TRAB_ESPECIAL_Mensal_Eixo_min_secon= Math.min(
                       FSE_TRAB_ESPECIAL_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_TRAB_ESPECIAL_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_TRAB_ESPECIAL_ANO_N_MARCO_MAX_MIN ,
                       FSE_TRAB_ESPECIAL_ANO_N_ABRIL_MAX_MIN ,
                       FSE_TRAB_ESPECIAL_ANO_N_MAIO_MAX_MIN ,
                       FSE_TRAB_ESPECIAL_ANO_N_JUNHO_MAX_MIN ,
                       FSE_TRAB_ESPECIAL_ANO_N_JULHO_MAX_MIN ,
                       FSE_TRAB_ESPECIAL_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_TRAB_ESPECIAL_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_TRAB_ESPECIAL_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_TRAB_ESPECIAL_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_TRAB_ESPECIAL_ANO_N_DEZEMBRO_MAX_MIN ,


                           @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_DEZEMBRO"])))

                          );

    //NOTA TA: Aqui trato o minimo e o maximo do eixo principal
    if(Math.abs(FSE_TRAB_ESPECIAL_Mensal_Eixo_max_princ)>=Math.abs(FSE_TRAB_ESPECIAL_Mensal_Eixo_min_princ))
    {
        var FSE_TRAB_ESPECIAL_Mensal_Eixo_max_princ_=(Math.ceil(FSE_TRAB_ESPECIAL_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_TRAB_ESPECIAL_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_TRAB_ESPECIAL_Mensal_Eixo_max_princ),0).toString().length-1);
        var FSE_TRAB_ESPECIAL_Mensal_Eixo_min_princ_= (Math.floor(FSE_TRAB_ESPECIAL_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_TRAB_ESPECIAL_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_TRAB_ESPECIAL_Mensal_Eixo_max_princ),0).toString().length-1);
        //alert(FSE_TRAB_ESPECIAL_Mensal_Eixo_max_princ_);
        //alert(FSE_TRAB_ESPECIAL_Mensal_Eixo_min_princ_);
    }
    else
    {
        var FSE_TRAB_ESPECIAL_Mensal_Eixo_max_princ_=(Math.ceil(FSE_TRAB_ESPECIAL_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_TRAB_ESPECIAL_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_TRAB_ESPECIAL_Mensal_Eixo_min_princ),0).toString().length-1);
        var FSE_TRAB_ESPECIAL_Mensal_Eixo_min_princ_= (Math.floor(FSE_TRAB_ESPECIAL_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_TRAB_ESPECIAL_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_TRAB_ESPECIAL_Mensal_Eixo_min_princ),0).toString().length-1);}

    //NOTA TA: Aqui trato o minimo e o maximo do eixo secundario

    if(Math.abs(FSE_TRAB_ESPECIAL_Mensal_Eixo_max_secon)>=Math.abs(FSE_TRAB_ESPECIAL_Mensal_Eixo_min_secon))
    {
        var FSE_TRAB_ESPECIAL_Mensal_Eixo_max_secon_=(Math.ceil(FSE_TRAB_ESPECIAL_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_TRAB_ESPECIAL_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_TRAB_ESPECIAL_Mensal_Eixo_max_secon),0).toString().length-1);
        var FSE_TRAB_ESPECIAL_Mensal_Eixo_min_secon_= (Math.floor(FSE_TRAB_ESPECIAL_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_TRAB_ESPECIAL_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_TRAB_ESPECIAL_Mensal_Eixo_max_secon),0).toString().length-1);
        //alert(FSE_TRAB_ESPECIAL_Mensal_Eixo_max_secon_);
        //alert(FSE_TRAB_ESPECIAL_Mensal_Eixo_min_secon_);
    }
    else
    {
        var FSE_TRAB_ESPECIAL_Mensal_Eixo_max_secon_=(Math.ceil(FSE_TRAB_ESPECIAL_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_TRAB_ESPECIAL_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_TRAB_ESPECIAL_Mensal_Eixo_min_secon),0).toString().length-1);
        var FSE_TRAB_ESPECIAL_Mensal_Eixo_min_secon_= (Math.floor(FSE_TRAB_ESPECIAL_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_TRAB_ESPECIAL_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_TRAB_ESPECIAL_Mensal_Eixo_min_secon),0).toString().length-1);}


    if(Math.abs(FSE_TRAB_ESPECIAL_Mensal_Eixo_min_princ)/Math.abs(FSE_TRAB_ESPECIAL_Mensal_Eixo_max_princ)>=Math.abs(FSE_TRAB_ESPECIAL_Mensal_Eixo_min_secon)/Math.abs(FSE_TRAB_ESPECIAL_Mensal_Eixo_max_secon))
    { if(FSE_TRAB_ESPECIAL_Mensal_Eixo_max_princ > 0 && FSE_TRAB_ESPECIAL_Mensal_Eixo_min_princ <0 ){ var FSE_TRAB_ESPECIAL_Mensal_Eixo_min_secon__=(FSE_TRAB_ESPECIAL_Mensal_Eixo_min_princ_*FSE_TRAB_ESPECIAL_Mensal_Eixo_max_secon_)/FSE_TRAB_ESPECIAL_Mensal_Eixo_max_princ_;} else { var FSE_TRAB_ESPECIAL_Mensal_Eixo_min_secon__=FSE_TRAB_ESPECIAL_Mensal_Eixo_min_secon_;}
        if(FSE_TRAB_ESPECIAL_Mensal_Eixo_max_secon > 0 && FSE_TRAB_ESPECIAL_Mensal_Eixo_min_secon <0 ){ var FSE_TRAB_ESPECIAL_Mensal_Eixo_min_princ__=(FSE_TRAB_ESPECIAL_Mensal_Eixo_min_secon__*FSE_TRAB_ESPECIAL_Mensal_Eixo_max_princ_)/FSE_TRAB_ESPECIAL_Mensal_Eixo_max_secon_;} else { var FSE_TRAB_ESPECIAL_Mensal_Eixo_min_princ__=FSE_TRAB_ESPECIAL_Mensal_Eixo_min_princ_;}}
    else
    {if(FSE_TRAB_ESPECIAL_Mensal_Eixo_max_secon > 0 && FSE_TRAB_ESPECIAL_Mensal_Eixo_min_secon <0 ){ var FSE_TRAB_ESPECIAL_Mensal_Eixo_min_princ__=(FSE_TRAB_ESPECIAL_Mensal_Eixo_min_secon_*FSE_TRAB_ESPECIAL_Mensal_Eixo_max_princ_)/FSE_TRAB_ESPECIAL_Mensal_Eixo_max_secon_;} else { var FSE_TRAB_ESPECIAL_Mensal_Eixo_min_princ__=FSE_TRAB_ESPECIAL_Mensal_Eixo_min_princ_;}
        if(FSE_TRAB_ESPECIAL_Mensal_Eixo_max_princ > 0 && FSE_TRAB_ESPECIAL_Mensal_Eixo_min_princ <0 ){ var FSE_TRAB_ESPECIAL_Mensal_Eixo_min_secon__=(FSE_TRAB_ESPECIAL_Mensal_Eixo_min_princ__*FSE_TRAB_ESPECIAL_Mensal_Eixo_max_secon_)/FSE_TRAB_ESPECIAL_Mensal_Eixo_max_princ_;} else { var FSE_TRAB_ESPECIAL_Mensal_Eixo_min_secon__=FSE_TRAB_ESPECIAL_Mensal_Eixo_min_secon_;}
    }



    if(Math.abs(FSE_TRAB_ESPECIAL_Mensal_Eixo_max_princ)/Math.abs(FSE_TRAB_ESPECIAL_Mensal_Eixo_min_princ)>=Math.abs(FSE_TRAB_ESPECIAL_Mensal_Eixo_max_secon)/Math.abs(FSE_TRAB_ESPECIAL_Mensal_Eixo_min_secon))
    { if(FSE_TRAB_ESPECIAL_Mensal_Eixo_min_princ > 0 && FSE_TRAB_ESPECIAL_Mensal_Eixo_max_princ <0 ){ var FSE_TRAB_ESPECIAL_Mensal_Eixo_max_secon__=(FSE_TRAB_ESPECIAL_Mensal_Eixo_max_princ_*FSE_TRAB_ESPECIAL_Mensal_Eixo_min_secon_)/FSE_TRAB_ESPECIAL_Mensal_Eixo_min_princ_;} else { var FSE_TRAB_ESPECIAL_Mensal_Eixo_max_secon__=FSE_TRAB_ESPECIAL_Mensal_Eixo_max_secon_;}
        if(FSE_TRAB_ESPECIAL_Mensal_Eixo_min_secon > 0 && FSE_TRAB_ESPECIAL_Mensal_Eixo_max_secon <0 ){ var FSE_TRAB_ESPECIAL_Mensal_Eixo_max_princ__=(FSE_TRAB_ESPECIAL_Mensal_Eixo_max_secon__*FSE_TRAB_ESPECIAL_Mensal_Eixo_min_princ_)/FSE_TRAB_ESPECIAL_Mensal_Eixo_min_secon_;} else { var FSE_TRAB_ESPECIAL_Mensal_Eixo_max_princ__=FSE_TRAB_ESPECIAL_Mensal_Eixo_max_princ_;}}
    else
    {if(FSE_TRAB_ESPECIAL_Mensal_Eixo_min_secon > 0 && FSE_TRAB_ESPECIAL_Mensal_Eixo_max_secon <0 ){ var FSE_TRAB_ESPECIAL_Mensal_Eixo_max_princ__=(FSE_TRAB_ESPECIAL_Mensal_Eixo_max_secon_*FSE_TRAB_ESPECIAL_Mensal_Eixo_min_princ_)/FSE_TRAB_ESPECIAL_Mensal_Eixo_min_secon_;} else { var FSE_TRAB_ESPECIAL_Mensal_Eixo_max_princ__=FSE_TRAB_ESPECIAL_Mensal_Eixo_max_princ_;}
        if(FSE_TRAB_ESPECIAL_Mensal_Eixo_min_princ > 0 && FSE_TRAB_ESPECIAL_Mensal_Eixo_max_princ <0 ){ var FSE_TRAB_ESPECIAL_Mensal_Eixo_max_secon__=(FSE_TRAB_ESPECIAL_Mensal_Eixo_max_princ__*FSE_TRAB_ESPECIAL_Mensal_Eixo_min_secon_)/FSE_TRAB_ESPECIAL_Mensal_Eixo_min_princ_;} else { var FSE_TRAB_ESPECIAL_Mensal_Eixo_max_secon__=FSE_TRAB_ESPECIAL_Mensal_Eixo_max_secon_;}
    }



    var GRAFICO_FSE_RESULT_MENSAL_COMP_004=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_004').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_004=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_004, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label: 'Trab. Esp.(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   data: [
                       FSE_TRAB_ESPECIAL_ANO_N_JANEIRO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_FEVEREIRO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_MARCO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_ABRIL_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_MAIO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_JUNHO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_JULHO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_AGOSTO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_SETEMBRO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_OUTUBRO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_NOVEMBRO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_DEZEMBRO_ACUM,
                   ],
                   type: 'line'


               },
                              {
                                  label: 'Trab. Esp.(ac) ' + ANO_VERSAO_ANTE_,
                                  yAxisID: 'A',
                                  //backgroundColor: 'rgb(201, 10, 10)',
                                  borderColor: 'rgb(0,221,0)',
                                  data: [
                       FSE_TRAB_ESPECIAL_ANO_N_1_JANEIRO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_1_MARCO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_1_ABRIL_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_1_MAIO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_1_JUNHO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_1_JULHO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_1_AGOSTO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_1_SETEMBRO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_1_OUTUBRO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_TRAB_ESPECIAL_ANO_N_1_DEZEMBRO_ACUM,
                                  ],
                                  type: 'line'


                              },
                {
                    label:  'Trab. Esp.(m) ' + ANO_VERSAO_REAL_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(250 , 83 , 0, 0.5)',
                    borderColor: 'rgba(250 , 83 , 0, 0.5)',
                    data: [
                  FSE_TRAB_ESPECIAL_ANO_N_JANEIRO ,
                  FSE_TRAB_ESPECIAL_ANO_N_FEVEREIRO ,
                  FSE_TRAB_ESPECIAL_ANO_N_MARCO ,
                  FSE_TRAB_ESPECIAL_ANO_N_ABRIL,
                  FSE_TRAB_ESPECIAL_ANO_N_MAIO ,
                  FSE_TRAB_ESPECIAL_ANO_N_JUNHO ,
                  FSE_TRAB_ESPECIAL_ANO_N_JULHO ,
                  FSE_TRAB_ESPECIAL_ANO_N_AGOSTO ,
                  FSE_TRAB_ESPECIAL_ANO_N_SETEMBRO ,
                  FSE_TRAB_ESPECIAL_ANO_N_OUTUBRO ,
                  FSE_TRAB_ESPECIAL_ANO_N_NOVEMBRO ,
                  FSE_TRAB_ESPECIAL_ANO_N_DEZEMBRO ,
                    ],
                },
                {
                    label:  'Trab. Esp.(m) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(0,221,0, 0.4)',
                    borderColor: 'rgba(0,221,0, 0.4)',
                    data: [
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_JANEIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_FEVEREIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_MARCO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_ABRIL"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_MAIO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_JUNHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_JULHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_AGOSTO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_SETEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_OUTUBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_NOVEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_TRAB_ESPECIAL_ANO_N_1_DEZEMBRO"]))),
                    ],
                },


            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_TRAB_ESPECIAL_MENSAL_1',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                min:  Math.round(FSE_TRAB_ESPECIAL_Mensal_Eixo_min_princ__,0),
                                                max:  Math.round(FSE_TRAB_ESPECIAL_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString();
                                                }
                                            }
                                        },

                    { id: 'B',
                        type: 'linear',
                        position: 'right',
                        ticks: {
                            min: Math.round(FSE_TRAB_ESPECIAL_Mensal_Eixo_min_secon__,0),
                            max:  Math.round(FSE_TRAB_ESPECIAL_Mensal_Eixo_max_secon__,0),
                            beginAtZero: false,
                            callback: function(value, index, values) {
                                return value.toLocaleString();
                            }
                        }
                    },






                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_005-----------------------------------------------------------*@
<script>

    var IND_VN_ANO_N_JANEIRO_ACUM = IND_VN_ANO_N_JANEIRO;
    var IND_VN_ANO_N_FEVEREIRO_ACUM = IND_VN_ANO_N_FEVEREIRO + IND_VN_ANO_N_JANEIRO_ACUM;
    var IND_VN_ANO_N_MARCO_ACUM = IND_VN_ANO_N_MARCO + IND_VN_ANO_N_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_ABRIL_ACUM = IND_VN_ANO_N_ABRIL + IND_VN_ANO_N_MARCO_ACUM;
    var IND_VN_ANO_N_MAIO_ACUM = IND_VN_ANO_N_MAIO + IND_VN_ANO_N_ABRIL_ACUM;
    var IND_VN_ANO_N_JUNHO_ACUM = IND_VN_ANO_N_JUNHO + IND_VN_ANO_N_MAIO_ACUM;
    var IND_VN_ANO_N_JULHO_ACUM = IND_VN_ANO_N_JULHO + IND_VN_ANO_N_JUNHO_ACUM;
    var IND_VN_ANO_N_AGOSTO_ACUM = IND_VN_ANO_N_AGOSTO + IND_VN_ANO_N_JULHO_ACUM;
    var IND_VN_ANO_N_SETEMBRO_ACUM = IND_VN_ANO_N_SETEMBRO + IND_VN_ANO_N_AGOSTO_ACUM;
    var IND_VN_ANO_N_OUTUBRO_ACUM = IND_VN_ANO_N_OUTUBRO + IND_VN_ANO_N_SETEMBRO_ACUM;
    var IND_VN_ANO_N_NOVEMBRO_ACUM = IND_VN_ANO_N_NOVEMBRO + IND_VN_ANO_N_OUTUBRO_ACUM;
    var IND_VN_ANO_N_DEZEMBRO_ACUM = IND_VN_ANO_N_DEZEMBRO + IND_VN_ANO_N_NOVEMBRO_ACUM;



    var IND_VN_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JANEIRO"])));
    var IND_VN_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_FEVEREIRO"]))) + IND_VN_ANO_N_1_JANEIRO_ACUM;
    var IND_VN_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MARCO"]))) + IND_VN_ANO_N_1_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_ABRIL"]))) + IND_VN_ANO_N_1_MARCO_ACUM;
    var IND_VN_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MAIO"]))) + IND_VN_ANO_N_1_ABRIL_ACUM;
    var IND_VN_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JUNHO"]))) + IND_VN_ANO_N_1_MAIO_ACUM;
    var IND_VN_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JULHO"]))) + IND_VN_ANO_N_1_JUNHO_ACUM;
    var IND_VN_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_AGOSTO"]))) + IND_VN_ANO_N_1_JULHO_ACUM;
    var IND_VN_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_SETEMBRO"]))) + IND_VN_ANO_N_1_AGOSTO_ACUM;
    var IND_VN_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_OUTUBRO"]))) + IND_VN_ANO_N_1_SETEMBRO_ACUM;
    var IND_VN_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_NOVEMBRO"]))) + IND_VN_ANO_N_1_OUTUBRO_ACUM;
    var IND_VN_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_DEZEMBRO"]))) + IND_VN_ANO_N_1_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_JANEIRO_ACUM = 'nd'; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_JANEIRO_ACUM= FSE_TRAB_ESPECIAL_ANO_N_JANEIRO_ACUM/IND_VN_ANO_N_JANEIRO_ACUM*100; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_FEVEREIRO_ACUM= FSE_TRAB_ESPECIAL_ANO_N_FEVEREIRO_ACUM/IND_VN_ANO_N_FEVEREIRO_ACUM*100; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_MARCO_ACUM = 'nd'; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_MARCO_ACUM= FSE_TRAB_ESPECIAL_ANO_N_MARCO_ACUM/IND_VN_ANO_N_MARCO_ACUM*100; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_MARCO_ACUM_MAX_MIN = PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_ABRIL_ACUM = 'nd'; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_ABRIL_ACUM= FSE_TRAB_ESPECIAL_ANO_N_ABRIL_ACUM/IND_VN_ANO_N_ABRIL_ACUM*100; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_ABRIL_ACUM_MAX_MIN = PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_MAIO_ACUM = 'nd'; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_MAIO_ACUM= FSE_TRAB_ESPECIAL_ANO_N_MAIO_ACUM/IND_VN_ANO_N_MAIO_ACUM*100; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_MAIO_ACUM_MAX_MIN = PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_JUNHO_ACUM = 'nd'; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_JUNHO_ACUM= FSE_TRAB_ESPECIAL_ANO_N_JUNHO_ACUM/IND_VN_ANO_N_JUNHO_ACUM*100; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_JUNHO_ACUM_MAX_MIN = PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_JULHO_ACUM = 'nd'; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_JULHO_ACUM= FSE_TRAB_ESPECIAL_ANO_N_JULHO_ACUM/IND_VN_ANO_N_JULHO_ACUM*100; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_JULHO_ACUM_MAX_MIN = PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_AGOSTO_ACUM = 'nd'; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_AGOSTO_ACUM= FSE_TRAB_ESPECIAL_ANO_N_AGOSTO_ACUM/IND_VN_ANO_N_AGOSTO_ACUM*100; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_SETEMBRO_ACUM= FSE_TRAB_ESPECIAL_ANO_N_SETEMBRO_ACUM/IND_VN_ANO_N_SETEMBRO_ACUM*100; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_OUTUBRO_ACUM= FSE_TRAB_ESPECIAL_ANO_N_OUTUBRO_ACUM/IND_VN_ANO_N_OUTUBRO_ACUM*100; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_NOVEMBRO_ACUM= FSE_TRAB_ESPECIAL_ANO_N_NOVEMBRO_ACUM/IND_VN_ANO_N_NOVEMBRO_ACUM*100; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_DEZEMBRO_ACUM= FSE_TRAB_ESPECIAL_ANO_N_DEZEMBRO_ACUM/IND_VN_ANO_N_DEZEMBRO_ACUM*100; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_JANEIRO_ACUM = 'nd'; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_JANEIRO_ACUM= FSE_TRAB_ESPECIAL_ANO_N_1_JANEIRO_ACUM/IND_VN_ANO_N_1_JANEIRO_ACUM*100; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_FEVEREIRO_ACUM= FSE_TRAB_ESPECIAL_ANO_N_1_FEVEREIRO_ACUM/IND_VN_ANO_N_1_FEVEREIRO_ACUM*100; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_MARCO_ACUM = 'nd'; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_MARCO_ACUM= FSE_TRAB_ESPECIAL_ANO_N_1_MARCO_ACUM/IND_VN_ANO_N_1_MARCO_ACUM*100; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_ABRIL_ACUM = 'nd'; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_ABRIL_ACUM= FSE_TRAB_ESPECIAL_ANO_N_1_ABRIL_ACUM/IND_VN_ANO_N_1_ABRIL_ACUM*100; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_MAIO_ACUM = 'nd'; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_MAIO_ACUM= FSE_TRAB_ESPECIAL_ANO_N_1_MAIO_ACUM/IND_VN_ANO_N_1_MAIO_ACUM*100; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_JUNHO_ACUM = 'nd'; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_JUNHO_ACUM= FSE_TRAB_ESPECIAL_ANO_N_1_JUNHO_ACUM/IND_VN_ANO_N_1_JUNHO_ACUM*100; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_JULHO_ACUM = 'nd'; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_JULHO_ACUM= FSE_TRAB_ESPECIAL_ANO_N_1_JULHO_ACUM/IND_VN_ANO_N_1_JULHO_ACUM*100; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_AGOSTO_ACUM = 'nd'; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_AGOSTO_ACUM= FSE_TRAB_ESPECIAL_ANO_N_1_AGOSTO_ACUM/IND_VN_ANO_N_1_AGOSTO_ACUM*100; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_SETEMBRO_ACUM = 'nd'; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_SETEMBRO_ACUM= FSE_TRAB_ESPECIAL_ANO_N_1_SETEMBRO_ACUM/IND_VN_ANO_N_1_SETEMBRO_ACUM*100; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_OUTUBRO_ACUM = 'nd'; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_OUTUBRO_ACUM= FSE_TRAB_ESPECIAL_ANO_N_1_OUTUBRO_ACUM/IND_VN_ANO_N_1_OUTUBRO_ACUM*100; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_NOVEMBRO_ACUM= FSE_TRAB_ESPECIAL_ANO_N_1_NOVEMBRO_ACUM/IND_VN_ANO_N_1_NOVEMBRO_ACUM*100; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_DEZEMBRO_ACUM= FSE_TRAB_ESPECIAL_ANO_N_1_DEZEMBRO_ACUM/IND_VN_ANO_N_1_DEZEMBRO_ACUM*100; var PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_VN_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JANEIRO_ACUM= ((IND_VN_ANO_N_JANEIRO_ACUM-IND_VN_ANO_N_1_JANEIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_JANEIRO_ACUM))*100; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_FEVEREIRO_ACUM= ((IND_VN_ANO_N_FEVEREIRO_ACUM-IND_VN_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_VN_ANO_N_MARCO_ACUM = 'nd'; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MARCO_ACUM= ((IND_VN_ANO_N_MARCO_ACUM-IND_VN_ANO_N_1_MARCO_ACUM)/Math.abs(IND_VN_ANO_N_1_MARCO_ACUM))*100; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = VAR_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_VN_ANO_N_ABRIL_ACUM = 'nd'; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_ABRIL_ACUM= ((IND_VN_ANO_N_ABRIL_ACUM-IND_VN_ANO_N_1_ABRIL_ACUM)/Math.abs(IND_VN_ANO_N_1_ABRIL_ACUM))*100; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_VN_ANO_N_MAIO_ACUM = 'nd'; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MAIO_ACUM= ((IND_VN_ANO_N_MAIO_ACUM-IND_VN_ANO_N_1_MAIO_ACUM)/Math.abs(IND_VN_ANO_N_1_MAIO_ACUM))*100; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = VAR_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_VN_ANO_N_JUNHO_ACUM = 'nd'; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JUNHO_ACUM= ((IND_VN_ANO_N_JUNHO_ACUM-IND_VN_ANO_N_1_JUNHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JUNHO_ACUM))*100; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_VN_ANO_N_JULHO_ACUM = 'nd'; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JULHO_ACUM= ((IND_VN_ANO_N_JULHO_ACUM-IND_VN_ANO_N_1_JULHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JULHO_ACUM))*100; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_VN_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_AGOSTO_ACUM= ((IND_VN_ANO_N_AGOSTO_ACUM-IND_VN_ANO_N_1_AGOSTO_ACUM)/Math.abs(IND_VN_ANO_N_1_AGOSTO_ACUM))*100; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_SETEMBRO_ACUM= ((IND_VN_ANO_N_SETEMBRO_ACUM-IND_VN_ANO_N_1_SETEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_OUTUBRO_ACUM= ((IND_VN_ANO_N_OUTUBRO_ACUM-IND_VN_ANO_N_1_OUTUBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_NOVEMBRO_ACUM= ((IND_VN_ANO_N_NOVEMBRO_ACUM-IND_VN_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_DEZEMBRO_ACUM= ((IND_VN_ANO_N_DEZEMBRO_ACUM-IND_VN_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_FSE_TRAB_ESPECIAL_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_FSE_TRAB_ESPECIAL_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRAB_ESPECIAL_ANO_N_JANEIRO_ACUM= ((FSE_TRAB_ESPECIAL_ANO_N_JANEIRO_ACUM-FSE_TRAB_ESPECIAL_ANO_N_1_JANEIRO_ACUM)/Math.abs(FSE_TRAB_ESPECIAL_ANO_N_1_JANEIRO_ACUM))*100; var VAR_FSE_TRAB_ESPECIAL_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_FSE_TRAB_ESPECIAL_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_FSE_TRAB_ESPECIAL_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_FSE_TRAB_ESPECIAL_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRAB_ESPECIAL_ANO_N_FEVEREIRO_ACUM= ((FSE_TRAB_ESPECIAL_ANO_N_FEVEREIRO_ACUM-FSE_TRAB_ESPECIAL_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(FSE_TRAB_ESPECIAL_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_FSE_TRAB_ESPECIAL_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_FSE_TRAB_ESPECIAL_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_FSE_TRAB_ESPECIAL_ANO_N_MARCO_ACUM = 'nd'; var VAR_FSE_TRAB_ESPECIAL_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRAB_ESPECIAL_ANO_N_MARCO_ACUM= ((FSE_TRAB_ESPECIAL_ANO_N_MARCO_ACUM-FSE_TRAB_ESPECIAL_ANO_N_1_MARCO_ACUM)/Math.abs(FSE_TRAB_ESPECIAL_ANO_N_1_MARCO_ACUM))*100; var VAR_FSE_TRAB_ESPECIAL_ANO_N_MARCO_ACUM_MAX_MIN = VAR_FSE_TRAB_ESPECIAL_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_FSE_TRAB_ESPECIAL_ANO_N_ABRIL_ACUM = 'nd'; var VAR_FSE_TRAB_ESPECIAL_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRAB_ESPECIAL_ANO_N_ABRIL_ACUM= ((FSE_TRAB_ESPECIAL_ANO_N_ABRIL_ACUM-FSE_TRAB_ESPECIAL_ANO_N_1_ABRIL_ACUM)/Math.abs(FSE_TRAB_ESPECIAL_ANO_N_1_ABRIL_ACUM))*100; var VAR_FSE_TRAB_ESPECIAL_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_FSE_TRAB_ESPECIAL_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_FSE_TRAB_ESPECIAL_ANO_N_MAIO_ACUM = 'nd'; var VAR_FSE_TRAB_ESPECIAL_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRAB_ESPECIAL_ANO_N_MAIO_ACUM= ((FSE_TRAB_ESPECIAL_ANO_N_MAIO_ACUM-FSE_TRAB_ESPECIAL_ANO_N_1_MAIO_ACUM)/Math.abs(FSE_TRAB_ESPECIAL_ANO_N_1_MAIO_ACUM))*100; var VAR_FSE_TRAB_ESPECIAL_ANO_N_MAIO_ACUM_MAX_MIN = VAR_FSE_TRAB_ESPECIAL_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_FSE_TRAB_ESPECIAL_ANO_N_JUNHO_ACUM = 'nd'; var VAR_FSE_TRAB_ESPECIAL_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRAB_ESPECIAL_ANO_N_JUNHO_ACUM= ((FSE_TRAB_ESPECIAL_ANO_N_JUNHO_ACUM-FSE_TRAB_ESPECIAL_ANO_N_1_JUNHO_ACUM)/Math.abs(FSE_TRAB_ESPECIAL_ANO_N_1_JUNHO_ACUM))*100; var VAR_FSE_TRAB_ESPECIAL_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_FSE_TRAB_ESPECIAL_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_FSE_TRAB_ESPECIAL_ANO_N_JULHO_ACUM = 'nd'; var VAR_FSE_TRAB_ESPECIAL_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRAB_ESPECIAL_ANO_N_JULHO_ACUM= ((FSE_TRAB_ESPECIAL_ANO_N_JULHO_ACUM-FSE_TRAB_ESPECIAL_ANO_N_1_JULHO_ACUM)/Math.abs(FSE_TRAB_ESPECIAL_ANO_N_1_JULHO_ACUM))*100; var VAR_FSE_TRAB_ESPECIAL_ANO_N_JULHO_ACUM_MAX_MIN = VAR_FSE_TRAB_ESPECIAL_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_FSE_TRAB_ESPECIAL_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_FSE_TRAB_ESPECIAL_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRAB_ESPECIAL_ANO_N_AGOSTO_ACUM= ((FSE_TRAB_ESPECIAL_ANO_N_AGOSTO_ACUM-FSE_TRAB_ESPECIAL_ANO_N_1_AGOSTO_ACUM)/Math.abs(FSE_TRAB_ESPECIAL_ANO_N_1_AGOSTO_ACUM))*100; var VAR_FSE_TRAB_ESPECIAL_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_FSE_TRAB_ESPECIAL_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_FSE_TRAB_ESPECIAL_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_FSE_TRAB_ESPECIAL_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRAB_ESPECIAL_ANO_N_SETEMBRO_ACUM= ((FSE_TRAB_ESPECIAL_ANO_N_SETEMBRO_ACUM-FSE_TRAB_ESPECIAL_ANO_N_1_SETEMBRO_ACUM)/Math.abs(FSE_TRAB_ESPECIAL_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_FSE_TRAB_ESPECIAL_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_FSE_TRAB_ESPECIAL_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_FSE_TRAB_ESPECIAL_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_FSE_TRAB_ESPECIAL_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRAB_ESPECIAL_ANO_N_OUTUBRO_ACUM= ((FSE_TRAB_ESPECIAL_ANO_N_OUTUBRO_ACUM-FSE_TRAB_ESPECIAL_ANO_N_1_OUTUBRO_ACUM)/Math.abs(FSE_TRAB_ESPECIAL_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_FSE_TRAB_ESPECIAL_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_FSE_TRAB_ESPECIAL_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_FSE_TRAB_ESPECIAL_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_FSE_TRAB_ESPECIAL_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRAB_ESPECIAL_ANO_N_NOVEMBRO_ACUM= ((FSE_TRAB_ESPECIAL_ANO_N_NOVEMBRO_ACUM-FSE_TRAB_ESPECIAL_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(FSE_TRAB_ESPECIAL_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_FSE_TRAB_ESPECIAL_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_FSE_TRAB_ESPECIAL_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_FSE_TRAB_ESPECIAL_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_FSE_TRAB_ESPECIAL_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_TRAB_ESPECIAL_ANO_N_DEZEMBRO_ACUM= ((FSE_TRAB_ESPECIAL_ANO_N_DEZEMBRO_ACUM-FSE_TRAB_ESPECIAL_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(FSE_TRAB_ESPECIAL_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_FSE_TRAB_ESPECIAL_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_FSE_TRAB_ESPECIAL_ANO_N_DEZEMBRO_ACUM };

    if( PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_JANEIRO_ACUM > PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_JANEIRO_ACUM) { var  INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_JANEIRO_ACUM=PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_JANEIRO_ACUM ; } else { var  INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_JANEIRO_ACUM=PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_JANEIRO_ACUM ; }
    if( PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_FEVEREIRO_ACUM > PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_FEVEREIRO_ACUM) { var  INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_FEVEREIRO_ACUM=PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_FEVEREIRO_ACUM ; } else { var  INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_FEVEREIRO_ACUM=PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_FEVEREIRO_ACUM ; }
    if( PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_MARCO_ACUM > PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_MARCO_ACUM) { var  INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_MARCO_ACUM=PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_MARCO_ACUM ; } else { var  INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_MARCO_ACUM=PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_MARCO_ACUM ; }
    if( PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_ABRIL_ACUM > PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_ABRIL_ACUM) { var  INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_ABRIL_ACUM=PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_ABRIL_ACUM ; } else { var  INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_ABRIL_ACUM=PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_ABRIL_ACUM ; }
    if( PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_MAIO_ACUM > PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_MAIO_ACUM) { var  INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_MAIO_ACUM=PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_MAIO_ACUM ; } else { var  INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_MAIO_ACUM=PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_MAIO_ACUM ; }
    if( PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_JUNHO_ACUM > PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_JUNHO_ACUM) { var  INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_JUNHO_ACUM=PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_JUNHO_ACUM ; } else { var  INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_JUNHO_ACUM=PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_JUNHO_ACUM ; }
    if( PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_JULHO_ACUM > PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_JULHO_ACUM) { var  INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_JULHO_ACUM=PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_JULHO_ACUM ; } else { var  INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_JULHO_ACUM=PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_JULHO_ACUM ; }
    if( PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_AGOSTO_ACUM > PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_AGOSTO_ACUM) { var  INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_AGOSTO_ACUM=PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_AGOSTO_ACUM ; } else { var  INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_AGOSTO_ACUM=PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_AGOSTO_ACUM ; }
    if( PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_SETEMBRO_ACUM > PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_SETEMBRO_ACUM) { var  INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_SETEMBRO_ACUM=PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_SETEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_SETEMBRO_ACUM=PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_SETEMBRO_ACUM ; }
    if( PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_OUTUBRO_ACUM > PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_OUTUBRO_ACUM) { var  INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_OUTUBRO_ACUM=PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_OUTUBRO_ACUM ; } else { var  INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_OUTUBRO_ACUM=PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_OUTUBRO_ACUM ; }
    if( PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_NOVEMBRO_ACUM > PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_NOVEMBRO_ACUM) { var  INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_NOVEMBRO_ACUM=PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_NOVEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_NOVEMBRO_ACUM=PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_NOVEMBRO_ACUM ; }
    if( PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_DEZEMBRO_ACUM > PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_DEZEMBRO_ACUM) { var  INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_DEZEMBRO_ACUM=PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_DEZEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_DEZEMBRO_ACUM=PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_DEZEMBRO_ACUM ; }



    var fillBetweenLinesPlugin = {
        afterDatasetsDraw: function (chart) {
            var ctx = chart.chart.ctx;
            var xaxis = chart.scales['x-axis-0'];
            var yaxis = chart.scales['y-axis-0'];
            var datasets = chart.data.datasets;
            ctx.save();

            for (var d = 0; d < datasets.length; d++) {
                var dataset = datasets[d];
                if (dataset.fillBetweenSet == undefined) {
                    continue;
                }

                // get meta for both data sets
                var meta1 = chart.getDatasetMeta(d);
                var meta2 = chart.getDatasetMeta(dataset.fillBetweenSet);

                // do not draw fill if one of the datasets is hidden
                if (meta1.hidden || meta2.hidden) continue;

                // create fill areas in pairs
                for (var p = 0; p < meta1.data.length-1;p++) {
                    // if null skip
                    if (dataset.data[p] == null || dataset.data[p+1] == null) continue;

                    ctx.beginPath();

                    // trace line 1
                    var curr = meta1.data[p];
                    var next = meta1.data[p+1];
                    ctx.moveTo(curr._view.x, curr._view.y);
                    ctx.lineTo(curr._view.x, curr._view.y);
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(next._view.x, curr._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        ctx.bezierCurveTo(
                          curr._view.controlPointNextX,
                          curr._view.controlPointNextY,
                          next._view.controlPointPreviousX,
                          next._view.controlPointPreviousY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // connect dataset1 to dataset2
                    var curr = meta2.data[p+1];
                    var next = meta2.data[p];
                    ctx.lineTo(curr._view.x, curr._view.y);

                    // trace BACKWORDS set2 to complete the box
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(curr._view.x, next._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        // reverse bezier
                        ctx.bezierCurveTo(
                          curr._view.controlPointPreviousX,
                          curr._view.controlPointPreviousY,
                          next._view.controlPointNextX,
                          next._view.controlPointNextY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // close the loop and fill with shading
                    ctx.closePath();
                    ctx.fillStyle = dataset.fillBetweenColor || "rgba(0,0,0,0.1)";
                    ctx.fill();
                } // end for p loop
            }
        } // end afterDatasetsDraw
    }; // end fillBetweenLinesPlugin

    Chart.pluginService.register(fillBetweenLinesPlugin);



    var GRAFICO_FSE_RESULT_MENSAL_COMP_005=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_005').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_005=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_005, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label:  'Peso Trab. Espec.vsVN(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   //borderColor: "#F00",
                   fill: false,
                   steppedLine: false,
                   tension: 0.5,
                   fillBetweenSet: 1,
                   fillBetweenColor: "rgba(0, 221, 0, 0.1)",
                   data: [
                   PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_JANEIRO_ACUM,
                   PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_FEVEREIRO_ACUM,
                   PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_MARCO_ACUM,
                   PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_ABRIL_ACUM,
                   PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_MAIO_ACUM,
                   PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_JUNHO_ACUM,
                   PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_JULHO_ACUM,
                   PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_AGOSTO_ACUM,
                   PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_SETEMBRO_ACUM,
                   PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_OUTUBRO_ACUM,
                   PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_NOVEMBRO_ACUM,
                   PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_DEZEMBRO_ACUM,

                   ],
                   type: 'line'


               },
                {
                    label: 'Peso Trab. Espec.vsVN(ac) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'A',
                    //backgroundColor: 'rgb(17, 121, 240)',
                    borderColor: 'rgb(0,221,0)',
                    //borderColor: "#00F",
                    fill: false,
                    steppedLine: false,
                    tension: 0.5,
                    data: [
                   PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_JANEIRO_ACUM,
                   PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_FEVEREIRO_ACUM,
                   PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_MARCO_ACUM,
                   PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_ABRIL_ACUM,
                   PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_MAIO_ACUM,
                   PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_JUNHO_ACUM,
                   PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_JULHO_ACUM,
                   PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_AGOSTO_ACUM,
                   PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_SETEMBRO_ACUM,
                   PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_OUTUBRO_ACUM,
                   PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_NOVEMBRO_ACUM,
                   PESO_FSE_TRAB_ESPECIAL_VN_ANO_N_1_DEZEMBRO_ACUM,
                    ],
                    type: 'line'
                },
    {
        label: 'Ineficiência',
        yAxisID: 'A',
        backgroundColor: "rgba(255, 0, 0, 0.2)",
        borderColor: 'rgba(255, 255, 255, 0.1)',
        //borderColor: "#0D0",
        fill: false,
        steppedLine: false,
        tension: 0.5,
        fillBetweenSet: 1,
        fillBetweenColor: "rgba(255, 0, 0, 0.2)",
        data: [
    INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_JANEIRO_ACUM,
    INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_FEVEREIRO_ACUM,
    INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_MARCO_ACUM,
    INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_ABRIL_ACUM,
    INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_MAIO_ACUM,
    INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_JUNHO_ACUM,
    INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_JULHO_ACUM,
    INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_AGOSTO_ACUM,
    INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_SETEMBRO_ACUM,
    INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_OUTUBRO_ACUM,
    INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_NOVEMBRO_ACUM,
    INEFICIENCIA_FSE_TRAB_ESPECIAL_ANO_N_DEZEMBRO_ACUM,
        ],
        type: 'line'
    },

            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_Trab. Espec. COMP',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                //min:  Math.round(FSE_TRAB_ESPECIAL_Mensal_Eixo_min_princ__,0),
                                                //max:  Math.round(FSE_TRAB_ESPECIAL_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString()+ "%";
                                                }
                                            }
                                        },

                    //{ id: 'B',
                    //type: 'linear',
                    //position: 'right',
                    //ticks: {
                    //    //min:  Math.round(FSE_TRAB_ESPECIAL_Mensal_Eixo_min_princ__,0),
                    //    //max:  Math.round(FSE_TRAB_ESPECIAL_Mensal_Eixo_max_princ__,0),
                    //    beginAtZero: true,
                    //    callback: function(value, index, values) {
                    //        return value.toLocaleString();
                    //        }
                    //    }
                    //},






                ]
            }
        },

    });

</script>
@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_006-----------------------------------------------------------*@
<script>

    if(@ViewData["MES_ACUM_REAL"]<1){ var IND_VN_ANO_N_JANEIRO = 'nd'; var IND_VN_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JANEIRO"]))); var IND_VN_ANO_N_JANEIRO_MAX_MIN = IND_VN_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var IND_VN_ANO_N_FEVEREIRO = 'nd'; var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_FEVEREIRO"]))); var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = IND_VN_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var IND_VN_ANO_N_MARCO = 'nd'; var IND_VN_ANO_N_MARCO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MARCO"]))); var IND_VN_ANO_N_MARCO_MAX_MIN = IND_VN_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var IND_VN_ANO_N_ABRIL = 'nd'; var IND_VN_ANO_N_ABRIL_MAX_MIN = 0;  } else { var IND_VN_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_ABRIL"]))); var IND_VN_ANO_N_ABRIL_MAX_MIN = IND_VN_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var IND_VN_ANO_N_MAIO = 'nd'; var IND_VN_ANO_N_MAIO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MAIO"]))); var IND_VN_ANO_N_MAIO_MAX_MIN = IND_VN_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var IND_VN_ANO_N_JUNHO = 'nd'; var IND_VN_ANO_N_JUNHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JUNHO"]))); var IND_VN_ANO_N_JUNHO_MAX_MIN = IND_VN_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var IND_VN_ANO_N_JULHO = 'nd'; var IND_VN_ANO_N_JULHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JULHO"]))); var IND_VN_ANO_N_JULHO_MAX_MIN = IND_VN_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var IND_VN_ANO_N_AGOSTO = 'nd'; var IND_VN_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_AGOSTO"]))); var IND_VN_ANO_N_AGOSTO_MAX_MIN = IND_VN_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var IND_VN_ANO_N_SETEMBRO = 'nd'; var IND_VN_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_SETEMBRO"]))); var IND_VN_ANO_N_SETEMBRO_MAX_MIN = IND_VN_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var IND_VN_ANO_N_OUTUBRO = 'nd'; var IND_VN_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_OUTUBRO"]))); var IND_VN_ANO_N_OUTUBRO_MAX_MIN = IND_VN_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var IND_VN_ANO_N_NOVEMBRO = 'nd'; var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_NOVEMBRO"]))); var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = IND_VN_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var IND_VN_ANO_N_DEZEMBRO = 'nd'; var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_DEZEMBRO"]))); var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = IND_VN_ANO_N_DEZEMBRO };

    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_PUB_PROPAG_ANO_N_JANEIRO = 'nd'; var FSE_PUB_PROPAG_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var FSE_PUB_PROPAG_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_JANEIRO"]))); var FSE_PUB_PROPAG_ANO_N_JANEIRO_MAX_MIN = FSE_PUB_PROPAG_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_PUB_PROPAG_ANO_N_FEVEREIRO = 'nd'; var FSE_PUB_PROPAG_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var FSE_PUB_PROPAG_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_FEVEREIRO"]))); var FSE_PUB_PROPAG_ANO_N_FEVEREIRO_MAX_MIN = FSE_PUB_PROPAG_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_PUB_PROPAG_ANO_N_MARCO = 'nd'; var FSE_PUB_PROPAG_ANO_N_MARCO_MAX_MIN = 0;  } else { var FSE_PUB_PROPAG_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_MARCO"]))); var FSE_PUB_PROPAG_ANO_N_MARCO_MAX_MIN = FSE_PUB_PROPAG_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_PUB_PROPAG_ANO_N_ABRIL = 'nd'; var FSE_PUB_PROPAG_ANO_N_ABRIL_MAX_MIN = 0;  } else { var FSE_PUB_PROPAG_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_ABRIL"]))); var FSE_PUB_PROPAG_ANO_N_ABRIL_MAX_MIN = FSE_PUB_PROPAG_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_PUB_PROPAG_ANO_N_MAIO = 'nd'; var FSE_PUB_PROPAG_ANO_N_MAIO_MAX_MIN = 0;  } else { var FSE_PUB_PROPAG_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_MAIO"]))); var FSE_PUB_PROPAG_ANO_N_MAIO_MAX_MIN = FSE_PUB_PROPAG_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_PUB_PROPAG_ANO_N_JUNHO = 'nd'; var FSE_PUB_PROPAG_ANO_N_JUNHO_MAX_MIN = 0;  } else { var FSE_PUB_PROPAG_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_JUNHO"]))); var FSE_PUB_PROPAG_ANO_N_JUNHO_MAX_MIN = FSE_PUB_PROPAG_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_PUB_PROPAG_ANO_N_JULHO = 'nd'; var FSE_PUB_PROPAG_ANO_N_JULHO_MAX_MIN = 0;  } else { var FSE_PUB_PROPAG_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_JULHO"]))); var FSE_PUB_PROPAG_ANO_N_JULHO_MAX_MIN = FSE_PUB_PROPAG_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_PUB_PROPAG_ANO_N_AGOSTO = 'nd'; var FSE_PUB_PROPAG_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var FSE_PUB_PROPAG_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_AGOSTO"]))); var FSE_PUB_PROPAG_ANO_N_AGOSTO_MAX_MIN = FSE_PUB_PROPAG_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_PUB_PROPAG_ANO_N_SETEMBRO = 'nd'; var FSE_PUB_PROPAG_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var FSE_PUB_PROPAG_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_SETEMBRO"]))); var FSE_PUB_PROPAG_ANO_N_SETEMBRO_MAX_MIN = FSE_PUB_PROPAG_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_PUB_PROPAG_ANO_N_OUTUBRO = 'nd'; var FSE_PUB_PROPAG_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var FSE_PUB_PROPAG_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_OUTUBRO"]))); var FSE_PUB_PROPAG_ANO_N_OUTUBRO_MAX_MIN = FSE_PUB_PROPAG_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_PUB_PROPAG_ANO_N_NOVEMBRO = 'nd'; var FSE_PUB_PROPAG_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var FSE_PUB_PROPAG_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_NOVEMBRO"]))); var FSE_PUB_PROPAG_ANO_N_NOVEMBRO_MAX_MIN = FSE_PUB_PROPAG_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_PUB_PROPAG_ANO_N_DEZEMBRO = 'nd'; var FSE_PUB_PROPAG_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var FSE_PUB_PROPAG_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_DEZEMBRO"]))); var FSE_PUB_PROPAG_ANO_N_DEZEMBRO_MAX_MIN = FSE_PUB_PROPAG_ANO_N_DEZEMBRO };


    var FSE_PUB_PROPAG_ANO_N_JANEIRO_ACUM = FSE_PUB_PROPAG_ANO_N_JANEIRO;
    var FSE_PUB_PROPAG_ANO_N_FEVEREIRO_ACUM = FSE_PUB_PROPAG_ANO_N_FEVEREIRO + FSE_PUB_PROPAG_ANO_N_JANEIRO_ACUM;
    var FSE_PUB_PROPAG_ANO_N_MARCO_ACUM = FSE_PUB_PROPAG_ANO_N_MARCO + FSE_PUB_PROPAG_ANO_N_FEVEREIRO_ACUM;
    var FSE_PUB_PROPAG_ANO_N_ABRIL_ACUM = FSE_PUB_PROPAG_ANO_N_ABRIL + FSE_PUB_PROPAG_ANO_N_MARCO_ACUM;
    var FSE_PUB_PROPAG_ANO_N_MAIO_ACUM = FSE_PUB_PROPAG_ANO_N_MAIO + FSE_PUB_PROPAG_ANO_N_ABRIL_ACUM;
    var FSE_PUB_PROPAG_ANO_N_JUNHO_ACUM = FSE_PUB_PROPAG_ANO_N_JUNHO + FSE_PUB_PROPAG_ANO_N_MAIO_ACUM;
    var FSE_PUB_PROPAG_ANO_N_JULHO_ACUM = FSE_PUB_PROPAG_ANO_N_JULHO + FSE_PUB_PROPAG_ANO_N_JUNHO_ACUM;
    var FSE_PUB_PROPAG_ANO_N_AGOSTO_ACUM = FSE_PUB_PROPAG_ANO_N_AGOSTO + FSE_PUB_PROPAG_ANO_N_JULHO_ACUM;
    var FSE_PUB_PROPAG_ANO_N_SETEMBRO_ACUM = FSE_PUB_PROPAG_ANO_N_SETEMBRO + FSE_PUB_PROPAG_ANO_N_AGOSTO_ACUM;
    var FSE_PUB_PROPAG_ANO_N_OUTUBRO_ACUM = FSE_PUB_PROPAG_ANO_N_OUTUBRO + FSE_PUB_PROPAG_ANO_N_SETEMBRO_ACUM;
    var FSE_PUB_PROPAG_ANO_N_NOVEMBRO_ACUM = FSE_PUB_PROPAG_ANO_N_NOVEMBRO + FSE_PUB_PROPAG_ANO_N_OUTUBRO_ACUM;
    var FSE_PUB_PROPAG_ANO_N_DEZEMBRO_ACUM = FSE_PUB_PROPAG_ANO_N_DEZEMBRO + FSE_PUB_PROPAG_ANO_N_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_PUB_PROPAG_ANO_N_JANEIRO_ACUM = 'nd'; var FSE_PUB_PROPAG_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var FSE_PUB_PROPAG_ANO_N_JANEIRO_ACUM= FSE_PUB_PROPAG_ANO_N_JANEIRO_ACUM; var FSE_PUB_PROPAG_ANO_N_JANEIRO_ACUM_MAX_MIN = FSE_PUB_PROPAG_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_PUB_PROPAG_ANO_N_FEVEREIRO_ACUM = 'nd'; var FSE_PUB_PROPAG_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var FSE_PUB_PROPAG_ANO_N_FEVEREIRO_ACUM= FSE_PUB_PROPAG_ANO_N_FEVEREIRO_ACUM; var FSE_PUB_PROPAG_ANO_N_FEVEREIRO_ACUM_MAX_MIN = FSE_PUB_PROPAG_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_PUB_PROPAG_ANO_N_MARCO_ACUM = 'nd'; var FSE_PUB_PROPAG_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var FSE_PUB_PROPAG_ANO_N_MARCO_ACUM= FSE_PUB_PROPAG_ANO_N_MARCO_ACUM; var FSE_PUB_PROPAG_ANO_N_MARCO_ACUM_MAX_MIN = FSE_PUB_PROPAG_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_PUB_PROPAG_ANO_N_ABRIL_ACUM = 'nd'; var FSE_PUB_PROPAG_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var FSE_PUB_PROPAG_ANO_N_ABRIL_ACUM= FSE_PUB_PROPAG_ANO_N_ABRIL_ACUM; var FSE_PUB_PROPAG_ANO_N_ABRIL_ACUM_MAX_MIN = FSE_PUB_PROPAG_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_PUB_PROPAG_ANO_N_MAIO_ACUM = 'nd'; var FSE_PUB_PROPAG_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var FSE_PUB_PROPAG_ANO_N_MAIO_ACUM= FSE_PUB_PROPAG_ANO_N_MAIO_ACUM; var FSE_PUB_PROPAG_ANO_N_MAIO_ACUM_MAX_MIN = FSE_PUB_PROPAG_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_PUB_PROPAG_ANO_N_JUNHO_ACUM = 'nd'; var FSE_PUB_PROPAG_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var FSE_PUB_PROPAG_ANO_N_JUNHO_ACUM= FSE_PUB_PROPAG_ANO_N_JUNHO_ACUM; var FSE_PUB_PROPAG_ANO_N_JUNHO_ACUM_MAX_MIN = FSE_PUB_PROPAG_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_PUB_PROPAG_ANO_N_JULHO_ACUM = 'nd'; var FSE_PUB_PROPAG_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var FSE_PUB_PROPAG_ANO_N_JULHO_ACUM= FSE_PUB_PROPAG_ANO_N_JULHO_ACUM; var FSE_PUB_PROPAG_ANO_N_JULHO_ACUM_MAX_MIN = FSE_PUB_PROPAG_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_PUB_PROPAG_ANO_N_AGOSTO_ACUM = 'nd'; var FSE_PUB_PROPAG_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var FSE_PUB_PROPAG_ANO_N_AGOSTO_ACUM= FSE_PUB_PROPAG_ANO_N_AGOSTO_ACUM; var FSE_PUB_PROPAG_ANO_N_AGOSTO_ACUM_MAX_MIN = FSE_PUB_PROPAG_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_PUB_PROPAG_ANO_N_SETEMBRO_ACUM = 'nd'; var FSE_PUB_PROPAG_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_PUB_PROPAG_ANO_N_SETEMBRO_ACUM= FSE_PUB_PROPAG_ANO_N_SETEMBRO_ACUM; var FSE_PUB_PROPAG_ANO_N_SETEMBRO_ACUM_MAX_MIN = FSE_PUB_PROPAG_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_PUB_PROPAG_ANO_N_OUTUBRO_ACUM = 'nd'; var FSE_PUB_PROPAG_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var FSE_PUB_PROPAG_ANO_N_OUTUBRO_ACUM= FSE_PUB_PROPAG_ANO_N_OUTUBRO_ACUM; var FSE_PUB_PROPAG_ANO_N_OUTUBRO_ACUM_MAX_MIN = FSE_PUB_PROPAG_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_PUB_PROPAG_ANO_N_NOVEMBRO_ACUM = 'nd'; var FSE_PUB_PROPAG_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_PUB_PROPAG_ANO_N_NOVEMBRO_ACUM= FSE_PUB_PROPAG_ANO_N_NOVEMBRO_ACUM; var FSE_PUB_PROPAG_ANO_N_NOVEMBRO_ACUM_MAX_MIN = FSE_PUB_PROPAG_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_PUB_PROPAG_ANO_N_DEZEMBRO_ACUM = 'nd'; var FSE_PUB_PROPAG_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_PUB_PROPAG_ANO_N_DEZEMBRO_ACUM= FSE_PUB_PROPAG_ANO_N_DEZEMBRO_ACUM; var FSE_PUB_PROPAG_ANO_N_DEZEMBRO_ACUM_MAX_MIN = FSE_PUB_PROPAG_ANO_N_DEZEMBRO_ACUM };




    var FSE_PUB_PROPAG_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_JANEIRO"])));
    var FSE_PUB_PROPAG_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_FEVEREIRO"]))) + FSE_PUB_PROPAG_ANO_N_1_JANEIRO_ACUM;
    var FSE_PUB_PROPAG_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_MARCO"]))) + FSE_PUB_PROPAG_ANO_N_1_FEVEREIRO_ACUM;
    var FSE_PUB_PROPAG_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_ABRIL"]))) + FSE_PUB_PROPAG_ANO_N_1_MARCO_ACUM;
    var FSE_PUB_PROPAG_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_MAIO"]))) + FSE_PUB_PROPAG_ANO_N_1_ABRIL_ACUM;
    var FSE_PUB_PROPAG_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_JUNHO"]))) + FSE_PUB_PROPAG_ANO_N_1_MAIO_ACUM;
    var FSE_PUB_PROPAG_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_JULHO"]))) + FSE_PUB_PROPAG_ANO_N_1_JUNHO_ACUM;
    var FSE_PUB_PROPAG_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_AGOSTO"]))) + FSE_PUB_PROPAG_ANO_N_1_JULHO_ACUM;
    var FSE_PUB_PROPAG_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_SETEMBRO"]))) + FSE_PUB_PROPAG_ANO_N_1_AGOSTO_ACUM;
    var FSE_PUB_PROPAG_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_OUTUBRO"]))) + FSE_PUB_PROPAG_ANO_N_1_SETEMBRO_ACUM;
    var FSE_PUB_PROPAG_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_NOVEMBRO"]))) + FSE_PUB_PROPAG_ANO_N_1_OUTUBRO_ACUM;
    var FSE_PUB_PROPAG_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_DEZEMBRO"]))) + FSE_PUB_PROPAG_ANO_N_1_NOVEMBRO_ACUM;


    var FSE_PUB_PROPAG_Mensal_Eixo_max_princ= Math.max(
                       FSE_PUB_PROPAG_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_PUB_PROPAG_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_PUB_PROPAG_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_PUB_PROPAG_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_PUB_PROPAG_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_PUB_PROPAG_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_PUB_PROPAG_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_PUB_PROPAG_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_PUB_PROPAG_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_PUB_PROPAG_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_PUB_PROPAG_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_PUB_PROPAG_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_PUB_PROPAG_ANO_N_1_JANEIRO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_1_MARCO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_1_ABRIL_ACUM,
                       FSE_PUB_PROPAG_ANO_N_1_MAIO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_1_JUNHO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_1_JULHO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_1_AGOSTO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_1_SETEMBRO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_1_OUTUBRO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_1_DEZEMBRO_ACUM
                             );
    var FSE_PUB_PROPAG_Mensal_Eixo_min_princ= Math.min(

                       FSE_PUB_PROPAG_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_PUB_PROPAG_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_PUB_PROPAG_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_PUB_PROPAG_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_PUB_PROPAG_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_PUB_PROPAG_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_PUB_PROPAG_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_PUB_PROPAG_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_PUB_PROPAG_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_PUB_PROPAG_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_PUB_PROPAG_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_PUB_PROPAG_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_PUB_PROPAG_ANO_N_1_JANEIRO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_1_MARCO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_1_ABRIL_ACUM,
                       FSE_PUB_PROPAG_ANO_N_1_MAIO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_1_JUNHO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_1_JULHO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_1_AGOSTO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_1_SETEMBRO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_1_OUTUBRO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_1_DEZEMBRO_ACUM
                           );
    var FSE_PUB_PROPAG_Mensal_Eixo_max_secon= Math.max(
                       FSE_PUB_PROPAG_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_PUB_PROPAG_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_PUB_PROPAG_ANO_N_MARCO_MAX_MIN ,
                       FSE_PUB_PROPAG_ANO_N_ABRIL_MAX_MIN ,
                       FSE_PUB_PROPAG_ANO_N_MAIO_MAX_MIN ,
                       FSE_PUB_PROPAG_ANO_N_JUNHO_MAX_MIN ,
                       FSE_PUB_PROPAG_ANO_N_JULHO_MAX_MIN ,
                       FSE_PUB_PROPAG_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_PUB_PROPAG_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_PUB_PROPAG_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_PUB_PROPAG_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_PUB_PROPAG_ANO_N_DEZEMBRO_MAX_MIN ,



                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_DEZEMBRO"])))

                            );
    var FSE_PUB_PROPAG_Mensal_Eixo_min_secon= Math.min(
                       FSE_PUB_PROPAG_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_PUB_PROPAG_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_PUB_PROPAG_ANO_N_MARCO_MAX_MIN ,
                       FSE_PUB_PROPAG_ANO_N_ABRIL_MAX_MIN ,
                       FSE_PUB_PROPAG_ANO_N_MAIO_MAX_MIN ,
                       FSE_PUB_PROPAG_ANO_N_JUNHO_MAX_MIN ,
                       FSE_PUB_PROPAG_ANO_N_JULHO_MAX_MIN ,
                       FSE_PUB_PROPAG_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_PUB_PROPAG_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_PUB_PROPAG_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_PUB_PROPAG_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_PUB_PROPAG_ANO_N_DEZEMBRO_MAX_MIN ,


                           @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_DEZEMBRO"])))

                          );

    //NOTA TA: Aqui trato o minimo e o maximo do eixo principal
    if(Math.abs(FSE_PUB_PROPAG_Mensal_Eixo_max_princ)>=Math.abs(FSE_PUB_PROPAG_Mensal_Eixo_min_princ))
    {
        var FSE_PUB_PROPAG_Mensal_Eixo_max_princ_=(Math.ceil(FSE_PUB_PROPAG_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_PUB_PROPAG_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_PUB_PROPAG_Mensal_Eixo_max_princ),0).toString().length-1);
        var FSE_PUB_PROPAG_Mensal_Eixo_min_princ_= (Math.floor(FSE_PUB_PROPAG_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_PUB_PROPAG_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_PUB_PROPAG_Mensal_Eixo_max_princ),0).toString().length-1);
        //alert(FSE_PUB_PROPAG_Mensal_Eixo_max_princ_);
        //alert(FSE_PUB_PROPAG_Mensal_Eixo_min_princ_);
    }
    else
    {
        var FSE_PUB_PROPAG_Mensal_Eixo_max_princ_=(Math.ceil(FSE_PUB_PROPAG_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_PUB_PROPAG_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_PUB_PROPAG_Mensal_Eixo_min_princ),0).toString().length-1);
        var FSE_PUB_PROPAG_Mensal_Eixo_min_princ_= (Math.floor(FSE_PUB_PROPAG_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_PUB_PROPAG_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_PUB_PROPAG_Mensal_Eixo_min_princ),0).toString().length-1);}

    //NOTA TA: Aqui trato o minimo e o maximo do eixo secundario

    if(Math.abs(FSE_PUB_PROPAG_Mensal_Eixo_max_secon)>=Math.abs(FSE_PUB_PROPAG_Mensal_Eixo_min_secon))
    {
        var FSE_PUB_PROPAG_Mensal_Eixo_max_secon_=(Math.ceil(FSE_PUB_PROPAG_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_PUB_PROPAG_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_PUB_PROPAG_Mensal_Eixo_max_secon),0).toString().length-1);
        var FSE_PUB_PROPAG_Mensal_Eixo_min_secon_= (Math.floor(FSE_PUB_PROPAG_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_PUB_PROPAG_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_PUB_PROPAG_Mensal_Eixo_max_secon),0).toString().length-1);
        //alert(FSE_PUB_PROPAG_Mensal_Eixo_max_secon_);
        //alert(FSE_PUB_PROPAG_Mensal_Eixo_min_secon_);
    }
    else
    {
        var FSE_PUB_PROPAG_Mensal_Eixo_max_secon_=(Math.ceil(FSE_PUB_PROPAG_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_PUB_PROPAG_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_PUB_PROPAG_Mensal_Eixo_min_secon),0).toString().length-1);
        var FSE_PUB_PROPAG_Mensal_Eixo_min_secon_= (Math.floor(FSE_PUB_PROPAG_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_PUB_PROPAG_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_PUB_PROPAG_Mensal_Eixo_min_secon),0).toString().length-1);}


    if(Math.abs(FSE_PUB_PROPAG_Mensal_Eixo_min_princ)/Math.abs(FSE_PUB_PROPAG_Mensal_Eixo_max_princ)>=Math.abs(FSE_PUB_PROPAG_Mensal_Eixo_min_secon)/Math.abs(FSE_PUB_PROPAG_Mensal_Eixo_max_secon))
    { if(FSE_PUB_PROPAG_Mensal_Eixo_max_princ > 0 && FSE_PUB_PROPAG_Mensal_Eixo_min_princ <0 ){ var FSE_PUB_PROPAG_Mensal_Eixo_min_secon__=(FSE_PUB_PROPAG_Mensal_Eixo_min_princ_*FSE_PUB_PROPAG_Mensal_Eixo_max_secon_)/FSE_PUB_PROPAG_Mensal_Eixo_max_princ_;} else { var FSE_PUB_PROPAG_Mensal_Eixo_min_secon__=FSE_PUB_PROPAG_Mensal_Eixo_min_secon_;}
        if(FSE_PUB_PROPAG_Mensal_Eixo_max_secon > 0 && FSE_PUB_PROPAG_Mensal_Eixo_min_secon <0 ){ var FSE_PUB_PROPAG_Mensal_Eixo_min_princ__=(FSE_PUB_PROPAG_Mensal_Eixo_min_secon__*FSE_PUB_PROPAG_Mensal_Eixo_max_princ_)/FSE_PUB_PROPAG_Mensal_Eixo_max_secon_;} else { var FSE_PUB_PROPAG_Mensal_Eixo_min_princ__=FSE_PUB_PROPAG_Mensal_Eixo_min_princ_;}}
    else
    {if(FSE_PUB_PROPAG_Mensal_Eixo_max_secon > 0 && FSE_PUB_PROPAG_Mensal_Eixo_min_secon <0 ){ var FSE_PUB_PROPAG_Mensal_Eixo_min_princ__=(FSE_PUB_PROPAG_Mensal_Eixo_min_secon_*FSE_PUB_PROPAG_Mensal_Eixo_max_princ_)/FSE_PUB_PROPAG_Mensal_Eixo_max_secon_;} else { var FSE_PUB_PROPAG_Mensal_Eixo_min_princ__=FSE_PUB_PROPAG_Mensal_Eixo_min_princ_;}
        if(FSE_PUB_PROPAG_Mensal_Eixo_max_princ > 0 && FSE_PUB_PROPAG_Mensal_Eixo_min_princ <0 ){ var FSE_PUB_PROPAG_Mensal_Eixo_min_secon__=(FSE_PUB_PROPAG_Mensal_Eixo_min_princ__*FSE_PUB_PROPAG_Mensal_Eixo_max_secon_)/FSE_PUB_PROPAG_Mensal_Eixo_max_princ_;} else { var FSE_PUB_PROPAG_Mensal_Eixo_min_secon__=FSE_PUB_PROPAG_Mensal_Eixo_min_secon_;}
    }



    if(Math.abs(FSE_PUB_PROPAG_Mensal_Eixo_max_princ)/Math.abs(FSE_PUB_PROPAG_Mensal_Eixo_min_princ)>=Math.abs(FSE_PUB_PROPAG_Mensal_Eixo_max_secon)/Math.abs(FSE_PUB_PROPAG_Mensal_Eixo_min_secon))
    { if(FSE_PUB_PROPAG_Mensal_Eixo_min_princ > 0 && FSE_PUB_PROPAG_Mensal_Eixo_max_princ <0 ){ var FSE_PUB_PROPAG_Mensal_Eixo_max_secon__=(FSE_PUB_PROPAG_Mensal_Eixo_max_princ_*FSE_PUB_PROPAG_Mensal_Eixo_min_secon_)/FSE_PUB_PROPAG_Mensal_Eixo_min_princ_;} else { var FSE_PUB_PROPAG_Mensal_Eixo_max_secon__=FSE_PUB_PROPAG_Mensal_Eixo_max_secon_;}
        if(FSE_PUB_PROPAG_Mensal_Eixo_min_secon > 0 && FSE_PUB_PROPAG_Mensal_Eixo_max_secon <0 ){ var FSE_PUB_PROPAG_Mensal_Eixo_max_princ__=(FSE_PUB_PROPAG_Mensal_Eixo_max_secon__*FSE_PUB_PROPAG_Mensal_Eixo_min_princ_)/FSE_PUB_PROPAG_Mensal_Eixo_min_secon_;} else { var FSE_PUB_PROPAG_Mensal_Eixo_max_princ__=FSE_PUB_PROPAG_Mensal_Eixo_max_princ_;}}
    else
    {if(FSE_PUB_PROPAG_Mensal_Eixo_min_secon > 0 && FSE_PUB_PROPAG_Mensal_Eixo_max_secon <0 ){ var FSE_PUB_PROPAG_Mensal_Eixo_max_princ__=(FSE_PUB_PROPAG_Mensal_Eixo_max_secon_*FSE_PUB_PROPAG_Mensal_Eixo_min_princ_)/FSE_PUB_PROPAG_Mensal_Eixo_min_secon_;} else { var FSE_PUB_PROPAG_Mensal_Eixo_max_princ__=FSE_PUB_PROPAG_Mensal_Eixo_max_princ_;}
        if(FSE_PUB_PROPAG_Mensal_Eixo_min_princ > 0 && FSE_PUB_PROPAG_Mensal_Eixo_max_princ <0 ){ var FSE_PUB_PROPAG_Mensal_Eixo_max_secon__=(FSE_PUB_PROPAG_Mensal_Eixo_max_princ__*FSE_PUB_PROPAG_Mensal_Eixo_min_secon_)/FSE_PUB_PROPAG_Mensal_Eixo_min_princ_;} else { var FSE_PUB_PROPAG_Mensal_Eixo_max_secon__=FSE_PUB_PROPAG_Mensal_Eixo_max_secon_;}
    }



    var GRAFICO_FSE_RESULT_MENSAL_COMP_006=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_006').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_006=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_006, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label: 'Publ. Prop.(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   data: [
                       FSE_PUB_PROPAG_ANO_N_JANEIRO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_FEVEREIRO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_MARCO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_ABRIL_ACUM,
                       FSE_PUB_PROPAG_ANO_N_MAIO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_JUNHO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_JULHO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_AGOSTO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_SETEMBRO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_OUTUBRO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_NOVEMBRO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_DEZEMBRO_ACUM,
                   ],
                   type: 'line'


               },
                              {
                                  label: 'Publ. Prop.(ac) ' + ANO_VERSAO_ANTE_,
                                  yAxisID: 'A',
                                  //backgroundColor: 'rgb(201, 10, 10)',
                                  borderColor: 'rgb(0,221,0)',
                                  data: [
                       FSE_PUB_PROPAG_ANO_N_1_JANEIRO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_1_MARCO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_1_ABRIL_ACUM,
                       FSE_PUB_PROPAG_ANO_N_1_MAIO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_1_JUNHO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_1_JULHO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_1_AGOSTO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_1_SETEMBRO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_1_OUTUBRO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_PUB_PROPAG_ANO_N_1_DEZEMBRO_ACUM,
                                  ],
                                  type: 'line'


                              },
                {
                    label:  'Publ. Prop.(m) ' + ANO_VERSAO_REAL_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(250 , 83 , 0, 0.5)',
                    borderColor: 'rgba(250 , 83 , 0, 0.5)',
                    data: [
                  FSE_PUB_PROPAG_ANO_N_JANEIRO ,
                  FSE_PUB_PROPAG_ANO_N_FEVEREIRO ,
                  FSE_PUB_PROPAG_ANO_N_MARCO ,
                  FSE_PUB_PROPAG_ANO_N_ABRIL,
                  FSE_PUB_PROPAG_ANO_N_MAIO ,
                  FSE_PUB_PROPAG_ANO_N_JUNHO ,
                  FSE_PUB_PROPAG_ANO_N_JULHO ,
                  FSE_PUB_PROPAG_ANO_N_AGOSTO ,
                  FSE_PUB_PROPAG_ANO_N_SETEMBRO ,
                  FSE_PUB_PROPAG_ANO_N_OUTUBRO ,
                  FSE_PUB_PROPAG_ANO_N_NOVEMBRO ,
                  FSE_PUB_PROPAG_ANO_N_DEZEMBRO ,
                    ],
                },
                {
                    label:  'Publ. Prop.(m) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(0,221,0, 0.4)',
                    borderColor: 'rgba(0,221,0, 0.4)',
                    data: [
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_JANEIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_FEVEREIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_MARCO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_ABRIL"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_MAIO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_JUNHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_JULHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_AGOSTO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_SETEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_OUTUBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_NOVEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_PUB_PROPAG_ANO_N_1_DEZEMBRO"]))),
                    ],
                },


            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_PUB_PROPAG_MENSAL_1',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                min:  Math.round(FSE_PUB_PROPAG_Mensal_Eixo_min_princ__,0),
                                                max:  Math.round(FSE_PUB_PROPAG_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString();
                                                }
                                            }
                                        },

                    { id: 'B',
                        type: 'linear',
                        position: 'right',
                        ticks: {
                            min: Math.round(FSE_PUB_PROPAG_Mensal_Eixo_min_secon__,0),
                            max:  Math.round(FSE_PUB_PROPAG_Mensal_Eixo_max_secon__,0),
                            beginAtZero: false,
                            callback: function(value, index, values) {
                                return value.toLocaleString();
                            }
                        }
                    },






                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_007-----------------------------------------------------------*@
<script>

    var IND_VN_ANO_N_JANEIRO_ACUM = IND_VN_ANO_N_JANEIRO;
    var IND_VN_ANO_N_FEVEREIRO_ACUM = IND_VN_ANO_N_FEVEREIRO + IND_VN_ANO_N_JANEIRO_ACUM;
    var IND_VN_ANO_N_MARCO_ACUM = IND_VN_ANO_N_MARCO + IND_VN_ANO_N_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_ABRIL_ACUM = IND_VN_ANO_N_ABRIL + IND_VN_ANO_N_MARCO_ACUM;
    var IND_VN_ANO_N_MAIO_ACUM = IND_VN_ANO_N_MAIO + IND_VN_ANO_N_ABRIL_ACUM;
    var IND_VN_ANO_N_JUNHO_ACUM = IND_VN_ANO_N_JUNHO + IND_VN_ANO_N_MAIO_ACUM;
    var IND_VN_ANO_N_JULHO_ACUM = IND_VN_ANO_N_JULHO + IND_VN_ANO_N_JUNHO_ACUM;
    var IND_VN_ANO_N_AGOSTO_ACUM = IND_VN_ANO_N_AGOSTO + IND_VN_ANO_N_JULHO_ACUM;
    var IND_VN_ANO_N_SETEMBRO_ACUM = IND_VN_ANO_N_SETEMBRO + IND_VN_ANO_N_AGOSTO_ACUM;
    var IND_VN_ANO_N_OUTUBRO_ACUM = IND_VN_ANO_N_OUTUBRO + IND_VN_ANO_N_SETEMBRO_ACUM;
    var IND_VN_ANO_N_NOVEMBRO_ACUM = IND_VN_ANO_N_NOVEMBRO + IND_VN_ANO_N_OUTUBRO_ACUM;
    var IND_VN_ANO_N_DEZEMBRO_ACUM = IND_VN_ANO_N_DEZEMBRO + IND_VN_ANO_N_NOVEMBRO_ACUM;



    var IND_VN_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JANEIRO"])));
    var IND_VN_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_FEVEREIRO"]))) + IND_VN_ANO_N_1_JANEIRO_ACUM;
    var IND_VN_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MARCO"]))) + IND_VN_ANO_N_1_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_ABRIL"]))) + IND_VN_ANO_N_1_MARCO_ACUM;
    var IND_VN_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MAIO"]))) + IND_VN_ANO_N_1_ABRIL_ACUM;
    var IND_VN_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JUNHO"]))) + IND_VN_ANO_N_1_MAIO_ACUM;
    var IND_VN_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JULHO"]))) + IND_VN_ANO_N_1_JUNHO_ACUM;
    var IND_VN_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_AGOSTO"]))) + IND_VN_ANO_N_1_JULHO_ACUM;
    var IND_VN_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_SETEMBRO"]))) + IND_VN_ANO_N_1_AGOSTO_ACUM;
    var IND_VN_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_OUTUBRO"]))) + IND_VN_ANO_N_1_SETEMBRO_ACUM;
    var IND_VN_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_NOVEMBRO"]))) + IND_VN_ANO_N_1_OUTUBRO_ACUM;
    var IND_VN_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_DEZEMBRO"]))) + IND_VN_ANO_N_1_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_PUB_PROPAG_VN_ANO_N_JANEIRO_ACUM = 'nd'; var PESO_FSE_PUB_PROPAG_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_PUB_PROPAG_VN_ANO_N_JANEIRO_ACUM= FSE_PUB_PROPAG_ANO_N_JANEIRO_ACUM/IND_VN_ANO_N_JANEIRO_ACUM*100; var PESO_FSE_PUB_PROPAG_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = PESO_FSE_PUB_PROPAG_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_PUB_PROPAG_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_PUB_PROPAG_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_PUB_PROPAG_VN_ANO_N_FEVEREIRO_ACUM= FSE_PUB_PROPAG_ANO_N_FEVEREIRO_ACUM/IND_VN_ANO_N_FEVEREIRO_ACUM*100; var PESO_FSE_PUB_PROPAG_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_PUB_PROPAG_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_PUB_PROPAG_VN_ANO_N_MARCO_ACUM = 'nd'; var PESO_FSE_PUB_PROPAG_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_PUB_PROPAG_VN_ANO_N_MARCO_ACUM= FSE_PUB_PROPAG_ANO_N_MARCO_ACUM/IND_VN_ANO_N_MARCO_ACUM*100; var PESO_FSE_PUB_PROPAG_VN_ANO_N_MARCO_ACUM_MAX_MIN = PESO_FSE_PUB_PROPAG_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_PUB_PROPAG_VN_ANO_N_ABRIL_ACUM = 'nd'; var PESO_FSE_PUB_PROPAG_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_PUB_PROPAG_VN_ANO_N_ABRIL_ACUM= FSE_PUB_PROPAG_ANO_N_ABRIL_ACUM/IND_VN_ANO_N_ABRIL_ACUM*100; var PESO_FSE_PUB_PROPAG_VN_ANO_N_ABRIL_ACUM_MAX_MIN = PESO_FSE_PUB_PROPAG_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_PUB_PROPAG_VN_ANO_N_MAIO_ACUM = 'nd'; var PESO_FSE_PUB_PROPAG_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_PUB_PROPAG_VN_ANO_N_MAIO_ACUM= FSE_PUB_PROPAG_ANO_N_MAIO_ACUM/IND_VN_ANO_N_MAIO_ACUM*100; var PESO_FSE_PUB_PROPAG_VN_ANO_N_MAIO_ACUM_MAX_MIN = PESO_FSE_PUB_PROPAG_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_PUB_PROPAG_VN_ANO_N_JUNHO_ACUM = 'nd'; var PESO_FSE_PUB_PROPAG_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_PUB_PROPAG_VN_ANO_N_JUNHO_ACUM= FSE_PUB_PROPAG_ANO_N_JUNHO_ACUM/IND_VN_ANO_N_JUNHO_ACUM*100; var PESO_FSE_PUB_PROPAG_VN_ANO_N_JUNHO_ACUM_MAX_MIN = PESO_FSE_PUB_PROPAG_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_PUB_PROPAG_VN_ANO_N_JULHO_ACUM = 'nd'; var PESO_FSE_PUB_PROPAG_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_PUB_PROPAG_VN_ANO_N_JULHO_ACUM= FSE_PUB_PROPAG_ANO_N_JULHO_ACUM/IND_VN_ANO_N_JULHO_ACUM*100; var PESO_FSE_PUB_PROPAG_VN_ANO_N_JULHO_ACUM_MAX_MIN = PESO_FSE_PUB_PROPAG_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_PUB_PROPAG_VN_ANO_N_AGOSTO_ACUM = 'nd'; var PESO_FSE_PUB_PROPAG_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_PUB_PROPAG_VN_ANO_N_AGOSTO_ACUM= FSE_PUB_PROPAG_ANO_N_AGOSTO_ACUM/IND_VN_ANO_N_AGOSTO_ACUM*100; var PESO_FSE_PUB_PROPAG_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = PESO_FSE_PUB_PROPAG_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_PUB_PROPAG_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var PESO_FSE_PUB_PROPAG_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_PUB_PROPAG_VN_ANO_N_SETEMBRO_ACUM= FSE_PUB_PROPAG_ANO_N_SETEMBRO_ACUM/IND_VN_ANO_N_SETEMBRO_ACUM*100; var PESO_FSE_PUB_PROPAG_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_PUB_PROPAG_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_PUB_PROPAG_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var PESO_FSE_PUB_PROPAG_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_PUB_PROPAG_VN_ANO_N_OUTUBRO_ACUM= FSE_PUB_PROPAG_ANO_N_OUTUBRO_ACUM/IND_VN_ANO_N_OUTUBRO_ACUM*100; var PESO_FSE_PUB_PROPAG_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_PUB_PROPAG_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_PUB_PROPAG_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_PUB_PROPAG_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_PUB_PROPAG_VN_ANO_N_NOVEMBRO_ACUM= FSE_PUB_PROPAG_ANO_N_NOVEMBRO_ACUM/IND_VN_ANO_N_NOVEMBRO_ACUM*100; var PESO_FSE_PUB_PROPAG_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_PUB_PROPAG_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_PUB_PROPAG_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_PUB_PROPAG_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_PUB_PROPAG_VN_ANO_N_DEZEMBRO_ACUM= FSE_PUB_PROPAG_ANO_N_DEZEMBRO_ACUM/IND_VN_ANO_N_DEZEMBRO_ACUM*100; var PESO_FSE_PUB_PROPAG_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_PUB_PROPAG_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_JANEIRO_ACUM = 'nd'; var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_JANEIRO_ACUM= FSE_PUB_PROPAG_ANO_N_1_JANEIRO_ACUM/IND_VN_ANO_N_1_JANEIRO_ACUM*100; var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = PESO_FSE_PUB_PROPAG_VN_ANO_N_1_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_FEVEREIRO_ACUM= FSE_PUB_PROPAG_ANO_N_1_FEVEREIRO_ACUM/IND_VN_ANO_N_1_FEVEREIRO_ACUM*100; var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_PUB_PROPAG_VN_ANO_N_1_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_MARCO_ACUM = 'nd'; var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_MARCO_ACUM= FSE_PUB_PROPAG_ANO_N_1_MARCO_ACUM/IND_VN_ANO_N_1_MARCO_ACUM*100; var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = PESO_FSE_PUB_PROPAG_VN_ANO_N_1_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_ABRIL_ACUM = 'nd'; var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_ABRIL_ACUM= FSE_PUB_PROPAG_ANO_N_1_ABRIL_ACUM/IND_VN_ANO_N_1_ABRIL_ACUM*100; var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = PESO_FSE_PUB_PROPAG_VN_ANO_N_1_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_MAIO_ACUM = 'nd'; var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_MAIO_ACUM= FSE_PUB_PROPAG_ANO_N_1_MAIO_ACUM/IND_VN_ANO_N_1_MAIO_ACUM*100; var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = PESO_FSE_PUB_PROPAG_VN_ANO_N_1_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_JUNHO_ACUM = 'nd'; var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_JUNHO_ACUM= FSE_PUB_PROPAG_ANO_N_1_JUNHO_ACUM/IND_VN_ANO_N_1_JUNHO_ACUM*100; var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = PESO_FSE_PUB_PROPAG_VN_ANO_N_1_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_JULHO_ACUM = 'nd'; var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_JULHO_ACUM= FSE_PUB_PROPAG_ANO_N_1_JULHO_ACUM/IND_VN_ANO_N_1_JULHO_ACUM*100; var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = PESO_FSE_PUB_PROPAG_VN_ANO_N_1_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_AGOSTO_ACUM = 'nd'; var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_AGOSTO_ACUM= FSE_PUB_PROPAG_ANO_N_1_AGOSTO_ACUM/IND_VN_ANO_N_1_AGOSTO_ACUM*100; var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = PESO_FSE_PUB_PROPAG_VN_ANO_N_1_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_SETEMBRO_ACUM = 'nd'; var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_SETEMBRO_ACUM= FSE_PUB_PROPAG_ANO_N_1_SETEMBRO_ACUM/IND_VN_ANO_N_1_SETEMBRO_ACUM*100; var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_PUB_PROPAG_VN_ANO_N_1_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_OUTUBRO_ACUM = 'nd'; var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_OUTUBRO_ACUM= FSE_PUB_PROPAG_ANO_N_1_OUTUBRO_ACUM/IND_VN_ANO_N_1_OUTUBRO_ACUM*100; var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_PUB_PROPAG_VN_ANO_N_1_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_NOVEMBRO_ACUM= FSE_PUB_PROPAG_ANO_N_1_NOVEMBRO_ACUM/IND_VN_ANO_N_1_NOVEMBRO_ACUM*100; var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_PUB_PROPAG_VN_ANO_N_1_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_DEZEMBRO_ACUM= FSE_PUB_PROPAG_ANO_N_1_DEZEMBRO_ACUM/IND_VN_ANO_N_1_DEZEMBRO_ACUM*100; var PESO_FSE_PUB_PROPAG_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_PUB_PROPAG_VN_ANO_N_1_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_VN_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JANEIRO_ACUM= ((IND_VN_ANO_N_JANEIRO_ACUM-IND_VN_ANO_N_1_JANEIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_JANEIRO_ACUM))*100; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_FEVEREIRO_ACUM= ((IND_VN_ANO_N_FEVEREIRO_ACUM-IND_VN_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_VN_ANO_N_MARCO_ACUM = 'nd'; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MARCO_ACUM= ((IND_VN_ANO_N_MARCO_ACUM-IND_VN_ANO_N_1_MARCO_ACUM)/Math.abs(IND_VN_ANO_N_1_MARCO_ACUM))*100; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = VAR_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_VN_ANO_N_ABRIL_ACUM = 'nd'; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_ABRIL_ACUM= ((IND_VN_ANO_N_ABRIL_ACUM-IND_VN_ANO_N_1_ABRIL_ACUM)/Math.abs(IND_VN_ANO_N_1_ABRIL_ACUM))*100; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_VN_ANO_N_MAIO_ACUM = 'nd'; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MAIO_ACUM= ((IND_VN_ANO_N_MAIO_ACUM-IND_VN_ANO_N_1_MAIO_ACUM)/Math.abs(IND_VN_ANO_N_1_MAIO_ACUM))*100; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = VAR_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_VN_ANO_N_JUNHO_ACUM = 'nd'; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JUNHO_ACUM= ((IND_VN_ANO_N_JUNHO_ACUM-IND_VN_ANO_N_1_JUNHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JUNHO_ACUM))*100; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_VN_ANO_N_JULHO_ACUM = 'nd'; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JULHO_ACUM= ((IND_VN_ANO_N_JULHO_ACUM-IND_VN_ANO_N_1_JULHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JULHO_ACUM))*100; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_VN_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_AGOSTO_ACUM= ((IND_VN_ANO_N_AGOSTO_ACUM-IND_VN_ANO_N_1_AGOSTO_ACUM)/Math.abs(IND_VN_ANO_N_1_AGOSTO_ACUM))*100; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_SETEMBRO_ACUM= ((IND_VN_ANO_N_SETEMBRO_ACUM-IND_VN_ANO_N_1_SETEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_OUTUBRO_ACUM= ((IND_VN_ANO_N_OUTUBRO_ACUM-IND_VN_ANO_N_1_OUTUBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_NOVEMBRO_ACUM= ((IND_VN_ANO_N_NOVEMBRO_ACUM-IND_VN_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_DEZEMBRO_ACUM= ((IND_VN_ANO_N_DEZEMBRO_ACUM-IND_VN_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_FSE_PUB_PROPAG_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_FSE_PUB_PROPAG_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_PUB_PROPAG_ANO_N_JANEIRO_ACUM= ((FSE_PUB_PROPAG_ANO_N_JANEIRO_ACUM-FSE_PUB_PROPAG_ANO_N_1_JANEIRO_ACUM)/Math.abs(FSE_PUB_PROPAG_ANO_N_1_JANEIRO_ACUM))*100; var VAR_FSE_PUB_PROPAG_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_FSE_PUB_PROPAG_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_FSE_PUB_PROPAG_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_FSE_PUB_PROPAG_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_PUB_PROPAG_ANO_N_FEVEREIRO_ACUM= ((FSE_PUB_PROPAG_ANO_N_FEVEREIRO_ACUM-FSE_PUB_PROPAG_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(FSE_PUB_PROPAG_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_FSE_PUB_PROPAG_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_FSE_PUB_PROPAG_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_FSE_PUB_PROPAG_ANO_N_MARCO_ACUM = 'nd'; var VAR_FSE_PUB_PROPAG_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_PUB_PROPAG_ANO_N_MARCO_ACUM= ((FSE_PUB_PROPAG_ANO_N_MARCO_ACUM-FSE_PUB_PROPAG_ANO_N_1_MARCO_ACUM)/Math.abs(FSE_PUB_PROPAG_ANO_N_1_MARCO_ACUM))*100; var VAR_FSE_PUB_PROPAG_ANO_N_MARCO_ACUM_MAX_MIN = VAR_FSE_PUB_PROPAG_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_FSE_PUB_PROPAG_ANO_N_ABRIL_ACUM = 'nd'; var VAR_FSE_PUB_PROPAG_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_PUB_PROPAG_ANO_N_ABRIL_ACUM= ((FSE_PUB_PROPAG_ANO_N_ABRIL_ACUM-FSE_PUB_PROPAG_ANO_N_1_ABRIL_ACUM)/Math.abs(FSE_PUB_PROPAG_ANO_N_1_ABRIL_ACUM))*100; var VAR_FSE_PUB_PROPAG_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_FSE_PUB_PROPAG_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_FSE_PUB_PROPAG_ANO_N_MAIO_ACUM = 'nd'; var VAR_FSE_PUB_PROPAG_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_PUB_PROPAG_ANO_N_MAIO_ACUM= ((FSE_PUB_PROPAG_ANO_N_MAIO_ACUM-FSE_PUB_PROPAG_ANO_N_1_MAIO_ACUM)/Math.abs(FSE_PUB_PROPAG_ANO_N_1_MAIO_ACUM))*100; var VAR_FSE_PUB_PROPAG_ANO_N_MAIO_ACUM_MAX_MIN = VAR_FSE_PUB_PROPAG_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_FSE_PUB_PROPAG_ANO_N_JUNHO_ACUM = 'nd'; var VAR_FSE_PUB_PROPAG_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_PUB_PROPAG_ANO_N_JUNHO_ACUM= ((FSE_PUB_PROPAG_ANO_N_JUNHO_ACUM-FSE_PUB_PROPAG_ANO_N_1_JUNHO_ACUM)/Math.abs(FSE_PUB_PROPAG_ANO_N_1_JUNHO_ACUM))*100; var VAR_FSE_PUB_PROPAG_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_FSE_PUB_PROPAG_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_FSE_PUB_PROPAG_ANO_N_JULHO_ACUM = 'nd'; var VAR_FSE_PUB_PROPAG_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_PUB_PROPAG_ANO_N_JULHO_ACUM= ((FSE_PUB_PROPAG_ANO_N_JULHO_ACUM-FSE_PUB_PROPAG_ANO_N_1_JULHO_ACUM)/Math.abs(FSE_PUB_PROPAG_ANO_N_1_JULHO_ACUM))*100; var VAR_FSE_PUB_PROPAG_ANO_N_JULHO_ACUM_MAX_MIN = VAR_FSE_PUB_PROPAG_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_FSE_PUB_PROPAG_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_FSE_PUB_PROPAG_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_PUB_PROPAG_ANO_N_AGOSTO_ACUM= ((FSE_PUB_PROPAG_ANO_N_AGOSTO_ACUM-FSE_PUB_PROPAG_ANO_N_1_AGOSTO_ACUM)/Math.abs(FSE_PUB_PROPAG_ANO_N_1_AGOSTO_ACUM))*100; var VAR_FSE_PUB_PROPAG_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_FSE_PUB_PROPAG_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_FSE_PUB_PROPAG_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_FSE_PUB_PROPAG_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_PUB_PROPAG_ANO_N_SETEMBRO_ACUM= ((FSE_PUB_PROPAG_ANO_N_SETEMBRO_ACUM-FSE_PUB_PROPAG_ANO_N_1_SETEMBRO_ACUM)/Math.abs(FSE_PUB_PROPAG_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_FSE_PUB_PROPAG_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_FSE_PUB_PROPAG_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_FSE_PUB_PROPAG_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_FSE_PUB_PROPAG_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_PUB_PROPAG_ANO_N_OUTUBRO_ACUM= ((FSE_PUB_PROPAG_ANO_N_OUTUBRO_ACUM-FSE_PUB_PROPAG_ANO_N_1_OUTUBRO_ACUM)/Math.abs(FSE_PUB_PROPAG_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_FSE_PUB_PROPAG_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_FSE_PUB_PROPAG_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_FSE_PUB_PROPAG_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_FSE_PUB_PROPAG_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_PUB_PROPAG_ANO_N_NOVEMBRO_ACUM= ((FSE_PUB_PROPAG_ANO_N_NOVEMBRO_ACUM-FSE_PUB_PROPAG_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(FSE_PUB_PROPAG_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_FSE_PUB_PROPAG_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_FSE_PUB_PROPAG_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_FSE_PUB_PROPAG_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_FSE_PUB_PROPAG_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_PUB_PROPAG_ANO_N_DEZEMBRO_ACUM= ((FSE_PUB_PROPAG_ANO_N_DEZEMBRO_ACUM-FSE_PUB_PROPAG_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(FSE_PUB_PROPAG_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_FSE_PUB_PROPAG_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_FSE_PUB_PROPAG_ANO_N_DEZEMBRO_ACUM };

    if( PESO_FSE_PUB_PROPAG_VN_ANO_N_1_JANEIRO_ACUM > PESO_FSE_PUB_PROPAG_VN_ANO_N_JANEIRO_ACUM) { var  INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_JANEIRO_ACUM=PESO_FSE_PUB_PROPAG_VN_ANO_N_1_JANEIRO_ACUM ; } else { var  INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_JANEIRO_ACUM=PESO_FSE_PUB_PROPAG_VN_ANO_N_JANEIRO_ACUM ; }
    if( PESO_FSE_PUB_PROPAG_VN_ANO_N_1_FEVEREIRO_ACUM > PESO_FSE_PUB_PROPAG_VN_ANO_N_FEVEREIRO_ACUM) { var  INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_FEVEREIRO_ACUM=PESO_FSE_PUB_PROPAG_VN_ANO_N_1_FEVEREIRO_ACUM ; } else { var  INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_FEVEREIRO_ACUM=PESO_FSE_PUB_PROPAG_VN_ANO_N_FEVEREIRO_ACUM ; }
    if( PESO_FSE_PUB_PROPAG_VN_ANO_N_1_MARCO_ACUM > PESO_FSE_PUB_PROPAG_VN_ANO_N_MARCO_ACUM) { var  INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_MARCO_ACUM=PESO_FSE_PUB_PROPAG_VN_ANO_N_1_MARCO_ACUM ; } else { var  INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_MARCO_ACUM=PESO_FSE_PUB_PROPAG_VN_ANO_N_MARCO_ACUM ; }
    if( PESO_FSE_PUB_PROPAG_VN_ANO_N_1_ABRIL_ACUM > PESO_FSE_PUB_PROPAG_VN_ANO_N_ABRIL_ACUM) { var  INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_ABRIL_ACUM=PESO_FSE_PUB_PROPAG_VN_ANO_N_1_ABRIL_ACUM ; } else { var  INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_ABRIL_ACUM=PESO_FSE_PUB_PROPAG_VN_ANO_N_ABRIL_ACUM ; }
    if( PESO_FSE_PUB_PROPAG_VN_ANO_N_1_MAIO_ACUM > PESO_FSE_PUB_PROPAG_VN_ANO_N_MAIO_ACUM) { var  INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_MAIO_ACUM=PESO_FSE_PUB_PROPAG_VN_ANO_N_1_MAIO_ACUM ; } else { var  INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_MAIO_ACUM=PESO_FSE_PUB_PROPAG_VN_ANO_N_MAIO_ACUM ; }
    if( PESO_FSE_PUB_PROPAG_VN_ANO_N_1_JUNHO_ACUM > PESO_FSE_PUB_PROPAG_VN_ANO_N_JUNHO_ACUM) { var  INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_JUNHO_ACUM=PESO_FSE_PUB_PROPAG_VN_ANO_N_1_JUNHO_ACUM ; } else { var  INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_JUNHO_ACUM=PESO_FSE_PUB_PROPAG_VN_ANO_N_JUNHO_ACUM ; }
    if( PESO_FSE_PUB_PROPAG_VN_ANO_N_1_JULHO_ACUM > PESO_FSE_PUB_PROPAG_VN_ANO_N_JULHO_ACUM) { var  INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_JULHO_ACUM=PESO_FSE_PUB_PROPAG_VN_ANO_N_1_JULHO_ACUM ; } else { var  INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_JULHO_ACUM=PESO_FSE_PUB_PROPAG_VN_ANO_N_JULHO_ACUM ; }
    if( PESO_FSE_PUB_PROPAG_VN_ANO_N_1_AGOSTO_ACUM > PESO_FSE_PUB_PROPAG_VN_ANO_N_AGOSTO_ACUM) { var  INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_AGOSTO_ACUM=PESO_FSE_PUB_PROPAG_VN_ANO_N_1_AGOSTO_ACUM ; } else { var  INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_AGOSTO_ACUM=PESO_FSE_PUB_PROPAG_VN_ANO_N_AGOSTO_ACUM ; }
    if( PESO_FSE_PUB_PROPAG_VN_ANO_N_1_SETEMBRO_ACUM > PESO_FSE_PUB_PROPAG_VN_ANO_N_SETEMBRO_ACUM) { var  INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_SETEMBRO_ACUM=PESO_FSE_PUB_PROPAG_VN_ANO_N_1_SETEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_SETEMBRO_ACUM=PESO_FSE_PUB_PROPAG_VN_ANO_N_SETEMBRO_ACUM ; }
    if( PESO_FSE_PUB_PROPAG_VN_ANO_N_1_OUTUBRO_ACUM > PESO_FSE_PUB_PROPAG_VN_ANO_N_OUTUBRO_ACUM) { var  INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_OUTUBRO_ACUM=PESO_FSE_PUB_PROPAG_VN_ANO_N_1_OUTUBRO_ACUM ; } else { var  INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_OUTUBRO_ACUM=PESO_FSE_PUB_PROPAG_VN_ANO_N_OUTUBRO_ACUM ; }
    if( PESO_FSE_PUB_PROPAG_VN_ANO_N_1_NOVEMBRO_ACUM > PESO_FSE_PUB_PROPAG_VN_ANO_N_NOVEMBRO_ACUM) { var  INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_NOVEMBRO_ACUM=PESO_FSE_PUB_PROPAG_VN_ANO_N_1_NOVEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_NOVEMBRO_ACUM=PESO_FSE_PUB_PROPAG_VN_ANO_N_NOVEMBRO_ACUM ; }
    if( PESO_FSE_PUB_PROPAG_VN_ANO_N_1_DEZEMBRO_ACUM > PESO_FSE_PUB_PROPAG_VN_ANO_N_DEZEMBRO_ACUM) { var  INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_DEZEMBRO_ACUM=PESO_FSE_PUB_PROPAG_VN_ANO_N_1_DEZEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_DEZEMBRO_ACUM=PESO_FSE_PUB_PROPAG_VN_ANO_N_DEZEMBRO_ACUM ; }



    var fillBetweenLinesPlugin = {
        afterDatasetsDraw: function (chart) {
            var ctx = chart.chart.ctx;
            var xaxis = chart.scales['x-axis-0'];
            var yaxis = chart.scales['y-axis-0'];
            var datasets = chart.data.datasets;
            ctx.save();

            for (var d = 0; d < datasets.length; d++) {
                var dataset = datasets[d];
                if (dataset.fillBetweenSet == undefined) {
                    continue;
                }

                // get meta for both data sets
                var meta1 = chart.getDatasetMeta(d);
                var meta2 = chart.getDatasetMeta(dataset.fillBetweenSet);

                // do not draw fill if one of the datasets is hidden
                if (meta1.hidden || meta2.hidden) continue;

                // create fill areas in pairs
                for (var p = 0; p < meta1.data.length-1;p++) {
                    // if null skip
                    if (dataset.data[p] == null || dataset.data[p+1] == null) continue;

                    ctx.beginPath();

                    // trace line 1
                    var curr = meta1.data[p];
                    var next = meta1.data[p+1];
                    ctx.moveTo(curr._view.x, curr._view.y);
                    ctx.lineTo(curr._view.x, curr._view.y);
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(next._view.x, curr._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        ctx.bezierCurveTo(
                          curr._view.controlPointNextX,
                          curr._view.controlPointNextY,
                          next._view.controlPointPreviousX,
                          next._view.controlPointPreviousY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // connect dataset1 to dataset2
                    var curr = meta2.data[p+1];
                    var next = meta2.data[p];
                    ctx.lineTo(curr._view.x, curr._view.y);

                    // trace BACKWORDS set2 to complete the box
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(curr._view.x, next._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        // reverse bezier
                        ctx.bezierCurveTo(
                          curr._view.controlPointPreviousX,
                          curr._view.controlPointPreviousY,
                          next._view.controlPointNextX,
                          next._view.controlPointNextY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // close the loop and fill with shading
                    ctx.closePath();
                    ctx.fillStyle = dataset.fillBetweenColor || "rgba(0,0,0,0.1)";
                    ctx.fill();
                } // end for p loop
            }
        } // end afterDatasetsDraw
    }; // end fillBetweenLinesPlugin

    Chart.pluginService.register(fillBetweenLinesPlugin);



    var GRAFICO_FSE_RESULT_MENSAL_COMP_007=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_007').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_007=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_007, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label:  'Peso Publ. Prop.vsVN(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   //borderColor: "#F00",
                   fill: false,
                   steppedLine: false,
                   tension: 0.5,
                   fillBetweenSet: 1,
                   fillBetweenColor: "rgba(0, 221, 0, 0.1)",
                   data: [
                   PESO_FSE_PUB_PROPAG_VN_ANO_N_JANEIRO_ACUM,
                   PESO_FSE_PUB_PROPAG_VN_ANO_N_FEVEREIRO_ACUM,
                   PESO_FSE_PUB_PROPAG_VN_ANO_N_MARCO_ACUM,
                   PESO_FSE_PUB_PROPAG_VN_ANO_N_ABRIL_ACUM,
                   PESO_FSE_PUB_PROPAG_VN_ANO_N_MAIO_ACUM,
                   PESO_FSE_PUB_PROPAG_VN_ANO_N_JUNHO_ACUM,
                   PESO_FSE_PUB_PROPAG_VN_ANO_N_JULHO_ACUM,
                   PESO_FSE_PUB_PROPAG_VN_ANO_N_AGOSTO_ACUM,
                   PESO_FSE_PUB_PROPAG_VN_ANO_N_SETEMBRO_ACUM,
                   PESO_FSE_PUB_PROPAG_VN_ANO_N_OUTUBRO_ACUM,
                   PESO_FSE_PUB_PROPAG_VN_ANO_N_NOVEMBRO_ACUM,
                   PESO_FSE_PUB_PROPAG_VN_ANO_N_DEZEMBRO_ACUM,

                   ],
                   type: 'line'


               },
                {
                    label: 'Peso Publ. Prop.vsVN(ac) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'A',
                    //backgroundColor: 'rgb(17, 121, 240)',
                    borderColor: 'rgb(0,221,0)',
                    //borderColor: "#00F",
                    fill: false,
                    steppedLine: false,
                    tension: 0.5,
                    data: [
                   PESO_FSE_PUB_PROPAG_VN_ANO_N_1_JANEIRO_ACUM,
                   PESO_FSE_PUB_PROPAG_VN_ANO_N_1_FEVEREIRO_ACUM,
                   PESO_FSE_PUB_PROPAG_VN_ANO_N_1_MARCO_ACUM,
                   PESO_FSE_PUB_PROPAG_VN_ANO_N_1_ABRIL_ACUM,
                   PESO_FSE_PUB_PROPAG_VN_ANO_N_1_MAIO_ACUM,
                   PESO_FSE_PUB_PROPAG_VN_ANO_N_1_JUNHO_ACUM,
                   PESO_FSE_PUB_PROPAG_VN_ANO_N_1_JULHO_ACUM,
                   PESO_FSE_PUB_PROPAG_VN_ANO_N_1_AGOSTO_ACUM,
                   PESO_FSE_PUB_PROPAG_VN_ANO_N_1_SETEMBRO_ACUM,
                   PESO_FSE_PUB_PROPAG_VN_ANO_N_1_OUTUBRO_ACUM,
                   PESO_FSE_PUB_PROPAG_VN_ANO_N_1_NOVEMBRO_ACUM,
                   PESO_FSE_PUB_PROPAG_VN_ANO_N_1_DEZEMBRO_ACUM,
                    ],
                    type: 'line'
                },
    {
        label: 'Ineficiência',
        yAxisID: 'A',
        backgroundColor: "rgba(255, 0, 0, 0.2)",
        borderColor: 'rgba(255, 255, 255, 0.1)',
        //borderColor: "#0D0",
        fill: false,
        steppedLine: false,
        tension: 0.5,
        fillBetweenSet: 1,
        fillBetweenColor: "rgba(255, 0, 0, 0.2)",
        data: [
    INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_JANEIRO_ACUM,
    INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_FEVEREIRO_ACUM,
    INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_MARCO_ACUM,
    INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_ABRIL_ACUM,
    INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_MAIO_ACUM,
    INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_JUNHO_ACUM,
    INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_JULHO_ACUM,
    INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_AGOSTO_ACUM,
    INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_SETEMBRO_ACUM,
    INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_OUTUBRO_ACUM,
    INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_NOVEMBRO_ACUM,
    INEFICIENCIA_FSE_PUB_PROPAG_ANO_N_DEZEMBRO_ACUM,
        ],
        type: 'line'
    },

            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_Publ. Prop. COMP',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                //min:  Math.round(FSE_PUB_PROPAG_Mensal_Eixo_min_princ__,0),
                                                //max:  Math.round(FSE_PUB_PROPAG_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString()+ "%";
                                                }
                                            }
                                        },

                    //{ id: 'B',
                    //type: 'linear',
                    //position: 'right',
                    //ticks: {
                    //    //min:  Math.round(FSE_PUB_PROPAG_Mensal_Eixo_min_princ__,0),
                    //    //max:  Math.round(FSE_PUB_PROPAG_Mensal_Eixo_max_princ__,0),
                    //    beginAtZero: true,
                    //    callback: function(value, index, values) {
                    //        return value.toLocaleString();
                    //        }
                    //    }
                    //},






                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_008-----------------------------------------------------------*@
<script>

    if(@ViewData["MES_ACUM_REAL"]<1){ var IND_VN_ANO_N_JANEIRO = 'nd'; var IND_VN_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JANEIRO"]))); var IND_VN_ANO_N_JANEIRO_MAX_MIN = IND_VN_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var IND_VN_ANO_N_FEVEREIRO = 'nd'; var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_FEVEREIRO"]))); var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = IND_VN_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var IND_VN_ANO_N_MARCO = 'nd'; var IND_VN_ANO_N_MARCO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MARCO"]))); var IND_VN_ANO_N_MARCO_MAX_MIN = IND_VN_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var IND_VN_ANO_N_ABRIL = 'nd'; var IND_VN_ANO_N_ABRIL_MAX_MIN = 0;  } else { var IND_VN_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_ABRIL"]))); var IND_VN_ANO_N_ABRIL_MAX_MIN = IND_VN_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var IND_VN_ANO_N_MAIO = 'nd'; var IND_VN_ANO_N_MAIO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MAIO"]))); var IND_VN_ANO_N_MAIO_MAX_MIN = IND_VN_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var IND_VN_ANO_N_JUNHO = 'nd'; var IND_VN_ANO_N_JUNHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JUNHO"]))); var IND_VN_ANO_N_JUNHO_MAX_MIN = IND_VN_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var IND_VN_ANO_N_JULHO = 'nd'; var IND_VN_ANO_N_JULHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JULHO"]))); var IND_VN_ANO_N_JULHO_MAX_MIN = IND_VN_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var IND_VN_ANO_N_AGOSTO = 'nd'; var IND_VN_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_AGOSTO"]))); var IND_VN_ANO_N_AGOSTO_MAX_MIN = IND_VN_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var IND_VN_ANO_N_SETEMBRO = 'nd'; var IND_VN_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_SETEMBRO"]))); var IND_VN_ANO_N_SETEMBRO_MAX_MIN = IND_VN_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var IND_VN_ANO_N_OUTUBRO = 'nd'; var IND_VN_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_OUTUBRO"]))); var IND_VN_ANO_N_OUTUBRO_MAX_MIN = IND_VN_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var IND_VN_ANO_N_NOVEMBRO = 'nd'; var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_NOVEMBRO"]))); var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = IND_VN_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var IND_VN_ANO_N_DEZEMBRO = 'nd'; var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_DEZEMBRO"]))); var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = IND_VN_ANO_N_DEZEMBRO };

    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_VIG_SEGURANCA_ANO_N_JANEIRO = 'nd'; var FSE_VIG_SEGURANCA_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var FSE_VIG_SEGURANCA_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_JANEIRO"]))); var FSE_VIG_SEGURANCA_ANO_N_JANEIRO_MAX_MIN = FSE_VIG_SEGURANCA_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_VIG_SEGURANCA_ANO_N_FEVEREIRO = 'nd'; var FSE_VIG_SEGURANCA_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var FSE_VIG_SEGURANCA_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_FEVEREIRO"]))); var FSE_VIG_SEGURANCA_ANO_N_FEVEREIRO_MAX_MIN = FSE_VIG_SEGURANCA_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_VIG_SEGURANCA_ANO_N_MARCO = 'nd'; var FSE_VIG_SEGURANCA_ANO_N_MARCO_MAX_MIN = 0;  } else { var FSE_VIG_SEGURANCA_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_MARCO"]))); var FSE_VIG_SEGURANCA_ANO_N_MARCO_MAX_MIN = FSE_VIG_SEGURANCA_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_VIG_SEGURANCA_ANO_N_ABRIL = 'nd'; var FSE_VIG_SEGURANCA_ANO_N_ABRIL_MAX_MIN = 0;  } else { var FSE_VIG_SEGURANCA_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_ABRIL"]))); var FSE_VIG_SEGURANCA_ANO_N_ABRIL_MAX_MIN = FSE_VIG_SEGURANCA_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_VIG_SEGURANCA_ANO_N_MAIO = 'nd'; var FSE_VIG_SEGURANCA_ANO_N_MAIO_MAX_MIN = 0;  } else { var FSE_VIG_SEGURANCA_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_MAIO"]))); var FSE_VIG_SEGURANCA_ANO_N_MAIO_MAX_MIN = FSE_VIG_SEGURANCA_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_VIG_SEGURANCA_ANO_N_JUNHO = 'nd'; var FSE_VIG_SEGURANCA_ANO_N_JUNHO_MAX_MIN = 0;  } else { var FSE_VIG_SEGURANCA_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_JUNHO"]))); var FSE_VIG_SEGURANCA_ANO_N_JUNHO_MAX_MIN = FSE_VIG_SEGURANCA_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_VIG_SEGURANCA_ANO_N_JULHO = 'nd'; var FSE_VIG_SEGURANCA_ANO_N_JULHO_MAX_MIN = 0;  } else { var FSE_VIG_SEGURANCA_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_JULHO"]))); var FSE_VIG_SEGURANCA_ANO_N_JULHO_MAX_MIN = FSE_VIG_SEGURANCA_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_VIG_SEGURANCA_ANO_N_AGOSTO = 'nd'; var FSE_VIG_SEGURANCA_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var FSE_VIG_SEGURANCA_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_AGOSTO"]))); var FSE_VIG_SEGURANCA_ANO_N_AGOSTO_MAX_MIN = FSE_VIG_SEGURANCA_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_VIG_SEGURANCA_ANO_N_SETEMBRO = 'nd'; var FSE_VIG_SEGURANCA_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var FSE_VIG_SEGURANCA_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_SETEMBRO"]))); var FSE_VIG_SEGURANCA_ANO_N_SETEMBRO_MAX_MIN = FSE_VIG_SEGURANCA_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_VIG_SEGURANCA_ANO_N_OUTUBRO = 'nd'; var FSE_VIG_SEGURANCA_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var FSE_VIG_SEGURANCA_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_OUTUBRO"]))); var FSE_VIG_SEGURANCA_ANO_N_OUTUBRO_MAX_MIN = FSE_VIG_SEGURANCA_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_VIG_SEGURANCA_ANO_N_NOVEMBRO = 'nd'; var FSE_VIG_SEGURANCA_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var FSE_VIG_SEGURANCA_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_NOVEMBRO"]))); var FSE_VIG_SEGURANCA_ANO_N_NOVEMBRO_MAX_MIN = FSE_VIG_SEGURANCA_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_VIG_SEGURANCA_ANO_N_DEZEMBRO = 'nd'; var FSE_VIG_SEGURANCA_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var FSE_VIG_SEGURANCA_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_DEZEMBRO"]))); var FSE_VIG_SEGURANCA_ANO_N_DEZEMBRO_MAX_MIN = FSE_VIG_SEGURANCA_ANO_N_DEZEMBRO };


    var FSE_VIG_SEGURANCA_ANO_N_JANEIRO_ACUM = FSE_VIG_SEGURANCA_ANO_N_JANEIRO;
    var FSE_VIG_SEGURANCA_ANO_N_FEVEREIRO_ACUM = FSE_VIG_SEGURANCA_ANO_N_FEVEREIRO + FSE_VIG_SEGURANCA_ANO_N_JANEIRO_ACUM;
    var FSE_VIG_SEGURANCA_ANO_N_MARCO_ACUM = FSE_VIG_SEGURANCA_ANO_N_MARCO + FSE_VIG_SEGURANCA_ANO_N_FEVEREIRO_ACUM;
    var FSE_VIG_SEGURANCA_ANO_N_ABRIL_ACUM = FSE_VIG_SEGURANCA_ANO_N_ABRIL + FSE_VIG_SEGURANCA_ANO_N_MARCO_ACUM;
    var FSE_VIG_SEGURANCA_ANO_N_MAIO_ACUM = FSE_VIG_SEGURANCA_ANO_N_MAIO + FSE_VIG_SEGURANCA_ANO_N_ABRIL_ACUM;
    var FSE_VIG_SEGURANCA_ANO_N_JUNHO_ACUM = FSE_VIG_SEGURANCA_ANO_N_JUNHO + FSE_VIG_SEGURANCA_ANO_N_MAIO_ACUM;
    var FSE_VIG_SEGURANCA_ANO_N_JULHO_ACUM = FSE_VIG_SEGURANCA_ANO_N_JULHO + FSE_VIG_SEGURANCA_ANO_N_JUNHO_ACUM;
    var FSE_VIG_SEGURANCA_ANO_N_AGOSTO_ACUM = FSE_VIG_SEGURANCA_ANO_N_AGOSTO + FSE_VIG_SEGURANCA_ANO_N_JULHO_ACUM;
    var FSE_VIG_SEGURANCA_ANO_N_SETEMBRO_ACUM = FSE_VIG_SEGURANCA_ANO_N_SETEMBRO + FSE_VIG_SEGURANCA_ANO_N_AGOSTO_ACUM;
    var FSE_VIG_SEGURANCA_ANO_N_OUTUBRO_ACUM = FSE_VIG_SEGURANCA_ANO_N_OUTUBRO + FSE_VIG_SEGURANCA_ANO_N_SETEMBRO_ACUM;
    var FSE_VIG_SEGURANCA_ANO_N_NOVEMBRO_ACUM = FSE_VIG_SEGURANCA_ANO_N_NOVEMBRO + FSE_VIG_SEGURANCA_ANO_N_OUTUBRO_ACUM;
    var FSE_VIG_SEGURANCA_ANO_N_DEZEMBRO_ACUM = FSE_VIG_SEGURANCA_ANO_N_DEZEMBRO + FSE_VIG_SEGURANCA_ANO_N_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_VIG_SEGURANCA_ANO_N_JANEIRO_ACUM = 'nd'; var FSE_VIG_SEGURANCA_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var FSE_VIG_SEGURANCA_ANO_N_JANEIRO_ACUM= FSE_VIG_SEGURANCA_ANO_N_JANEIRO_ACUM; var FSE_VIG_SEGURANCA_ANO_N_JANEIRO_ACUM_MAX_MIN = FSE_VIG_SEGURANCA_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_VIG_SEGURANCA_ANO_N_FEVEREIRO_ACUM = 'nd'; var FSE_VIG_SEGURANCA_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var FSE_VIG_SEGURANCA_ANO_N_FEVEREIRO_ACUM= FSE_VIG_SEGURANCA_ANO_N_FEVEREIRO_ACUM; var FSE_VIG_SEGURANCA_ANO_N_FEVEREIRO_ACUM_MAX_MIN = FSE_VIG_SEGURANCA_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_VIG_SEGURANCA_ANO_N_MARCO_ACUM = 'nd'; var FSE_VIG_SEGURANCA_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var FSE_VIG_SEGURANCA_ANO_N_MARCO_ACUM= FSE_VIG_SEGURANCA_ANO_N_MARCO_ACUM; var FSE_VIG_SEGURANCA_ANO_N_MARCO_ACUM_MAX_MIN = FSE_VIG_SEGURANCA_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_VIG_SEGURANCA_ANO_N_ABRIL_ACUM = 'nd'; var FSE_VIG_SEGURANCA_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var FSE_VIG_SEGURANCA_ANO_N_ABRIL_ACUM= FSE_VIG_SEGURANCA_ANO_N_ABRIL_ACUM; var FSE_VIG_SEGURANCA_ANO_N_ABRIL_ACUM_MAX_MIN = FSE_VIG_SEGURANCA_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_VIG_SEGURANCA_ANO_N_MAIO_ACUM = 'nd'; var FSE_VIG_SEGURANCA_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var FSE_VIG_SEGURANCA_ANO_N_MAIO_ACUM= FSE_VIG_SEGURANCA_ANO_N_MAIO_ACUM; var FSE_VIG_SEGURANCA_ANO_N_MAIO_ACUM_MAX_MIN = FSE_VIG_SEGURANCA_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_VIG_SEGURANCA_ANO_N_JUNHO_ACUM = 'nd'; var FSE_VIG_SEGURANCA_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var FSE_VIG_SEGURANCA_ANO_N_JUNHO_ACUM= FSE_VIG_SEGURANCA_ANO_N_JUNHO_ACUM; var FSE_VIG_SEGURANCA_ANO_N_JUNHO_ACUM_MAX_MIN = FSE_VIG_SEGURANCA_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_VIG_SEGURANCA_ANO_N_JULHO_ACUM = 'nd'; var FSE_VIG_SEGURANCA_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var FSE_VIG_SEGURANCA_ANO_N_JULHO_ACUM= FSE_VIG_SEGURANCA_ANO_N_JULHO_ACUM; var FSE_VIG_SEGURANCA_ANO_N_JULHO_ACUM_MAX_MIN = FSE_VIG_SEGURANCA_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_VIG_SEGURANCA_ANO_N_AGOSTO_ACUM = 'nd'; var FSE_VIG_SEGURANCA_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var FSE_VIG_SEGURANCA_ANO_N_AGOSTO_ACUM= FSE_VIG_SEGURANCA_ANO_N_AGOSTO_ACUM; var FSE_VIG_SEGURANCA_ANO_N_AGOSTO_ACUM_MAX_MIN = FSE_VIG_SEGURANCA_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_VIG_SEGURANCA_ANO_N_SETEMBRO_ACUM = 'nd'; var FSE_VIG_SEGURANCA_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_VIG_SEGURANCA_ANO_N_SETEMBRO_ACUM= FSE_VIG_SEGURANCA_ANO_N_SETEMBRO_ACUM; var FSE_VIG_SEGURANCA_ANO_N_SETEMBRO_ACUM_MAX_MIN = FSE_VIG_SEGURANCA_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_VIG_SEGURANCA_ANO_N_OUTUBRO_ACUM = 'nd'; var FSE_VIG_SEGURANCA_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var FSE_VIG_SEGURANCA_ANO_N_OUTUBRO_ACUM= FSE_VIG_SEGURANCA_ANO_N_OUTUBRO_ACUM; var FSE_VIG_SEGURANCA_ANO_N_OUTUBRO_ACUM_MAX_MIN = FSE_VIG_SEGURANCA_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_VIG_SEGURANCA_ANO_N_NOVEMBRO_ACUM = 'nd'; var FSE_VIG_SEGURANCA_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_VIG_SEGURANCA_ANO_N_NOVEMBRO_ACUM= FSE_VIG_SEGURANCA_ANO_N_NOVEMBRO_ACUM; var FSE_VIG_SEGURANCA_ANO_N_NOVEMBRO_ACUM_MAX_MIN = FSE_VIG_SEGURANCA_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_VIG_SEGURANCA_ANO_N_DEZEMBRO_ACUM = 'nd'; var FSE_VIG_SEGURANCA_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_VIG_SEGURANCA_ANO_N_DEZEMBRO_ACUM= FSE_VIG_SEGURANCA_ANO_N_DEZEMBRO_ACUM; var FSE_VIG_SEGURANCA_ANO_N_DEZEMBRO_ACUM_MAX_MIN = FSE_VIG_SEGURANCA_ANO_N_DEZEMBRO_ACUM };




    var FSE_VIG_SEGURANCA_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_JANEIRO"])));
    var FSE_VIG_SEGURANCA_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_FEVEREIRO"]))) + FSE_VIG_SEGURANCA_ANO_N_1_JANEIRO_ACUM;
    var FSE_VIG_SEGURANCA_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_MARCO"]))) + FSE_VIG_SEGURANCA_ANO_N_1_FEVEREIRO_ACUM;
    var FSE_VIG_SEGURANCA_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_ABRIL"]))) + FSE_VIG_SEGURANCA_ANO_N_1_MARCO_ACUM;
    var FSE_VIG_SEGURANCA_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_MAIO"]))) + FSE_VIG_SEGURANCA_ANO_N_1_ABRIL_ACUM;
    var FSE_VIG_SEGURANCA_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_JUNHO"]))) + FSE_VIG_SEGURANCA_ANO_N_1_MAIO_ACUM;
    var FSE_VIG_SEGURANCA_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_JULHO"]))) + FSE_VIG_SEGURANCA_ANO_N_1_JUNHO_ACUM;
    var FSE_VIG_SEGURANCA_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_AGOSTO"]))) + FSE_VIG_SEGURANCA_ANO_N_1_JULHO_ACUM;
    var FSE_VIG_SEGURANCA_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_SETEMBRO"]))) + FSE_VIG_SEGURANCA_ANO_N_1_AGOSTO_ACUM;
    var FSE_VIG_SEGURANCA_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_OUTUBRO"]))) + FSE_VIG_SEGURANCA_ANO_N_1_SETEMBRO_ACUM;
    var FSE_VIG_SEGURANCA_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_NOVEMBRO"]))) + FSE_VIG_SEGURANCA_ANO_N_1_OUTUBRO_ACUM;
    var FSE_VIG_SEGURANCA_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_DEZEMBRO"]))) + FSE_VIG_SEGURANCA_ANO_N_1_NOVEMBRO_ACUM;


    var FSE_VIG_SEGURANCA_Mensal_Eixo_max_princ= Math.max(
                       FSE_VIG_SEGURANCA_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_VIG_SEGURANCA_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_VIG_SEGURANCA_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_VIG_SEGURANCA_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_VIG_SEGURANCA_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_VIG_SEGURANCA_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_VIG_SEGURANCA_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_VIG_SEGURANCA_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_VIG_SEGURANCA_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_VIG_SEGURANCA_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_VIG_SEGURANCA_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_VIG_SEGURANCA_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_VIG_SEGURANCA_ANO_N_1_JANEIRO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_1_MARCO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_1_ABRIL_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_1_MAIO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_1_JUNHO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_1_JULHO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_1_AGOSTO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_1_SETEMBRO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_1_OUTUBRO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_1_DEZEMBRO_ACUM
                             );
    var FSE_VIG_SEGURANCA_Mensal_Eixo_min_princ= Math.min(

                       FSE_VIG_SEGURANCA_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_VIG_SEGURANCA_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_VIG_SEGURANCA_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_VIG_SEGURANCA_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_VIG_SEGURANCA_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_VIG_SEGURANCA_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_VIG_SEGURANCA_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_VIG_SEGURANCA_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_VIG_SEGURANCA_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_VIG_SEGURANCA_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_VIG_SEGURANCA_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_VIG_SEGURANCA_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_VIG_SEGURANCA_ANO_N_1_JANEIRO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_1_MARCO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_1_ABRIL_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_1_MAIO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_1_JUNHO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_1_JULHO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_1_AGOSTO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_1_SETEMBRO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_1_OUTUBRO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_1_DEZEMBRO_ACUM
                           );
    var FSE_VIG_SEGURANCA_Mensal_Eixo_max_secon= Math.max(
                       FSE_VIG_SEGURANCA_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_VIG_SEGURANCA_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_VIG_SEGURANCA_ANO_N_MARCO_MAX_MIN ,
                       FSE_VIG_SEGURANCA_ANO_N_ABRIL_MAX_MIN ,
                       FSE_VIG_SEGURANCA_ANO_N_MAIO_MAX_MIN ,
                       FSE_VIG_SEGURANCA_ANO_N_JUNHO_MAX_MIN ,
                       FSE_VIG_SEGURANCA_ANO_N_JULHO_MAX_MIN ,
                       FSE_VIG_SEGURANCA_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_VIG_SEGURANCA_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_VIG_SEGURANCA_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_VIG_SEGURANCA_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_VIG_SEGURANCA_ANO_N_DEZEMBRO_MAX_MIN ,



                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_DEZEMBRO"])))

                            );
    var FSE_VIG_SEGURANCA_Mensal_Eixo_min_secon= Math.min(
                       FSE_VIG_SEGURANCA_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_VIG_SEGURANCA_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_VIG_SEGURANCA_ANO_N_MARCO_MAX_MIN ,
                       FSE_VIG_SEGURANCA_ANO_N_ABRIL_MAX_MIN ,
                       FSE_VIG_SEGURANCA_ANO_N_MAIO_MAX_MIN ,
                       FSE_VIG_SEGURANCA_ANO_N_JUNHO_MAX_MIN ,
                       FSE_VIG_SEGURANCA_ANO_N_JULHO_MAX_MIN ,
                       FSE_VIG_SEGURANCA_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_VIG_SEGURANCA_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_VIG_SEGURANCA_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_VIG_SEGURANCA_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_VIG_SEGURANCA_ANO_N_DEZEMBRO_MAX_MIN ,


                           @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_DEZEMBRO"])))

                          );

    //NOTA TA: Aqui trato o minimo e o maximo do eixo principal
    if(Math.abs(FSE_VIG_SEGURANCA_Mensal_Eixo_max_princ)>=Math.abs(FSE_VIG_SEGURANCA_Mensal_Eixo_min_princ))
    {
        var FSE_VIG_SEGURANCA_Mensal_Eixo_max_princ_=(Math.ceil(FSE_VIG_SEGURANCA_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_VIG_SEGURANCA_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_VIG_SEGURANCA_Mensal_Eixo_max_princ),0).toString().length-1);
        var FSE_VIG_SEGURANCA_Mensal_Eixo_min_princ_= (Math.floor(FSE_VIG_SEGURANCA_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_VIG_SEGURANCA_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_VIG_SEGURANCA_Mensal_Eixo_max_princ),0).toString().length-1);
        //alert(FSE_VIG_SEGURANCA_Mensal_Eixo_max_princ_);
        //alert(FSE_VIG_SEGURANCA_Mensal_Eixo_min_princ_);
    }
    else
    {
        var FSE_VIG_SEGURANCA_Mensal_Eixo_max_princ_=(Math.ceil(FSE_VIG_SEGURANCA_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_VIG_SEGURANCA_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_VIG_SEGURANCA_Mensal_Eixo_min_princ),0).toString().length-1);
        var FSE_VIG_SEGURANCA_Mensal_Eixo_min_princ_= (Math.floor(FSE_VIG_SEGURANCA_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_VIG_SEGURANCA_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_VIG_SEGURANCA_Mensal_Eixo_min_princ),0).toString().length-1);}

    //NOTA TA: Aqui trato o minimo e o maximo do eixo secundario

    if(Math.abs(FSE_VIG_SEGURANCA_Mensal_Eixo_max_secon)>=Math.abs(FSE_VIG_SEGURANCA_Mensal_Eixo_min_secon))
    {
        var FSE_VIG_SEGURANCA_Mensal_Eixo_max_secon_=(Math.ceil(FSE_VIG_SEGURANCA_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_VIG_SEGURANCA_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_VIG_SEGURANCA_Mensal_Eixo_max_secon),0).toString().length-1);
        var FSE_VIG_SEGURANCA_Mensal_Eixo_min_secon_= (Math.floor(FSE_VIG_SEGURANCA_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_VIG_SEGURANCA_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_VIG_SEGURANCA_Mensal_Eixo_max_secon),0).toString().length-1);
        //alert(FSE_VIG_SEGURANCA_Mensal_Eixo_max_secon_);
        //alert(FSE_VIG_SEGURANCA_Mensal_Eixo_min_secon_);
    }
    else
    {
        var FSE_VIG_SEGURANCA_Mensal_Eixo_max_secon_=(Math.ceil(FSE_VIG_SEGURANCA_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_VIG_SEGURANCA_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_VIG_SEGURANCA_Mensal_Eixo_min_secon),0).toString().length-1);
        var FSE_VIG_SEGURANCA_Mensal_Eixo_min_secon_= (Math.floor(FSE_VIG_SEGURANCA_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_VIG_SEGURANCA_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_VIG_SEGURANCA_Mensal_Eixo_min_secon),0).toString().length-1);}


    if(Math.abs(FSE_VIG_SEGURANCA_Mensal_Eixo_min_princ)/Math.abs(FSE_VIG_SEGURANCA_Mensal_Eixo_max_princ)>=Math.abs(FSE_VIG_SEGURANCA_Mensal_Eixo_min_secon)/Math.abs(FSE_VIG_SEGURANCA_Mensal_Eixo_max_secon))
    { if(FSE_VIG_SEGURANCA_Mensal_Eixo_max_princ > 0 && FSE_VIG_SEGURANCA_Mensal_Eixo_min_princ <0 ){ var FSE_VIG_SEGURANCA_Mensal_Eixo_min_secon__=(FSE_VIG_SEGURANCA_Mensal_Eixo_min_princ_*FSE_VIG_SEGURANCA_Mensal_Eixo_max_secon_)/FSE_VIG_SEGURANCA_Mensal_Eixo_max_princ_;} else { var FSE_VIG_SEGURANCA_Mensal_Eixo_min_secon__=FSE_VIG_SEGURANCA_Mensal_Eixo_min_secon_;}
        if(FSE_VIG_SEGURANCA_Mensal_Eixo_max_secon > 0 && FSE_VIG_SEGURANCA_Mensal_Eixo_min_secon <0 ){ var FSE_VIG_SEGURANCA_Mensal_Eixo_min_princ__=(FSE_VIG_SEGURANCA_Mensal_Eixo_min_secon__*FSE_VIG_SEGURANCA_Mensal_Eixo_max_princ_)/FSE_VIG_SEGURANCA_Mensal_Eixo_max_secon_;} else { var FSE_VIG_SEGURANCA_Mensal_Eixo_min_princ__=FSE_VIG_SEGURANCA_Mensal_Eixo_min_princ_;}}
    else
    {if(FSE_VIG_SEGURANCA_Mensal_Eixo_max_secon > 0 && FSE_VIG_SEGURANCA_Mensal_Eixo_min_secon <0 ){ var FSE_VIG_SEGURANCA_Mensal_Eixo_min_princ__=(FSE_VIG_SEGURANCA_Mensal_Eixo_min_secon_*FSE_VIG_SEGURANCA_Mensal_Eixo_max_princ_)/FSE_VIG_SEGURANCA_Mensal_Eixo_max_secon_;} else { var FSE_VIG_SEGURANCA_Mensal_Eixo_min_princ__=FSE_VIG_SEGURANCA_Mensal_Eixo_min_princ_;}
        if(FSE_VIG_SEGURANCA_Mensal_Eixo_max_princ > 0 && FSE_VIG_SEGURANCA_Mensal_Eixo_min_princ <0 ){ var FSE_VIG_SEGURANCA_Mensal_Eixo_min_secon__=(FSE_VIG_SEGURANCA_Mensal_Eixo_min_princ__*FSE_VIG_SEGURANCA_Mensal_Eixo_max_secon_)/FSE_VIG_SEGURANCA_Mensal_Eixo_max_princ_;} else { var FSE_VIG_SEGURANCA_Mensal_Eixo_min_secon__=FSE_VIG_SEGURANCA_Mensal_Eixo_min_secon_;}
    }



    if(Math.abs(FSE_VIG_SEGURANCA_Mensal_Eixo_max_princ)/Math.abs(FSE_VIG_SEGURANCA_Mensal_Eixo_min_princ)>=Math.abs(FSE_VIG_SEGURANCA_Mensal_Eixo_max_secon)/Math.abs(FSE_VIG_SEGURANCA_Mensal_Eixo_min_secon))
    { if(FSE_VIG_SEGURANCA_Mensal_Eixo_min_princ > 0 && FSE_VIG_SEGURANCA_Mensal_Eixo_max_princ <0 ){ var FSE_VIG_SEGURANCA_Mensal_Eixo_max_secon__=(FSE_VIG_SEGURANCA_Mensal_Eixo_max_princ_*FSE_VIG_SEGURANCA_Mensal_Eixo_min_secon_)/FSE_VIG_SEGURANCA_Mensal_Eixo_min_princ_;} else { var FSE_VIG_SEGURANCA_Mensal_Eixo_max_secon__=FSE_VIG_SEGURANCA_Mensal_Eixo_max_secon_;}
        if(FSE_VIG_SEGURANCA_Mensal_Eixo_min_secon > 0 && FSE_VIG_SEGURANCA_Mensal_Eixo_max_secon <0 ){ var FSE_VIG_SEGURANCA_Mensal_Eixo_max_princ__=(FSE_VIG_SEGURANCA_Mensal_Eixo_max_secon__*FSE_VIG_SEGURANCA_Mensal_Eixo_min_princ_)/FSE_VIG_SEGURANCA_Mensal_Eixo_min_secon_;} else { var FSE_VIG_SEGURANCA_Mensal_Eixo_max_princ__=FSE_VIG_SEGURANCA_Mensal_Eixo_max_princ_;}}
    else
    {if(FSE_VIG_SEGURANCA_Mensal_Eixo_min_secon > 0 && FSE_VIG_SEGURANCA_Mensal_Eixo_max_secon <0 ){ var FSE_VIG_SEGURANCA_Mensal_Eixo_max_princ__=(FSE_VIG_SEGURANCA_Mensal_Eixo_max_secon_*FSE_VIG_SEGURANCA_Mensal_Eixo_min_princ_)/FSE_VIG_SEGURANCA_Mensal_Eixo_min_secon_;} else { var FSE_VIG_SEGURANCA_Mensal_Eixo_max_princ__=FSE_VIG_SEGURANCA_Mensal_Eixo_max_princ_;}
        if(FSE_VIG_SEGURANCA_Mensal_Eixo_min_princ > 0 && FSE_VIG_SEGURANCA_Mensal_Eixo_max_princ <0 ){ var FSE_VIG_SEGURANCA_Mensal_Eixo_max_secon__=(FSE_VIG_SEGURANCA_Mensal_Eixo_max_princ__*FSE_VIG_SEGURANCA_Mensal_Eixo_min_secon_)/FSE_VIG_SEGURANCA_Mensal_Eixo_min_princ_;} else { var FSE_VIG_SEGURANCA_Mensal_Eixo_max_secon__=FSE_VIG_SEGURANCA_Mensal_Eixo_max_secon_;}
    }



    var GRAFICO_FSE_RESULT_MENSAL_COMP_008=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_008').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_008=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_008, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label: 'Vigil. Segu.(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   data: [
                       FSE_VIG_SEGURANCA_ANO_N_JANEIRO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_FEVEREIRO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_MARCO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_ABRIL_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_MAIO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_JUNHO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_JULHO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_AGOSTO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_SETEMBRO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_OUTUBRO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_NOVEMBRO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_DEZEMBRO_ACUM,
                   ],
                   type: 'line'


               },
                              {
                                  label: 'Vigil. Segu.(ac) ' + ANO_VERSAO_ANTE_,
                                  yAxisID: 'A',
                                  //backgroundColor: 'rgb(201, 10, 10)',
                                  borderColor: 'rgb(0,221,0)',
                                  data: [
                       FSE_VIG_SEGURANCA_ANO_N_1_JANEIRO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_1_MARCO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_1_ABRIL_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_1_MAIO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_1_JUNHO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_1_JULHO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_1_AGOSTO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_1_SETEMBRO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_1_OUTUBRO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_VIG_SEGURANCA_ANO_N_1_DEZEMBRO_ACUM,
                                  ],
                                  type: 'line'


                              },
                {
                    label:  'Vigil. Segu.(m) ' + ANO_VERSAO_REAL_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(250 , 83 , 0, 0.5)',
                    borderColor: 'rgba(250 , 83 , 0, 0.5)',
                    data: [
                  FSE_VIG_SEGURANCA_ANO_N_JANEIRO ,
                  FSE_VIG_SEGURANCA_ANO_N_FEVEREIRO ,
                  FSE_VIG_SEGURANCA_ANO_N_MARCO ,
                  FSE_VIG_SEGURANCA_ANO_N_ABRIL,
                  FSE_VIG_SEGURANCA_ANO_N_MAIO ,
                  FSE_VIG_SEGURANCA_ANO_N_JUNHO ,
                  FSE_VIG_SEGURANCA_ANO_N_JULHO ,
                  FSE_VIG_SEGURANCA_ANO_N_AGOSTO ,
                  FSE_VIG_SEGURANCA_ANO_N_SETEMBRO ,
                  FSE_VIG_SEGURANCA_ANO_N_OUTUBRO ,
                  FSE_VIG_SEGURANCA_ANO_N_NOVEMBRO ,
                  FSE_VIG_SEGURANCA_ANO_N_DEZEMBRO ,
                    ],
                },
                {
                    label:  'Vigil. Segu.(m) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(0,221,0, 0.4)',
                    borderColor: 'rgba(0,221,0, 0.4)',
                    data: [
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_JANEIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_FEVEREIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_MARCO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_ABRIL"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_MAIO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_JUNHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_JULHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_AGOSTO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_SETEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_OUTUBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_NOVEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_VIG_SEGURANCA_ANO_N_1_DEZEMBRO"]))),
                    ],
                },


            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_VIG_SEGURANCA_MENSAL_1',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                min:  Math.round(FSE_VIG_SEGURANCA_Mensal_Eixo_min_princ__,0),
                                                max:  Math.round(FSE_VIG_SEGURANCA_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString();
                                                }
                                            }
                                        },

                    { id: 'B',
                        type: 'linear',
                        position: 'right',
                        ticks: {
                            min: Math.round(FSE_VIG_SEGURANCA_Mensal_Eixo_min_secon__,0),
                            max:  Math.round(FSE_VIG_SEGURANCA_Mensal_Eixo_max_secon__,0),
                            beginAtZero: false,
                            callback: function(value, index, values) {
                                return value.toLocaleString();
                            }
                        }
                    },






                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_009-----------------------------------------------------------*@
<script>

    var IND_VN_ANO_N_JANEIRO_ACUM = IND_VN_ANO_N_JANEIRO;
    var IND_VN_ANO_N_FEVEREIRO_ACUM = IND_VN_ANO_N_FEVEREIRO + IND_VN_ANO_N_JANEIRO_ACUM;
    var IND_VN_ANO_N_MARCO_ACUM = IND_VN_ANO_N_MARCO + IND_VN_ANO_N_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_ABRIL_ACUM = IND_VN_ANO_N_ABRIL + IND_VN_ANO_N_MARCO_ACUM;
    var IND_VN_ANO_N_MAIO_ACUM = IND_VN_ANO_N_MAIO + IND_VN_ANO_N_ABRIL_ACUM;
    var IND_VN_ANO_N_JUNHO_ACUM = IND_VN_ANO_N_JUNHO + IND_VN_ANO_N_MAIO_ACUM;
    var IND_VN_ANO_N_JULHO_ACUM = IND_VN_ANO_N_JULHO + IND_VN_ANO_N_JUNHO_ACUM;
    var IND_VN_ANO_N_AGOSTO_ACUM = IND_VN_ANO_N_AGOSTO + IND_VN_ANO_N_JULHO_ACUM;
    var IND_VN_ANO_N_SETEMBRO_ACUM = IND_VN_ANO_N_SETEMBRO + IND_VN_ANO_N_AGOSTO_ACUM;
    var IND_VN_ANO_N_OUTUBRO_ACUM = IND_VN_ANO_N_OUTUBRO + IND_VN_ANO_N_SETEMBRO_ACUM;
    var IND_VN_ANO_N_NOVEMBRO_ACUM = IND_VN_ANO_N_NOVEMBRO + IND_VN_ANO_N_OUTUBRO_ACUM;
    var IND_VN_ANO_N_DEZEMBRO_ACUM = IND_VN_ANO_N_DEZEMBRO + IND_VN_ANO_N_NOVEMBRO_ACUM;



    var IND_VN_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JANEIRO"])));
    var IND_VN_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_FEVEREIRO"]))) + IND_VN_ANO_N_1_JANEIRO_ACUM;
    var IND_VN_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MARCO"]))) + IND_VN_ANO_N_1_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_ABRIL"]))) + IND_VN_ANO_N_1_MARCO_ACUM;
    var IND_VN_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MAIO"]))) + IND_VN_ANO_N_1_ABRIL_ACUM;
    var IND_VN_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JUNHO"]))) + IND_VN_ANO_N_1_MAIO_ACUM;
    var IND_VN_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JULHO"]))) + IND_VN_ANO_N_1_JUNHO_ACUM;
    var IND_VN_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_AGOSTO"]))) + IND_VN_ANO_N_1_JULHO_ACUM;
    var IND_VN_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_SETEMBRO"]))) + IND_VN_ANO_N_1_AGOSTO_ACUM;
    var IND_VN_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_OUTUBRO"]))) + IND_VN_ANO_N_1_SETEMBRO_ACUM;
    var IND_VN_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_NOVEMBRO"]))) + IND_VN_ANO_N_1_OUTUBRO_ACUM;
    var IND_VN_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_DEZEMBRO"]))) + IND_VN_ANO_N_1_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_JANEIRO_ACUM = 'nd'; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_JANEIRO_ACUM= FSE_VIG_SEGURANCA_ANO_N_JANEIRO_ACUM/IND_VN_ANO_N_JANEIRO_ACUM*100; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = PESO_FSE_VIG_SEGURANCA_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_FEVEREIRO_ACUM= FSE_VIG_SEGURANCA_ANO_N_FEVEREIRO_ACUM/IND_VN_ANO_N_FEVEREIRO_ACUM*100; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_VIG_SEGURANCA_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_MARCO_ACUM = 'nd'; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_MARCO_ACUM= FSE_VIG_SEGURANCA_ANO_N_MARCO_ACUM/IND_VN_ANO_N_MARCO_ACUM*100; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_MARCO_ACUM_MAX_MIN = PESO_FSE_VIG_SEGURANCA_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_ABRIL_ACUM = 'nd'; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_ABRIL_ACUM= FSE_VIG_SEGURANCA_ANO_N_ABRIL_ACUM/IND_VN_ANO_N_ABRIL_ACUM*100; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_ABRIL_ACUM_MAX_MIN = PESO_FSE_VIG_SEGURANCA_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_MAIO_ACUM = 'nd'; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_MAIO_ACUM= FSE_VIG_SEGURANCA_ANO_N_MAIO_ACUM/IND_VN_ANO_N_MAIO_ACUM*100; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_MAIO_ACUM_MAX_MIN = PESO_FSE_VIG_SEGURANCA_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_JUNHO_ACUM = 'nd'; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_JUNHO_ACUM= FSE_VIG_SEGURANCA_ANO_N_JUNHO_ACUM/IND_VN_ANO_N_JUNHO_ACUM*100; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_JUNHO_ACUM_MAX_MIN = PESO_FSE_VIG_SEGURANCA_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_JULHO_ACUM = 'nd'; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_JULHO_ACUM= FSE_VIG_SEGURANCA_ANO_N_JULHO_ACUM/IND_VN_ANO_N_JULHO_ACUM*100; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_JULHO_ACUM_MAX_MIN = PESO_FSE_VIG_SEGURANCA_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_AGOSTO_ACUM = 'nd'; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_AGOSTO_ACUM= FSE_VIG_SEGURANCA_ANO_N_AGOSTO_ACUM/IND_VN_ANO_N_AGOSTO_ACUM*100; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = PESO_FSE_VIG_SEGURANCA_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_SETEMBRO_ACUM= FSE_VIG_SEGURANCA_ANO_N_SETEMBRO_ACUM/IND_VN_ANO_N_SETEMBRO_ACUM*100; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_VIG_SEGURANCA_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_OUTUBRO_ACUM= FSE_VIG_SEGURANCA_ANO_N_OUTUBRO_ACUM/IND_VN_ANO_N_OUTUBRO_ACUM*100; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_VIG_SEGURANCA_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_NOVEMBRO_ACUM= FSE_VIG_SEGURANCA_ANO_N_NOVEMBRO_ACUM/IND_VN_ANO_N_NOVEMBRO_ACUM*100; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_VIG_SEGURANCA_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_DEZEMBRO_ACUM= FSE_VIG_SEGURANCA_ANO_N_DEZEMBRO_ACUM/IND_VN_ANO_N_DEZEMBRO_ACUM*100; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_VIG_SEGURANCA_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_JANEIRO_ACUM = 'nd'; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_JANEIRO_ACUM= FSE_VIG_SEGURANCA_ANO_N_1_JANEIRO_ACUM/IND_VN_ANO_N_1_JANEIRO_ACUM*100; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_FEVEREIRO_ACUM= FSE_VIG_SEGURANCA_ANO_N_1_FEVEREIRO_ACUM/IND_VN_ANO_N_1_FEVEREIRO_ACUM*100; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_MARCO_ACUM = 'nd'; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_MARCO_ACUM= FSE_VIG_SEGURANCA_ANO_N_1_MARCO_ACUM/IND_VN_ANO_N_1_MARCO_ACUM*100; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_ABRIL_ACUM = 'nd'; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_ABRIL_ACUM= FSE_VIG_SEGURANCA_ANO_N_1_ABRIL_ACUM/IND_VN_ANO_N_1_ABRIL_ACUM*100; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_MAIO_ACUM = 'nd'; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_MAIO_ACUM= FSE_VIG_SEGURANCA_ANO_N_1_MAIO_ACUM/IND_VN_ANO_N_1_MAIO_ACUM*100; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_JUNHO_ACUM = 'nd'; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_JUNHO_ACUM= FSE_VIG_SEGURANCA_ANO_N_1_JUNHO_ACUM/IND_VN_ANO_N_1_JUNHO_ACUM*100; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_JULHO_ACUM = 'nd'; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_JULHO_ACUM= FSE_VIG_SEGURANCA_ANO_N_1_JULHO_ACUM/IND_VN_ANO_N_1_JULHO_ACUM*100; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_AGOSTO_ACUM = 'nd'; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_AGOSTO_ACUM= FSE_VIG_SEGURANCA_ANO_N_1_AGOSTO_ACUM/IND_VN_ANO_N_1_AGOSTO_ACUM*100; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_SETEMBRO_ACUM = 'nd'; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_SETEMBRO_ACUM= FSE_VIG_SEGURANCA_ANO_N_1_SETEMBRO_ACUM/IND_VN_ANO_N_1_SETEMBRO_ACUM*100; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_OUTUBRO_ACUM = 'nd'; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_OUTUBRO_ACUM= FSE_VIG_SEGURANCA_ANO_N_1_OUTUBRO_ACUM/IND_VN_ANO_N_1_OUTUBRO_ACUM*100; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_NOVEMBRO_ACUM= FSE_VIG_SEGURANCA_ANO_N_1_NOVEMBRO_ACUM/IND_VN_ANO_N_1_NOVEMBRO_ACUM*100; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_DEZEMBRO_ACUM= FSE_VIG_SEGURANCA_ANO_N_1_DEZEMBRO_ACUM/IND_VN_ANO_N_1_DEZEMBRO_ACUM*100; var PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_VN_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JANEIRO_ACUM= ((IND_VN_ANO_N_JANEIRO_ACUM-IND_VN_ANO_N_1_JANEIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_JANEIRO_ACUM))*100; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_FEVEREIRO_ACUM= ((IND_VN_ANO_N_FEVEREIRO_ACUM-IND_VN_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_VN_ANO_N_MARCO_ACUM = 'nd'; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MARCO_ACUM= ((IND_VN_ANO_N_MARCO_ACUM-IND_VN_ANO_N_1_MARCO_ACUM)/Math.abs(IND_VN_ANO_N_1_MARCO_ACUM))*100; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = VAR_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_VN_ANO_N_ABRIL_ACUM = 'nd'; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_ABRIL_ACUM= ((IND_VN_ANO_N_ABRIL_ACUM-IND_VN_ANO_N_1_ABRIL_ACUM)/Math.abs(IND_VN_ANO_N_1_ABRIL_ACUM))*100; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_VN_ANO_N_MAIO_ACUM = 'nd'; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MAIO_ACUM= ((IND_VN_ANO_N_MAIO_ACUM-IND_VN_ANO_N_1_MAIO_ACUM)/Math.abs(IND_VN_ANO_N_1_MAIO_ACUM))*100; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = VAR_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_VN_ANO_N_JUNHO_ACUM = 'nd'; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JUNHO_ACUM= ((IND_VN_ANO_N_JUNHO_ACUM-IND_VN_ANO_N_1_JUNHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JUNHO_ACUM))*100; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_VN_ANO_N_JULHO_ACUM = 'nd'; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JULHO_ACUM= ((IND_VN_ANO_N_JULHO_ACUM-IND_VN_ANO_N_1_JULHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JULHO_ACUM))*100; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_VN_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_AGOSTO_ACUM= ((IND_VN_ANO_N_AGOSTO_ACUM-IND_VN_ANO_N_1_AGOSTO_ACUM)/Math.abs(IND_VN_ANO_N_1_AGOSTO_ACUM))*100; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_SETEMBRO_ACUM= ((IND_VN_ANO_N_SETEMBRO_ACUM-IND_VN_ANO_N_1_SETEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_OUTUBRO_ACUM= ((IND_VN_ANO_N_OUTUBRO_ACUM-IND_VN_ANO_N_1_OUTUBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_NOVEMBRO_ACUM= ((IND_VN_ANO_N_NOVEMBRO_ACUM-IND_VN_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_DEZEMBRO_ACUM= ((IND_VN_ANO_N_DEZEMBRO_ACUM-IND_VN_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_FSE_VIG_SEGURANCA_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_FSE_VIG_SEGURANCA_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_VIG_SEGURANCA_ANO_N_JANEIRO_ACUM= ((FSE_VIG_SEGURANCA_ANO_N_JANEIRO_ACUM-FSE_VIG_SEGURANCA_ANO_N_1_JANEIRO_ACUM)/Math.abs(FSE_VIG_SEGURANCA_ANO_N_1_JANEIRO_ACUM))*100; var VAR_FSE_VIG_SEGURANCA_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_FSE_VIG_SEGURANCA_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_FSE_VIG_SEGURANCA_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_FSE_VIG_SEGURANCA_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_VIG_SEGURANCA_ANO_N_FEVEREIRO_ACUM= ((FSE_VIG_SEGURANCA_ANO_N_FEVEREIRO_ACUM-FSE_VIG_SEGURANCA_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(FSE_VIG_SEGURANCA_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_FSE_VIG_SEGURANCA_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_FSE_VIG_SEGURANCA_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_FSE_VIG_SEGURANCA_ANO_N_MARCO_ACUM = 'nd'; var VAR_FSE_VIG_SEGURANCA_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_VIG_SEGURANCA_ANO_N_MARCO_ACUM= ((FSE_VIG_SEGURANCA_ANO_N_MARCO_ACUM-FSE_VIG_SEGURANCA_ANO_N_1_MARCO_ACUM)/Math.abs(FSE_VIG_SEGURANCA_ANO_N_1_MARCO_ACUM))*100; var VAR_FSE_VIG_SEGURANCA_ANO_N_MARCO_ACUM_MAX_MIN = VAR_FSE_VIG_SEGURANCA_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_FSE_VIG_SEGURANCA_ANO_N_ABRIL_ACUM = 'nd'; var VAR_FSE_VIG_SEGURANCA_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_VIG_SEGURANCA_ANO_N_ABRIL_ACUM= ((FSE_VIG_SEGURANCA_ANO_N_ABRIL_ACUM-FSE_VIG_SEGURANCA_ANO_N_1_ABRIL_ACUM)/Math.abs(FSE_VIG_SEGURANCA_ANO_N_1_ABRIL_ACUM))*100; var VAR_FSE_VIG_SEGURANCA_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_FSE_VIG_SEGURANCA_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_FSE_VIG_SEGURANCA_ANO_N_MAIO_ACUM = 'nd'; var VAR_FSE_VIG_SEGURANCA_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_VIG_SEGURANCA_ANO_N_MAIO_ACUM= ((FSE_VIG_SEGURANCA_ANO_N_MAIO_ACUM-FSE_VIG_SEGURANCA_ANO_N_1_MAIO_ACUM)/Math.abs(FSE_VIG_SEGURANCA_ANO_N_1_MAIO_ACUM))*100; var VAR_FSE_VIG_SEGURANCA_ANO_N_MAIO_ACUM_MAX_MIN = VAR_FSE_VIG_SEGURANCA_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_FSE_VIG_SEGURANCA_ANO_N_JUNHO_ACUM = 'nd'; var VAR_FSE_VIG_SEGURANCA_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_VIG_SEGURANCA_ANO_N_JUNHO_ACUM= ((FSE_VIG_SEGURANCA_ANO_N_JUNHO_ACUM-FSE_VIG_SEGURANCA_ANO_N_1_JUNHO_ACUM)/Math.abs(FSE_VIG_SEGURANCA_ANO_N_1_JUNHO_ACUM))*100; var VAR_FSE_VIG_SEGURANCA_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_FSE_VIG_SEGURANCA_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_FSE_VIG_SEGURANCA_ANO_N_JULHO_ACUM = 'nd'; var VAR_FSE_VIG_SEGURANCA_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_VIG_SEGURANCA_ANO_N_JULHO_ACUM= ((FSE_VIG_SEGURANCA_ANO_N_JULHO_ACUM-FSE_VIG_SEGURANCA_ANO_N_1_JULHO_ACUM)/Math.abs(FSE_VIG_SEGURANCA_ANO_N_1_JULHO_ACUM))*100; var VAR_FSE_VIG_SEGURANCA_ANO_N_JULHO_ACUM_MAX_MIN = VAR_FSE_VIG_SEGURANCA_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_FSE_VIG_SEGURANCA_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_FSE_VIG_SEGURANCA_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_VIG_SEGURANCA_ANO_N_AGOSTO_ACUM= ((FSE_VIG_SEGURANCA_ANO_N_AGOSTO_ACUM-FSE_VIG_SEGURANCA_ANO_N_1_AGOSTO_ACUM)/Math.abs(FSE_VIG_SEGURANCA_ANO_N_1_AGOSTO_ACUM))*100; var VAR_FSE_VIG_SEGURANCA_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_FSE_VIG_SEGURANCA_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_FSE_VIG_SEGURANCA_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_FSE_VIG_SEGURANCA_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_VIG_SEGURANCA_ANO_N_SETEMBRO_ACUM= ((FSE_VIG_SEGURANCA_ANO_N_SETEMBRO_ACUM-FSE_VIG_SEGURANCA_ANO_N_1_SETEMBRO_ACUM)/Math.abs(FSE_VIG_SEGURANCA_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_FSE_VIG_SEGURANCA_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_FSE_VIG_SEGURANCA_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_FSE_VIG_SEGURANCA_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_FSE_VIG_SEGURANCA_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_VIG_SEGURANCA_ANO_N_OUTUBRO_ACUM= ((FSE_VIG_SEGURANCA_ANO_N_OUTUBRO_ACUM-FSE_VIG_SEGURANCA_ANO_N_1_OUTUBRO_ACUM)/Math.abs(FSE_VIG_SEGURANCA_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_FSE_VIG_SEGURANCA_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_FSE_VIG_SEGURANCA_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_FSE_VIG_SEGURANCA_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_FSE_VIG_SEGURANCA_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_VIG_SEGURANCA_ANO_N_NOVEMBRO_ACUM= ((FSE_VIG_SEGURANCA_ANO_N_NOVEMBRO_ACUM-FSE_VIG_SEGURANCA_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(FSE_VIG_SEGURANCA_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_FSE_VIG_SEGURANCA_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_FSE_VIG_SEGURANCA_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_FSE_VIG_SEGURANCA_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_FSE_VIG_SEGURANCA_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_VIG_SEGURANCA_ANO_N_DEZEMBRO_ACUM= ((FSE_VIG_SEGURANCA_ANO_N_DEZEMBRO_ACUM-FSE_VIG_SEGURANCA_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(FSE_VIG_SEGURANCA_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_FSE_VIG_SEGURANCA_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_FSE_VIG_SEGURANCA_ANO_N_DEZEMBRO_ACUM };

    if( PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_JANEIRO_ACUM > PESO_FSE_VIG_SEGURANCA_VN_ANO_N_JANEIRO_ACUM) { var  INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_JANEIRO_ACUM=PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_JANEIRO_ACUM ; } else { var  INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_JANEIRO_ACUM=PESO_FSE_VIG_SEGURANCA_VN_ANO_N_JANEIRO_ACUM ; }
    if( PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_FEVEREIRO_ACUM > PESO_FSE_VIG_SEGURANCA_VN_ANO_N_FEVEREIRO_ACUM) { var  INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_FEVEREIRO_ACUM=PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_FEVEREIRO_ACUM ; } else { var  INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_FEVEREIRO_ACUM=PESO_FSE_VIG_SEGURANCA_VN_ANO_N_FEVEREIRO_ACUM ; }
    if( PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_MARCO_ACUM > PESO_FSE_VIG_SEGURANCA_VN_ANO_N_MARCO_ACUM) { var  INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_MARCO_ACUM=PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_MARCO_ACUM ; } else { var  INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_MARCO_ACUM=PESO_FSE_VIG_SEGURANCA_VN_ANO_N_MARCO_ACUM ; }
    if( PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_ABRIL_ACUM > PESO_FSE_VIG_SEGURANCA_VN_ANO_N_ABRIL_ACUM) { var  INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_ABRIL_ACUM=PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_ABRIL_ACUM ; } else { var  INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_ABRIL_ACUM=PESO_FSE_VIG_SEGURANCA_VN_ANO_N_ABRIL_ACUM ; }
    if( PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_MAIO_ACUM > PESO_FSE_VIG_SEGURANCA_VN_ANO_N_MAIO_ACUM) { var  INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_MAIO_ACUM=PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_MAIO_ACUM ; } else { var  INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_MAIO_ACUM=PESO_FSE_VIG_SEGURANCA_VN_ANO_N_MAIO_ACUM ; }
    if( PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_JUNHO_ACUM > PESO_FSE_VIG_SEGURANCA_VN_ANO_N_JUNHO_ACUM) { var  INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_JUNHO_ACUM=PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_JUNHO_ACUM ; } else { var  INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_JUNHO_ACUM=PESO_FSE_VIG_SEGURANCA_VN_ANO_N_JUNHO_ACUM ; }
    if( PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_JULHO_ACUM > PESO_FSE_VIG_SEGURANCA_VN_ANO_N_JULHO_ACUM) { var  INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_JULHO_ACUM=PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_JULHO_ACUM ; } else { var  INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_JULHO_ACUM=PESO_FSE_VIG_SEGURANCA_VN_ANO_N_JULHO_ACUM ; }
    if( PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_AGOSTO_ACUM > PESO_FSE_VIG_SEGURANCA_VN_ANO_N_AGOSTO_ACUM) { var  INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_AGOSTO_ACUM=PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_AGOSTO_ACUM ; } else { var  INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_AGOSTO_ACUM=PESO_FSE_VIG_SEGURANCA_VN_ANO_N_AGOSTO_ACUM ; }
    if( PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_SETEMBRO_ACUM > PESO_FSE_VIG_SEGURANCA_VN_ANO_N_SETEMBRO_ACUM) { var  INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_SETEMBRO_ACUM=PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_SETEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_SETEMBRO_ACUM=PESO_FSE_VIG_SEGURANCA_VN_ANO_N_SETEMBRO_ACUM ; }
    if( PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_OUTUBRO_ACUM > PESO_FSE_VIG_SEGURANCA_VN_ANO_N_OUTUBRO_ACUM) { var  INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_OUTUBRO_ACUM=PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_OUTUBRO_ACUM ; } else { var  INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_OUTUBRO_ACUM=PESO_FSE_VIG_SEGURANCA_VN_ANO_N_OUTUBRO_ACUM ; }
    if( PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_NOVEMBRO_ACUM > PESO_FSE_VIG_SEGURANCA_VN_ANO_N_NOVEMBRO_ACUM) { var  INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_NOVEMBRO_ACUM=PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_NOVEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_NOVEMBRO_ACUM=PESO_FSE_VIG_SEGURANCA_VN_ANO_N_NOVEMBRO_ACUM ; }
    if( PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_DEZEMBRO_ACUM > PESO_FSE_VIG_SEGURANCA_VN_ANO_N_DEZEMBRO_ACUM) { var  INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_DEZEMBRO_ACUM=PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_DEZEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_DEZEMBRO_ACUM=PESO_FSE_VIG_SEGURANCA_VN_ANO_N_DEZEMBRO_ACUM ; }



    var fillBetweenLinesPlugin = {
        afterDatasetsDraw: function (chart) {
            var ctx = chart.chart.ctx;
            var xaxis = chart.scales['x-axis-0'];
            var yaxis = chart.scales['y-axis-0'];
            var datasets = chart.data.datasets;
            ctx.save();

            for (var d = 0; d < datasets.length; d++) {
                var dataset = datasets[d];
                if (dataset.fillBetweenSet == undefined) {
                    continue;
                }

                // get meta for both data sets
                var meta1 = chart.getDatasetMeta(d);
                var meta2 = chart.getDatasetMeta(dataset.fillBetweenSet);

                // do not draw fill if one of the datasets is hidden
                if (meta1.hidden || meta2.hidden) continue;

                // create fill areas in pairs
                for (var p = 0; p < meta1.data.length-1;p++) {
                    // if null skip
                    if (dataset.data[p] == null || dataset.data[p+1] == null) continue;

                    ctx.beginPath();

                    // trace line 1
                    var curr = meta1.data[p];
                    var next = meta1.data[p+1];
                    ctx.moveTo(curr._view.x, curr._view.y);
                    ctx.lineTo(curr._view.x, curr._view.y);
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(next._view.x, curr._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        ctx.bezierCurveTo(
                          curr._view.controlPointNextX,
                          curr._view.controlPointNextY,
                          next._view.controlPointPreviousX,
                          next._view.controlPointPreviousY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // connect dataset1 to dataset2
                    var curr = meta2.data[p+1];
                    var next = meta2.data[p];
                    ctx.lineTo(curr._view.x, curr._view.y);

                    // trace BACKWORDS set2 to complete the box
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(curr._view.x, next._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        // reverse bezier
                        ctx.bezierCurveTo(
                          curr._view.controlPointPreviousX,
                          curr._view.controlPointPreviousY,
                          next._view.controlPointNextX,
                          next._view.controlPointNextY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // close the loop and fill with shading
                    ctx.closePath();
                    ctx.fillStyle = dataset.fillBetweenColor || "rgba(0,0,0,0.1)";
                    ctx.fill();
                } // end for p loop
            }
        } // end afterDatasetsDraw
    }; // end fillBetweenLinesPlugin

    Chart.pluginService.register(fillBetweenLinesPlugin);



    var GRAFICO_FSE_RESULT_MENSAL_COMP_009=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_009').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_009=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_009, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label:  'Peso Vigil. Segu.vsVN(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   //borderColor: "#F00",
                   fill: false,
                   steppedLine: false,
                   tension: 0.5,
                   fillBetweenSet: 1,
                   fillBetweenColor: "rgba(0, 221, 0, 0.1)",
                   data: [
                   PESO_FSE_VIG_SEGURANCA_VN_ANO_N_JANEIRO_ACUM,
                   PESO_FSE_VIG_SEGURANCA_VN_ANO_N_FEVEREIRO_ACUM,
                   PESO_FSE_VIG_SEGURANCA_VN_ANO_N_MARCO_ACUM,
                   PESO_FSE_VIG_SEGURANCA_VN_ANO_N_ABRIL_ACUM,
                   PESO_FSE_VIG_SEGURANCA_VN_ANO_N_MAIO_ACUM,
                   PESO_FSE_VIG_SEGURANCA_VN_ANO_N_JUNHO_ACUM,
                   PESO_FSE_VIG_SEGURANCA_VN_ANO_N_JULHO_ACUM,
                   PESO_FSE_VIG_SEGURANCA_VN_ANO_N_AGOSTO_ACUM,
                   PESO_FSE_VIG_SEGURANCA_VN_ANO_N_SETEMBRO_ACUM,
                   PESO_FSE_VIG_SEGURANCA_VN_ANO_N_OUTUBRO_ACUM,
                   PESO_FSE_VIG_SEGURANCA_VN_ANO_N_NOVEMBRO_ACUM,
                   PESO_FSE_VIG_SEGURANCA_VN_ANO_N_DEZEMBRO_ACUM,

                   ],
                   type: 'line'


               },
                {
                    label: 'Peso Vigil. Segu.vsVN(ac) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'A',
                    //backgroundColor: 'rgb(17, 121, 240)',
                    borderColor: 'rgb(0,221,0)',
                    //borderColor: "#00F",
                    fill: false,
                    steppedLine: false,
                    tension: 0.5,
                    data: [
                   PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_JANEIRO_ACUM,
                   PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_FEVEREIRO_ACUM,
                   PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_MARCO_ACUM,
                   PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_ABRIL_ACUM,
                   PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_MAIO_ACUM,
                   PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_JUNHO_ACUM,
                   PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_JULHO_ACUM,
                   PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_AGOSTO_ACUM,
                   PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_SETEMBRO_ACUM,
                   PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_OUTUBRO_ACUM,
                   PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_NOVEMBRO_ACUM,
                   PESO_FSE_VIG_SEGURANCA_VN_ANO_N_1_DEZEMBRO_ACUM,
                    ],
                    type: 'line'
                },
    {
        label: 'Ineficiência',
        yAxisID: 'A',
        backgroundColor: "rgba(255, 0, 0, 0.2)",
        borderColor: 'rgba(255, 255, 255, 0.1)',
        //borderColor: "#0D0",
        fill: false,
        steppedLine: false,
        tension: 0.5,
        fillBetweenSet: 1,
        fillBetweenColor: "rgba(255, 0, 0, 0.2)",
        data: [
    INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_JANEIRO_ACUM,
    INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_FEVEREIRO_ACUM,
    INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_MARCO_ACUM,
    INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_ABRIL_ACUM,
    INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_MAIO_ACUM,
    INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_JUNHO_ACUM,
    INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_JULHO_ACUM,
    INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_AGOSTO_ACUM,
    INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_SETEMBRO_ACUM,
    INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_OUTUBRO_ACUM,
    INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_NOVEMBRO_ACUM,
    INEFICIENCIA_FSE_VIG_SEGURANCA_ANO_N_DEZEMBRO_ACUM,
        ],
        type: 'line'
    },

            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_Vigil. Segu. COMP',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                //min:  Math.round(FSE_VIG_SEGURANCA_Mensal_Eixo_min_princ__,0),
                                                //max:  Math.round(FSE_VIG_SEGURANCA_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString()+ "%";
                                                }
                                            }
                                        },







                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_010-----------------------------------------------------------*@
<script>

    if(@ViewData["MES_ACUM_REAL"]<1){ var IND_VN_ANO_N_JANEIRO = 'nd'; var IND_VN_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JANEIRO"]))); var IND_VN_ANO_N_JANEIRO_MAX_MIN = IND_VN_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var IND_VN_ANO_N_FEVEREIRO = 'nd'; var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_FEVEREIRO"]))); var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = IND_VN_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var IND_VN_ANO_N_MARCO = 'nd'; var IND_VN_ANO_N_MARCO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MARCO"]))); var IND_VN_ANO_N_MARCO_MAX_MIN = IND_VN_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var IND_VN_ANO_N_ABRIL = 'nd'; var IND_VN_ANO_N_ABRIL_MAX_MIN = 0;  } else { var IND_VN_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_ABRIL"]))); var IND_VN_ANO_N_ABRIL_MAX_MIN = IND_VN_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var IND_VN_ANO_N_MAIO = 'nd'; var IND_VN_ANO_N_MAIO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MAIO"]))); var IND_VN_ANO_N_MAIO_MAX_MIN = IND_VN_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var IND_VN_ANO_N_JUNHO = 'nd'; var IND_VN_ANO_N_JUNHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JUNHO"]))); var IND_VN_ANO_N_JUNHO_MAX_MIN = IND_VN_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var IND_VN_ANO_N_JULHO = 'nd'; var IND_VN_ANO_N_JULHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JULHO"]))); var IND_VN_ANO_N_JULHO_MAX_MIN = IND_VN_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var IND_VN_ANO_N_AGOSTO = 'nd'; var IND_VN_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_AGOSTO"]))); var IND_VN_ANO_N_AGOSTO_MAX_MIN = IND_VN_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var IND_VN_ANO_N_SETEMBRO = 'nd'; var IND_VN_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_SETEMBRO"]))); var IND_VN_ANO_N_SETEMBRO_MAX_MIN = IND_VN_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var IND_VN_ANO_N_OUTUBRO = 'nd'; var IND_VN_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_OUTUBRO"]))); var IND_VN_ANO_N_OUTUBRO_MAX_MIN = IND_VN_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var IND_VN_ANO_N_NOVEMBRO = 'nd'; var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_NOVEMBRO"]))); var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = IND_VN_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var IND_VN_ANO_N_DEZEMBRO = 'nd'; var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_DEZEMBRO"]))); var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = IND_VN_ANO_N_DEZEMBRO };

    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_HONORARIOS_ANO_N_JANEIRO = 'nd'; var FSE_HONORARIOS_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var FSE_HONORARIOS_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_JANEIRO"]))); var FSE_HONORARIOS_ANO_N_JANEIRO_MAX_MIN = FSE_HONORARIOS_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_HONORARIOS_ANO_N_FEVEREIRO = 'nd'; var FSE_HONORARIOS_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var FSE_HONORARIOS_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_FEVEREIRO"]))); var FSE_HONORARIOS_ANO_N_FEVEREIRO_MAX_MIN = FSE_HONORARIOS_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_HONORARIOS_ANO_N_MARCO = 'nd'; var FSE_HONORARIOS_ANO_N_MARCO_MAX_MIN = 0;  } else { var FSE_HONORARIOS_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_MARCO"]))); var FSE_HONORARIOS_ANO_N_MARCO_MAX_MIN = FSE_HONORARIOS_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_HONORARIOS_ANO_N_ABRIL = 'nd'; var FSE_HONORARIOS_ANO_N_ABRIL_MAX_MIN = 0;  } else { var FSE_HONORARIOS_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_ABRIL"]))); var FSE_HONORARIOS_ANO_N_ABRIL_MAX_MIN = FSE_HONORARIOS_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_HONORARIOS_ANO_N_MAIO = 'nd'; var FSE_HONORARIOS_ANO_N_MAIO_MAX_MIN = 0;  } else { var FSE_HONORARIOS_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_MAIO"]))); var FSE_HONORARIOS_ANO_N_MAIO_MAX_MIN = FSE_HONORARIOS_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_HONORARIOS_ANO_N_JUNHO = 'nd'; var FSE_HONORARIOS_ANO_N_JUNHO_MAX_MIN = 0;  } else { var FSE_HONORARIOS_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_JUNHO"]))); var FSE_HONORARIOS_ANO_N_JUNHO_MAX_MIN = FSE_HONORARIOS_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_HONORARIOS_ANO_N_JULHO = 'nd'; var FSE_HONORARIOS_ANO_N_JULHO_MAX_MIN = 0;  } else { var FSE_HONORARIOS_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_JULHO"]))); var FSE_HONORARIOS_ANO_N_JULHO_MAX_MIN = FSE_HONORARIOS_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_HONORARIOS_ANO_N_AGOSTO = 'nd'; var FSE_HONORARIOS_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var FSE_HONORARIOS_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_AGOSTO"]))); var FSE_HONORARIOS_ANO_N_AGOSTO_MAX_MIN = FSE_HONORARIOS_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_HONORARIOS_ANO_N_SETEMBRO = 'nd'; var FSE_HONORARIOS_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var FSE_HONORARIOS_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_SETEMBRO"]))); var FSE_HONORARIOS_ANO_N_SETEMBRO_MAX_MIN = FSE_HONORARIOS_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_HONORARIOS_ANO_N_OUTUBRO = 'nd'; var FSE_HONORARIOS_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var FSE_HONORARIOS_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_OUTUBRO"]))); var FSE_HONORARIOS_ANO_N_OUTUBRO_MAX_MIN = FSE_HONORARIOS_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_HONORARIOS_ANO_N_NOVEMBRO = 'nd'; var FSE_HONORARIOS_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var FSE_HONORARIOS_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_NOVEMBRO"]))); var FSE_HONORARIOS_ANO_N_NOVEMBRO_MAX_MIN = FSE_HONORARIOS_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_HONORARIOS_ANO_N_DEZEMBRO = 'nd'; var FSE_HONORARIOS_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var FSE_HONORARIOS_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_DEZEMBRO"]))); var FSE_HONORARIOS_ANO_N_DEZEMBRO_MAX_MIN = FSE_HONORARIOS_ANO_N_DEZEMBRO };


    var FSE_HONORARIOS_ANO_N_JANEIRO_ACUM = FSE_HONORARIOS_ANO_N_JANEIRO;
    var FSE_HONORARIOS_ANO_N_FEVEREIRO_ACUM = FSE_HONORARIOS_ANO_N_FEVEREIRO + FSE_HONORARIOS_ANO_N_JANEIRO_ACUM;
    var FSE_HONORARIOS_ANO_N_MARCO_ACUM = FSE_HONORARIOS_ANO_N_MARCO + FSE_HONORARIOS_ANO_N_FEVEREIRO_ACUM;
    var FSE_HONORARIOS_ANO_N_ABRIL_ACUM = FSE_HONORARIOS_ANO_N_ABRIL + FSE_HONORARIOS_ANO_N_MARCO_ACUM;
    var FSE_HONORARIOS_ANO_N_MAIO_ACUM = FSE_HONORARIOS_ANO_N_MAIO + FSE_HONORARIOS_ANO_N_ABRIL_ACUM;
    var FSE_HONORARIOS_ANO_N_JUNHO_ACUM = FSE_HONORARIOS_ANO_N_JUNHO + FSE_HONORARIOS_ANO_N_MAIO_ACUM;
    var FSE_HONORARIOS_ANO_N_JULHO_ACUM = FSE_HONORARIOS_ANO_N_JULHO + FSE_HONORARIOS_ANO_N_JUNHO_ACUM;
    var FSE_HONORARIOS_ANO_N_AGOSTO_ACUM = FSE_HONORARIOS_ANO_N_AGOSTO + FSE_HONORARIOS_ANO_N_JULHO_ACUM;
    var FSE_HONORARIOS_ANO_N_SETEMBRO_ACUM = FSE_HONORARIOS_ANO_N_SETEMBRO + FSE_HONORARIOS_ANO_N_AGOSTO_ACUM;
    var FSE_HONORARIOS_ANO_N_OUTUBRO_ACUM = FSE_HONORARIOS_ANO_N_OUTUBRO + FSE_HONORARIOS_ANO_N_SETEMBRO_ACUM;
    var FSE_HONORARIOS_ANO_N_NOVEMBRO_ACUM = FSE_HONORARIOS_ANO_N_NOVEMBRO + FSE_HONORARIOS_ANO_N_OUTUBRO_ACUM;
    var FSE_HONORARIOS_ANO_N_DEZEMBRO_ACUM = FSE_HONORARIOS_ANO_N_DEZEMBRO + FSE_HONORARIOS_ANO_N_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_HONORARIOS_ANO_N_JANEIRO_ACUM = 'nd'; var FSE_HONORARIOS_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var FSE_HONORARIOS_ANO_N_JANEIRO_ACUM= FSE_HONORARIOS_ANO_N_JANEIRO_ACUM; var FSE_HONORARIOS_ANO_N_JANEIRO_ACUM_MAX_MIN = FSE_HONORARIOS_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_HONORARIOS_ANO_N_FEVEREIRO_ACUM = 'nd'; var FSE_HONORARIOS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var FSE_HONORARIOS_ANO_N_FEVEREIRO_ACUM= FSE_HONORARIOS_ANO_N_FEVEREIRO_ACUM; var FSE_HONORARIOS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = FSE_HONORARIOS_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_HONORARIOS_ANO_N_MARCO_ACUM = 'nd'; var FSE_HONORARIOS_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var FSE_HONORARIOS_ANO_N_MARCO_ACUM= FSE_HONORARIOS_ANO_N_MARCO_ACUM; var FSE_HONORARIOS_ANO_N_MARCO_ACUM_MAX_MIN = FSE_HONORARIOS_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_HONORARIOS_ANO_N_ABRIL_ACUM = 'nd'; var FSE_HONORARIOS_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var FSE_HONORARIOS_ANO_N_ABRIL_ACUM= FSE_HONORARIOS_ANO_N_ABRIL_ACUM; var FSE_HONORARIOS_ANO_N_ABRIL_ACUM_MAX_MIN = FSE_HONORARIOS_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_HONORARIOS_ANO_N_MAIO_ACUM = 'nd'; var FSE_HONORARIOS_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var FSE_HONORARIOS_ANO_N_MAIO_ACUM= FSE_HONORARIOS_ANO_N_MAIO_ACUM; var FSE_HONORARIOS_ANO_N_MAIO_ACUM_MAX_MIN = FSE_HONORARIOS_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_HONORARIOS_ANO_N_JUNHO_ACUM = 'nd'; var FSE_HONORARIOS_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var FSE_HONORARIOS_ANO_N_JUNHO_ACUM= FSE_HONORARIOS_ANO_N_JUNHO_ACUM; var FSE_HONORARIOS_ANO_N_JUNHO_ACUM_MAX_MIN = FSE_HONORARIOS_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_HONORARIOS_ANO_N_JULHO_ACUM = 'nd'; var FSE_HONORARIOS_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var FSE_HONORARIOS_ANO_N_JULHO_ACUM= FSE_HONORARIOS_ANO_N_JULHO_ACUM; var FSE_HONORARIOS_ANO_N_JULHO_ACUM_MAX_MIN = FSE_HONORARIOS_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_HONORARIOS_ANO_N_AGOSTO_ACUM = 'nd'; var FSE_HONORARIOS_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var FSE_HONORARIOS_ANO_N_AGOSTO_ACUM= FSE_HONORARIOS_ANO_N_AGOSTO_ACUM; var FSE_HONORARIOS_ANO_N_AGOSTO_ACUM_MAX_MIN = FSE_HONORARIOS_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_HONORARIOS_ANO_N_SETEMBRO_ACUM = 'nd'; var FSE_HONORARIOS_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_HONORARIOS_ANO_N_SETEMBRO_ACUM= FSE_HONORARIOS_ANO_N_SETEMBRO_ACUM; var FSE_HONORARIOS_ANO_N_SETEMBRO_ACUM_MAX_MIN = FSE_HONORARIOS_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_HONORARIOS_ANO_N_OUTUBRO_ACUM = 'nd'; var FSE_HONORARIOS_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var FSE_HONORARIOS_ANO_N_OUTUBRO_ACUM= FSE_HONORARIOS_ANO_N_OUTUBRO_ACUM; var FSE_HONORARIOS_ANO_N_OUTUBRO_ACUM_MAX_MIN = FSE_HONORARIOS_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_HONORARIOS_ANO_N_NOVEMBRO_ACUM = 'nd'; var FSE_HONORARIOS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_HONORARIOS_ANO_N_NOVEMBRO_ACUM= FSE_HONORARIOS_ANO_N_NOVEMBRO_ACUM; var FSE_HONORARIOS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = FSE_HONORARIOS_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_HONORARIOS_ANO_N_DEZEMBRO_ACUM = 'nd'; var FSE_HONORARIOS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_HONORARIOS_ANO_N_DEZEMBRO_ACUM= FSE_HONORARIOS_ANO_N_DEZEMBRO_ACUM; var FSE_HONORARIOS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = FSE_HONORARIOS_ANO_N_DEZEMBRO_ACUM };




    var FSE_HONORARIOS_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_JANEIRO"])));
    var FSE_HONORARIOS_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_FEVEREIRO"]))) + FSE_HONORARIOS_ANO_N_1_JANEIRO_ACUM;
    var FSE_HONORARIOS_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_MARCO"]))) + FSE_HONORARIOS_ANO_N_1_FEVEREIRO_ACUM;
    var FSE_HONORARIOS_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_ABRIL"]))) + FSE_HONORARIOS_ANO_N_1_MARCO_ACUM;
    var FSE_HONORARIOS_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_MAIO"]))) + FSE_HONORARIOS_ANO_N_1_ABRIL_ACUM;
    var FSE_HONORARIOS_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_JUNHO"]))) + FSE_HONORARIOS_ANO_N_1_MAIO_ACUM;
    var FSE_HONORARIOS_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_JULHO"]))) + FSE_HONORARIOS_ANO_N_1_JUNHO_ACUM;
    var FSE_HONORARIOS_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_AGOSTO"]))) + FSE_HONORARIOS_ANO_N_1_JULHO_ACUM;
    var FSE_HONORARIOS_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_SETEMBRO"]))) + FSE_HONORARIOS_ANO_N_1_AGOSTO_ACUM;
    var FSE_HONORARIOS_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_OUTUBRO"]))) + FSE_HONORARIOS_ANO_N_1_SETEMBRO_ACUM;
    var FSE_HONORARIOS_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_NOVEMBRO"]))) + FSE_HONORARIOS_ANO_N_1_OUTUBRO_ACUM;
    var FSE_HONORARIOS_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_DEZEMBRO"]))) + FSE_HONORARIOS_ANO_N_1_NOVEMBRO_ACUM;


    var FSE_HONORARIOS_Mensal_Eixo_max_princ= Math.max(
                       FSE_HONORARIOS_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_HONORARIOS_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_HONORARIOS_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_HONORARIOS_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_HONORARIOS_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_HONORARIOS_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_HONORARIOS_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_HONORARIOS_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_HONORARIOS_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_HONORARIOS_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_HONORARIOS_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_HONORARIOS_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_HONORARIOS_ANO_N_1_JANEIRO_ACUM,
                       FSE_HONORARIOS_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_HONORARIOS_ANO_N_1_MARCO_ACUM,
                       FSE_HONORARIOS_ANO_N_1_ABRIL_ACUM,
                       FSE_HONORARIOS_ANO_N_1_MAIO_ACUM,
                       FSE_HONORARIOS_ANO_N_1_JUNHO_ACUM,
                       FSE_HONORARIOS_ANO_N_1_JULHO_ACUM,
                       FSE_HONORARIOS_ANO_N_1_AGOSTO_ACUM,
                       FSE_HONORARIOS_ANO_N_1_SETEMBRO_ACUM,
                       FSE_HONORARIOS_ANO_N_1_OUTUBRO_ACUM,
                       FSE_HONORARIOS_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_HONORARIOS_ANO_N_1_DEZEMBRO_ACUM
                             );
    var FSE_HONORARIOS_Mensal_Eixo_min_princ= Math.min(

                       FSE_HONORARIOS_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_HONORARIOS_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_HONORARIOS_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_HONORARIOS_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_HONORARIOS_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_HONORARIOS_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_HONORARIOS_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_HONORARIOS_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_HONORARIOS_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_HONORARIOS_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_HONORARIOS_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_HONORARIOS_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_HONORARIOS_ANO_N_1_JANEIRO_ACUM,
                       FSE_HONORARIOS_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_HONORARIOS_ANO_N_1_MARCO_ACUM,
                       FSE_HONORARIOS_ANO_N_1_ABRIL_ACUM,
                       FSE_HONORARIOS_ANO_N_1_MAIO_ACUM,
                       FSE_HONORARIOS_ANO_N_1_JUNHO_ACUM,
                       FSE_HONORARIOS_ANO_N_1_JULHO_ACUM,
                       FSE_HONORARIOS_ANO_N_1_AGOSTO_ACUM,
                       FSE_HONORARIOS_ANO_N_1_SETEMBRO_ACUM,
                       FSE_HONORARIOS_ANO_N_1_OUTUBRO_ACUM,
                       FSE_HONORARIOS_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_HONORARIOS_ANO_N_1_DEZEMBRO_ACUM
                           );
    var FSE_HONORARIOS_Mensal_Eixo_max_secon= Math.max(
                       FSE_HONORARIOS_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_HONORARIOS_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_HONORARIOS_ANO_N_MARCO_MAX_MIN ,
                       FSE_HONORARIOS_ANO_N_ABRIL_MAX_MIN ,
                       FSE_HONORARIOS_ANO_N_MAIO_MAX_MIN ,
                       FSE_HONORARIOS_ANO_N_JUNHO_MAX_MIN ,
                       FSE_HONORARIOS_ANO_N_JULHO_MAX_MIN ,
                       FSE_HONORARIOS_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_HONORARIOS_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_HONORARIOS_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_HONORARIOS_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_HONORARIOS_ANO_N_DEZEMBRO_MAX_MIN ,



                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_DEZEMBRO"])))

                            );
    var FSE_HONORARIOS_Mensal_Eixo_min_secon= Math.min(
                       FSE_HONORARIOS_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_HONORARIOS_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_HONORARIOS_ANO_N_MARCO_MAX_MIN ,
                       FSE_HONORARIOS_ANO_N_ABRIL_MAX_MIN ,
                       FSE_HONORARIOS_ANO_N_MAIO_MAX_MIN ,
                       FSE_HONORARIOS_ANO_N_JUNHO_MAX_MIN ,
                       FSE_HONORARIOS_ANO_N_JULHO_MAX_MIN ,
                       FSE_HONORARIOS_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_HONORARIOS_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_HONORARIOS_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_HONORARIOS_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_HONORARIOS_ANO_N_DEZEMBRO_MAX_MIN ,


                           @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_DEZEMBRO"])))

                          );

    //NOTA TA: Aqui trato o minimo e o maximo do eixo principal
    if(Math.abs(FSE_HONORARIOS_Mensal_Eixo_max_princ)>=Math.abs(FSE_HONORARIOS_Mensal_Eixo_min_princ))
    {
        var FSE_HONORARIOS_Mensal_Eixo_max_princ_=(Math.ceil(FSE_HONORARIOS_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_HONORARIOS_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_HONORARIOS_Mensal_Eixo_max_princ),0).toString().length-1);
        var FSE_HONORARIOS_Mensal_Eixo_min_princ_= (Math.floor(FSE_HONORARIOS_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_HONORARIOS_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_HONORARIOS_Mensal_Eixo_max_princ),0).toString().length-1);
        //alert(FSE_HONORARIOS_Mensal_Eixo_max_princ_);
        //alert(FSE_HONORARIOS_Mensal_Eixo_min_princ_);
    }
    else
    {
        var FSE_HONORARIOS_Mensal_Eixo_max_princ_=(Math.ceil(FSE_HONORARIOS_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_HONORARIOS_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_HONORARIOS_Mensal_Eixo_min_princ),0).toString().length-1);
        var FSE_HONORARIOS_Mensal_Eixo_min_princ_= (Math.floor(FSE_HONORARIOS_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_HONORARIOS_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_HONORARIOS_Mensal_Eixo_min_princ),0).toString().length-1);}

    //NOTA TA: Aqui trato o minimo e o maximo do eixo secundario

    if(Math.abs(FSE_HONORARIOS_Mensal_Eixo_max_secon)>=Math.abs(FSE_HONORARIOS_Mensal_Eixo_min_secon))
    {
        var FSE_HONORARIOS_Mensal_Eixo_max_secon_=(Math.ceil(FSE_HONORARIOS_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_HONORARIOS_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_HONORARIOS_Mensal_Eixo_max_secon),0).toString().length-1);
        var FSE_HONORARIOS_Mensal_Eixo_min_secon_= (Math.floor(FSE_HONORARIOS_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_HONORARIOS_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_HONORARIOS_Mensal_Eixo_max_secon),0).toString().length-1);
        //alert(FSE_HONORARIOS_Mensal_Eixo_max_secon_);
        //alert(FSE_HONORARIOS_Mensal_Eixo_min_secon_);
    }
    else
    {
        var FSE_HONORARIOS_Mensal_Eixo_max_secon_=(Math.ceil(FSE_HONORARIOS_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_HONORARIOS_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_HONORARIOS_Mensal_Eixo_min_secon),0).toString().length-1);
        var FSE_HONORARIOS_Mensal_Eixo_min_secon_= (Math.floor(FSE_HONORARIOS_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_HONORARIOS_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_HONORARIOS_Mensal_Eixo_min_secon),0).toString().length-1);}


    if(Math.abs(FSE_HONORARIOS_Mensal_Eixo_min_princ)/Math.abs(FSE_HONORARIOS_Mensal_Eixo_max_princ)>=Math.abs(FSE_HONORARIOS_Mensal_Eixo_min_secon)/Math.abs(FSE_HONORARIOS_Mensal_Eixo_max_secon))
    { if(FSE_HONORARIOS_Mensal_Eixo_max_princ > 0 && FSE_HONORARIOS_Mensal_Eixo_min_princ <0 ){ var FSE_HONORARIOS_Mensal_Eixo_min_secon__=(FSE_HONORARIOS_Mensal_Eixo_min_princ_*FSE_HONORARIOS_Mensal_Eixo_max_secon_)/FSE_HONORARIOS_Mensal_Eixo_max_princ_;} else { var FSE_HONORARIOS_Mensal_Eixo_min_secon__=FSE_HONORARIOS_Mensal_Eixo_min_secon_;}
        if(FSE_HONORARIOS_Mensal_Eixo_max_secon > 0 && FSE_HONORARIOS_Mensal_Eixo_min_secon <0 ){ var FSE_HONORARIOS_Mensal_Eixo_min_princ__=(FSE_HONORARIOS_Mensal_Eixo_min_secon__*FSE_HONORARIOS_Mensal_Eixo_max_princ_)/FSE_HONORARIOS_Mensal_Eixo_max_secon_;} else { var FSE_HONORARIOS_Mensal_Eixo_min_princ__=FSE_HONORARIOS_Mensal_Eixo_min_princ_;}}
    else
    {if(FSE_HONORARIOS_Mensal_Eixo_max_secon > 0 && FSE_HONORARIOS_Mensal_Eixo_min_secon <0 ){ var FSE_HONORARIOS_Mensal_Eixo_min_princ__=(FSE_HONORARIOS_Mensal_Eixo_min_secon_*FSE_HONORARIOS_Mensal_Eixo_max_princ_)/FSE_HONORARIOS_Mensal_Eixo_max_secon_;} else { var FSE_HONORARIOS_Mensal_Eixo_min_princ__=FSE_HONORARIOS_Mensal_Eixo_min_princ_;}
        if(FSE_HONORARIOS_Mensal_Eixo_max_princ > 0 && FSE_HONORARIOS_Mensal_Eixo_min_princ <0 ){ var FSE_HONORARIOS_Mensal_Eixo_min_secon__=(FSE_HONORARIOS_Mensal_Eixo_min_princ__*FSE_HONORARIOS_Mensal_Eixo_max_secon_)/FSE_HONORARIOS_Mensal_Eixo_max_princ_;} else { var FSE_HONORARIOS_Mensal_Eixo_min_secon__=FSE_HONORARIOS_Mensal_Eixo_min_secon_;}
    }



    if(Math.abs(FSE_HONORARIOS_Mensal_Eixo_max_princ)/Math.abs(FSE_HONORARIOS_Mensal_Eixo_min_princ)>=Math.abs(FSE_HONORARIOS_Mensal_Eixo_max_secon)/Math.abs(FSE_HONORARIOS_Mensal_Eixo_min_secon))
    { if(FSE_HONORARIOS_Mensal_Eixo_min_princ > 0 && FSE_HONORARIOS_Mensal_Eixo_max_princ <0 ){ var FSE_HONORARIOS_Mensal_Eixo_max_secon__=(FSE_HONORARIOS_Mensal_Eixo_max_princ_*FSE_HONORARIOS_Mensal_Eixo_min_secon_)/FSE_HONORARIOS_Mensal_Eixo_min_princ_;} else { var FSE_HONORARIOS_Mensal_Eixo_max_secon__=FSE_HONORARIOS_Mensal_Eixo_max_secon_;}
        if(FSE_HONORARIOS_Mensal_Eixo_min_secon > 0 && FSE_HONORARIOS_Mensal_Eixo_max_secon <0 ){ var FSE_HONORARIOS_Mensal_Eixo_max_princ__=(FSE_HONORARIOS_Mensal_Eixo_max_secon__*FSE_HONORARIOS_Mensal_Eixo_min_princ_)/FSE_HONORARIOS_Mensal_Eixo_min_secon_;} else { var FSE_HONORARIOS_Mensal_Eixo_max_princ__=FSE_HONORARIOS_Mensal_Eixo_max_princ_;}}
    else
    {if(FSE_HONORARIOS_Mensal_Eixo_min_secon > 0 && FSE_HONORARIOS_Mensal_Eixo_max_secon <0 ){ var FSE_HONORARIOS_Mensal_Eixo_max_princ__=(FSE_HONORARIOS_Mensal_Eixo_max_secon_*FSE_HONORARIOS_Mensal_Eixo_min_princ_)/FSE_HONORARIOS_Mensal_Eixo_min_secon_;} else { var FSE_HONORARIOS_Mensal_Eixo_max_princ__=FSE_HONORARIOS_Mensal_Eixo_max_princ_;}
        if(FSE_HONORARIOS_Mensal_Eixo_min_princ > 0 && FSE_HONORARIOS_Mensal_Eixo_max_princ <0 ){ var FSE_HONORARIOS_Mensal_Eixo_max_secon__=(FSE_HONORARIOS_Mensal_Eixo_max_princ__*FSE_HONORARIOS_Mensal_Eixo_min_secon_)/FSE_HONORARIOS_Mensal_Eixo_min_princ_;} else { var FSE_HONORARIOS_Mensal_Eixo_max_secon__=FSE_HONORARIOS_Mensal_Eixo_max_secon_;}
    }



    var GRAFICO_FSE_RESULT_MENSAL_COMP_010=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_010').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_010=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_010, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label: 'Honorários(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   data: [
                       FSE_HONORARIOS_ANO_N_JANEIRO_ACUM,
                       FSE_HONORARIOS_ANO_N_FEVEREIRO_ACUM,
                       FSE_HONORARIOS_ANO_N_MARCO_ACUM,
                       FSE_HONORARIOS_ANO_N_ABRIL_ACUM,
                       FSE_HONORARIOS_ANO_N_MAIO_ACUM,
                       FSE_HONORARIOS_ANO_N_JUNHO_ACUM,
                       FSE_HONORARIOS_ANO_N_JULHO_ACUM,
                       FSE_HONORARIOS_ANO_N_AGOSTO_ACUM,
                       FSE_HONORARIOS_ANO_N_SETEMBRO_ACUM,
                       FSE_HONORARIOS_ANO_N_OUTUBRO_ACUM,
                       FSE_HONORARIOS_ANO_N_NOVEMBRO_ACUM,
                       FSE_HONORARIOS_ANO_N_DEZEMBRO_ACUM,
                   ],
                   type: 'line'


               },
                              {
                                  label: 'Honorários(ac) ' + ANO_VERSAO_ANTE_,
                                  yAxisID: 'A',
                                  //backgroundColor: 'rgb(201, 10, 10)',
                                  borderColor: 'rgb(0,221,0)',
                                  data: [
                       FSE_HONORARIOS_ANO_N_1_JANEIRO_ACUM,
                       FSE_HONORARIOS_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_HONORARIOS_ANO_N_1_MARCO_ACUM,
                       FSE_HONORARIOS_ANO_N_1_ABRIL_ACUM,
                       FSE_HONORARIOS_ANO_N_1_MAIO_ACUM,
                       FSE_HONORARIOS_ANO_N_1_JUNHO_ACUM,
                       FSE_HONORARIOS_ANO_N_1_JULHO_ACUM,
                       FSE_HONORARIOS_ANO_N_1_AGOSTO_ACUM,
                       FSE_HONORARIOS_ANO_N_1_SETEMBRO_ACUM,
                       FSE_HONORARIOS_ANO_N_1_OUTUBRO_ACUM,
                       FSE_HONORARIOS_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_HONORARIOS_ANO_N_1_DEZEMBRO_ACUM,
                                  ],
                                  type: 'line'


                              },
                {
                    label:  'Honorários(m) ' + ANO_VERSAO_REAL_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(250 , 83 , 0, 0.5)',
                    borderColor: 'rgba(250 , 83 , 0, 0.5)',
                    data: [
                  FSE_HONORARIOS_ANO_N_JANEIRO ,
                  FSE_HONORARIOS_ANO_N_FEVEREIRO ,
                  FSE_HONORARIOS_ANO_N_MARCO ,
                  FSE_HONORARIOS_ANO_N_ABRIL,
                  FSE_HONORARIOS_ANO_N_MAIO ,
                  FSE_HONORARIOS_ANO_N_JUNHO ,
                  FSE_HONORARIOS_ANO_N_JULHO ,
                  FSE_HONORARIOS_ANO_N_AGOSTO ,
                  FSE_HONORARIOS_ANO_N_SETEMBRO ,
                  FSE_HONORARIOS_ANO_N_OUTUBRO ,
                  FSE_HONORARIOS_ANO_N_NOVEMBRO ,
                  FSE_HONORARIOS_ANO_N_DEZEMBRO ,
                    ],
                },
                {
                    label:  'Honorários(m) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(0,221,0, 0.4)',
                    borderColor: 'rgba(0,221,0, 0.4)',
                    data: [
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_JANEIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_FEVEREIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_MARCO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_ABRIL"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_MAIO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_JUNHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_JULHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_AGOSTO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_SETEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_OUTUBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_NOVEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_HONORARIOS_ANO_N_1_DEZEMBRO"]))),
                    ],
                },


            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_HONORARIOS_MENSAL_1',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                min:  Math.round(FSE_HONORARIOS_Mensal_Eixo_min_princ__,0),
                                                max:  Math.round(FSE_HONORARIOS_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString();
                                                }
                                            }
                                        },

                    { id: 'B',
                        type: 'linear',
                        position: 'right',
                        ticks: {
                            min: Math.round(FSE_HONORARIOS_Mensal_Eixo_min_secon__,0),
                            max:  Math.round(FSE_HONORARIOS_Mensal_Eixo_max_secon__,0),
                            beginAtZero: false,
                            callback: function(value, index, values) {
                                return value.toLocaleString();
                            }
                        }
                    },






                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_011-----------------------------------------------------------*@
<script>

    var IND_VN_ANO_N_JANEIRO_ACUM = IND_VN_ANO_N_JANEIRO;
    var IND_VN_ANO_N_FEVEREIRO_ACUM = IND_VN_ANO_N_FEVEREIRO + IND_VN_ANO_N_JANEIRO_ACUM;
    var IND_VN_ANO_N_MARCO_ACUM = IND_VN_ANO_N_MARCO + IND_VN_ANO_N_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_ABRIL_ACUM = IND_VN_ANO_N_ABRIL + IND_VN_ANO_N_MARCO_ACUM;
    var IND_VN_ANO_N_MAIO_ACUM = IND_VN_ANO_N_MAIO + IND_VN_ANO_N_ABRIL_ACUM;
    var IND_VN_ANO_N_JUNHO_ACUM = IND_VN_ANO_N_JUNHO + IND_VN_ANO_N_MAIO_ACUM;
    var IND_VN_ANO_N_JULHO_ACUM = IND_VN_ANO_N_JULHO + IND_VN_ANO_N_JUNHO_ACUM;
    var IND_VN_ANO_N_AGOSTO_ACUM = IND_VN_ANO_N_AGOSTO + IND_VN_ANO_N_JULHO_ACUM;
    var IND_VN_ANO_N_SETEMBRO_ACUM = IND_VN_ANO_N_SETEMBRO + IND_VN_ANO_N_AGOSTO_ACUM;
    var IND_VN_ANO_N_OUTUBRO_ACUM = IND_VN_ANO_N_OUTUBRO + IND_VN_ANO_N_SETEMBRO_ACUM;
    var IND_VN_ANO_N_NOVEMBRO_ACUM = IND_VN_ANO_N_NOVEMBRO + IND_VN_ANO_N_OUTUBRO_ACUM;
    var IND_VN_ANO_N_DEZEMBRO_ACUM = IND_VN_ANO_N_DEZEMBRO + IND_VN_ANO_N_NOVEMBRO_ACUM;



    var IND_VN_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JANEIRO"])));
    var IND_VN_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_FEVEREIRO"]))) + IND_VN_ANO_N_1_JANEIRO_ACUM;
    var IND_VN_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MARCO"]))) + IND_VN_ANO_N_1_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_ABRIL"]))) + IND_VN_ANO_N_1_MARCO_ACUM;
    var IND_VN_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MAIO"]))) + IND_VN_ANO_N_1_ABRIL_ACUM;
    var IND_VN_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JUNHO"]))) + IND_VN_ANO_N_1_MAIO_ACUM;
    var IND_VN_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JULHO"]))) + IND_VN_ANO_N_1_JUNHO_ACUM;
    var IND_VN_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_AGOSTO"]))) + IND_VN_ANO_N_1_JULHO_ACUM;
    var IND_VN_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_SETEMBRO"]))) + IND_VN_ANO_N_1_AGOSTO_ACUM;
    var IND_VN_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_OUTUBRO"]))) + IND_VN_ANO_N_1_SETEMBRO_ACUM;
    var IND_VN_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_NOVEMBRO"]))) + IND_VN_ANO_N_1_OUTUBRO_ACUM;
    var IND_VN_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_DEZEMBRO"]))) + IND_VN_ANO_N_1_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_HONORARIOS_VN_ANO_N_JANEIRO_ACUM = 'nd'; var PESO_FSE_HONORARIOS_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_HONORARIOS_VN_ANO_N_JANEIRO_ACUM= FSE_HONORARIOS_ANO_N_JANEIRO_ACUM/IND_VN_ANO_N_JANEIRO_ACUM*100; var PESO_FSE_HONORARIOS_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = PESO_FSE_HONORARIOS_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_HONORARIOS_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_HONORARIOS_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_HONORARIOS_VN_ANO_N_FEVEREIRO_ACUM= FSE_HONORARIOS_ANO_N_FEVEREIRO_ACUM/IND_VN_ANO_N_FEVEREIRO_ACUM*100; var PESO_FSE_HONORARIOS_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_HONORARIOS_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_HONORARIOS_VN_ANO_N_MARCO_ACUM = 'nd'; var PESO_FSE_HONORARIOS_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_HONORARIOS_VN_ANO_N_MARCO_ACUM= FSE_HONORARIOS_ANO_N_MARCO_ACUM/IND_VN_ANO_N_MARCO_ACUM*100; var PESO_FSE_HONORARIOS_VN_ANO_N_MARCO_ACUM_MAX_MIN = PESO_FSE_HONORARIOS_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_HONORARIOS_VN_ANO_N_ABRIL_ACUM = 'nd'; var PESO_FSE_HONORARIOS_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_HONORARIOS_VN_ANO_N_ABRIL_ACUM= FSE_HONORARIOS_ANO_N_ABRIL_ACUM/IND_VN_ANO_N_ABRIL_ACUM*100; var PESO_FSE_HONORARIOS_VN_ANO_N_ABRIL_ACUM_MAX_MIN = PESO_FSE_HONORARIOS_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_HONORARIOS_VN_ANO_N_MAIO_ACUM = 'nd'; var PESO_FSE_HONORARIOS_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_HONORARIOS_VN_ANO_N_MAIO_ACUM= FSE_HONORARIOS_ANO_N_MAIO_ACUM/IND_VN_ANO_N_MAIO_ACUM*100; var PESO_FSE_HONORARIOS_VN_ANO_N_MAIO_ACUM_MAX_MIN = PESO_FSE_HONORARIOS_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_HONORARIOS_VN_ANO_N_JUNHO_ACUM = 'nd'; var PESO_FSE_HONORARIOS_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_HONORARIOS_VN_ANO_N_JUNHO_ACUM= FSE_HONORARIOS_ANO_N_JUNHO_ACUM/IND_VN_ANO_N_JUNHO_ACUM*100; var PESO_FSE_HONORARIOS_VN_ANO_N_JUNHO_ACUM_MAX_MIN = PESO_FSE_HONORARIOS_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_HONORARIOS_VN_ANO_N_JULHO_ACUM = 'nd'; var PESO_FSE_HONORARIOS_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_HONORARIOS_VN_ANO_N_JULHO_ACUM= FSE_HONORARIOS_ANO_N_JULHO_ACUM/IND_VN_ANO_N_JULHO_ACUM*100; var PESO_FSE_HONORARIOS_VN_ANO_N_JULHO_ACUM_MAX_MIN = PESO_FSE_HONORARIOS_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_HONORARIOS_VN_ANO_N_AGOSTO_ACUM = 'nd'; var PESO_FSE_HONORARIOS_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_HONORARIOS_VN_ANO_N_AGOSTO_ACUM= FSE_HONORARIOS_ANO_N_AGOSTO_ACUM/IND_VN_ANO_N_AGOSTO_ACUM*100; var PESO_FSE_HONORARIOS_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = PESO_FSE_HONORARIOS_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_HONORARIOS_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var PESO_FSE_HONORARIOS_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_HONORARIOS_VN_ANO_N_SETEMBRO_ACUM= FSE_HONORARIOS_ANO_N_SETEMBRO_ACUM/IND_VN_ANO_N_SETEMBRO_ACUM*100; var PESO_FSE_HONORARIOS_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_HONORARIOS_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_HONORARIOS_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var PESO_FSE_HONORARIOS_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_HONORARIOS_VN_ANO_N_OUTUBRO_ACUM= FSE_HONORARIOS_ANO_N_OUTUBRO_ACUM/IND_VN_ANO_N_OUTUBRO_ACUM*100; var PESO_FSE_HONORARIOS_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_HONORARIOS_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_HONORARIOS_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_HONORARIOS_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_HONORARIOS_VN_ANO_N_NOVEMBRO_ACUM= FSE_HONORARIOS_ANO_N_NOVEMBRO_ACUM/IND_VN_ANO_N_NOVEMBRO_ACUM*100; var PESO_FSE_HONORARIOS_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_HONORARIOS_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_HONORARIOS_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_HONORARIOS_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_HONORARIOS_VN_ANO_N_DEZEMBRO_ACUM= FSE_HONORARIOS_ANO_N_DEZEMBRO_ACUM/IND_VN_ANO_N_DEZEMBRO_ACUM*100; var PESO_FSE_HONORARIOS_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_HONORARIOS_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_HONORARIOS_VN_ANO_N_1_JANEIRO_ACUM = 'nd'; var PESO_FSE_HONORARIOS_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_HONORARIOS_VN_ANO_N_1_JANEIRO_ACUM= FSE_HONORARIOS_ANO_N_1_JANEIRO_ACUM/IND_VN_ANO_N_1_JANEIRO_ACUM*100; var PESO_FSE_HONORARIOS_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = PESO_FSE_HONORARIOS_VN_ANO_N_1_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_HONORARIOS_VN_ANO_N_1_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_HONORARIOS_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_HONORARIOS_VN_ANO_N_1_FEVEREIRO_ACUM= FSE_HONORARIOS_ANO_N_1_FEVEREIRO_ACUM/IND_VN_ANO_N_1_FEVEREIRO_ACUM*100; var PESO_FSE_HONORARIOS_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_HONORARIOS_VN_ANO_N_1_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_HONORARIOS_VN_ANO_N_1_MARCO_ACUM = 'nd'; var PESO_FSE_HONORARIOS_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_HONORARIOS_VN_ANO_N_1_MARCO_ACUM= FSE_HONORARIOS_ANO_N_1_MARCO_ACUM/IND_VN_ANO_N_1_MARCO_ACUM*100; var PESO_FSE_HONORARIOS_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = PESO_FSE_HONORARIOS_VN_ANO_N_1_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_HONORARIOS_VN_ANO_N_1_ABRIL_ACUM = 'nd'; var PESO_FSE_HONORARIOS_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_HONORARIOS_VN_ANO_N_1_ABRIL_ACUM= FSE_HONORARIOS_ANO_N_1_ABRIL_ACUM/IND_VN_ANO_N_1_ABRIL_ACUM*100; var PESO_FSE_HONORARIOS_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = PESO_FSE_HONORARIOS_VN_ANO_N_1_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_HONORARIOS_VN_ANO_N_1_MAIO_ACUM = 'nd'; var PESO_FSE_HONORARIOS_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_HONORARIOS_VN_ANO_N_1_MAIO_ACUM= FSE_HONORARIOS_ANO_N_1_MAIO_ACUM/IND_VN_ANO_N_1_MAIO_ACUM*100; var PESO_FSE_HONORARIOS_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = PESO_FSE_HONORARIOS_VN_ANO_N_1_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_HONORARIOS_VN_ANO_N_1_JUNHO_ACUM = 'nd'; var PESO_FSE_HONORARIOS_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_HONORARIOS_VN_ANO_N_1_JUNHO_ACUM= FSE_HONORARIOS_ANO_N_1_JUNHO_ACUM/IND_VN_ANO_N_1_JUNHO_ACUM*100; var PESO_FSE_HONORARIOS_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = PESO_FSE_HONORARIOS_VN_ANO_N_1_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_HONORARIOS_VN_ANO_N_1_JULHO_ACUM = 'nd'; var PESO_FSE_HONORARIOS_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_HONORARIOS_VN_ANO_N_1_JULHO_ACUM= FSE_HONORARIOS_ANO_N_1_JULHO_ACUM/IND_VN_ANO_N_1_JULHO_ACUM*100; var PESO_FSE_HONORARIOS_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = PESO_FSE_HONORARIOS_VN_ANO_N_1_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_HONORARIOS_VN_ANO_N_1_AGOSTO_ACUM = 'nd'; var PESO_FSE_HONORARIOS_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_HONORARIOS_VN_ANO_N_1_AGOSTO_ACUM= FSE_HONORARIOS_ANO_N_1_AGOSTO_ACUM/IND_VN_ANO_N_1_AGOSTO_ACUM*100; var PESO_FSE_HONORARIOS_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = PESO_FSE_HONORARIOS_VN_ANO_N_1_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_HONORARIOS_VN_ANO_N_1_SETEMBRO_ACUM = 'nd'; var PESO_FSE_HONORARIOS_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_HONORARIOS_VN_ANO_N_1_SETEMBRO_ACUM= FSE_HONORARIOS_ANO_N_1_SETEMBRO_ACUM/IND_VN_ANO_N_1_SETEMBRO_ACUM*100; var PESO_FSE_HONORARIOS_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_HONORARIOS_VN_ANO_N_1_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_HONORARIOS_VN_ANO_N_1_OUTUBRO_ACUM = 'nd'; var PESO_FSE_HONORARIOS_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_HONORARIOS_VN_ANO_N_1_OUTUBRO_ACUM= FSE_HONORARIOS_ANO_N_1_OUTUBRO_ACUM/IND_VN_ANO_N_1_OUTUBRO_ACUM*100; var PESO_FSE_HONORARIOS_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_HONORARIOS_VN_ANO_N_1_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_HONORARIOS_VN_ANO_N_1_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_HONORARIOS_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_HONORARIOS_VN_ANO_N_1_NOVEMBRO_ACUM= FSE_HONORARIOS_ANO_N_1_NOVEMBRO_ACUM/IND_VN_ANO_N_1_NOVEMBRO_ACUM*100; var PESO_FSE_HONORARIOS_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_HONORARIOS_VN_ANO_N_1_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_HONORARIOS_VN_ANO_N_1_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_HONORARIOS_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_HONORARIOS_VN_ANO_N_1_DEZEMBRO_ACUM= FSE_HONORARIOS_ANO_N_1_DEZEMBRO_ACUM/IND_VN_ANO_N_1_DEZEMBRO_ACUM*100; var PESO_FSE_HONORARIOS_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_HONORARIOS_VN_ANO_N_1_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_VN_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JANEIRO_ACUM= ((IND_VN_ANO_N_JANEIRO_ACUM-IND_VN_ANO_N_1_JANEIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_JANEIRO_ACUM))*100; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_FEVEREIRO_ACUM= ((IND_VN_ANO_N_FEVEREIRO_ACUM-IND_VN_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_VN_ANO_N_MARCO_ACUM = 'nd'; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MARCO_ACUM= ((IND_VN_ANO_N_MARCO_ACUM-IND_VN_ANO_N_1_MARCO_ACUM)/Math.abs(IND_VN_ANO_N_1_MARCO_ACUM))*100; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = VAR_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_VN_ANO_N_ABRIL_ACUM = 'nd'; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_ABRIL_ACUM= ((IND_VN_ANO_N_ABRIL_ACUM-IND_VN_ANO_N_1_ABRIL_ACUM)/Math.abs(IND_VN_ANO_N_1_ABRIL_ACUM))*100; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_VN_ANO_N_MAIO_ACUM = 'nd'; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MAIO_ACUM= ((IND_VN_ANO_N_MAIO_ACUM-IND_VN_ANO_N_1_MAIO_ACUM)/Math.abs(IND_VN_ANO_N_1_MAIO_ACUM))*100; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = VAR_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_VN_ANO_N_JUNHO_ACUM = 'nd'; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JUNHO_ACUM= ((IND_VN_ANO_N_JUNHO_ACUM-IND_VN_ANO_N_1_JUNHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JUNHO_ACUM))*100; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_VN_ANO_N_JULHO_ACUM = 'nd'; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JULHO_ACUM= ((IND_VN_ANO_N_JULHO_ACUM-IND_VN_ANO_N_1_JULHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JULHO_ACUM))*100; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_VN_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_AGOSTO_ACUM= ((IND_VN_ANO_N_AGOSTO_ACUM-IND_VN_ANO_N_1_AGOSTO_ACUM)/Math.abs(IND_VN_ANO_N_1_AGOSTO_ACUM))*100; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_SETEMBRO_ACUM= ((IND_VN_ANO_N_SETEMBRO_ACUM-IND_VN_ANO_N_1_SETEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_OUTUBRO_ACUM= ((IND_VN_ANO_N_OUTUBRO_ACUM-IND_VN_ANO_N_1_OUTUBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_NOVEMBRO_ACUM= ((IND_VN_ANO_N_NOVEMBRO_ACUM-IND_VN_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_DEZEMBRO_ACUM= ((IND_VN_ANO_N_DEZEMBRO_ACUM-IND_VN_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_FSE_HONORARIOS_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_FSE_HONORARIOS_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_HONORARIOS_ANO_N_JANEIRO_ACUM= ((FSE_HONORARIOS_ANO_N_JANEIRO_ACUM-FSE_HONORARIOS_ANO_N_1_JANEIRO_ACUM)/Math.abs(FSE_HONORARIOS_ANO_N_1_JANEIRO_ACUM))*100; var VAR_FSE_HONORARIOS_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_FSE_HONORARIOS_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_FSE_HONORARIOS_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_FSE_HONORARIOS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_HONORARIOS_ANO_N_FEVEREIRO_ACUM= ((FSE_HONORARIOS_ANO_N_FEVEREIRO_ACUM-FSE_HONORARIOS_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(FSE_HONORARIOS_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_FSE_HONORARIOS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_FSE_HONORARIOS_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_FSE_HONORARIOS_ANO_N_MARCO_ACUM = 'nd'; var VAR_FSE_HONORARIOS_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_HONORARIOS_ANO_N_MARCO_ACUM= ((FSE_HONORARIOS_ANO_N_MARCO_ACUM-FSE_HONORARIOS_ANO_N_1_MARCO_ACUM)/Math.abs(FSE_HONORARIOS_ANO_N_1_MARCO_ACUM))*100; var VAR_FSE_HONORARIOS_ANO_N_MARCO_ACUM_MAX_MIN = VAR_FSE_HONORARIOS_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_FSE_HONORARIOS_ANO_N_ABRIL_ACUM = 'nd'; var VAR_FSE_HONORARIOS_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_HONORARIOS_ANO_N_ABRIL_ACUM= ((FSE_HONORARIOS_ANO_N_ABRIL_ACUM-FSE_HONORARIOS_ANO_N_1_ABRIL_ACUM)/Math.abs(FSE_HONORARIOS_ANO_N_1_ABRIL_ACUM))*100; var VAR_FSE_HONORARIOS_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_FSE_HONORARIOS_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_FSE_HONORARIOS_ANO_N_MAIO_ACUM = 'nd'; var VAR_FSE_HONORARIOS_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_HONORARIOS_ANO_N_MAIO_ACUM= ((FSE_HONORARIOS_ANO_N_MAIO_ACUM-FSE_HONORARIOS_ANO_N_1_MAIO_ACUM)/Math.abs(FSE_HONORARIOS_ANO_N_1_MAIO_ACUM))*100; var VAR_FSE_HONORARIOS_ANO_N_MAIO_ACUM_MAX_MIN = VAR_FSE_HONORARIOS_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_FSE_HONORARIOS_ANO_N_JUNHO_ACUM = 'nd'; var VAR_FSE_HONORARIOS_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_HONORARIOS_ANO_N_JUNHO_ACUM= ((FSE_HONORARIOS_ANO_N_JUNHO_ACUM-FSE_HONORARIOS_ANO_N_1_JUNHO_ACUM)/Math.abs(FSE_HONORARIOS_ANO_N_1_JUNHO_ACUM))*100; var VAR_FSE_HONORARIOS_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_FSE_HONORARIOS_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_FSE_HONORARIOS_ANO_N_JULHO_ACUM = 'nd'; var VAR_FSE_HONORARIOS_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_HONORARIOS_ANO_N_JULHO_ACUM= ((FSE_HONORARIOS_ANO_N_JULHO_ACUM-FSE_HONORARIOS_ANO_N_1_JULHO_ACUM)/Math.abs(FSE_HONORARIOS_ANO_N_1_JULHO_ACUM))*100; var VAR_FSE_HONORARIOS_ANO_N_JULHO_ACUM_MAX_MIN = VAR_FSE_HONORARIOS_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_FSE_HONORARIOS_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_FSE_HONORARIOS_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_HONORARIOS_ANO_N_AGOSTO_ACUM= ((FSE_HONORARIOS_ANO_N_AGOSTO_ACUM-FSE_HONORARIOS_ANO_N_1_AGOSTO_ACUM)/Math.abs(FSE_HONORARIOS_ANO_N_1_AGOSTO_ACUM))*100; var VAR_FSE_HONORARIOS_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_FSE_HONORARIOS_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_FSE_HONORARIOS_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_FSE_HONORARIOS_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_HONORARIOS_ANO_N_SETEMBRO_ACUM= ((FSE_HONORARIOS_ANO_N_SETEMBRO_ACUM-FSE_HONORARIOS_ANO_N_1_SETEMBRO_ACUM)/Math.abs(FSE_HONORARIOS_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_FSE_HONORARIOS_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_FSE_HONORARIOS_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_FSE_HONORARIOS_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_FSE_HONORARIOS_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_HONORARIOS_ANO_N_OUTUBRO_ACUM= ((FSE_HONORARIOS_ANO_N_OUTUBRO_ACUM-FSE_HONORARIOS_ANO_N_1_OUTUBRO_ACUM)/Math.abs(FSE_HONORARIOS_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_FSE_HONORARIOS_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_FSE_HONORARIOS_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_FSE_HONORARIOS_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_FSE_HONORARIOS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_HONORARIOS_ANO_N_NOVEMBRO_ACUM= ((FSE_HONORARIOS_ANO_N_NOVEMBRO_ACUM-FSE_HONORARIOS_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(FSE_HONORARIOS_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_FSE_HONORARIOS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_FSE_HONORARIOS_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_FSE_HONORARIOS_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_FSE_HONORARIOS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_HONORARIOS_ANO_N_DEZEMBRO_ACUM= ((FSE_HONORARIOS_ANO_N_DEZEMBRO_ACUM-FSE_HONORARIOS_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(FSE_HONORARIOS_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_FSE_HONORARIOS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_FSE_HONORARIOS_ANO_N_DEZEMBRO_ACUM };

    if( PESO_FSE_HONORARIOS_VN_ANO_N_1_JANEIRO_ACUM > PESO_FSE_HONORARIOS_VN_ANO_N_JANEIRO_ACUM) { var  INEFICIENCIA_FSE_HONORARIOS_ANO_N_JANEIRO_ACUM=PESO_FSE_HONORARIOS_VN_ANO_N_1_JANEIRO_ACUM ; } else { var  INEFICIENCIA_FSE_HONORARIOS_ANO_N_JANEIRO_ACUM=PESO_FSE_HONORARIOS_VN_ANO_N_JANEIRO_ACUM ; }
    if( PESO_FSE_HONORARIOS_VN_ANO_N_1_FEVEREIRO_ACUM > PESO_FSE_HONORARIOS_VN_ANO_N_FEVEREIRO_ACUM) { var  INEFICIENCIA_FSE_HONORARIOS_ANO_N_FEVEREIRO_ACUM=PESO_FSE_HONORARIOS_VN_ANO_N_1_FEVEREIRO_ACUM ; } else { var  INEFICIENCIA_FSE_HONORARIOS_ANO_N_FEVEREIRO_ACUM=PESO_FSE_HONORARIOS_VN_ANO_N_FEVEREIRO_ACUM ; }
    if( PESO_FSE_HONORARIOS_VN_ANO_N_1_MARCO_ACUM > PESO_FSE_HONORARIOS_VN_ANO_N_MARCO_ACUM) { var  INEFICIENCIA_FSE_HONORARIOS_ANO_N_MARCO_ACUM=PESO_FSE_HONORARIOS_VN_ANO_N_1_MARCO_ACUM ; } else { var  INEFICIENCIA_FSE_HONORARIOS_ANO_N_MARCO_ACUM=PESO_FSE_HONORARIOS_VN_ANO_N_MARCO_ACUM ; }
    if( PESO_FSE_HONORARIOS_VN_ANO_N_1_ABRIL_ACUM > PESO_FSE_HONORARIOS_VN_ANO_N_ABRIL_ACUM) { var  INEFICIENCIA_FSE_HONORARIOS_ANO_N_ABRIL_ACUM=PESO_FSE_HONORARIOS_VN_ANO_N_1_ABRIL_ACUM ; } else { var  INEFICIENCIA_FSE_HONORARIOS_ANO_N_ABRIL_ACUM=PESO_FSE_HONORARIOS_VN_ANO_N_ABRIL_ACUM ; }
    if( PESO_FSE_HONORARIOS_VN_ANO_N_1_MAIO_ACUM > PESO_FSE_HONORARIOS_VN_ANO_N_MAIO_ACUM) { var  INEFICIENCIA_FSE_HONORARIOS_ANO_N_MAIO_ACUM=PESO_FSE_HONORARIOS_VN_ANO_N_1_MAIO_ACUM ; } else { var  INEFICIENCIA_FSE_HONORARIOS_ANO_N_MAIO_ACUM=PESO_FSE_HONORARIOS_VN_ANO_N_MAIO_ACUM ; }
    if( PESO_FSE_HONORARIOS_VN_ANO_N_1_JUNHO_ACUM > PESO_FSE_HONORARIOS_VN_ANO_N_JUNHO_ACUM) { var  INEFICIENCIA_FSE_HONORARIOS_ANO_N_JUNHO_ACUM=PESO_FSE_HONORARIOS_VN_ANO_N_1_JUNHO_ACUM ; } else { var  INEFICIENCIA_FSE_HONORARIOS_ANO_N_JUNHO_ACUM=PESO_FSE_HONORARIOS_VN_ANO_N_JUNHO_ACUM ; }
    if( PESO_FSE_HONORARIOS_VN_ANO_N_1_JULHO_ACUM > PESO_FSE_HONORARIOS_VN_ANO_N_JULHO_ACUM) { var  INEFICIENCIA_FSE_HONORARIOS_ANO_N_JULHO_ACUM=PESO_FSE_HONORARIOS_VN_ANO_N_1_JULHO_ACUM ; } else { var  INEFICIENCIA_FSE_HONORARIOS_ANO_N_JULHO_ACUM=PESO_FSE_HONORARIOS_VN_ANO_N_JULHO_ACUM ; }
    if( PESO_FSE_HONORARIOS_VN_ANO_N_1_AGOSTO_ACUM > PESO_FSE_HONORARIOS_VN_ANO_N_AGOSTO_ACUM) { var  INEFICIENCIA_FSE_HONORARIOS_ANO_N_AGOSTO_ACUM=PESO_FSE_HONORARIOS_VN_ANO_N_1_AGOSTO_ACUM ; } else { var  INEFICIENCIA_FSE_HONORARIOS_ANO_N_AGOSTO_ACUM=PESO_FSE_HONORARIOS_VN_ANO_N_AGOSTO_ACUM ; }
    if( PESO_FSE_HONORARIOS_VN_ANO_N_1_SETEMBRO_ACUM > PESO_FSE_HONORARIOS_VN_ANO_N_SETEMBRO_ACUM) { var  INEFICIENCIA_FSE_HONORARIOS_ANO_N_SETEMBRO_ACUM=PESO_FSE_HONORARIOS_VN_ANO_N_1_SETEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_HONORARIOS_ANO_N_SETEMBRO_ACUM=PESO_FSE_HONORARIOS_VN_ANO_N_SETEMBRO_ACUM ; }
    if( PESO_FSE_HONORARIOS_VN_ANO_N_1_OUTUBRO_ACUM > PESO_FSE_HONORARIOS_VN_ANO_N_OUTUBRO_ACUM) { var  INEFICIENCIA_FSE_HONORARIOS_ANO_N_OUTUBRO_ACUM=PESO_FSE_HONORARIOS_VN_ANO_N_1_OUTUBRO_ACUM ; } else { var  INEFICIENCIA_FSE_HONORARIOS_ANO_N_OUTUBRO_ACUM=PESO_FSE_HONORARIOS_VN_ANO_N_OUTUBRO_ACUM ; }
    if( PESO_FSE_HONORARIOS_VN_ANO_N_1_NOVEMBRO_ACUM > PESO_FSE_HONORARIOS_VN_ANO_N_NOVEMBRO_ACUM) { var  INEFICIENCIA_FSE_HONORARIOS_ANO_N_NOVEMBRO_ACUM=PESO_FSE_HONORARIOS_VN_ANO_N_1_NOVEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_HONORARIOS_ANO_N_NOVEMBRO_ACUM=PESO_FSE_HONORARIOS_VN_ANO_N_NOVEMBRO_ACUM ; }
    if( PESO_FSE_HONORARIOS_VN_ANO_N_1_DEZEMBRO_ACUM > PESO_FSE_HONORARIOS_VN_ANO_N_DEZEMBRO_ACUM) { var  INEFICIENCIA_FSE_HONORARIOS_ANO_N_DEZEMBRO_ACUM=PESO_FSE_HONORARIOS_VN_ANO_N_1_DEZEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_HONORARIOS_ANO_N_DEZEMBRO_ACUM=PESO_FSE_HONORARIOS_VN_ANO_N_DEZEMBRO_ACUM ; }



    var fillBetweenLinesPlugin = {
        afterDatasetsDraw: function (chart) {
            var ctx = chart.chart.ctx;
            var xaxis = chart.scales['x-axis-0'];
            var yaxis = chart.scales['y-axis-0'];
            var datasets = chart.data.datasets;
            ctx.save();

            for (var d = 0; d < datasets.length; d++) {
                var dataset = datasets[d];
                if (dataset.fillBetweenSet == undefined) {
                    continue;
                }

                // get meta for both data sets
                var meta1 = chart.getDatasetMeta(d);
                var meta2 = chart.getDatasetMeta(dataset.fillBetweenSet);

                // do not draw fill if one of the datasets is hidden
                if (meta1.hidden || meta2.hidden) continue;

                // create fill areas in pairs
                for (var p = 0; p < meta1.data.length-1;p++) {
                    // if null skip
                    if (dataset.data[p] == null || dataset.data[p+1] == null) continue;

                    ctx.beginPath();

                    // trace line 1
                    var curr = meta1.data[p];
                    var next = meta1.data[p+1];
                    ctx.moveTo(curr._view.x, curr._view.y);
                    ctx.lineTo(curr._view.x, curr._view.y);
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(next._view.x, curr._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        ctx.bezierCurveTo(
                          curr._view.controlPointNextX,
                          curr._view.controlPointNextY,
                          next._view.controlPointPreviousX,
                          next._view.controlPointPreviousY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // connect dataset1 to dataset2
                    var curr = meta2.data[p+1];
                    var next = meta2.data[p];
                    ctx.lineTo(curr._view.x, curr._view.y);

                    // trace BACKWORDS set2 to complete the box
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(curr._view.x, next._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        // reverse bezier
                        ctx.bezierCurveTo(
                          curr._view.controlPointPreviousX,
                          curr._view.controlPointPreviousY,
                          next._view.controlPointNextX,
                          next._view.controlPointNextY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // close the loop and fill with shading
                    ctx.closePath();
                    ctx.fillStyle = dataset.fillBetweenColor || "rgba(0,0,0,0.1)";
                    ctx.fill();
                } // end for p loop
            }
        } // end afterDatasetsDraw
    }; // end fillBetweenLinesPlugin

    Chart.pluginService.register(fillBetweenLinesPlugin);



    var GRAFICO_FSE_RESULT_MENSAL_COMP_011=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_011').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_011=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_011, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label:  'Peso HonoráriosvsVN(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   //borderColor: "#F00",
                   fill: false,
                   steppedLine: false,
                   tension: 0.5,
                   fillBetweenSet: 1,
                   fillBetweenColor: "rgba(0, 221, 0, 0.1)",
                   data: [
                   PESO_FSE_HONORARIOS_VN_ANO_N_JANEIRO_ACUM,
                   PESO_FSE_HONORARIOS_VN_ANO_N_FEVEREIRO_ACUM,
                   PESO_FSE_HONORARIOS_VN_ANO_N_MARCO_ACUM,
                   PESO_FSE_HONORARIOS_VN_ANO_N_ABRIL_ACUM,
                   PESO_FSE_HONORARIOS_VN_ANO_N_MAIO_ACUM,
                   PESO_FSE_HONORARIOS_VN_ANO_N_JUNHO_ACUM,
                   PESO_FSE_HONORARIOS_VN_ANO_N_JULHO_ACUM,
                   PESO_FSE_HONORARIOS_VN_ANO_N_AGOSTO_ACUM,
                   PESO_FSE_HONORARIOS_VN_ANO_N_SETEMBRO_ACUM,
                   PESO_FSE_HONORARIOS_VN_ANO_N_OUTUBRO_ACUM,
                   PESO_FSE_HONORARIOS_VN_ANO_N_NOVEMBRO_ACUM,
                   PESO_FSE_HONORARIOS_VN_ANO_N_DEZEMBRO_ACUM,

                   ],
                   type: 'line'


               },
                {
                    label: 'Peso HonoráriosvsVN(ac) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'A',
                    //backgroundColor: 'rgb(17, 121, 240)',
                    borderColor: 'rgb(0,221,0)',
                    //borderColor: "#00F",
                    fill: false,
                    steppedLine: false,
                    tension: 0.5,
                    data: [
                   PESO_FSE_HONORARIOS_VN_ANO_N_1_JANEIRO_ACUM,
                   PESO_FSE_HONORARIOS_VN_ANO_N_1_FEVEREIRO_ACUM,
                   PESO_FSE_HONORARIOS_VN_ANO_N_1_MARCO_ACUM,
                   PESO_FSE_HONORARIOS_VN_ANO_N_1_ABRIL_ACUM,
                   PESO_FSE_HONORARIOS_VN_ANO_N_1_MAIO_ACUM,
                   PESO_FSE_HONORARIOS_VN_ANO_N_1_JUNHO_ACUM,
                   PESO_FSE_HONORARIOS_VN_ANO_N_1_JULHO_ACUM,
                   PESO_FSE_HONORARIOS_VN_ANO_N_1_AGOSTO_ACUM,
                   PESO_FSE_HONORARIOS_VN_ANO_N_1_SETEMBRO_ACUM,
                   PESO_FSE_HONORARIOS_VN_ANO_N_1_OUTUBRO_ACUM,
                   PESO_FSE_HONORARIOS_VN_ANO_N_1_NOVEMBRO_ACUM,
                   PESO_FSE_HONORARIOS_VN_ANO_N_1_DEZEMBRO_ACUM,
                    ],
                    type: 'line'
                },
    {
        label: 'Ineficiência',
        yAxisID: 'A',
        backgroundColor: "rgba(255, 0, 0, 0.2)",
        borderColor: 'rgba(255, 255, 255, 0.1)',
        //borderColor: "#0D0",
        fill: false,
        steppedLine: false,
        tension: 0.5,
        fillBetweenSet: 1,
        fillBetweenColor: "rgba(255, 0, 0, 0.2)",
        data: [
    INEFICIENCIA_FSE_HONORARIOS_ANO_N_JANEIRO_ACUM,
    INEFICIENCIA_FSE_HONORARIOS_ANO_N_FEVEREIRO_ACUM,
    INEFICIENCIA_FSE_HONORARIOS_ANO_N_MARCO_ACUM,
    INEFICIENCIA_FSE_HONORARIOS_ANO_N_ABRIL_ACUM,
    INEFICIENCIA_FSE_HONORARIOS_ANO_N_MAIO_ACUM,
    INEFICIENCIA_FSE_HONORARIOS_ANO_N_JUNHO_ACUM,
    INEFICIENCIA_FSE_HONORARIOS_ANO_N_JULHO_ACUM,
    INEFICIENCIA_FSE_HONORARIOS_ANO_N_AGOSTO_ACUM,
    INEFICIENCIA_FSE_HONORARIOS_ANO_N_SETEMBRO_ACUM,
    INEFICIENCIA_FSE_HONORARIOS_ANO_N_OUTUBRO_ACUM,
    INEFICIENCIA_FSE_HONORARIOS_ANO_N_NOVEMBRO_ACUM,
    INEFICIENCIA_FSE_HONORARIOS_ANO_N_DEZEMBRO_ACUM,
        ],
        type: 'line'
    },

            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_Honorários COMP',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                //min:  Math.round(FSE_HONORARIOS_Mensal_Eixo_min_princ__,0),
                                                //max:  Math.round(FSE_HONORARIOS_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString()+ "%";
                                                }
                                            }
                                        },







                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_012-----------------------------------------------------------*@
<script>

    if(@ViewData["MES_ACUM_REAL"]<1){ var IND_VN_ANO_N_JANEIRO = 'nd'; var IND_VN_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JANEIRO"]))); var IND_VN_ANO_N_JANEIRO_MAX_MIN = IND_VN_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var IND_VN_ANO_N_FEVEREIRO = 'nd'; var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_FEVEREIRO"]))); var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = IND_VN_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var IND_VN_ANO_N_MARCO = 'nd'; var IND_VN_ANO_N_MARCO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MARCO"]))); var IND_VN_ANO_N_MARCO_MAX_MIN = IND_VN_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var IND_VN_ANO_N_ABRIL = 'nd'; var IND_VN_ANO_N_ABRIL_MAX_MIN = 0;  } else { var IND_VN_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_ABRIL"]))); var IND_VN_ANO_N_ABRIL_MAX_MIN = IND_VN_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var IND_VN_ANO_N_MAIO = 'nd'; var IND_VN_ANO_N_MAIO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MAIO"]))); var IND_VN_ANO_N_MAIO_MAX_MIN = IND_VN_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var IND_VN_ANO_N_JUNHO = 'nd'; var IND_VN_ANO_N_JUNHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JUNHO"]))); var IND_VN_ANO_N_JUNHO_MAX_MIN = IND_VN_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var IND_VN_ANO_N_JULHO = 'nd'; var IND_VN_ANO_N_JULHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JULHO"]))); var IND_VN_ANO_N_JULHO_MAX_MIN = IND_VN_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var IND_VN_ANO_N_AGOSTO = 'nd'; var IND_VN_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_AGOSTO"]))); var IND_VN_ANO_N_AGOSTO_MAX_MIN = IND_VN_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var IND_VN_ANO_N_SETEMBRO = 'nd'; var IND_VN_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_SETEMBRO"]))); var IND_VN_ANO_N_SETEMBRO_MAX_MIN = IND_VN_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var IND_VN_ANO_N_OUTUBRO = 'nd'; var IND_VN_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_OUTUBRO"]))); var IND_VN_ANO_N_OUTUBRO_MAX_MIN = IND_VN_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var IND_VN_ANO_N_NOVEMBRO = 'nd'; var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_NOVEMBRO"]))); var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = IND_VN_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var IND_VN_ANO_N_DEZEMBRO = 'nd'; var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_DEZEMBRO"]))); var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = IND_VN_ANO_N_DEZEMBRO };

    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_COMISSOES_ANO_N_JANEIRO = 'nd'; var FSE_COMISSOES_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var FSE_COMISSOES_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_JANEIRO"]))); var FSE_COMISSOES_ANO_N_JANEIRO_MAX_MIN = FSE_COMISSOES_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_COMISSOES_ANO_N_FEVEREIRO = 'nd'; var FSE_COMISSOES_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var FSE_COMISSOES_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_FEVEREIRO"]))); var FSE_COMISSOES_ANO_N_FEVEREIRO_MAX_MIN = FSE_COMISSOES_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_COMISSOES_ANO_N_MARCO = 'nd'; var FSE_COMISSOES_ANO_N_MARCO_MAX_MIN = 0;  } else { var FSE_COMISSOES_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_MARCO"]))); var FSE_COMISSOES_ANO_N_MARCO_MAX_MIN = FSE_COMISSOES_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_COMISSOES_ANO_N_ABRIL = 'nd'; var FSE_COMISSOES_ANO_N_ABRIL_MAX_MIN = 0;  } else { var FSE_COMISSOES_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_ABRIL"]))); var FSE_COMISSOES_ANO_N_ABRIL_MAX_MIN = FSE_COMISSOES_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_COMISSOES_ANO_N_MAIO = 'nd'; var FSE_COMISSOES_ANO_N_MAIO_MAX_MIN = 0;  } else { var FSE_COMISSOES_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_MAIO"]))); var FSE_COMISSOES_ANO_N_MAIO_MAX_MIN = FSE_COMISSOES_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_COMISSOES_ANO_N_JUNHO = 'nd'; var FSE_COMISSOES_ANO_N_JUNHO_MAX_MIN = 0;  } else { var FSE_COMISSOES_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_JUNHO"]))); var FSE_COMISSOES_ANO_N_JUNHO_MAX_MIN = FSE_COMISSOES_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_COMISSOES_ANO_N_JULHO = 'nd'; var FSE_COMISSOES_ANO_N_JULHO_MAX_MIN = 0;  } else { var FSE_COMISSOES_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_JULHO"]))); var FSE_COMISSOES_ANO_N_JULHO_MAX_MIN = FSE_COMISSOES_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_COMISSOES_ANO_N_AGOSTO = 'nd'; var FSE_COMISSOES_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var FSE_COMISSOES_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_AGOSTO"]))); var FSE_COMISSOES_ANO_N_AGOSTO_MAX_MIN = FSE_COMISSOES_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_COMISSOES_ANO_N_SETEMBRO = 'nd'; var FSE_COMISSOES_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var FSE_COMISSOES_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_SETEMBRO"]))); var FSE_COMISSOES_ANO_N_SETEMBRO_MAX_MIN = FSE_COMISSOES_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_COMISSOES_ANO_N_OUTUBRO = 'nd'; var FSE_COMISSOES_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var FSE_COMISSOES_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_OUTUBRO"]))); var FSE_COMISSOES_ANO_N_OUTUBRO_MAX_MIN = FSE_COMISSOES_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_COMISSOES_ANO_N_NOVEMBRO = 'nd'; var FSE_COMISSOES_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var FSE_COMISSOES_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_NOVEMBRO"]))); var FSE_COMISSOES_ANO_N_NOVEMBRO_MAX_MIN = FSE_COMISSOES_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_COMISSOES_ANO_N_DEZEMBRO = 'nd'; var FSE_COMISSOES_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var FSE_COMISSOES_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_DEZEMBRO"]))); var FSE_COMISSOES_ANO_N_DEZEMBRO_MAX_MIN = FSE_COMISSOES_ANO_N_DEZEMBRO };


    var FSE_COMISSOES_ANO_N_JANEIRO_ACUM = FSE_COMISSOES_ANO_N_JANEIRO;
    var FSE_COMISSOES_ANO_N_FEVEREIRO_ACUM = FSE_COMISSOES_ANO_N_FEVEREIRO + FSE_COMISSOES_ANO_N_JANEIRO_ACUM;
    var FSE_COMISSOES_ANO_N_MARCO_ACUM = FSE_COMISSOES_ANO_N_MARCO + FSE_COMISSOES_ANO_N_FEVEREIRO_ACUM;
    var FSE_COMISSOES_ANO_N_ABRIL_ACUM = FSE_COMISSOES_ANO_N_ABRIL + FSE_COMISSOES_ANO_N_MARCO_ACUM;
    var FSE_COMISSOES_ANO_N_MAIO_ACUM = FSE_COMISSOES_ANO_N_MAIO + FSE_COMISSOES_ANO_N_ABRIL_ACUM;
    var FSE_COMISSOES_ANO_N_JUNHO_ACUM = FSE_COMISSOES_ANO_N_JUNHO + FSE_COMISSOES_ANO_N_MAIO_ACUM;
    var FSE_COMISSOES_ANO_N_JULHO_ACUM = FSE_COMISSOES_ANO_N_JULHO + FSE_COMISSOES_ANO_N_JUNHO_ACUM;
    var FSE_COMISSOES_ANO_N_AGOSTO_ACUM = FSE_COMISSOES_ANO_N_AGOSTO + FSE_COMISSOES_ANO_N_JULHO_ACUM;
    var FSE_COMISSOES_ANO_N_SETEMBRO_ACUM = FSE_COMISSOES_ANO_N_SETEMBRO + FSE_COMISSOES_ANO_N_AGOSTO_ACUM;
    var FSE_COMISSOES_ANO_N_OUTUBRO_ACUM = FSE_COMISSOES_ANO_N_OUTUBRO + FSE_COMISSOES_ANO_N_SETEMBRO_ACUM;
    var FSE_COMISSOES_ANO_N_NOVEMBRO_ACUM = FSE_COMISSOES_ANO_N_NOVEMBRO + FSE_COMISSOES_ANO_N_OUTUBRO_ACUM;
    var FSE_COMISSOES_ANO_N_DEZEMBRO_ACUM = FSE_COMISSOES_ANO_N_DEZEMBRO + FSE_COMISSOES_ANO_N_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_COMISSOES_ANO_N_JANEIRO_ACUM = 'nd'; var FSE_COMISSOES_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var FSE_COMISSOES_ANO_N_JANEIRO_ACUM= FSE_COMISSOES_ANO_N_JANEIRO_ACUM; var FSE_COMISSOES_ANO_N_JANEIRO_ACUM_MAX_MIN = FSE_COMISSOES_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_COMISSOES_ANO_N_FEVEREIRO_ACUM = 'nd'; var FSE_COMISSOES_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var FSE_COMISSOES_ANO_N_FEVEREIRO_ACUM= FSE_COMISSOES_ANO_N_FEVEREIRO_ACUM; var FSE_COMISSOES_ANO_N_FEVEREIRO_ACUM_MAX_MIN = FSE_COMISSOES_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_COMISSOES_ANO_N_MARCO_ACUM = 'nd'; var FSE_COMISSOES_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var FSE_COMISSOES_ANO_N_MARCO_ACUM= FSE_COMISSOES_ANO_N_MARCO_ACUM; var FSE_COMISSOES_ANO_N_MARCO_ACUM_MAX_MIN = FSE_COMISSOES_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_COMISSOES_ANO_N_ABRIL_ACUM = 'nd'; var FSE_COMISSOES_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var FSE_COMISSOES_ANO_N_ABRIL_ACUM= FSE_COMISSOES_ANO_N_ABRIL_ACUM; var FSE_COMISSOES_ANO_N_ABRIL_ACUM_MAX_MIN = FSE_COMISSOES_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_COMISSOES_ANO_N_MAIO_ACUM = 'nd'; var FSE_COMISSOES_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var FSE_COMISSOES_ANO_N_MAIO_ACUM= FSE_COMISSOES_ANO_N_MAIO_ACUM; var FSE_COMISSOES_ANO_N_MAIO_ACUM_MAX_MIN = FSE_COMISSOES_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_COMISSOES_ANO_N_JUNHO_ACUM = 'nd'; var FSE_COMISSOES_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var FSE_COMISSOES_ANO_N_JUNHO_ACUM= FSE_COMISSOES_ANO_N_JUNHO_ACUM; var FSE_COMISSOES_ANO_N_JUNHO_ACUM_MAX_MIN = FSE_COMISSOES_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_COMISSOES_ANO_N_JULHO_ACUM = 'nd'; var FSE_COMISSOES_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var FSE_COMISSOES_ANO_N_JULHO_ACUM= FSE_COMISSOES_ANO_N_JULHO_ACUM; var FSE_COMISSOES_ANO_N_JULHO_ACUM_MAX_MIN = FSE_COMISSOES_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_COMISSOES_ANO_N_AGOSTO_ACUM = 'nd'; var FSE_COMISSOES_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var FSE_COMISSOES_ANO_N_AGOSTO_ACUM= FSE_COMISSOES_ANO_N_AGOSTO_ACUM; var FSE_COMISSOES_ANO_N_AGOSTO_ACUM_MAX_MIN = FSE_COMISSOES_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_COMISSOES_ANO_N_SETEMBRO_ACUM = 'nd'; var FSE_COMISSOES_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_COMISSOES_ANO_N_SETEMBRO_ACUM= FSE_COMISSOES_ANO_N_SETEMBRO_ACUM; var FSE_COMISSOES_ANO_N_SETEMBRO_ACUM_MAX_MIN = FSE_COMISSOES_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_COMISSOES_ANO_N_OUTUBRO_ACUM = 'nd'; var FSE_COMISSOES_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var FSE_COMISSOES_ANO_N_OUTUBRO_ACUM= FSE_COMISSOES_ANO_N_OUTUBRO_ACUM; var FSE_COMISSOES_ANO_N_OUTUBRO_ACUM_MAX_MIN = FSE_COMISSOES_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_COMISSOES_ANO_N_NOVEMBRO_ACUM = 'nd'; var FSE_COMISSOES_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_COMISSOES_ANO_N_NOVEMBRO_ACUM= FSE_COMISSOES_ANO_N_NOVEMBRO_ACUM; var FSE_COMISSOES_ANO_N_NOVEMBRO_ACUM_MAX_MIN = FSE_COMISSOES_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_COMISSOES_ANO_N_DEZEMBRO_ACUM = 'nd'; var FSE_COMISSOES_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_COMISSOES_ANO_N_DEZEMBRO_ACUM= FSE_COMISSOES_ANO_N_DEZEMBRO_ACUM; var FSE_COMISSOES_ANO_N_DEZEMBRO_ACUM_MAX_MIN = FSE_COMISSOES_ANO_N_DEZEMBRO_ACUM };




    var FSE_COMISSOES_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_JANEIRO"])));
    var FSE_COMISSOES_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_FEVEREIRO"]))) + FSE_COMISSOES_ANO_N_1_JANEIRO_ACUM;
    var FSE_COMISSOES_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_MARCO"]))) + FSE_COMISSOES_ANO_N_1_FEVEREIRO_ACUM;
    var FSE_COMISSOES_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_ABRIL"]))) + FSE_COMISSOES_ANO_N_1_MARCO_ACUM;
    var FSE_COMISSOES_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_MAIO"]))) + FSE_COMISSOES_ANO_N_1_ABRIL_ACUM;
    var FSE_COMISSOES_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_JUNHO"]))) + FSE_COMISSOES_ANO_N_1_MAIO_ACUM;
    var FSE_COMISSOES_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_JULHO"]))) + FSE_COMISSOES_ANO_N_1_JUNHO_ACUM;
    var FSE_COMISSOES_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_AGOSTO"]))) + FSE_COMISSOES_ANO_N_1_JULHO_ACUM;
    var FSE_COMISSOES_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_SETEMBRO"]))) + FSE_COMISSOES_ANO_N_1_AGOSTO_ACUM;
    var FSE_COMISSOES_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_OUTUBRO"]))) + FSE_COMISSOES_ANO_N_1_SETEMBRO_ACUM;
    var FSE_COMISSOES_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_NOVEMBRO"]))) + FSE_COMISSOES_ANO_N_1_OUTUBRO_ACUM;
    var FSE_COMISSOES_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_DEZEMBRO"]))) + FSE_COMISSOES_ANO_N_1_NOVEMBRO_ACUM;


    var FSE_COMISSOES_Mensal_Eixo_max_princ= Math.max(
                       FSE_COMISSOES_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_COMISSOES_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_COMISSOES_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_COMISSOES_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_COMISSOES_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_COMISSOES_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_COMISSOES_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_COMISSOES_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_COMISSOES_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_COMISSOES_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_COMISSOES_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_COMISSOES_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_COMISSOES_ANO_N_1_JANEIRO_ACUM,
                       FSE_COMISSOES_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_COMISSOES_ANO_N_1_MARCO_ACUM,
                       FSE_COMISSOES_ANO_N_1_ABRIL_ACUM,
                       FSE_COMISSOES_ANO_N_1_MAIO_ACUM,
                       FSE_COMISSOES_ANO_N_1_JUNHO_ACUM,
                       FSE_COMISSOES_ANO_N_1_JULHO_ACUM,
                       FSE_COMISSOES_ANO_N_1_AGOSTO_ACUM,
                       FSE_COMISSOES_ANO_N_1_SETEMBRO_ACUM,
                       FSE_COMISSOES_ANO_N_1_OUTUBRO_ACUM,
                       FSE_COMISSOES_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_COMISSOES_ANO_N_1_DEZEMBRO_ACUM
                             );
    var FSE_COMISSOES_Mensal_Eixo_min_princ= Math.min(

                       FSE_COMISSOES_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_COMISSOES_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_COMISSOES_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_COMISSOES_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_COMISSOES_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_COMISSOES_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_COMISSOES_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_COMISSOES_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_COMISSOES_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_COMISSOES_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_COMISSOES_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_COMISSOES_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_COMISSOES_ANO_N_1_JANEIRO_ACUM,
                       FSE_COMISSOES_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_COMISSOES_ANO_N_1_MARCO_ACUM,
                       FSE_COMISSOES_ANO_N_1_ABRIL_ACUM,
                       FSE_COMISSOES_ANO_N_1_MAIO_ACUM,
                       FSE_COMISSOES_ANO_N_1_JUNHO_ACUM,
                       FSE_COMISSOES_ANO_N_1_JULHO_ACUM,
                       FSE_COMISSOES_ANO_N_1_AGOSTO_ACUM,
                       FSE_COMISSOES_ANO_N_1_SETEMBRO_ACUM,
                       FSE_COMISSOES_ANO_N_1_OUTUBRO_ACUM,
                       FSE_COMISSOES_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_COMISSOES_ANO_N_1_DEZEMBRO_ACUM
                           );
    var FSE_COMISSOES_Mensal_Eixo_max_secon= Math.max(
                       FSE_COMISSOES_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_COMISSOES_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_COMISSOES_ANO_N_MARCO_MAX_MIN ,
                       FSE_COMISSOES_ANO_N_ABRIL_MAX_MIN ,
                       FSE_COMISSOES_ANO_N_MAIO_MAX_MIN ,
                       FSE_COMISSOES_ANO_N_JUNHO_MAX_MIN ,
                       FSE_COMISSOES_ANO_N_JULHO_MAX_MIN ,
                       FSE_COMISSOES_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_COMISSOES_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_COMISSOES_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_COMISSOES_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_COMISSOES_ANO_N_DEZEMBRO_MAX_MIN ,



                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_DEZEMBRO"])))

                            );
    var FSE_COMISSOES_Mensal_Eixo_min_secon= Math.min(
                       FSE_COMISSOES_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_COMISSOES_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_COMISSOES_ANO_N_MARCO_MAX_MIN ,
                       FSE_COMISSOES_ANO_N_ABRIL_MAX_MIN ,
                       FSE_COMISSOES_ANO_N_MAIO_MAX_MIN ,
                       FSE_COMISSOES_ANO_N_JUNHO_MAX_MIN ,
                       FSE_COMISSOES_ANO_N_JULHO_MAX_MIN ,
                       FSE_COMISSOES_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_COMISSOES_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_COMISSOES_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_COMISSOES_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_COMISSOES_ANO_N_DEZEMBRO_MAX_MIN ,


                           @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_DEZEMBRO"])))

                          );

    //NOTA TA: Aqui trato o minimo e o maximo do eixo principal
    if(Math.abs(FSE_COMISSOES_Mensal_Eixo_max_princ)>=Math.abs(FSE_COMISSOES_Mensal_Eixo_min_princ))
    {
        var FSE_COMISSOES_Mensal_Eixo_max_princ_=(Math.ceil(FSE_COMISSOES_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_COMISSOES_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_COMISSOES_Mensal_Eixo_max_princ),0).toString().length-1);
        var FSE_COMISSOES_Mensal_Eixo_min_princ_= (Math.floor(FSE_COMISSOES_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_COMISSOES_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_COMISSOES_Mensal_Eixo_max_princ),0).toString().length-1);
        //alert(FSE_COMISSOES_Mensal_Eixo_max_princ_);
        //alert(FSE_COMISSOES_Mensal_Eixo_min_princ_);
    }
    else
    {
        var FSE_COMISSOES_Mensal_Eixo_max_princ_=(Math.ceil(FSE_COMISSOES_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_COMISSOES_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_COMISSOES_Mensal_Eixo_min_princ),0).toString().length-1);
        var FSE_COMISSOES_Mensal_Eixo_min_princ_= (Math.floor(FSE_COMISSOES_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_COMISSOES_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_COMISSOES_Mensal_Eixo_min_princ),0).toString().length-1);}

    //NOTA TA: Aqui trato o minimo e o maximo do eixo secundario

    if(Math.abs(FSE_COMISSOES_Mensal_Eixo_max_secon)>=Math.abs(FSE_COMISSOES_Mensal_Eixo_min_secon))
    {
        var FSE_COMISSOES_Mensal_Eixo_max_secon_=(Math.ceil(FSE_COMISSOES_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_COMISSOES_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_COMISSOES_Mensal_Eixo_max_secon),0).toString().length-1);
        var FSE_COMISSOES_Mensal_Eixo_min_secon_= (Math.floor(FSE_COMISSOES_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_COMISSOES_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_COMISSOES_Mensal_Eixo_max_secon),0).toString().length-1);
        //alert(FSE_COMISSOES_Mensal_Eixo_max_secon_);
        //alert(FSE_COMISSOES_Mensal_Eixo_min_secon_);
    }
    else
    {
        var FSE_COMISSOES_Mensal_Eixo_max_secon_=(Math.ceil(FSE_COMISSOES_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_COMISSOES_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_COMISSOES_Mensal_Eixo_min_secon),0).toString().length-1);
        var FSE_COMISSOES_Mensal_Eixo_min_secon_= (Math.floor(FSE_COMISSOES_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_COMISSOES_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_COMISSOES_Mensal_Eixo_min_secon),0).toString().length-1);}


    if(Math.abs(FSE_COMISSOES_Mensal_Eixo_min_princ)/Math.abs(FSE_COMISSOES_Mensal_Eixo_max_princ)>=Math.abs(FSE_COMISSOES_Mensal_Eixo_min_secon)/Math.abs(FSE_COMISSOES_Mensal_Eixo_max_secon))
    { if(FSE_COMISSOES_Mensal_Eixo_max_princ > 0 && FSE_COMISSOES_Mensal_Eixo_min_princ <0 ){ var FSE_COMISSOES_Mensal_Eixo_min_secon__=(FSE_COMISSOES_Mensal_Eixo_min_princ_*FSE_COMISSOES_Mensal_Eixo_max_secon_)/FSE_COMISSOES_Mensal_Eixo_max_princ_;} else { var FSE_COMISSOES_Mensal_Eixo_min_secon__=FSE_COMISSOES_Mensal_Eixo_min_secon_;}
        if(FSE_COMISSOES_Mensal_Eixo_max_secon > 0 && FSE_COMISSOES_Mensal_Eixo_min_secon <0 ){ var FSE_COMISSOES_Mensal_Eixo_min_princ__=(FSE_COMISSOES_Mensal_Eixo_min_secon__*FSE_COMISSOES_Mensal_Eixo_max_princ_)/FSE_COMISSOES_Mensal_Eixo_max_secon_;} else { var FSE_COMISSOES_Mensal_Eixo_min_princ__=FSE_COMISSOES_Mensal_Eixo_min_princ_;}}
    else
    {if(FSE_COMISSOES_Mensal_Eixo_max_secon > 0 && FSE_COMISSOES_Mensal_Eixo_min_secon <0 ){ var FSE_COMISSOES_Mensal_Eixo_min_princ__=(FSE_COMISSOES_Mensal_Eixo_min_secon_*FSE_COMISSOES_Mensal_Eixo_max_princ_)/FSE_COMISSOES_Mensal_Eixo_max_secon_;} else { var FSE_COMISSOES_Mensal_Eixo_min_princ__=FSE_COMISSOES_Mensal_Eixo_min_princ_;}
        if(FSE_COMISSOES_Mensal_Eixo_max_princ > 0 && FSE_COMISSOES_Mensal_Eixo_min_princ <0 ){ var FSE_COMISSOES_Mensal_Eixo_min_secon__=(FSE_COMISSOES_Mensal_Eixo_min_princ__*FSE_COMISSOES_Mensal_Eixo_max_secon_)/FSE_COMISSOES_Mensal_Eixo_max_princ_;} else { var FSE_COMISSOES_Mensal_Eixo_min_secon__=FSE_COMISSOES_Mensal_Eixo_min_secon_;}
    }



    if(Math.abs(FSE_COMISSOES_Mensal_Eixo_max_princ)/Math.abs(FSE_COMISSOES_Mensal_Eixo_min_princ)>=Math.abs(FSE_COMISSOES_Mensal_Eixo_max_secon)/Math.abs(FSE_COMISSOES_Mensal_Eixo_min_secon))
    { if(FSE_COMISSOES_Mensal_Eixo_min_princ > 0 && FSE_COMISSOES_Mensal_Eixo_max_princ <0 ){ var FSE_COMISSOES_Mensal_Eixo_max_secon__=(FSE_COMISSOES_Mensal_Eixo_max_princ_*FSE_COMISSOES_Mensal_Eixo_min_secon_)/FSE_COMISSOES_Mensal_Eixo_min_princ_;} else { var FSE_COMISSOES_Mensal_Eixo_max_secon__=FSE_COMISSOES_Mensal_Eixo_max_secon_;}
        if(FSE_COMISSOES_Mensal_Eixo_min_secon > 0 && FSE_COMISSOES_Mensal_Eixo_max_secon <0 ){ var FSE_COMISSOES_Mensal_Eixo_max_princ__=(FSE_COMISSOES_Mensal_Eixo_max_secon__*FSE_COMISSOES_Mensal_Eixo_min_princ_)/FSE_COMISSOES_Mensal_Eixo_min_secon_;} else { var FSE_COMISSOES_Mensal_Eixo_max_princ__=FSE_COMISSOES_Mensal_Eixo_max_princ_;}}
    else
    {if(FSE_COMISSOES_Mensal_Eixo_min_secon > 0 && FSE_COMISSOES_Mensal_Eixo_max_secon <0 ){ var FSE_COMISSOES_Mensal_Eixo_max_princ__=(FSE_COMISSOES_Mensal_Eixo_max_secon_*FSE_COMISSOES_Mensal_Eixo_min_princ_)/FSE_COMISSOES_Mensal_Eixo_min_secon_;} else { var FSE_COMISSOES_Mensal_Eixo_max_princ__=FSE_COMISSOES_Mensal_Eixo_max_princ_;}
        if(FSE_COMISSOES_Mensal_Eixo_min_princ > 0 && FSE_COMISSOES_Mensal_Eixo_max_princ <0 ){ var FSE_COMISSOES_Mensal_Eixo_max_secon__=(FSE_COMISSOES_Mensal_Eixo_max_princ__*FSE_COMISSOES_Mensal_Eixo_min_secon_)/FSE_COMISSOES_Mensal_Eixo_min_princ_;} else { var FSE_COMISSOES_Mensal_Eixo_max_secon__=FSE_COMISSOES_Mensal_Eixo_max_secon_;}
    }



    var GRAFICO_FSE_RESULT_MENSAL_COMP_012=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_012').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_012=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_012, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label: 'Comissões(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   data: [
                       FSE_COMISSOES_ANO_N_JANEIRO_ACUM,
                       FSE_COMISSOES_ANO_N_FEVEREIRO_ACUM,
                       FSE_COMISSOES_ANO_N_MARCO_ACUM,
                       FSE_COMISSOES_ANO_N_ABRIL_ACUM,
                       FSE_COMISSOES_ANO_N_MAIO_ACUM,
                       FSE_COMISSOES_ANO_N_JUNHO_ACUM,
                       FSE_COMISSOES_ANO_N_JULHO_ACUM,
                       FSE_COMISSOES_ANO_N_AGOSTO_ACUM,
                       FSE_COMISSOES_ANO_N_SETEMBRO_ACUM,
                       FSE_COMISSOES_ANO_N_OUTUBRO_ACUM,
                       FSE_COMISSOES_ANO_N_NOVEMBRO_ACUM,
                       FSE_COMISSOES_ANO_N_DEZEMBRO_ACUM,
                   ],
                   type: 'line'


               },
                              {
                                  label: 'Comissões(ac) ' + ANO_VERSAO_ANTE_,
                                  yAxisID: 'A',
                                  //backgroundColor: 'rgb(201, 10, 10)',
                                  borderColor: 'rgb(0,221,0)',
                                  data: [
                       FSE_COMISSOES_ANO_N_1_JANEIRO_ACUM,
                       FSE_COMISSOES_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_COMISSOES_ANO_N_1_MARCO_ACUM,
                       FSE_COMISSOES_ANO_N_1_ABRIL_ACUM,
                       FSE_COMISSOES_ANO_N_1_MAIO_ACUM,
                       FSE_COMISSOES_ANO_N_1_JUNHO_ACUM,
                       FSE_COMISSOES_ANO_N_1_JULHO_ACUM,
                       FSE_COMISSOES_ANO_N_1_AGOSTO_ACUM,
                       FSE_COMISSOES_ANO_N_1_SETEMBRO_ACUM,
                       FSE_COMISSOES_ANO_N_1_OUTUBRO_ACUM,
                       FSE_COMISSOES_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_COMISSOES_ANO_N_1_DEZEMBRO_ACUM,
                                  ],
                                  type: 'line'


                              },
                {
                    label:  'Comissões(m) ' + ANO_VERSAO_REAL_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(250 , 83 , 0, 0.5)',
                    borderColor: 'rgba(250 , 83 , 0, 0.5)',
                    data: [
                  FSE_COMISSOES_ANO_N_JANEIRO ,
                  FSE_COMISSOES_ANO_N_FEVEREIRO ,
                  FSE_COMISSOES_ANO_N_MARCO ,
                  FSE_COMISSOES_ANO_N_ABRIL,
                  FSE_COMISSOES_ANO_N_MAIO ,
                  FSE_COMISSOES_ANO_N_JUNHO ,
                  FSE_COMISSOES_ANO_N_JULHO ,
                  FSE_COMISSOES_ANO_N_AGOSTO ,
                  FSE_COMISSOES_ANO_N_SETEMBRO ,
                  FSE_COMISSOES_ANO_N_OUTUBRO ,
                  FSE_COMISSOES_ANO_N_NOVEMBRO ,
                  FSE_COMISSOES_ANO_N_DEZEMBRO ,
                    ],
                },
                {
                    label:  'Comissões(m) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(0,221,0, 0.4)',
                    borderColor: 'rgba(0,221,0, 0.4)',
                    data: [
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_JANEIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_FEVEREIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_MARCO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_ABRIL"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_MAIO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_JUNHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_JULHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_AGOSTO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_SETEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_OUTUBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_NOVEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_COMISSOES_ANO_N_1_DEZEMBRO"]))),
                    ],
                },


            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_COMISSOES_MENSAL_1',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                min:  Math.round(FSE_COMISSOES_Mensal_Eixo_min_princ__,0),
                                                max:  Math.round(FSE_COMISSOES_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString();
                                                }
                                            }
                                        },

                    { id: 'B',
                        type: 'linear',
                        position: 'right',
                        ticks: {
                            min: Math.round(FSE_COMISSOES_Mensal_Eixo_min_secon__,0),
                            max:  Math.round(FSE_COMISSOES_Mensal_Eixo_max_secon__,0),
                            beginAtZero: false,
                            callback: function(value, index, values) {
                                return value.toLocaleString();
                            }
                        }
                    },






                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_013-----------------------------------------------------------*@
<script>

    var IND_VN_ANO_N_JANEIRO_ACUM = IND_VN_ANO_N_JANEIRO;
    var IND_VN_ANO_N_FEVEREIRO_ACUM = IND_VN_ANO_N_FEVEREIRO + IND_VN_ANO_N_JANEIRO_ACUM;
    var IND_VN_ANO_N_MARCO_ACUM = IND_VN_ANO_N_MARCO + IND_VN_ANO_N_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_ABRIL_ACUM = IND_VN_ANO_N_ABRIL + IND_VN_ANO_N_MARCO_ACUM;
    var IND_VN_ANO_N_MAIO_ACUM = IND_VN_ANO_N_MAIO + IND_VN_ANO_N_ABRIL_ACUM;
    var IND_VN_ANO_N_JUNHO_ACUM = IND_VN_ANO_N_JUNHO + IND_VN_ANO_N_MAIO_ACUM;
    var IND_VN_ANO_N_JULHO_ACUM = IND_VN_ANO_N_JULHO + IND_VN_ANO_N_JUNHO_ACUM;
    var IND_VN_ANO_N_AGOSTO_ACUM = IND_VN_ANO_N_AGOSTO + IND_VN_ANO_N_JULHO_ACUM;
    var IND_VN_ANO_N_SETEMBRO_ACUM = IND_VN_ANO_N_SETEMBRO + IND_VN_ANO_N_AGOSTO_ACUM;
    var IND_VN_ANO_N_OUTUBRO_ACUM = IND_VN_ANO_N_OUTUBRO + IND_VN_ANO_N_SETEMBRO_ACUM;
    var IND_VN_ANO_N_NOVEMBRO_ACUM = IND_VN_ANO_N_NOVEMBRO + IND_VN_ANO_N_OUTUBRO_ACUM;
    var IND_VN_ANO_N_DEZEMBRO_ACUM = IND_VN_ANO_N_DEZEMBRO + IND_VN_ANO_N_NOVEMBRO_ACUM;



    var IND_VN_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JANEIRO"])));
    var IND_VN_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_FEVEREIRO"]))) + IND_VN_ANO_N_1_JANEIRO_ACUM;
    var IND_VN_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MARCO"]))) + IND_VN_ANO_N_1_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_ABRIL"]))) + IND_VN_ANO_N_1_MARCO_ACUM;
    var IND_VN_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MAIO"]))) + IND_VN_ANO_N_1_ABRIL_ACUM;
    var IND_VN_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JUNHO"]))) + IND_VN_ANO_N_1_MAIO_ACUM;
    var IND_VN_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JULHO"]))) + IND_VN_ANO_N_1_JUNHO_ACUM;
    var IND_VN_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_AGOSTO"]))) + IND_VN_ANO_N_1_JULHO_ACUM;
    var IND_VN_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_SETEMBRO"]))) + IND_VN_ANO_N_1_AGOSTO_ACUM;
    var IND_VN_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_OUTUBRO"]))) + IND_VN_ANO_N_1_SETEMBRO_ACUM;
    var IND_VN_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_NOVEMBRO"]))) + IND_VN_ANO_N_1_OUTUBRO_ACUM;
    var IND_VN_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_DEZEMBRO"]))) + IND_VN_ANO_N_1_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_COMISSOES_VN_ANO_N_JANEIRO_ACUM = 'nd'; var PESO_FSE_COMISSOES_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMISSOES_VN_ANO_N_JANEIRO_ACUM= FSE_COMISSOES_ANO_N_JANEIRO_ACUM/IND_VN_ANO_N_JANEIRO_ACUM*100; var PESO_FSE_COMISSOES_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = PESO_FSE_COMISSOES_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_COMISSOES_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_COMISSOES_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMISSOES_VN_ANO_N_FEVEREIRO_ACUM= FSE_COMISSOES_ANO_N_FEVEREIRO_ACUM/IND_VN_ANO_N_FEVEREIRO_ACUM*100; var PESO_FSE_COMISSOES_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_COMISSOES_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_COMISSOES_VN_ANO_N_MARCO_ACUM = 'nd'; var PESO_FSE_COMISSOES_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMISSOES_VN_ANO_N_MARCO_ACUM= FSE_COMISSOES_ANO_N_MARCO_ACUM/IND_VN_ANO_N_MARCO_ACUM*100; var PESO_FSE_COMISSOES_VN_ANO_N_MARCO_ACUM_MAX_MIN = PESO_FSE_COMISSOES_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_COMISSOES_VN_ANO_N_ABRIL_ACUM = 'nd'; var PESO_FSE_COMISSOES_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMISSOES_VN_ANO_N_ABRIL_ACUM= FSE_COMISSOES_ANO_N_ABRIL_ACUM/IND_VN_ANO_N_ABRIL_ACUM*100; var PESO_FSE_COMISSOES_VN_ANO_N_ABRIL_ACUM_MAX_MIN = PESO_FSE_COMISSOES_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_COMISSOES_VN_ANO_N_MAIO_ACUM = 'nd'; var PESO_FSE_COMISSOES_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMISSOES_VN_ANO_N_MAIO_ACUM= FSE_COMISSOES_ANO_N_MAIO_ACUM/IND_VN_ANO_N_MAIO_ACUM*100; var PESO_FSE_COMISSOES_VN_ANO_N_MAIO_ACUM_MAX_MIN = PESO_FSE_COMISSOES_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_COMISSOES_VN_ANO_N_JUNHO_ACUM = 'nd'; var PESO_FSE_COMISSOES_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMISSOES_VN_ANO_N_JUNHO_ACUM= FSE_COMISSOES_ANO_N_JUNHO_ACUM/IND_VN_ANO_N_JUNHO_ACUM*100; var PESO_FSE_COMISSOES_VN_ANO_N_JUNHO_ACUM_MAX_MIN = PESO_FSE_COMISSOES_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_COMISSOES_VN_ANO_N_JULHO_ACUM = 'nd'; var PESO_FSE_COMISSOES_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMISSOES_VN_ANO_N_JULHO_ACUM= FSE_COMISSOES_ANO_N_JULHO_ACUM/IND_VN_ANO_N_JULHO_ACUM*100; var PESO_FSE_COMISSOES_VN_ANO_N_JULHO_ACUM_MAX_MIN = PESO_FSE_COMISSOES_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_COMISSOES_VN_ANO_N_AGOSTO_ACUM = 'nd'; var PESO_FSE_COMISSOES_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMISSOES_VN_ANO_N_AGOSTO_ACUM= FSE_COMISSOES_ANO_N_AGOSTO_ACUM/IND_VN_ANO_N_AGOSTO_ACUM*100; var PESO_FSE_COMISSOES_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = PESO_FSE_COMISSOES_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_COMISSOES_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var PESO_FSE_COMISSOES_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMISSOES_VN_ANO_N_SETEMBRO_ACUM= FSE_COMISSOES_ANO_N_SETEMBRO_ACUM/IND_VN_ANO_N_SETEMBRO_ACUM*100; var PESO_FSE_COMISSOES_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_COMISSOES_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_COMISSOES_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var PESO_FSE_COMISSOES_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMISSOES_VN_ANO_N_OUTUBRO_ACUM= FSE_COMISSOES_ANO_N_OUTUBRO_ACUM/IND_VN_ANO_N_OUTUBRO_ACUM*100; var PESO_FSE_COMISSOES_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_COMISSOES_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_COMISSOES_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_COMISSOES_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMISSOES_VN_ANO_N_NOVEMBRO_ACUM= FSE_COMISSOES_ANO_N_NOVEMBRO_ACUM/IND_VN_ANO_N_NOVEMBRO_ACUM*100; var PESO_FSE_COMISSOES_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_COMISSOES_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_COMISSOES_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_COMISSOES_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMISSOES_VN_ANO_N_DEZEMBRO_ACUM= FSE_COMISSOES_ANO_N_DEZEMBRO_ACUM/IND_VN_ANO_N_DEZEMBRO_ACUM*100; var PESO_FSE_COMISSOES_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_COMISSOES_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_COMISSOES_VN_ANO_N_1_JANEIRO_ACUM = 'nd'; var PESO_FSE_COMISSOES_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMISSOES_VN_ANO_N_1_JANEIRO_ACUM= FSE_COMISSOES_ANO_N_1_JANEIRO_ACUM/IND_VN_ANO_N_1_JANEIRO_ACUM*100; var PESO_FSE_COMISSOES_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = PESO_FSE_COMISSOES_VN_ANO_N_1_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_COMISSOES_VN_ANO_N_1_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_COMISSOES_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMISSOES_VN_ANO_N_1_FEVEREIRO_ACUM= FSE_COMISSOES_ANO_N_1_FEVEREIRO_ACUM/IND_VN_ANO_N_1_FEVEREIRO_ACUM*100; var PESO_FSE_COMISSOES_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_COMISSOES_VN_ANO_N_1_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_COMISSOES_VN_ANO_N_1_MARCO_ACUM = 'nd'; var PESO_FSE_COMISSOES_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMISSOES_VN_ANO_N_1_MARCO_ACUM= FSE_COMISSOES_ANO_N_1_MARCO_ACUM/IND_VN_ANO_N_1_MARCO_ACUM*100; var PESO_FSE_COMISSOES_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = PESO_FSE_COMISSOES_VN_ANO_N_1_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_COMISSOES_VN_ANO_N_1_ABRIL_ACUM = 'nd'; var PESO_FSE_COMISSOES_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMISSOES_VN_ANO_N_1_ABRIL_ACUM= FSE_COMISSOES_ANO_N_1_ABRIL_ACUM/IND_VN_ANO_N_1_ABRIL_ACUM*100; var PESO_FSE_COMISSOES_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = PESO_FSE_COMISSOES_VN_ANO_N_1_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_COMISSOES_VN_ANO_N_1_MAIO_ACUM = 'nd'; var PESO_FSE_COMISSOES_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMISSOES_VN_ANO_N_1_MAIO_ACUM= FSE_COMISSOES_ANO_N_1_MAIO_ACUM/IND_VN_ANO_N_1_MAIO_ACUM*100; var PESO_FSE_COMISSOES_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = PESO_FSE_COMISSOES_VN_ANO_N_1_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_COMISSOES_VN_ANO_N_1_JUNHO_ACUM = 'nd'; var PESO_FSE_COMISSOES_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMISSOES_VN_ANO_N_1_JUNHO_ACUM= FSE_COMISSOES_ANO_N_1_JUNHO_ACUM/IND_VN_ANO_N_1_JUNHO_ACUM*100; var PESO_FSE_COMISSOES_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = PESO_FSE_COMISSOES_VN_ANO_N_1_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_COMISSOES_VN_ANO_N_1_JULHO_ACUM = 'nd'; var PESO_FSE_COMISSOES_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMISSOES_VN_ANO_N_1_JULHO_ACUM= FSE_COMISSOES_ANO_N_1_JULHO_ACUM/IND_VN_ANO_N_1_JULHO_ACUM*100; var PESO_FSE_COMISSOES_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = PESO_FSE_COMISSOES_VN_ANO_N_1_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_COMISSOES_VN_ANO_N_1_AGOSTO_ACUM = 'nd'; var PESO_FSE_COMISSOES_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMISSOES_VN_ANO_N_1_AGOSTO_ACUM= FSE_COMISSOES_ANO_N_1_AGOSTO_ACUM/IND_VN_ANO_N_1_AGOSTO_ACUM*100; var PESO_FSE_COMISSOES_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = PESO_FSE_COMISSOES_VN_ANO_N_1_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_COMISSOES_VN_ANO_N_1_SETEMBRO_ACUM = 'nd'; var PESO_FSE_COMISSOES_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMISSOES_VN_ANO_N_1_SETEMBRO_ACUM= FSE_COMISSOES_ANO_N_1_SETEMBRO_ACUM/IND_VN_ANO_N_1_SETEMBRO_ACUM*100; var PESO_FSE_COMISSOES_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_COMISSOES_VN_ANO_N_1_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_COMISSOES_VN_ANO_N_1_OUTUBRO_ACUM = 'nd'; var PESO_FSE_COMISSOES_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMISSOES_VN_ANO_N_1_OUTUBRO_ACUM= FSE_COMISSOES_ANO_N_1_OUTUBRO_ACUM/IND_VN_ANO_N_1_OUTUBRO_ACUM*100; var PESO_FSE_COMISSOES_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_COMISSOES_VN_ANO_N_1_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_COMISSOES_VN_ANO_N_1_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_COMISSOES_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMISSOES_VN_ANO_N_1_NOVEMBRO_ACUM= FSE_COMISSOES_ANO_N_1_NOVEMBRO_ACUM/IND_VN_ANO_N_1_NOVEMBRO_ACUM*100; var PESO_FSE_COMISSOES_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_COMISSOES_VN_ANO_N_1_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_COMISSOES_VN_ANO_N_1_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_COMISSOES_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_COMISSOES_VN_ANO_N_1_DEZEMBRO_ACUM= FSE_COMISSOES_ANO_N_1_DEZEMBRO_ACUM/IND_VN_ANO_N_1_DEZEMBRO_ACUM*100; var PESO_FSE_COMISSOES_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_COMISSOES_VN_ANO_N_1_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_VN_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JANEIRO_ACUM= ((IND_VN_ANO_N_JANEIRO_ACUM-IND_VN_ANO_N_1_JANEIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_JANEIRO_ACUM))*100; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_FEVEREIRO_ACUM= ((IND_VN_ANO_N_FEVEREIRO_ACUM-IND_VN_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_VN_ANO_N_MARCO_ACUM = 'nd'; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MARCO_ACUM= ((IND_VN_ANO_N_MARCO_ACUM-IND_VN_ANO_N_1_MARCO_ACUM)/Math.abs(IND_VN_ANO_N_1_MARCO_ACUM))*100; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = VAR_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_VN_ANO_N_ABRIL_ACUM = 'nd'; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_ABRIL_ACUM= ((IND_VN_ANO_N_ABRIL_ACUM-IND_VN_ANO_N_1_ABRIL_ACUM)/Math.abs(IND_VN_ANO_N_1_ABRIL_ACUM))*100; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_VN_ANO_N_MAIO_ACUM = 'nd'; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MAIO_ACUM= ((IND_VN_ANO_N_MAIO_ACUM-IND_VN_ANO_N_1_MAIO_ACUM)/Math.abs(IND_VN_ANO_N_1_MAIO_ACUM))*100; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = VAR_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_VN_ANO_N_JUNHO_ACUM = 'nd'; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JUNHO_ACUM= ((IND_VN_ANO_N_JUNHO_ACUM-IND_VN_ANO_N_1_JUNHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JUNHO_ACUM))*100; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_VN_ANO_N_JULHO_ACUM = 'nd'; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JULHO_ACUM= ((IND_VN_ANO_N_JULHO_ACUM-IND_VN_ANO_N_1_JULHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JULHO_ACUM))*100; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_VN_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_AGOSTO_ACUM= ((IND_VN_ANO_N_AGOSTO_ACUM-IND_VN_ANO_N_1_AGOSTO_ACUM)/Math.abs(IND_VN_ANO_N_1_AGOSTO_ACUM))*100; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_SETEMBRO_ACUM= ((IND_VN_ANO_N_SETEMBRO_ACUM-IND_VN_ANO_N_1_SETEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_OUTUBRO_ACUM= ((IND_VN_ANO_N_OUTUBRO_ACUM-IND_VN_ANO_N_1_OUTUBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_NOVEMBRO_ACUM= ((IND_VN_ANO_N_NOVEMBRO_ACUM-IND_VN_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_DEZEMBRO_ACUM= ((IND_VN_ANO_N_DEZEMBRO_ACUM-IND_VN_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_FSE_COMISSOES_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_FSE_COMISSOES_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMISSOES_ANO_N_JANEIRO_ACUM= ((FSE_COMISSOES_ANO_N_JANEIRO_ACUM-FSE_COMISSOES_ANO_N_1_JANEIRO_ACUM)/Math.abs(FSE_COMISSOES_ANO_N_1_JANEIRO_ACUM))*100; var VAR_FSE_COMISSOES_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_FSE_COMISSOES_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_FSE_COMISSOES_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_FSE_COMISSOES_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMISSOES_ANO_N_FEVEREIRO_ACUM= ((FSE_COMISSOES_ANO_N_FEVEREIRO_ACUM-FSE_COMISSOES_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(FSE_COMISSOES_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_FSE_COMISSOES_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_FSE_COMISSOES_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_FSE_COMISSOES_ANO_N_MARCO_ACUM = 'nd'; var VAR_FSE_COMISSOES_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMISSOES_ANO_N_MARCO_ACUM= ((FSE_COMISSOES_ANO_N_MARCO_ACUM-FSE_COMISSOES_ANO_N_1_MARCO_ACUM)/Math.abs(FSE_COMISSOES_ANO_N_1_MARCO_ACUM))*100; var VAR_FSE_COMISSOES_ANO_N_MARCO_ACUM_MAX_MIN = VAR_FSE_COMISSOES_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_FSE_COMISSOES_ANO_N_ABRIL_ACUM = 'nd'; var VAR_FSE_COMISSOES_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMISSOES_ANO_N_ABRIL_ACUM= ((FSE_COMISSOES_ANO_N_ABRIL_ACUM-FSE_COMISSOES_ANO_N_1_ABRIL_ACUM)/Math.abs(FSE_COMISSOES_ANO_N_1_ABRIL_ACUM))*100; var VAR_FSE_COMISSOES_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_FSE_COMISSOES_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_FSE_COMISSOES_ANO_N_MAIO_ACUM = 'nd'; var VAR_FSE_COMISSOES_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMISSOES_ANO_N_MAIO_ACUM= ((FSE_COMISSOES_ANO_N_MAIO_ACUM-FSE_COMISSOES_ANO_N_1_MAIO_ACUM)/Math.abs(FSE_COMISSOES_ANO_N_1_MAIO_ACUM))*100; var VAR_FSE_COMISSOES_ANO_N_MAIO_ACUM_MAX_MIN = VAR_FSE_COMISSOES_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_FSE_COMISSOES_ANO_N_JUNHO_ACUM = 'nd'; var VAR_FSE_COMISSOES_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMISSOES_ANO_N_JUNHO_ACUM= ((FSE_COMISSOES_ANO_N_JUNHO_ACUM-FSE_COMISSOES_ANO_N_1_JUNHO_ACUM)/Math.abs(FSE_COMISSOES_ANO_N_1_JUNHO_ACUM))*100; var VAR_FSE_COMISSOES_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_FSE_COMISSOES_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_FSE_COMISSOES_ANO_N_JULHO_ACUM = 'nd'; var VAR_FSE_COMISSOES_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMISSOES_ANO_N_JULHO_ACUM= ((FSE_COMISSOES_ANO_N_JULHO_ACUM-FSE_COMISSOES_ANO_N_1_JULHO_ACUM)/Math.abs(FSE_COMISSOES_ANO_N_1_JULHO_ACUM))*100; var VAR_FSE_COMISSOES_ANO_N_JULHO_ACUM_MAX_MIN = VAR_FSE_COMISSOES_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_FSE_COMISSOES_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_FSE_COMISSOES_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMISSOES_ANO_N_AGOSTO_ACUM= ((FSE_COMISSOES_ANO_N_AGOSTO_ACUM-FSE_COMISSOES_ANO_N_1_AGOSTO_ACUM)/Math.abs(FSE_COMISSOES_ANO_N_1_AGOSTO_ACUM))*100; var VAR_FSE_COMISSOES_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_FSE_COMISSOES_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_FSE_COMISSOES_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_FSE_COMISSOES_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMISSOES_ANO_N_SETEMBRO_ACUM= ((FSE_COMISSOES_ANO_N_SETEMBRO_ACUM-FSE_COMISSOES_ANO_N_1_SETEMBRO_ACUM)/Math.abs(FSE_COMISSOES_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_FSE_COMISSOES_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_FSE_COMISSOES_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_FSE_COMISSOES_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_FSE_COMISSOES_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMISSOES_ANO_N_OUTUBRO_ACUM= ((FSE_COMISSOES_ANO_N_OUTUBRO_ACUM-FSE_COMISSOES_ANO_N_1_OUTUBRO_ACUM)/Math.abs(FSE_COMISSOES_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_FSE_COMISSOES_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_FSE_COMISSOES_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_FSE_COMISSOES_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_FSE_COMISSOES_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMISSOES_ANO_N_NOVEMBRO_ACUM= ((FSE_COMISSOES_ANO_N_NOVEMBRO_ACUM-FSE_COMISSOES_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(FSE_COMISSOES_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_FSE_COMISSOES_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_FSE_COMISSOES_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_FSE_COMISSOES_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_FSE_COMISSOES_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_COMISSOES_ANO_N_DEZEMBRO_ACUM= ((FSE_COMISSOES_ANO_N_DEZEMBRO_ACUM-FSE_COMISSOES_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(FSE_COMISSOES_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_FSE_COMISSOES_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_FSE_COMISSOES_ANO_N_DEZEMBRO_ACUM };

    if( PESO_FSE_COMISSOES_VN_ANO_N_1_JANEIRO_ACUM > PESO_FSE_COMISSOES_VN_ANO_N_JANEIRO_ACUM) { var  INEFICIENCIA_FSE_COMISSOES_ANO_N_JANEIRO_ACUM=PESO_FSE_COMISSOES_VN_ANO_N_1_JANEIRO_ACUM ; } else { var  INEFICIENCIA_FSE_COMISSOES_ANO_N_JANEIRO_ACUM=PESO_FSE_COMISSOES_VN_ANO_N_JANEIRO_ACUM ; }
    if( PESO_FSE_COMISSOES_VN_ANO_N_1_FEVEREIRO_ACUM > PESO_FSE_COMISSOES_VN_ANO_N_FEVEREIRO_ACUM) { var  INEFICIENCIA_FSE_COMISSOES_ANO_N_FEVEREIRO_ACUM=PESO_FSE_COMISSOES_VN_ANO_N_1_FEVEREIRO_ACUM ; } else { var  INEFICIENCIA_FSE_COMISSOES_ANO_N_FEVEREIRO_ACUM=PESO_FSE_COMISSOES_VN_ANO_N_FEVEREIRO_ACUM ; }
    if( PESO_FSE_COMISSOES_VN_ANO_N_1_MARCO_ACUM > PESO_FSE_COMISSOES_VN_ANO_N_MARCO_ACUM) { var  INEFICIENCIA_FSE_COMISSOES_ANO_N_MARCO_ACUM=PESO_FSE_COMISSOES_VN_ANO_N_1_MARCO_ACUM ; } else { var  INEFICIENCIA_FSE_COMISSOES_ANO_N_MARCO_ACUM=PESO_FSE_COMISSOES_VN_ANO_N_MARCO_ACUM ; }
    if( PESO_FSE_COMISSOES_VN_ANO_N_1_ABRIL_ACUM > PESO_FSE_COMISSOES_VN_ANO_N_ABRIL_ACUM) { var  INEFICIENCIA_FSE_COMISSOES_ANO_N_ABRIL_ACUM=PESO_FSE_COMISSOES_VN_ANO_N_1_ABRIL_ACUM ; } else { var  INEFICIENCIA_FSE_COMISSOES_ANO_N_ABRIL_ACUM=PESO_FSE_COMISSOES_VN_ANO_N_ABRIL_ACUM ; }
    if( PESO_FSE_COMISSOES_VN_ANO_N_1_MAIO_ACUM > PESO_FSE_COMISSOES_VN_ANO_N_MAIO_ACUM) { var  INEFICIENCIA_FSE_COMISSOES_ANO_N_MAIO_ACUM=PESO_FSE_COMISSOES_VN_ANO_N_1_MAIO_ACUM ; } else { var  INEFICIENCIA_FSE_COMISSOES_ANO_N_MAIO_ACUM=PESO_FSE_COMISSOES_VN_ANO_N_MAIO_ACUM ; }
    if( PESO_FSE_COMISSOES_VN_ANO_N_1_JUNHO_ACUM > PESO_FSE_COMISSOES_VN_ANO_N_JUNHO_ACUM) { var  INEFICIENCIA_FSE_COMISSOES_ANO_N_JUNHO_ACUM=PESO_FSE_COMISSOES_VN_ANO_N_1_JUNHO_ACUM ; } else { var  INEFICIENCIA_FSE_COMISSOES_ANO_N_JUNHO_ACUM=PESO_FSE_COMISSOES_VN_ANO_N_JUNHO_ACUM ; }
    if( PESO_FSE_COMISSOES_VN_ANO_N_1_JULHO_ACUM > PESO_FSE_COMISSOES_VN_ANO_N_JULHO_ACUM) { var  INEFICIENCIA_FSE_COMISSOES_ANO_N_JULHO_ACUM=PESO_FSE_COMISSOES_VN_ANO_N_1_JULHO_ACUM ; } else { var  INEFICIENCIA_FSE_COMISSOES_ANO_N_JULHO_ACUM=PESO_FSE_COMISSOES_VN_ANO_N_JULHO_ACUM ; }
    if( PESO_FSE_COMISSOES_VN_ANO_N_1_AGOSTO_ACUM > PESO_FSE_COMISSOES_VN_ANO_N_AGOSTO_ACUM) { var  INEFICIENCIA_FSE_COMISSOES_ANO_N_AGOSTO_ACUM=PESO_FSE_COMISSOES_VN_ANO_N_1_AGOSTO_ACUM ; } else { var  INEFICIENCIA_FSE_COMISSOES_ANO_N_AGOSTO_ACUM=PESO_FSE_COMISSOES_VN_ANO_N_AGOSTO_ACUM ; }
    if( PESO_FSE_COMISSOES_VN_ANO_N_1_SETEMBRO_ACUM > PESO_FSE_COMISSOES_VN_ANO_N_SETEMBRO_ACUM) { var  INEFICIENCIA_FSE_COMISSOES_ANO_N_SETEMBRO_ACUM=PESO_FSE_COMISSOES_VN_ANO_N_1_SETEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_COMISSOES_ANO_N_SETEMBRO_ACUM=PESO_FSE_COMISSOES_VN_ANO_N_SETEMBRO_ACUM ; }
    if( PESO_FSE_COMISSOES_VN_ANO_N_1_OUTUBRO_ACUM > PESO_FSE_COMISSOES_VN_ANO_N_OUTUBRO_ACUM) { var  INEFICIENCIA_FSE_COMISSOES_ANO_N_OUTUBRO_ACUM=PESO_FSE_COMISSOES_VN_ANO_N_1_OUTUBRO_ACUM ; } else { var  INEFICIENCIA_FSE_COMISSOES_ANO_N_OUTUBRO_ACUM=PESO_FSE_COMISSOES_VN_ANO_N_OUTUBRO_ACUM ; }
    if( PESO_FSE_COMISSOES_VN_ANO_N_1_NOVEMBRO_ACUM > PESO_FSE_COMISSOES_VN_ANO_N_NOVEMBRO_ACUM) { var  INEFICIENCIA_FSE_COMISSOES_ANO_N_NOVEMBRO_ACUM=PESO_FSE_COMISSOES_VN_ANO_N_1_NOVEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_COMISSOES_ANO_N_NOVEMBRO_ACUM=PESO_FSE_COMISSOES_VN_ANO_N_NOVEMBRO_ACUM ; }
    if( PESO_FSE_COMISSOES_VN_ANO_N_1_DEZEMBRO_ACUM > PESO_FSE_COMISSOES_VN_ANO_N_DEZEMBRO_ACUM) { var  INEFICIENCIA_FSE_COMISSOES_ANO_N_DEZEMBRO_ACUM=PESO_FSE_COMISSOES_VN_ANO_N_1_DEZEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_COMISSOES_ANO_N_DEZEMBRO_ACUM=PESO_FSE_COMISSOES_VN_ANO_N_DEZEMBRO_ACUM ; }



    var fillBetweenLinesPlugin = {
        afterDatasetsDraw: function (chart) {
            var ctx = chart.chart.ctx;
            var xaxis = chart.scales['x-axis-0'];
            var yaxis = chart.scales['y-axis-0'];
            var datasets = chart.data.datasets;
            ctx.save();

            for (var d = 0; d < datasets.length; d++) {
                var dataset = datasets[d];
                if (dataset.fillBetweenSet == undefined) {
                    continue;
                }

                // get meta for both data sets
                var meta1 = chart.getDatasetMeta(d);
                var meta2 = chart.getDatasetMeta(dataset.fillBetweenSet);

                // do not draw fill if one of the datasets is hidden
                if (meta1.hidden || meta2.hidden) continue;

                // create fill areas in pairs
                for (var p = 0; p < meta1.data.length-1;p++) {
                    // if null skip
                    if (dataset.data[p] == null || dataset.data[p+1] == null) continue;

                    ctx.beginPath();

                    // trace line 1
                    var curr = meta1.data[p];
                    var next = meta1.data[p+1];
                    ctx.moveTo(curr._view.x, curr._view.y);
                    ctx.lineTo(curr._view.x, curr._view.y);
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(next._view.x, curr._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        ctx.bezierCurveTo(
                          curr._view.controlPointNextX,
                          curr._view.controlPointNextY,
                          next._view.controlPointPreviousX,
                          next._view.controlPointPreviousY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // connect dataset1 to dataset2
                    var curr = meta2.data[p+1];
                    var next = meta2.data[p];
                    ctx.lineTo(curr._view.x, curr._view.y);

                    // trace BACKWORDS set2 to complete the box
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(curr._view.x, next._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        // reverse bezier
                        ctx.bezierCurveTo(
                          curr._view.controlPointPreviousX,
                          curr._view.controlPointPreviousY,
                          next._view.controlPointNextX,
                          next._view.controlPointNextY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // close the loop and fill with shading
                    ctx.closePath();
                    ctx.fillStyle = dataset.fillBetweenColor || "rgba(0,0,0,0.1)";
                    ctx.fill();
                } // end for p loop
            }
        } // end afterDatasetsDraw
    }; // end fillBetweenLinesPlugin

    Chart.pluginService.register(fillBetweenLinesPlugin);



    var GRAFICO_FSE_RESULT_MENSAL_COMP_013=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_013').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_013=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_013, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label:  'Peso ComissõesvsVN(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   //borderColor: "#F00",
                   fill: false,
                   steppedLine: false,
                   tension: 0.5,
                   fillBetweenSet: 1,
                   fillBetweenColor: "rgba(0, 221, 0, 0.1)",
                   data: [
                   PESO_FSE_COMISSOES_VN_ANO_N_JANEIRO_ACUM,
                   PESO_FSE_COMISSOES_VN_ANO_N_FEVEREIRO_ACUM,
                   PESO_FSE_COMISSOES_VN_ANO_N_MARCO_ACUM,
                   PESO_FSE_COMISSOES_VN_ANO_N_ABRIL_ACUM,
                   PESO_FSE_COMISSOES_VN_ANO_N_MAIO_ACUM,
                   PESO_FSE_COMISSOES_VN_ANO_N_JUNHO_ACUM,
                   PESO_FSE_COMISSOES_VN_ANO_N_JULHO_ACUM,
                   PESO_FSE_COMISSOES_VN_ANO_N_AGOSTO_ACUM,
                   PESO_FSE_COMISSOES_VN_ANO_N_SETEMBRO_ACUM,
                   PESO_FSE_COMISSOES_VN_ANO_N_OUTUBRO_ACUM,
                   PESO_FSE_COMISSOES_VN_ANO_N_NOVEMBRO_ACUM,
                   PESO_FSE_COMISSOES_VN_ANO_N_DEZEMBRO_ACUM,

                   ],
                   type: 'line'


               },
                {
                    label: 'Peso ComissõesvsVN(ac) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'A',
                    //backgroundColor: 'rgb(17, 121, 240)',
                    borderColor: 'rgb(0,221,0)',
                    //borderColor: "#00F",
                    fill: false,
                    steppedLine: false,
                    tension: 0.5,
                    data: [
                   PESO_FSE_COMISSOES_VN_ANO_N_1_JANEIRO_ACUM,
                   PESO_FSE_COMISSOES_VN_ANO_N_1_FEVEREIRO_ACUM,
                   PESO_FSE_COMISSOES_VN_ANO_N_1_MARCO_ACUM,
                   PESO_FSE_COMISSOES_VN_ANO_N_1_ABRIL_ACUM,
                   PESO_FSE_COMISSOES_VN_ANO_N_1_MAIO_ACUM,
                   PESO_FSE_COMISSOES_VN_ANO_N_1_JUNHO_ACUM,
                   PESO_FSE_COMISSOES_VN_ANO_N_1_JULHO_ACUM,
                   PESO_FSE_COMISSOES_VN_ANO_N_1_AGOSTO_ACUM,
                   PESO_FSE_COMISSOES_VN_ANO_N_1_SETEMBRO_ACUM,
                   PESO_FSE_COMISSOES_VN_ANO_N_1_OUTUBRO_ACUM,
                   PESO_FSE_COMISSOES_VN_ANO_N_1_NOVEMBRO_ACUM,
                   PESO_FSE_COMISSOES_VN_ANO_N_1_DEZEMBRO_ACUM,
                    ],
                    type: 'line'
                },
    {
        label: 'Ineficiência',
        yAxisID: 'A',
        backgroundColor: "rgba(255, 0, 0, 0.2)",
        borderColor: 'rgba(255, 255, 255, 0.1)',
        //borderColor: "#0D0",
        fill: false,
        steppedLine: false,
        tension: 0.5,
        fillBetweenSet: 1,
        fillBetweenColor: "rgba(255, 0, 0, 0.2)",
        data: [
    INEFICIENCIA_FSE_COMISSOES_ANO_N_JANEIRO_ACUM,
    INEFICIENCIA_FSE_COMISSOES_ANO_N_FEVEREIRO_ACUM,
    INEFICIENCIA_FSE_COMISSOES_ANO_N_MARCO_ACUM,
    INEFICIENCIA_FSE_COMISSOES_ANO_N_ABRIL_ACUM,
    INEFICIENCIA_FSE_COMISSOES_ANO_N_MAIO_ACUM,
    INEFICIENCIA_FSE_COMISSOES_ANO_N_JUNHO_ACUM,
    INEFICIENCIA_FSE_COMISSOES_ANO_N_JULHO_ACUM,
    INEFICIENCIA_FSE_COMISSOES_ANO_N_AGOSTO_ACUM,
    INEFICIENCIA_FSE_COMISSOES_ANO_N_SETEMBRO_ACUM,
    INEFICIENCIA_FSE_COMISSOES_ANO_N_OUTUBRO_ACUM,
    INEFICIENCIA_FSE_COMISSOES_ANO_N_NOVEMBRO_ACUM,
    INEFICIENCIA_FSE_COMISSOES_ANO_N_DEZEMBRO_ACUM,
        ],
        type: 'line'
    },

            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_Comissões COMP',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                //min:  Math.round(FSE_COMISSOES_Mensal_Eixo_min_princ__,0),
                                                //max:  Math.round(FSE_COMISSOES_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString()+ "%";
                                                }
                                            }
                                        },







                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_014-----------------------------------------------------------*@
<script>

    if(@ViewData["MES_ACUM_REAL"]<1){ var IND_VN_ANO_N_JANEIRO = 'nd'; var IND_VN_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JANEIRO"]))); var IND_VN_ANO_N_JANEIRO_MAX_MIN = IND_VN_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var IND_VN_ANO_N_FEVEREIRO = 'nd'; var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_FEVEREIRO"]))); var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = IND_VN_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var IND_VN_ANO_N_MARCO = 'nd'; var IND_VN_ANO_N_MARCO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MARCO"]))); var IND_VN_ANO_N_MARCO_MAX_MIN = IND_VN_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var IND_VN_ANO_N_ABRIL = 'nd'; var IND_VN_ANO_N_ABRIL_MAX_MIN = 0;  } else { var IND_VN_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_ABRIL"]))); var IND_VN_ANO_N_ABRIL_MAX_MIN = IND_VN_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var IND_VN_ANO_N_MAIO = 'nd'; var IND_VN_ANO_N_MAIO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MAIO"]))); var IND_VN_ANO_N_MAIO_MAX_MIN = IND_VN_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var IND_VN_ANO_N_JUNHO = 'nd'; var IND_VN_ANO_N_JUNHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JUNHO"]))); var IND_VN_ANO_N_JUNHO_MAX_MIN = IND_VN_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var IND_VN_ANO_N_JULHO = 'nd'; var IND_VN_ANO_N_JULHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JULHO"]))); var IND_VN_ANO_N_JULHO_MAX_MIN = IND_VN_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var IND_VN_ANO_N_AGOSTO = 'nd'; var IND_VN_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_AGOSTO"]))); var IND_VN_ANO_N_AGOSTO_MAX_MIN = IND_VN_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var IND_VN_ANO_N_SETEMBRO = 'nd'; var IND_VN_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_SETEMBRO"]))); var IND_VN_ANO_N_SETEMBRO_MAX_MIN = IND_VN_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var IND_VN_ANO_N_OUTUBRO = 'nd'; var IND_VN_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_OUTUBRO"]))); var IND_VN_ANO_N_OUTUBRO_MAX_MIN = IND_VN_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var IND_VN_ANO_N_NOVEMBRO = 'nd'; var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_NOVEMBRO"]))); var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = IND_VN_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var IND_VN_ANO_N_DEZEMBRO = 'nd'; var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_DEZEMBRO"]))); var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = IND_VN_ANO_N_DEZEMBRO };

    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_CONSERV_REPAR_ANO_N_JANEIRO = 'nd'; var FSE_CONSERV_REPAR_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var FSE_CONSERV_REPAR_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_JANEIRO"]))); var FSE_CONSERV_REPAR_ANO_N_JANEIRO_MAX_MIN = FSE_CONSERV_REPAR_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_CONSERV_REPAR_ANO_N_FEVEREIRO = 'nd'; var FSE_CONSERV_REPAR_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var FSE_CONSERV_REPAR_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_FEVEREIRO"]))); var FSE_CONSERV_REPAR_ANO_N_FEVEREIRO_MAX_MIN = FSE_CONSERV_REPAR_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_CONSERV_REPAR_ANO_N_MARCO = 'nd'; var FSE_CONSERV_REPAR_ANO_N_MARCO_MAX_MIN = 0;  } else { var FSE_CONSERV_REPAR_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_MARCO"]))); var FSE_CONSERV_REPAR_ANO_N_MARCO_MAX_MIN = FSE_CONSERV_REPAR_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_CONSERV_REPAR_ANO_N_ABRIL = 'nd'; var FSE_CONSERV_REPAR_ANO_N_ABRIL_MAX_MIN = 0;  } else { var FSE_CONSERV_REPAR_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_ABRIL"]))); var FSE_CONSERV_REPAR_ANO_N_ABRIL_MAX_MIN = FSE_CONSERV_REPAR_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_CONSERV_REPAR_ANO_N_MAIO = 'nd'; var FSE_CONSERV_REPAR_ANO_N_MAIO_MAX_MIN = 0;  } else { var FSE_CONSERV_REPAR_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_MAIO"]))); var FSE_CONSERV_REPAR_ANO_N_MAIO_MAX_MIN = FSE_CONSERV_REPAR_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_CONSERV_REPAR_ANO_N_JUNHO = 'nd'; var FSE_CONSERV_REPAR_ANO_N_JUNHO_MAX_MIN = 0;  } else { var FSE_CONSERV_REPAR_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_JUNHO"]))); var FSE_CONSERV_REPAR_ANO_N_JUNHO_MAX_MIN = FSE_CONSERV_REPAR_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_CONSERV_REPAR_ANO_N_JULHO = 'nd'; var FSE_CONSERV_REPAR_ANO_N_JULHO_MAX_MIN = 0;  } else { var FSE_CONSERV_REPAR_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_JULHO"]))); var FSE_CONSERV_REPAR_ANO_N_JULHO_MAX_MIN = FSE_CONSERV_REPAR_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_CONSERV_REPAR_ANO_N_AGOSTO = 'nd'; var FSE_CONSERV_REPAR_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var FSE_CONSERV_REPAR_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_AGOSTO"]))); var FSE_CONSERV_REPAR_ANO_N_AGOSTO_MAX_MIN = FSE_CONSERV_REPAR_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_CONSERV_REPAR_ANO_N_SETEMBRO = 'nd'; var FSE_CONSERV_REPAR_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var FSE_CONSERV_REPAR_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_SETEMBRO"]))); var FSE_CONSERV_REPAR_ANO_N_SETEMBRO_MAX_MIN = FSE_CONSERV_REPAR_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_CONSERV_REPAR_ANO_N_OUTUBRO = 'nd'; var FSE_CONSERV_REPAR_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var FSE_CONSERV_REPAR_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_OUTUBRO"]))); var FSE_CONSERV_REPAR_ANO_N_OUTUBRO_MAX_MIN = FSE_CONSERV_REPAR_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_CONSERV_REPAR_ANO_N_NOVEMBRO = 'nd'; var FSE_CONSERV_REPAR_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var FSE_CONSERV_REPAR_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_NOVEMBRO"]))); var FSE_CONSERV_REPAR_ANO_N_NOVEMBRO_MAX_MIN = FSE_CONSERV_REPAR_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_CONSERV_REPAR_ANO_N_DEZEMBRO = 'nd'; var FSE_CONSERV_REPAR_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var FSE_CONSERV_REPAR_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_DEZEMBRO"]))); var FSE_CONSERV_REPAR_ANO_N_DEZEMBRO_MAX_MIN = FSE_CONSERV_REPAR_ANO_N_DEZEMBRO };


    var FSE_CONSERV_REPAR_ANO_N_JANEIRO_ACUM = FSE_CONSERV_REPAR_ANO_N_JANEIRO;
    var FSE_CONSERV_REPAR_ANO_N_FEVEREIRO_ACUM = FSE_CONSERV_REPAR_ANO_N_FEVEREIRO + FSE_CONSERV_REPAR_ANO_N_JANEIRO_ACUM;
    var FSE_CONSERV_REPAR_ANO_N_MARCO_ACUM = FSE_CONSERV_REPAR_ANO_N_MARCO + FSE_CONSERV_REPAR_ANO_N_FEVEREIRO_ACUM;
    var FSE_CONSERV_REPAR_ANO_N_ABRIL_ACUM = FSE_CONSERV_REPAR_ANO_N_ABRIL + FSE_CONSERV_REPAR_ANO_N_MARCO_ACUM;
    var FSE_CONSERV_REPAR_ANO_N_MAIO_ACUM = FSE_CONSERV_REPAR_ANO_N_MAIO + FSE_CONSERV_REPAR_ANO_N_ABRIL_ACUM;
    var FSE_CONSERV_REPAR_ANO_N_JUNHO_ACUM = FSE_CONSERV_REPAR_ANO_N_JUNHO + FSE_CONSERV_REPAR_ANO_N_MAIO_ACUM;
    var FSE_CONSERV_REPAR_ANO_N_JULHO_ACUM = FSE_CONSERV_REPAR_ANO_N_JULHO + FSE_CONSERV_REPAR_ANO_N_JUNHO_ACUM;
    var FSE_CONSERV_REPAR_ANO_N_AGOSTO_ACUM = FSE_CONSERV_REPAR_ANO_N_AGOSTO + FSE_CONSERV_REPAR_ANO_N_JULHO_ACUM;
    var FSE_CONSERV_REPAR_ANO_N_SETEMBRO_ACUM = FSE_CONSERV_REPAR_ANO_N_SETEMBRO + FSE_CONSERV_REPAR_ANO_N_AGOSTO_ACUM;
    var FSE_CONSERV_REPAR_ANO_N_OUTUBRO_ACUM = FSE_CONSERV_REPAR_ANO_N_OUTUBRO + FSE_CONSERV_REPAR_ANO_N_SETEMBRO_ACUM;
    var FSE_CONSERV_REPAR_ANO_N_NOVEMBRO_ACUM = FSE_CONSERV_REPAR_ANO_N_NOVEMBRO + FSE_CONSERV_REPAR_ANO_N_OUTUBRO_ACUM;
    var FSE_CONSERV_REPAR_ANO_N_DEZEMBRO_ACUM = FSE_CONSERV_REPAR_ANO_N_DEZEMBRO + FSE_CONSERV_REPAR_ANO_N_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_CONSERV_REPAR_ANO_N_JANEIRO_ACUM = 'nd'; var FSE_CONSERV_REPAR_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var FSE_CONSERV_REPAR_ANO_N_JANEIRO_ACUM= FSE_CONSERV_REPAR_ANO_N_JANEIRO_ACUM; var FSE_CONSERV_REPAR_ANO_N_JANEIRO_ACUM_MAX_MIN = FSE_CONSERV_REPAR_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_CONSERV_REPAR_ANO_N_FEVEREIRO_ACUM = 'nd'; var FSE_CONSERV_REPAR_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var FSE_CONSERV_REPAR_ANO_N_FEVEREIRO_ACUM= FSE_CONSERV_REPAR_ANO_N_FEVEREIRO_ACUM; var FSE_CONSERV_REPAR_ANO_N_FEVEREIRO_ACUM_MAX_MIN = FSE_CONSERV_REPAR_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_CONSERV_REPAR_ANO_N_MARCO_ACUM = 'nd'; var FSE_CONSERV_REPAR_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var FSE_CONSERV_REPAR_ANO_N_MARCO_ACUM= FSE_CONSERV_REPAR_ANO_N_MARCO_ACUM; var FSE_CONSERV_REPAR_ANO_N_MARCO_ACUM_MAX_MIN = FSE_CONSERV_REPAR_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_CONSERV_REPAR_ANO_N_ABRIL_ACUM = 'nd'; var FSE_CONSERV_REPAR_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var FSE_CONSERV_REPAR_ANO_N_ABRIL_ACUM= FSE_CONSERV_REPAR_ANO_N_ABRIL_ACUM; var FSE_CONSERV_REPAR_ANO_N_ABRIL_ACUM_MAX_MIN = FSE_CONSERV_REPAR_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_CONSERV_REPAR_ANO_N_MAIO_ACUM = 'nd'; var FSE_CONSERV_REPAR_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var FSE_CONSERV_REPAR_ANO_N_MAIO_ACUM= FSE_CONSERV_REPAR_ANO_N_MAIO_ACUM; var FSE_CONSERV_REPAR_ANO_N_MAIO_ACUM_MAX_MIN = FSE_CONSERV_REPAR_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_CONSERV_REPAR_ANO_N_JUNHO_ACUM = 'nd'; var FSE_CONSERV_REPAR_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var FSE_CONSERV_REPAR_ANO_N_JUNHO_ACUM= FSE_CONSERV_REPAR_ANO_N_JUNHO_ACUM; var FSE_CONSERV_REPAR_ANO_N_JUNHO_ACUM_MAX_MIN = FSE_CONSERV_REPAR_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_CONSERV_REPAR_ANO_N_JULHO_ACUM = 'nd'; var FSE_CONSERV_REPAR_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var FSE_CONSERV_REPAR_ANO_N_JULHO_ACUM= FSE_CONSERV_REPAR_ANO_N_JULHO_ACUM; var FSE_CONSERV_REPAR_ANO_N_JULHO_ACUM_MAX_MIN = FSE_CONSERV_REPAR_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_CONSERV_REPAR_ANO_N_AGOSTO_ACUM = 'nd'; var FSE_CONSERV_REPAR_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var FSE_CONSERV_REPAR_ANO_N_AGOSTO_ACUM= FSE_CONSERV_REPAR_ANO_N_AGOSTO_ACUM; var FSE_CONSERV_REPAR_ANO_N_AGOSTO_ACUM_MAX_MIN = FSE_CONSERV_REPAR_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_CONSERV_REPAR_ANO_N_SETEMBRO_ACUM = 'nd'; var FSE_CONSERV_REPAR_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_CONSERV_REPAR_ANO_N_SETEMBRO_ACUM= FSE_CONSERV_REPAR_ANO_N_SETEMBRO_ACUM; var FSE_CONSERV_REPAR_ANO_N_SETEMBRO_ACUM_MAX_MIN = FSE_CONSERV_REPAR_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_CONSERV_REPAR_ANO_N_OUTUBRO_ACUM = 'nd'; var FSE_CONSERV_REPAR_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var FSE_CONSERV_REPAR_ANO_N_OUTUBRO_ACUM= FSE_CONSERV_REPAR_ANO_N_OUTUBRO_ACUM; var FSE_CONSERV_REPAR_ANO_N_OUTUBRO_ACUM_MAX_MIN = FSE_CONSERV_REPAR_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_CONSERV_REPAR_ANO_N_NOVEMBRO_ACUM = 'nd'; var FSE_CONSERV_REPAR_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_CONSERV_REPAR_ANO_N_NOVEMBRO_ACUM= FSE_CONSERV_REPAR_ANO_N_NOVEMBRO_ACUM; var FSE_CONSERV_REPAR_ANO_N_NOVEMBRO_ACUM_MAX_MIN = FSE_CONSERV_REPAR_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_CONSERV_REPAR_ANO_N_DEZEMBRO_ACUM = 'nd'; var FSE_CONSERV_REPAR_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_CONSERV_REPAR_ANO_N_DEZEMBRO_ACUM= FSE_CONSERV_REPAR_ANO_N_DEZEMBRO_ACUM; var FSE_CONSERV_REPAR_ANO_N_DEZEMBRO_ACUM_MAX_MIN = FSE_CONSERV_REPAR_ANO_N_DEZEMBRO_ACUM };




    var FSE_CONSERV_REPAR_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_JANEIRO"])));
    var FSE_CONSERV_REPAR_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_FEVEREIRO"]))) + FSE_CONSERV_REPAR_ANO_N_1_JANEIRO_ACUM;
    var FSE_CONSERV_REPAR_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_MARCO"]))) + FSE_CONSERV_REPAR_ANO_N_1_FEVEREIRO_ACUM;
    var FSE_CONSERV_REPAR_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_ABRIL"]))) + FSE_CONSERV_REPAR_ANO_N_1_MARCO_ACUM;
    var FSE_CONSERV_REPAR_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_MAIO"]))) + FSE_CONSERV_REPAR_ANO_N_1_ABRIL_ACUM;
    var FSE_CONSERV_REPAR_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_JUNHO"]))) + FSE_CONSERV_REPAR_ANO_N_1_MAIO_ACUM;
    var FSE_CONSERV_REPAR_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_JULHO"]))) + FSE_CONSERV_REPAR_ANO_N_1_JUNHO_ACUM;
    var FSE_CONSERV_REPAR_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_AGOSTO"]))) + FSE_CONSERV_REPAR_ANO_N_1_JULHO_ACUM;
    var FSE_CONSERV_REPAR_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_SETEMBRO"]))) + FSE_CONSERV_REPAR_ANO_N_1_AGOSTO_ACUM;
    var FSE_CONSERV_REPAR_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_OUTUBRO"]))) + FSE_CONSERV_REPAR_ANO_N_1_SETEMBRO_ACUM;
    var FSE_CONSERV_REPAR_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_NOVEMBRO"]))) + FSE_CONSERV_REPAR_ANO_N_1_OUTUBRO_ACUM;
    var FSE_CONSERV_REPAR_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_DEZEMBRO"]))) + FSE_CONSERV_REPAR_ANO_N_1_NOVEMBRO_ACUM;


    var FSE_CONSERV_REPAR_Mensal_Eixo_max_princ= Math.max(
                       FSE_CONSERV_REPAR_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_CONSERV_REPAR_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_CONSERV_REPAR_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_CONSERV_REPAR_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_CONSERV_REPAR_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_CONSERV_REPAR_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_CONSERV_REPAR_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_CONSERV_REPAR_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_CONSERV_REPAR_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_CONSERV_REPAR_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_CONSERV_REPAR_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_CONSERV_REPAR_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_CONSERV_REPAR_ANO_N_1_JANEIRO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_1_MARCO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_1_ABRIL_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_1_MAIO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_1_JUNHO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_1_JULHO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_1_AGOSTO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_1_SETEMBRO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_1_OUTUBRO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_1_DEZEMBRO_ACUM
                             );
    var FSE_CONSERV_REPAR_Mensal_Eixo_min_princ= Math.min(

                       FSE_CONSERV_REPAR_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_CONSERV_REPAR_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_CONSERV_REPAR_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_CONSERV_REPAR_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_CONSERV_REPAR_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_CONSERV_REPAR_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_CONSERV_REPAR_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_CONSERV_REPAR_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_CONSERV_REPAR_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_CONSERV_REPAR_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_CONSERV_REPAR_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_CONSERV_REPAR_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_CONSERV_REPAR_ANO_N_1_JANEIRO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_1_MARCO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_1_ABRIL_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_1_MAIO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_1_JUNHO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_1_JULHO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_1_AGOSTO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_1_SETEMBRO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_1_OUTUBRO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_1_DEZEMBRO_ACUM
                           );
    var FSE_CONSERV_REPAR_Mensal_Eixo_max_secon= Math.max(
                       FSE_CONSERV_REPAR_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_CONSERV_REPAR_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_CONSERV_REPAR_ANO_N_MARCO_MAX_MIN ,
                       FSE_CONSERV_REPAR_ANO_N_ABRIL_MAX_MIN ,
                       FSE_CONSERV_REPAR_ANO_N_MAIO_MAX_MIN ,
                       FSE_CONSERV_REPAR_ANO_N_JUNHO_MAX_MIN ,
                       FSE_CONSERV_REPAR_ANO_N_JULHO_MAX_MIN ,
                       FSE_CONSERV_REPAR_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_CONSERV_REPAR_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_CONSERV_REPAR_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_CONSERV_REPAR_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_CONSERV_REPAR_ANO_N_DEZEMBRO_MAX_MIN ,



                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_DEZEMBRO"])))

                            );
    var FSE_CONSERV_REPAR_Mensal_Eixo_min_secon= Math.min(
                       FSE_CONSERV_REPAR_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_CONSERV_REPAR_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_CONSERV_REPAR_ANO_N_MARCO_MAX_MIN ,
                       FSE_CONSERV_REPAR_ANO_N_ABRIL_MAX_MIN ,
                       FSE_CONSERV_REPAR_ANO_N_MAIO_MAX_MIN ,
                       FSE_CONSERV_REPAR_ANO_N_JUNHO_MAX_MIN ,
                       FSE_CONSERV_REPAR_ANO_N_JULHO_MAX_MIN ,
                       FSE_CONSERV_REPAR_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_CONSERV_REPAR_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_CONSERV_REPAR_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_CONSERV_REPAR_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_CONSERV_REPAR_ANO_N_DEZEMBRO_MAX_MIN ,


                           @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_DEZEMBRO"])))

                          );

    //NOTA TA: Aqui trato o minimo e o maximo do eixo principal
    if(Math.abs(FSE_CONSERV_REPAR_Mensal_Eixo_max_princ)>=Math.abs(FSE_CONSERV_REPAR_Mensal_Eixo_min_princ))
    {
        var FSE_CONSERV_REPAR_Mensal_Eixo_max_princ_=(Math.ceil(FSE_CONSERV_REPAR_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_CONSERV_REPAR_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_CONSERV_REPAR_Mensal_Eixo_max_princ),0).toString().length-1);
        var FSE_CONSERV_REPAR_Mensal_Eixo_min_princ_= (Math.floor(FSE_CONSERV_REPAR_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_CONSERV_REPAR_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_CONSERV_REPAR_Mensal_Eixo_max_princ),0).toString().length-1);
        //alert(FSE_CONSERV_REPAR_Mensal_Eixo_max_princ_);
        //alert(FSE_CONSERV_REPAR_Mensal_Eixo_min_princ_);
    }
    else
    {
        var FSE_CONSERV_REPAR_Mensal_Eixo_max_princ_=(Math.ceil(FSE_CONSERV_REPAR_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_CONSERV_REPAR_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_CONSERV_REPAR_Mensal_Eixo_min_princ),0).toString().length-1);
        var FSE_CONSERV_REPAR_Mensal_Eixo_min_princ_= (Math.floor(FSE_CONSERV_REPAR_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_CONSERV_REPAR_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_CONSERV_REPAR_Mensal_Eixo_min_princ),0).toString().length-1);}

    //NOTA TA: Aqui trato o minimo e o maximo do eixo secundario

    if(Math.abs(FSE_CONSERV_REPAR_Mensal_Eixo_max_secon)>=Math.abs(FSE_CONSERV_REPAR_Mensal_Eixo_min_secon))
    {
        var FSE_CONSERV_REPAR_Mensal_Eixo_max_secon_=(Math.ceil(FSE_CONSERV_REPAR_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_CONSERV_REPAR_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_CONSERV_REPAR_Mensal_Eixo_max_secon),0).toString().length-1);
        var FSE_CONSERV_REPAR_Mensal_Eixo_min_secon_= (Math.floor(FSE_CONSERV_REPAR_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_CONSERV_REPAR_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_CONSERV_REPAR_Mensal_Eixo_max_secon),0).toString().length-1);
        //alert(FSE_CONSERV_REPAR_Mensal_Eixo_max_secon_);
        //alert(FSE_CONSERV_REPAR_Mensal_Eixo_min_secon_);
    }
    else
    {
        var FSE_CONSERV_REPAR_Mensal_Eixo_max_secon_=(Math.ceil(FSE_CONSERV_REPAR_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_CONSERV_REPAR_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_CONSERV_REPAR_Mensal_Eixo_min_secon),0).toString().length-1);
        var FSE_CONSERV_REPAR_Mensal_Eixo_min_secon_= (Math.floor(FSE_CONSERV_REPAR_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_CONSERV_REPAR_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_CONSERV_REPAR_Mensal_Eixo_min_secon),0).toString().length-1);}


    if(Math.abs(FSE_CONSERV_REPAR_Mensal_Eixo_min_princ)/Math.abs(FSE_CONSERV_REPAR_Mensal_Eixo_max_princ)>=Math.abs(FSE_CONSERV_REPAR_Mensal_Eixo_min_secon)/Math.abs(FSE_CONSERV_REPAR_Mensal_Eixo_max_secon))
    { if(FSE_CONSERV_REPAR_Mensal_Eixo_max_princ > 0 && FSE_CONSERV_REPAR_Mensal_Eixo_min_princ <0 ){ var FSE_CONSERV_REPAR_Mensal_Eixo_min_secon__=(FSE_CONSERV_REPAR_Mensal_Eixo_min_princ_*FSE_CONSERV_REPAR_Mensal_Eixo_max_secon_)/FSE_CONSERV_REPAR_Mensal_Eixo_max_princ_;} else { var FSE_CONSERV_REPAR_Mensal_Eixo_min_secon__=FSE_CONSERV_REPAR_Mensal_Eixo_min_secon_;}
        if(FSE_CONSERV_REPAR_Mensal_Eixo_max_secon > 0 && FSE_CONSERV_REPAR_Mensal_Eixo_min_secon <0 ){ var FSE_CONSERV_REPAR_Mensal_Eixo_min_princ__=(FSE_CONSERV_REPAR_Mensal_Eixo_min_secon__*FSE_CONSERV_REPAR_Mensal_Eixo_max_princ_)/FSE_CONSERV_REPAR_Mensal_Eixo_max_secon_;} else { var FSE_CONSERV_REPAR_Mensal_Eixo_min_princ__=FSE_CONSERV_REPAR_Mensal_Eixo_min_princ_;}}
    else
    {if(FSE_CONSERV_REPAR_Mensal_Eixo_max_secon > 0 && FSE_CONSERV_REPAR_Mensal_Eixo_min_secon <0 ){ var FSE_CONSERV_REPAR_Mensal_Eixo_min_princ__=(FSE_CONSERV_REPAR_Mensal_Eixo_min_secon_*FSE_CONSERV_REPAR_Mensal_Eixo_max_princ_)/FSE_CONSERV_REPAR_Mensal_Eixo_max_secon_;} else { var FSE_CONSERV_REPAR_Mensal_Eixo_min_princ__=FSE_CONSERV_REPAR_Mensal_Eixo_min_princ_;}
        if(FSE_CONSERV_REPAR_Mensal_Eixo_max_princ > 0 && FSE_CONSERV_REPAR_Mensal_Eixo_min_princ <0 ){ var FSE_CONSERV_REPAR_Mensal_Eixo_min_secon__=(FSE_CONSERV_REPAR_Mensal_Eixo_min_princ__*FSE_CONSERV_REPAR_Mensal_Eixo_max_secon_)/FSE_CONSERV_REPAR_Mensal_Eixo_max_princ_;} else { var FSE_CONSERV_REPAR_Mensal_Eixo_min_secon__=FSE_CONSERV_REPAR_Mensal_Eixo_min_secon_;}
    }



    if(Math.abs(FSE_CONSERV_REPAR_Mensal_Eixo_max_princ)/Math.abs(FSE_CONSERV_REPAR_Mensal_Eixo_min_princ)>=Math.abs(FSE_CONSERV_REPAR_Mensal_Eixo_max_secon)/Math.abs(FSE_CONSERV_REPAR_Mensal_Eixo_min_secon))
    { if(FSE_CONSERV_REPAR_Mensal_Eixo_min_princ > 0 && FSE_CONSERV_REPAR_Mensal_Eixo_max_princ <0 ){ var FSE_CONSERV_REPAR_Mensal_Eixo_max_secon__=(FSE_CONSERV_REPAR_Mensal_Eixo_max_princ_*FSE_CONSERV_REPAR_Mensal_Eixo_min_secon_)/FSE_CONSERV_REPAR_Mensal_Eixo_min_princ_;} else { var FSE_CONSERV_REPAR_Mensal_Eixo_max_secon__=FSE_CONSERV_REPAR_Mensal_Eixo_max_secon_;}
        if(FSE_CONSERV_REPAR_Mensal_Eixo_min_secon > 0 && FSE_CONSERV_REPAR_Mensal_Eixo_max_secon <0 ){ var FSE_CONSERV_REPAR_Mensal_Eixo_max_princ__=(FSE_CONSERV_REPAR_Mensal_Eixo_max_secon__*FSE_CONSERV_REPAR_Mensal_Eixo_min_princ_)/FSE_CONSERV_REPAR_Mensal_Eixo_min_secon_;} else { var FSE_CONSERV_REPAR_Mensal_Eixo_max_princ__=FSE_CONSERV_REPAR_Mensal_Eixo_max_princ_;}}
    else
    {if(FSE_CONSERV_REPAR_Mensal_Eixo_min_secon > 0 && FSE_CONSERV_REPAR_Mensal_Eixo_max_secon <0 ){ var FSE_CONSERV_REPAR_Mensal_Eixo_max_princ__=(FSE_CONSERV_REPAR_Mensal_Eixo_max_secon_*FSE_CONSERV_REPAR_Mensal_Eixo_min_princ_)/FSE_CONSERV_REPAR_Mensal_Eixo_min_secon_;} else { var FSE_CONSERV_REPAR_Mensal_Eixo_max_princ__=FSE_CONSERV_REPAR_Mensal_Eixo_max_princ_;}
        if(FSE_CONSERV_REPAR_Mensal_Eixo_min_princ > 0 && FSE_CONSERV_REPAR_Mensal_Eixo_max_princ <0 ){ var FSE_CONSERV_REPAR_Mensal_Eixo_max_secon__=(FSE_CONSERV_REPAR_Mensal_Eixo_max_princ__*FSE_CONSERV_REPAR_Mensal_Eixo_min_secon_)/FSE_CONSERV_REPAR_Mensal_Eixo_min_princ_;} else { var FSE_CONSERV_REPAR_Mensal_Eixo_max_secon__=FSE_CONSERV_REPAR_Mensal_Eixo_max_secon_;}
    }



    var GRAFICO_FSE_RESULT_MENSAL_COMP_014=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_014').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_014=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_014, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label: 'Cons. Repar.(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   data: [
                       FSE_CONSERV_REPAR_ANO_N_JANEIRO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_FEVEREIRO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_MARCO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_ABRIL_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_MAIO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_JUNHO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_JULHO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_AGOSTO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_SETEMBRO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_OUTUBRO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_NOVEMBRO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_DEZEMBRO_ACUM,
                   ],
                   type: 'line'


               },
                              {
                                  label: 'Cons. Repar.(ac) ' + ANO_VERSAO_ANTE_,
                                  yAxisID: 'A',
                                  //backgroundColor: 'rgb(201, 10, 10)',
                                  borderColor: 'rgb(0,221,0)',
                                  data: [
                       FSE_CONSERV_REPAR_ANO_N_1_JANEIRO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_1_MARCO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_1_ABRIL_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_1_MAIO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_1_JUNHO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_1_JULHO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_1_AGOSTO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_1_SETEMBRO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_1_OUTUBRO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_CONSERV_REPAR_ANO_N_1_DEZEMBRO_ACUM,
                                  ],
                                  type: 'line'


                              },
                {
                    label:  'Cons. Repar.(m) ' + ANO_VERSAO_REAL_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(250 , 83 , 0, 0.5)',
                    borderColor: 'rgba(250 , 83 , 0, 0.5)',
                    data: [
                  FSE_CONSERV_REPAR_ANO_N_JANEIRO ,
                  FSE_CONSERV_REPAR_ANO_N_FEVEREIRO ,
                  FSE_CONSERV_REPAR_ANO_N_MARCO ,
                  FSE_CONSERV_REPAR_ANO_N_ABRIL,
                  FSE_CONSERV_REPAR_ANO_N_MAIO ,
                  FSE_CONSERV_REPAR_ANO_N_JUNHO ,
                  FSE_CONSERV_REPAR_ANO_N_JULHO ,
                  FSE_CONSERV_REPAR_ANO_N_AGOSTO ,
                  FSE_CONSERV_REPAR_ANO_N_SETEMBRO ,
                  FSE_CONSERV_REPAR_ANO_N_OUTUBRO ,
                  FSE_CONSERV_REPAR_ANO_N_NOVEMBRO ,
                  FSE_CONSERV_REPAR_ANO_N_DEZEMBRO ,
                    ],
                },
                {
                    label:  'Cons. Repar.(m) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(0,221,0, 0.4)',
                    borderColor: 'rgba(0,221,0, 0.4)',
                    data: [
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_JANEIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_FEVEREIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_MARCO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_ABRIL"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_MAIO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_JUNHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_JULHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_AGOSTO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_SETEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_OUTUBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_NOVEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_CONSERV_REPAR_ANO_N_1_DEZEMBRO"]))),
                    ],
                },


            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_CONSERV_REPAR_MENSAL_1',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                min:  Math.round(FSE_CONSERV_REPAR_Mensal_Eixo_min_princ__,0),
                                                max:  Math.round(FSE_CONSERV_REPAR_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString();
                                                }
                                            }
                                        },

                    { id: 'B',
                        type: 'linear',
                        position: 'right',
                        ticks: {
                            min: Math.round(FSE_CONSERV_REPAR_Mensal_Eixo_min_secon__,0),
                            max:  Math.round(FSE_CONSERV_REPAR_Mensal_Eixo_max_secon__,0),
                            beginAtZero: false,
                            callback: function(value, index, values) {
                                return value.toLocaleString();
                            }
                        }
                    },






                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_015-----------------------------------------------------------*@
<script>

    var IND_VN_ANO_N_JANEIRO_ACUM = IND_VN_ANO_N_JANEIRO;
    var IND_VN_ANO_N_FEVEREIRO_ACUM = IND_VN_ANO_N_FEVEREIRO + IND_VN_ANO_N_JANEIRO_ACUM;
    var IND_VN_ANO_N_MARCO_ACUM = IND_VN_ANO_N_MARCO + IND_VN_ANO_N_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_ABRIL_ACUM = IND_VN_ANO_N_ABRIL + IND_VN_ANO_N_MARCO_ACUM;
    var IND_VN_ANO_N_MAIO_ACUM = IND_VN_ANO_N_MAIO + IND_VN_ANO_N_ABRIL_ACUM;
    var IND_VN_ANO_N_JUNHO_ACUM = IND_VN_ANO_N_JUNHO + IND_VN_ANO_N_MAIO_ACUM;
    var IND_VN_ANO_N_JULHO_ACUM = IND_VN_ANO_N_JULHO + IND_VN_ANO_N_JUNHO_ACUM;
    var IND_VN_ANO_N_AGOSTO_ACUM = IND_VN_ANO_N_AGOSTO + IND_VN_ANO_N_JULHO_ACUM;
    var IND_VN_ANO_N_SETEMBRO_ACUM = IND_VN_ANO_N_SETEMBRO + IND_VN_ANO_N_AGOSTO_ACUM;
    var IND_VN_ANO_N_OUTUBRO_ACUM = IND_VN_ANO_N_OUTUBRO + IND_VN_ANO_N_SETEMBRO_ACUM;
    var IND_VN_ANO_N_NOVEMBRO_ACUM = IND_VN_ANO_N_NOVEMBRO + IND_VN_ANO_N_OUTUBRO_ACUM;
    var IND_VN_ANO_N_DEZEMBRO_ACUM = IND_VN_ANO_N_DEZEMBRO + IND_VN_ANO_N_NOVEMBRO_ACUM;



    var IND_VN_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JANEIRO"])));
    var IND_VN_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_FEVEREIRO"]))) + IND_VN_ANO_N_1_JANEIRO_ACUM;
    var IND_VN_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MARCO"]))) + IND_VN_ANO_N_1_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_ABRIL"]))) + IND_VN_ANO_N_1_MARCO_ACUM;
    var IND_VN_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MAIO"]))) + IND_VN_ANO_N_1_ABRIL_ACUM;
    var IND_VN_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JUNHO"]))) + IND_VN_ANO_N_1_MAIO_ACUM;
    var IND_VN_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JULHO"]))) + IND_VN_ANO_N_1_JUNHO_ACUM;
    var IND_VN_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_AGOSTO"]))) + IND_VN_ANO_N_1_JULHO_ACUM;
    var IND_VN_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_SETEMBRO"]))) + IND_VN_ANO_N_1_AGOSTO_ACUM;
    var IND_VN_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_OUTUBRO"]))) + IND_VN_ANO_N_1_SETEMBRO_ACUM;
    var IND_VN_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_NOVEMBRO"]))) + IND_VN_ANO_N_1_OUTUBRO_ACUM;
    var IND_VN_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_DEZEMBRO"]))) + IND_VN_ANO_N_1_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_CONSERV_REPAR_VN_ANO_N_JANEIRO_ACUM = 'nd'; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONSERV_REPAR_VN_ANO_N_JANEIRO_ACUM= FSE_CONSERV_REPAR_ANO_N_JANEIRO_ACUM/IND_VN_ANO_N_JANEIRO_ACUM*100; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = PESO_FSE_CONSERV_REPAR_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_CONSERV_REPAR_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONSERV_REPAR_VN_ANO_N_FEVEREIRO_ACUM= FSE_CONSERV_REPAR_ANO_N_FEVEREIRO_ACUM/IND_VN_ANO_N_FEVEREIRO_ACUM*100; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_CONSERV_REPAR_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_CONSERV_REPAR_VN_ANO_N_MARCO_ACUM = 'nd'; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONSERV_REPAR_VN_ANO_N_MARCO_ACUM= FSE_CONSERV_REPAR_ANO_N_MARCO_ACUM/IND_VN_ANO_N_MARCO_ACUM*100; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = PESO_FSE_CONSERV_REPAR_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_CONSERV_REPAR_VN_ANO_N_ABRIL_ACUM = 'nd'; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONSERV_REPAR_VN_ANO_N_ABRIL_ACUM= FSE_CONSERV_REPAR_ANO_N_ABRIL_ACUM/IND_VN_ANO_N_ABRIL_ACUM*100; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = PESO_FSE_CONSERV_REPAR_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_CONSERV_REPAR_VN_ANO_N_MAIO_ACUM = 'nd'; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONSERV_REPAR_VN_ANO_N_MAIO_ACUM= FSE_CONSERV_REPAR_ANO_N_MAIO_ACUM/IND_VN_ANO_N_MAIO_ACUM*100; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = PESO_FSE_CONSERV_REPAR_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_CONSERV_REPAR_VN_ANO_N_JUNHO_ACUM = 'nd'; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONSERV_REPAR_VN_ANO_N_JUNHO_ACUM= FSE_CONSERV_REPAR_ANO_N_JUNHO_ACUM/IND_VN_ANO_N_JUNHO_ACUM*100; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = PESO_FSE_CONSERV_REPAR_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_CONSERV_REPAR_VN_ANO_N_JULHO_ACUM = 'nd'; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONSERV_REPAR_VN_ANO_N_JULHO_ACUM= FSE_CONSERV_REPAR_ANO_N_JULHO_ACUM/IND_VN_ANO_N_JULHO_ACUM*100; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = PESO_FSE_CONSERV_REPAR_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_CONSERV_REPAR_VN_ANO_N_AGOSTO_ACUM = 'nd'; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONSERV_REPAR_VN_ANO_N_AGOSTO_ACUM= FSE_CONSERV_REPAR_ANO_N_AGOSTO_ACUM/IND_VN_ANO_N_AGOSTO_ACUM*100; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = PESO_FSE_CONSERV_REPAR_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_CONSERV_REPAR_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONSERV_REPAR_VN_ANO_N_SETEMBRO_ACUM= FSE_CONSERV_REPAR_ANO_N_SETEMBRO_ACUM/IND_VN_ANO_N_SETEMBRO_ACUM*100; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_CONSERV_REPAR_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_CONSERV_REPAR_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONSERV_REPAR_VN_ANO_N_OUTUBRO_ACUM= FSE_CONSERV_REPAR_ANO_N_OUTUBRO_ACUM/IND_VN_ANO_N_OUTUBRO_ACUM*100; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_CONSERV_REPAR_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_CONSERV_REPAR_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONSERV_REPAR_VN_ANO_N_NOVEMBRO_ACUM= FSE_CONSERV_REPAR_ANO_N_NOVEMBRO_ACUM/IND_VN_ANO_N_NOVEMBRO_ACUM*100; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_CONSERV_REPAR_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_CONSERV_REPAR_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONSERV_REPAR_VN_ANO_N_DEZEMBRO_ACUM= FSE_CONSERV_REPAR_ANO_N_DEZEMBRO_ACUM/IND_VN_ANO_N_DEZEMBRO_ACUM*100; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_CONSERV_REPAR_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_JANEIRO_ACUM = 'nd'; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_JANEIRO_ACUM= FSE_CONSERV_REPAR_ANO_N_1_JANEIRO_ACUM/IND_VN_ANO_N_1_JANEIRO_ACUM*100; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_FEVEREIRO_ACUM= FSE_CONSERV_REPAR_ANO_N_1_FEVEREIRO_ACUM/IND_VN_ANO_N_1_FEVEREIRO_ACUM*100; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_MARCO_ACUM = 'nd'; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_MARCO_ACUM= FSE_CONSERV_REPAR_ANO_N_1_MARCO_ACUM/IND_VN_ANO_N_1_MARCO_ACUM*100; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_ABRIL_ACUM = 'nd'; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_ABRIL_ACUM= FSE_CONSERV_REPAR_ANO_N_1_ABRIL_ACUM/IND_VN_ANO_N_1_ABRIL_ACUM*100; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_MAIO_ACUM = 'nd'; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_MAIO_ACUM= FSE_CONSERV_REPAR_ANO_N_1_MAIO_ACUM/IND_VN_ANO_N_1_MAIO_ACUM*100; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_JUNHO_ACUM = 'nd'; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_JUNHO_ACUM= FSE_CONSERV_REPAR_ANO_N_1_JUNHO_ACUM/IND_VN_ANO_N_1_JUNHO_ACUM*100; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_JULHO_ACUM = 'nd'; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_JULHO_ACUM= FSE_CONSERV_REPAR_ANO_N_1_JULHO_ACUM/IND_VN_ANO_N_1_JULHO_ACUM*100; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_AGOSTO_ACUM = 'nd'; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_AGOSTO_ACUM= FSE_CONSERV_REPAR_ANO_N_1_AGOSTO_ACUM/IND_VN_ANO_N_1_AGOSTO_ACUM*100; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_SETEMBRO_ACUM = 'nd'; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_SETEMBRO_ACUM= FSE_CONSERV_REPAR_ANO_N_1_SETEMBRO_ACUM/IND_VN_ANO_N_1_SETEMBRO_ACUM*100; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_OUTUBRO_ACUM = 'nd'; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_OUTUBRO_ACUM= FSE_CONSERV_REPAR_ANO_N_1_OUTUBRO_ACUM/IND_VN_ANO_N_1_OUTUBRO_ACUM*100; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_NOVEMBRO_ACUM= FSE_CONSERV_REPAR_ANO_N_1_NOVEMBRO_ACUM/IND_VN_ANO_N_1_NOVEMBRO_ACUM*100; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_DEZEMBRO_ACUM= FSE_CONSERV_REPAR_ANO_N_1_DEZEMBRO_ACUM/IND_VN_ANO_N_1_DEZEMBRO_ACUM*100; var PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_VN_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JANEIRO_ACUM= ((IND_VN_ANO_N_JANEIRO_ACUM-IND_VN_ANO_N_1_JANEIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_JANEIRO_ACUM))*100; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_FEVEREIRO_ACUM= ((IND_VN_ANO_N_FEVEREIRO_ACUM-IND_VN_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_VN_ANO_N_MARCO_ACUM = 'nd'; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MARCO_ACUM= ((IND_VN_ANO_N_MARCO_ACUM-IND_VN_ANO_N_1_MARCO_ACUM)/Math.abs(IND_VN_ANO_N_1_MARCO_ACUM))*100; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = VAR_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_VN_ANO_N_ABRIL_ACUM = 'nd'; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_ABRIL_ACUM= ((IND_VN_ANO_N_ABRIL_ACUM-IND_VN_ANO_N_1_ABRIL_ACUM)/Math.abs(IND_VN_ANO_N_1_ABRIL_ACUM))*100; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_VN_ANO_N_MAIO_ACUM = 'nd'; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MAIO_ACUM= ((IND_VN_ANO_N_MAIO_ACUM-IND_VN_ANO_N_1_MAIO_ACUM)/Math.abs(IND_VN_ANO_N_1_MAIO_ACUM))*100; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = VAR_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_VN_ANO_N_JUNHO_ACUM = 'nd'; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JUNHO_ACUM= ((IND_VN_ANO_N_JUNHO_ACUM-IND_VN_ANO_N_1_JUNHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JUNHO_ACUM))*100; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_VN_ANO_N_JULHO_ACUM = 'nd'; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JULHO_ACUM= ((IND_VN_ANO_N_JULHO_ACUM-IND_VN_ANO_N_1_JULHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JULHO_ACUM))*100; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_VN_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_AGOSTO_ACUM= ((IND_VN_ANO_N_AGOSTO_ACUM-IND_VN_ANO_N_1_AGOSTO_ACUM)/Math.abs(IND_VN_ANO_N_1_AGOSTO_ACUM))*100; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_SETEMBRO_ACUM= ((IND_VN_ANO_N_SETEMBRO_ACUM-IND_VN_ANO_N_1_SETEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_OUTUBRO_ACUM= ((IND_VN_ANO_N_OUTUBRO_ACUM-IND_VN_ANO_N_1_OUTUBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_NOVEMBRO_ACUM= ((IND_VN_ANO_N_NOVEMBRO_ACUM-IND_VN_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_DEZEMBRO_ACUM= ((IND_VN_ANO_N_DEZEMBRO_ACUM-IND_VN_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_FSE_CONSERV_REPAR_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_FSE_CONSERV_REPAR_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_CONSERV_REPAR_ANO_N_JANEIRO_ACUM= ((FSE_CONSERV_REPAR_ANO_N_JANEIRO_ACUM-FSE_CONSERV_REPAR_ANO_N_1_JANEIRO_ACUM)/Math.abs(FSE_CONSERV_REPAR_ANO_N_1_JANEIRO_ACUM))*100; var VAR_FSE_CONSERV_REPAR_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_FSE_CONSERV_REPAR_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_FSE_CONSERV_REPAR_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_FSE_CONSERV_REPAR_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_CONSERV_REPAR_ANO_N_FEVEREIRO_ACUM= ((FSE_CONSERV_REPAR_ANO_N_FEVEREIRO_ACUM-FSE_CONSERV_REPAR_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(FSE_CONSERV_REPAR_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_FSE_CONSERV_REPAR_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_FSE_CONSERV_REPAR_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_FSE_CONSERV_REPAR_ANO_N_MARCO_ACUM = 'nd'; var VAR_FSE_CONSERV_REPAR_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_CONSERV_REPAR_ANO_N_MARCO_ACUM= ((FSE_CONSERV_REPAR_ANO_N_MARCO_ACUM-FSE_CONSERV_REPAR_ANO_N_1_MARCO_ACUM)/Math.abs(FSE_CONSERV_REPAR_ANO_N_1_MARCO_ACUM))*100; var VAR_FSE_CONSERV_REPAR_ANO_N_MARCO_ACUM_MAX_MIN = VAR_FSE_CONSERV_REPAR_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_FSE_CONSERV_REPAR_ANO_N_ABRIL_ACUM = 'nd'; var VAR_FSE_CONSERV_REPAR_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_CONSERV_REPAR_ANO_N_ABRIL_ACUM= ((FSE_CONSERV_REPAR_ANO_N_ABRIL_ACUM-FSE_CONSERV_REPAR_ANO_N_1_ABRIL_ACUM)/Math.abs(FSE_CONSERV_REPAR_ANO_N_1_ABRIL_ACUM))*100; var VAR_FSE_CONSERV_REPAR_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_FSE_CONSERV_REPAR_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_FSE_CONSERV_REPAR_ANO_N_MAIO_ACUM = 'nd'; var VAR_FSE_CONSERV_REPAR_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_CONSERV_REPAR_ANO_N_MAIO_ACUM= ((FSE_CONSERV_REPAR_ANO_N_MAIO_ACUM-FSE_CONSERV_REPAR_ANO_N_1_MAIO_ACUM)/Math.abs(FSE_CONSERV_REPAR_ANO_N_1_MAIO_ACUM))*100; var VAR_FSE_CONSERV_REPAR_ANO_N_MAIO_ACUM_MAX_MIN = VAR_FSE_CONSERV_REPAR_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_FSE_CONSERV_REPAR_ANO_N_JUNHO_ACUM = 'nd'; var VAR_FSE_CONSERV_REPAR_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_CONSERV_REPAR_ANO_N_JUNHO_ACUM= ((FSE_CONSERV_REPAR_ANO_N_JUNHO_ACUM-FSE_CONSERV_REPAR_ANO_N_1_JUNHO_ACUM)/Math.abs(FSE_CONSERV_REPAR_ANO_N_1_JUNHO_ACUM))*100; var VAR_FSE_CONSERV_REPAR_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_FSE_CONSERV_REPAR_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_FSE_CONSERV_REPAR_ANO_N_JULHO_ACUM = 'nd'; var VAR_FSE_CONSERV_REPAR_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_CONSERV_REPAR_ANO_N_JULHO_ACUM= ((FSE_CONSERV_REPAR_ANO_N_JULHO_ACUM-FSE_CONSERV_REPAR_ANO_N_1_JULHO_ACUM)/Math.abs(FSE_CONSERV_REPAR_ANO_N_1_JULHO_ACUM))*100; var VAR_FSE_CONSERV_REPAR_ANO_N_JULHO_ACUM_MAX_MIN = VAR_FSE_CONSERV_REPAR_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_FSE_CONSERV_REPAR_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_FSE_CONSERV_REPAR_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_CONSERV_REPAR_ANO_N_AGOSTO_ACUM= ((FSE_CONSERV_REPAR_ANO_N_AGOSTO_ACUM-FSE_CONSERV_REPAR_ANO_N_1_AGOSTO_ACUM)/Math.abs(FSE_CONSERV_REPAR_ANO_N_1_AGOSTO_ACUM))*100; var VAR_FSE_CONSERV_REPAR_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_FSE_CONSERV_REPAR_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_FSE_CONSERV_REPAR_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_FSE_CONSERV_REPAR_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_CONSERV_REPAR_ANO_N_SETEMBRO_ACUM= ((FSE_CONSERV_REPAR_ANO_N_SETEMBRO_ACUM-FSE_CONSERV_REPAR_ANO_N_1_SETEMBRO_ACUM)/Math.abs(FSE_CONSERV_REPAR_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_FSE_CONSERV_REPAR_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_FSE_CONSERV_REPAR_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_FSE_CONSERV_REPAR_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_FSE_CONSERV_REPAR_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_CONSERV_REPAR_ANO_N_OUTUBRO_ACUM= ((FSE_CONSERV_REPAR_ANO_N_OUTUBRO_ACUM-FSE_CONSERV_REPAR_ANO_N_1_OUTUBRO_ACUM)/Math.abs(FSE_CONSERV_REPAR_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_FSE_CONSERV_REPAR_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_FSE_CONSERV_REPAR_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_FSE_CONSERV_REPAR_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_FSE_CONSERV_REPAR_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_CONSERV_REPAR_ANO_N_NOVEMBRO_ACUM= ((FSE_CONSERV_REPAR_ANO_N_NOVEMBRO_ACUM-FSE_CONSERV_REPAR_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(FSE_CONSERV_REPAR_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_FSE_CONSERV_REPAR_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_FSE_CONSERV_REPAR_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_FSE_CONSERV_REPAR_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_FSE_CONSERV_REPAR_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_CONSERV_REPAR_ANO_N_DEZEMBRO_ACUM= ((FSE_CONSERV_REPAR_ANO_N_DEZEMBRO_ACUM-FSE_CONSERV_REPAR_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(FSE_CONSERV_REPAR_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_FSE_CONSERV_REPAR_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_FSE_CONSERV_REPAR_ANO_N_DEZEMBRO_ACUM };

    if( PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_JANEIRO_ACUM > PESO_FSE_CONSERV_REPAR_VN_ANO_N_JANEIRO_ACUM) { var  INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_JANEIRO_ACUM=PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_JANEIRO_ACUM ; } else { var  INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_JANEIRO_ACUM=PESO_FSE_CONSERV_REPAR_VN_ANO_N_JANEIRO_ACUM ; }
    if( PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_FEVEREIRO_ACUM > PESO_FSE_CONSERV_REPAR_VN_ANO_N_FEVEREIRO_ACUM) { var  INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_FEVEREIRO_ACUM=PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_FEVEREIRO_ACUM ; } else { var  INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_FEVEREIRO_ACUM=PESO_FSE_CONSERV_REPAR_VN_ANO_N_FEVEREIRO_ACUM ; }
    if( PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_MARCO_ACUM > PESO_FSE_CONSERV_REPAR_VN_ANO_N_MARCO_ACUM) { var  INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_MARCO_ACUM=PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_MARCO_ACUM ; } else { var  INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_MARCO_ACUM=PESO_FSE_CONSERV_REPAR_VN_ANO_N_MARCO_ACUM ; }
    if( PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_ABRIL_ACUM > PESO_FSE_CONSERV_REPAR_VN_ANO_N_ABRIL_ACUM) { var  INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_ABRIL_ACUM=PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_ABRIL_ACUM ; } else { var  INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_ABRIL_ACUM=PESO_FSE_CONSERV_REPAR_VN_ANO_N_ABRIL_ACUM ; }
    if( PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_MAIO_ACUM > PESO_FSE_CONSERV_REPAR_VN_ANO_N_MAIO_ACUM) { var  INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_MAIO_ACUM=PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_MAIO_ACUM ; } else { var  INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_MAIO_ACUM=PESO_FSE_CONSERV_REPAR_VN_ANO_N_MAIO_ACUM ; }
    if( PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_JUNHO_ACUM > PESO_FSE_CONSERV_REPAR_VN_ANO_N_JUNHO_ACUM) { var  INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_JUNHO_ACUM=PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_JUNHO_ACUM ; } else { var  INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_JUNHO_ACUM=PESO_FSE_CONSERV_REPAR_VN_ANO_N_JUNHO_ACUM ; }
    if( PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_JULHO_ACUM > PESO_FSE_CONSERV_REPAR_VN_ANO_N_JULHO_ACUM) { var  INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_JULHO_ACUM=PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_JULHO_ACUM ; } else { var  INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_JULHO_ACUM=PESO_FSE_CONSERV_REPAR_VN_ANO_N_JULHO_ACUM ; }
    if( PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_AGOSTO_ACUM > PESO_FSE_CONSERV_REPAR_VN_ANO_N_AGOSTO_ACUM) { var  INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_AGOSTO_ACUM=PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_AGOSTO_ACUM ; } else { var  INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_AGOSTO_ACUM=PESO_FSE_CONSERV_REPAR_VN_ANO_N_AGOSTO_ACUM ; }
    if( PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_SETEMBRO_ACUM > PESO_FSE_CONSERV_REPAR_VN_ANO_N_SETEMBRO_ACUM) { var  INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_SETEMBRO_ACUM=PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_SETEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_SETEMBRO_ACUM=PESO_FSE_CONSERV_REPAR_VN_ANO_N_SETEMBRO_ACUM ; }
    if( PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_OUTUBRO_ACUM > PESO_FSE_CONSERV_REPAR_VN_ANO_N_OUTUBRO_ACUM) { var  INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_OUTUBRO_ACUM=PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_OUTUBRO_ACUM ; } else { var  INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_OUTUBRO_ACUM=PESO_FSE_CONSERV_REPAR_VN_ANO_N_OUTUBRO_ACUM ; }
    if( PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_NOVEMBRO_ACUM > PESO_FSE_CONSERV_REPAR_VN_ANO_N_NOVEMBRO_ACUM) { var  INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_NOVEMBRO_ACUM=PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_NOVEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_NOVEMBRO_ACUM=PESO_FSE_CONSERV_REPAR_VN_ANO_N_NOVEMBRO_ACUM ; }
    if( PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_DEZEMBRO_ACUM > PESO_FSE_CONSERV_REPAR_VN_ANO_N_DEZEMBRO_ACUM) { var  INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_DEZEMBRO_ACUM=PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_DEZEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_DEZEMBRO_ACUM=PESO_FSE_CONSERV_REPAR_VN_ANO_N_DEZEMBRO_ACUM ; }



    var fillBetweenLinesPlugin = {
        afterDatasetsDraw: function (chart) {
            var ctx = chart.chart.ctx;
            var xaxis = chart.scales['x-axis-0'];
            var yaxis = chart.scales['y-axis-0'];
            var datasets = chart.data.datasets;
            ctx.save();

            for (var d = 0; d < datasets.length; d++) {
                var dataset = datasets[d];
                if (dataset.fillBetweenSet == undefined) {
                    continue;
                }

                // get meta for both data sets
                var meta1 = chart.getDatasetMeta(d);
                var meta2 = chart.getDatasetMeta(dataset.fillBetweenSet);

                // do not draw fill if one of the datasets is hidden
                if (meta1.hidden || meta2.hidden) continue;

                // create fill areas in pairs
                for (var p = 0; p < meta1.data.length-1;p++) {
                    // if null skip
                    if (dataset.data[p] == null || dataset.data[p+1] == null) continue;

                    ctx.beginPath();

                    // trace line 1
                    var curr = meta1.data[p];
                    var next = meta1.data[p+1];
                    ctx.moveTo(curr._view.x, curr._view.y);
                    ctx.lineTo(curr._view.x, curr._view.y);
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(next._view.x, curr._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        ctx.bezierCurveTo(
                          curr._view.controlPointNextX,
                          curr._view.controlPointNextY,
                          next._view.controlPointPreviousX,
                          next._view.controlPointPreviousY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // connect dataset1 to dataset2
                    var curr = meta2.data[p+1];
                    var next = meta2.data[p];
                    ctx.lineTo(curr._view.x, curr._view.y);

                    // trace BACKWORDS set2 to complete the box
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(curr._view.x, next._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        // reverse bezier
                        ctx.bezierCurveTo(
                          curr._view.controlPointPreviousX,
                          curr._view.controlPointPreviousY,
                          next._view.controlPointNextX,
                          next._view.controlPointNextY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // close the loop and fill with shading
                    ctx.closePath();
                    ctx.fillStyle = dataset.fillBetweenColor || "rgba(0,0,0,0.1)";
                    ctx.fill();
                } // end for p loop
            }
        } // end afterDatasetsDraw
    }; // end fillBetweenLinesPlugin

    Chart.pluginService.register(fillBetweenLinesPlugin);



    var GRAFICO_FSE_RESULT_MENSAL_COMP_015=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_015').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_015=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_015, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label:  'Peso Cons. Repar.vsVN(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   //borderColor: "#F00",
                   fill: false,
                   steppedLine: false,
                   tension: 0.5,
                   fillBetweenSet: 1,
                   fillBetweenColor: "rgba(0, 221, 0, 0.1)",
                   data: [
                   PESO_FSE_CONSERV_REPAR_VN_ANO_N_JANEIRO_ACUM,
                   PESO_FSE_CONSERV_REPAR_VN_ANO_N_FEVEREIRO_ACUM,
                   PESO_FSE_CONSERV_REPAR_VN_ANO_N_MARCO_ACUM,
                   PESO_FSE_CONSERV_REPAR_VN_ANO_N_ABRIL_ACUM,
                   PESO_FSE_CONSERV_REPAR_VN_ANO_N_MAIO_ACUM,
                   PESO_FSE_CONSERV_REPAR_VN_ANO_N_JUNHO_ACUM,
                   PESO_FSE_CONSERV_REPAR_VN_ANO_N_JULHO_ACUM,
                   PESO_FSE_CONSERV_REPAR_VN_ANO_N_AGOSTO_ACUM,
                   PESO_FSE_CONSERV_REPAR_VN_ANO_N_SETEMBRO_ACUM,
                   PESO_FSE_CONSERV_REPAR_VN_ANO_N_OUTUBRO_ACUM,
                   PESO_FSE_CONSERV_REPAR_VN_ANO_N_NOVEMBRO_ACUM,
                   PESO_FSE_CONSERV_REPAR_VN_ANO_N_DEZEMBRO_ACUM,

                   ],
                   type: 'line'


               },
                {
                    label: 'Peso Cons. Repar.vsVN(ac) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'A',
                    //backgroundColor: 'rgb(17, 121, 240)',
                    borderColor: 'rgb(0,221,0)',
                    //borderColor: "#00F",
                    fill: false,
                    steppedLine: false,
                    tension: 0.5,
                    data: [
                   PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_JANEIRO_ACUM,
                   PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_FEVEREIRO_ACUM,
                   PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_MARCO_ACUM,
                   PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_ABRIL_ACUM,
                   PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_MAIO_ACUM,
                   PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_JUNHO_ACUM,
                   PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_JULHO_ACUM,
                   PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_AGOSTO_ACUM,
                   PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_SETEMBRO_ACUM,
                   PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_OUTUBRO_ACUM,
                   PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_NOVEMBRO_ACUM,
                   PESO_FSE_CONSERV_REPAR_VN_ANO_N_1_DEZEMBRO_ACUM,
                    ],
                    type: 'line'
                },
    {
        label: 'Ineficiência',
        yAxisID: 'A',
        backgroundColor: "rgba(255, 0, 0, 0.2)",
        borderColor: 'rgba(255, 255, 255, 0.1)',
        //borderColor: "#0D0",
        fill: false,
        steppedLine: false,
        tension: 0.5,
        fillBetweenSet: 1,
        fillBetweenColor: "rgba(255, 0, 0, 0.2)",
        data: [
    INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_JANEIRO_ACUM,
    INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_FEVEREIRO_ACUM,
    INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_MARCO_ACUM,
    INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_ABRIL_ACUM,
    INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_MAIO_ACUM,
    INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_JUNHO_ACUM,
    INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_JULHO_ACUM,
    INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_AGOSTO_ACUM,
    INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_SETEMBRO_ACUM,
    INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_OUTUBRO_ACUM,
    INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_NOVEMBRO_ACUM,
    INEFICIENCIA_FSE_CONSERV_REPAR_ANO_N_DEZEMBRO_ACUM,
        ],
        type: 'line'
    },

            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_Cons. Repar. COMP',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                //min:  Math.round(FSE_CONSERV_REPAR_Mensal_Eixo_min_princ__,0),
                                                //max:  Math.round(FSE_CONSERV_REPAR_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString()+ "%";
                                                }
                                            }
                                        },







                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_016-----------------------------------------------------------*@
<script>

    if(@ViewData["MES_ACUM_REAL"]<1){ var IND_VN_ANO_N_JANEIRO = 'nd'; var IND_VN_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JANEIRO"]))); var IND_VN_ANO_N_JANEIRO_MAX_MIN = IND_VN_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var IND_VN_ANO_N_FEVEREIRO = 'nd'; var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_FEVEREIRO"]))); var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = IND_VN_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var IND_VN_ANO_N_MARCO = 'nd'; var IND_VN_ANO_N_MARCO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MARCO"]))); var IND_VN_ANO_N_MARCO_MAX_MIN = IND_VN_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var IND_VN_ANO_N_ABRIL = 'nd'; var IND_VN_ANO_N_ABRIL_MAX_MIN = 0;  } else { var IND_VN_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_ABRIL"]))); var IND_VN_ANO_N_ABRIL_MAX_MIN = IND_VN_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var IND_VN_ANO_N_MAIO = 'nd'; var IND_VN_ANO_N_MAIO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MAIO"]))); var IND_VN_ANO_N_MAIO_MAX_MIN = IND_VN_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var IND_VN_ANO_N_JUNHO = 'nd'; var IND_VN_ANO_N_JUNHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JUNHO"]))); var IND_VN_ANO_N_JUNHO_MAX_MIN = IND_VN_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var IND_VN_ANO_N_JULHO = 'nd'; var IND_VN_ANO_N_JULHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JULHO"]))); var IND_VN_ANO_N_JULHO_MAX_MIN = IND_VN_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var IND_VN_ANO_N_AGOSTO = 'nd'; var IND_VN_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_AGOSTO"]))); var IND_VN_ANO_N_AGOSTO_MAX_MIN = IND_VN_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var IND_VN_ANO_N_SETEMBRO = 'nd'; var IND_VN_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_SETEMBRO"]))); var IND_VN_ANO_N_SETEMBRO_MAX_MIN = IND_VN_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var IND_VN_ANO_N_OUTUBRO = 'nd'; var IND_VN_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_OUTUBRO"]))); var IND_VN_ANO_N_OUTUBRO_MAX_MIN = IND_VN_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var IND_VN_ANO_N_NOVEMBRO = 'nd'; var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_NOVEMBRO"]))); var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = IND_VN_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var IND_VN_ANO_N_DEZEMBRO = 'nd'; var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_DEZEMBRO"]))); var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = IND_VN_ANO_N_DEZEMBRO };

    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_OUTROS_SERV_ESPECIAL_ANO_N_JANEIRO = 'nd'; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_ESPECIAL_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_JANEIRO"]))); var FSE_OUTROS_SERV_ESPECIAL_ANO_N_JANEIRO_MAX_MIN = FSE_OUTROS_SERV_ESPECIAL_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_OUTROS_SERV_ESPECIAL_ANO_N_FEVEREIRO = 'nd'; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_ESPECIAL_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_FEVEREIRO"]))); var FSE_OUTROS_SERV_ESPECIAL_ANO_N_FEVEREIRO_MAX_MIN = FSE_OUTROS_SERV_ESPECIAL_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_OUTROS_SERV_ESPECIAL_ANO_N_MARCO = 'nd'; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_MARCO_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_ESPECIAL_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_MARCO"]))); var FSE_OUTROS_SERV_ESPECIAL_ANO_N_MARCO_MAX_MIN = FSE_OUTROS_SERV_ESPECIAL_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_OUTROS_SERV_ESPECIAL_ANO_N_ABRIL = 'nd'; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_ABRIL_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_ESPECIAL_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_ABRIL"]))); var FSE_OUTROS_SERV_ESPECIAL_ANO_N_ABRIL_MAX_MIN = FSE_OUTROS_SERV_ESPECIAL_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_OUTROS_SERV_ESPECIAL_ANO_N_MAIO = 'nd'; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_MAIO_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_ESPECIAL_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_MAIO"]))); var FSE_OUTROS_SERV_ESPECIAL_ANO_N_MAIO_MAX_MIN = FSE_OUTROS_SERV_ESPECIAL_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_OUTROS_SERV_ESPECIAL_ANO_N_JUNHO = 'nd'; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_JUNHO_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_ESPECIAL_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_JUNHO"]))); var FSE_OUTROS_SERV_ESPECIAL_ANO_N_JUNHO_MAX_MIN = FSE_OUTROS_SERV_ESPECIAL_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_OUTROS_SERV_ESPECIAL_ANO_N_JULHO = 'nd'; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_JULHO_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_ESPECIAL_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_JULHO"]))); var FSE_OUTROS_SERV_ESPECIAL_ANO_N_JULHO_MAX_MIN = FSE_OUTROS_SERV_ESPECIAL_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_OUTROS_SERV_ESPECIAL_ANO_N_AGOSTO = 'nd'; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_ESPECIAL_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_AGOSTO"]))); var FSE_OUTROS_SERV_ESPECIAL_ANO_N_AGOSTO_MAX_MIN = FSE_OUTROS_SERV_ESPECIAL_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_OUTROS_SERV_ESPECIAL_ANO_N_SETEMBRO = 'nd'; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_ESPECIAL_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_SETEMBRO"]))); var FSE_OUTROS_SERV_ESPECIAL_ANO_N_SETEMBRO_MAX_MIN = FSE_OUTROS_SERV_ESPECIAL_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_OUTROS_SERV_ESPECIAL_ANO_N_OUTUBRO = 'nd'; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_ESPECIAL_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_OUTUBRO"]))); var FSE_OUTROS_SERV_ESPECIAL_ANO_N_OUTUBRO_MAX_MIN = FSE_OUTROS_SERV_ESPECIAL_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_OUTROS_SERV_ESPECIAL_ANO_N_NOVEMBRO = 'nd'; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_ESPECIAL_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_NOVEMBRO"]))); var FSE_OUTROS_SERV_ESPECIAL_ANO_N_NOVEMBRO_MAX_MIN = FSE_OUTROS_SERV_ESPECIAL_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_OUTROS_SERV_ESPECIAL_ANO_N_DEZEMBRO = 'nd'; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_ESPECIAL_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_DEZEMBRO"]))); var FSE_OUTROS_SERV_ESPECIAL_ANO_N_DEZEMBRO_MAX_MIN = FSE_OUTROS_SERV_ESPECIAL_ANO_N_DEZEMBRO };


    var FSE_OUTROS_SERV_ESPECIAL_ANO_N_JANEIRO_ACUM = FSE_OUTROS_SERV_ESPECIAL_ANO_N_JANEIRO;
    var FSE_OUTROS_SERV_ESPECIAL_ANO_N_FEVEREIRO_ACUM = FSE_OUTROS_SERV_ESPECIAL_ANO_N_FEVEREIRO + FSE_OUTROS_SERV_ESPECIAL_ANO_N_JANEIRO_ACUM;
    var FSE_OUTROS_SERV_ESPECIAL_ANO_N_MARCO_ACUM = FSE_OUTROS_SERV_ESPECIAL_ANO_N_MARCO + FSE_OUTROS_SERV_ESPECIAL_ANO_N_FEVEREIRO_ACUM;
    var FSE_OUTROS_SERV_ESPECIAL_ANO_N_ABRIL_ACUM = FSE_OUTROS_SERV_ESPECIAL_ANO_N_ABRIL + FSE_OUTROS_SERV_ESPECIAL_ANO_N_MARCO_ACUM;
    var FSE_OUTROS_SERV_ESPECIAL_ANO_N_MAIO_ACUM = FSE_OUTROS_SERV_ESPECIAL_ANO_N_MAIO + FSE_OUTROS_SERV_ESPECIAL_ANO_N_ABRIL_ACUM;
    var FSE_OUTROS_SERV_ESPECIAL_ANO_N_JUNHO_ACUM = FSE_OUTROS_SERV_ESPECIAL_ANO_N_JUNHO + FSE_OUTROS_SERV_ESPECIAL_ANO_N_MAIO_ACUM;
    var FSE_OUTROS_SERV_ESPECIAL_ANO_N_JULHO_ACUM = FSE_OUTROS_SERV_ESPECIAL_ANO_N_JULHO + FSE_OUTROS_SERV_ESPECIAL_ANO_N_JUNHO_ACUM;
    var FSE_OUTROS_SERV_ESPECIAL_ANO_N_AGOSTO_ACUM = FSE_OUTROS_SERV_ESPECIAL_ANO_N_AGOSTO + FSE_OUTROS_SERV_ESPECIAL_ANO_N_JULHO_ACUM;
    var FSE_OUTROS_SERV_ESPECIAL_ANO_N_SETEMBRO_ACUM = FSE_OUTROS_SERV_ESPECIAL_ANO_N_SETEMBRO + FSE_OUTROS_SERV_ESPECIAL_ANO_N_AGOSTO_ACUM;
    var FSE_OUTROS_SERV_ESPECIAL_ANO_N_OUTUBRO_ACUM = FSE_OUTROS_SERV_ESPECIAL_ANO_N_OUTUBRO + FSE_OUTROS_SERV_ESPECIAL_ANO_N_SETEMBRO_ACUM;
    var FSE_OUTROS_SERV_ESPECIAL_ANO_N_NOVEMBRO_ACUM = FSE_OUTROS_SERV_ESPECIAL_ANO_N_NOVEMBRO + FSE_OUTROS_SERV_ESPECIAL_ANO_N_OUTUBRO_ACUM;
    var FSE_OUTROS_SERV_ESPECIAL_ANO_N_DEZEMBRO_ACUM = FSE_OUTROS_SERV_ESPECIAL_ANO_N_DEZEMBRO + FSE_OUTROS_SERV_ESPECIAL_ANO_N_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_OUTROS_SERV_ESPECIAL_ANO_N_JANEIRO_ACUM = 'nd'; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_ESPECIAL_ANO_N_JANEIRO_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_JANEIRO_ACUM; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_JANEIRO_ACUM_MAX_MIN = FSE_OUTROS_SERV_ESPECIAL_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_OUTROS_SERV_ESPECIAL_ANO_N_FEVEREIRO_ACUM = 'nd'; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_ESPECIAL_ANO_N_FEVEREIRO_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_FEVEREIRO_ACUM; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_FEVEREIRO_ACUM_MAX_MIN = FSE_OUTROS_SERV_ESPECIAL_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_OUTROS_SERV_ESPECIAL_ANO_N_MARCO_ACUM = 'nd'; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_ESPECIAL_ANO_N_MARCO_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_MARCO_ACUM; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_MARCO_ACUM_MAX_MIN = FSE_OUTROS_SERV_ESPECIAL_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_OUTROS_SERV_ESPECIAL_ANO_N_ABRIL_ACUM = 'nd'; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_ESPECIAL_ANO_N_ABRIL_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_ABRIL_ACUM; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_ABRIL_ACUM_MAX_MIN = FSE_OUTROS_SERV_ESPECIAL_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_OUTROS_SERV_ESPECIAL_ANO_N_MAIO_ACUM = 'nd'; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_ESPECIAL_ANO_N_MAIO_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_MAIO_ACUM; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_MAIO_ACUM_MAX_MIN = FSE_OUTROS_SERV_ESPECIAL_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_OUTROS_SERV_ESPECIAL_ANO_N_JUNHO_ACUM = 'nd'; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_ESPECIAL_ANO_N_JUNHO_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_JUNHO_ACUM; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_JUNHO_ACUM_MAX_MIN = FSE_OUTROS_SERV_ESPECIAL_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_OUTROS_SERV_ESPECIAL_ANO_N_JULHO_ACUM = 'nd'; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_ESPECIAL_ANO_N_JULHO_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_JULHO_ACUM; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_JULHO_ACUM_MAX_MIN = FSE_OUTROS_SERV_ESPECIAL_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_OUTROS_SERV_ESPECIAL_ANO_N_AGOSTO_ACUM = 'nd'; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_ESPECIAL_ANO_N_AGOSTO_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_AGOSTO_ACUM; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_AGOSTO_ACUM_MAX_MIN = FSE_OUTROS_SERV_ESPECIAL_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_OUTROS_SERV_ESPECIAL_ANO_N_SETEMBRO_ACUM = 'nd'; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_ESPECIAL_ANO_N_SETEMBRO_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_SETEMBRO_ACUM; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_SETEMBRO_ACUM_MAX_MIN = FSE_OUTROS_SERV_ESPECIAL_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_OUTROS_SERV_ESPECIAL_ANO_N_OUTUBRO_ACUM = 'nd'; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_ESPECIAL_ANO_N_OUTUBRO_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_OUTUBRO_ACUM; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_OUTUBRO_ACUM_MAX_MIN = FSE_OUTROS_SERV_ESPECIAL_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_OUTROS_SERV_ESPECIAL_ANO_N_NOVEMBRO_ACUM = 'nd'; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_ESPECIAL_ANO_N_NOVEMBRO_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_NOVEMBRO_ACUM; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_NOVEMBRO_ACUM_MAX_MIN = FSE_OUTROS_SERV_ESPECIAL_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_OUTROS_SERV_ESPECIAL_ANO_N_DEZEMBRO_ACUM = 'nd'; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_SERV_ESPECIAL_ANO_N_DEZEMBRO_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_DEZEMBRO_ACUM; var FSE_OUTROS_SERV_ESPECIAL_ANO_N_DEZEMBRO_ACUM_MAX_MIN = FSE_OUTROS_SERV_ESPECIAL_ANO_N_DEZEMBRO_ACUM };




    var FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JANEIRO"])));
    var FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_FEVEREIRO"]))) + FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JANEIRO_ACUM;
    var FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_MARCO"]))) + FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_FEVEREIRO_ACUM;
    var FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_ABRIL"]))) + FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_MARCO_ACUM;
    var FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_MAIO"]))) + FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_ABRIL_ACUM;
    var FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JUNHO"]))) + FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_MAIO_ACUM;
    var FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JULHO"]))) + FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JUNHO_ACUM;
    var FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_AGOSTO"]))) + FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JULHO_ACUM;
    var FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_SETEMBRO"]))) + FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_AGOSTO_ACUM;
    var FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_OUTUBRO"]))) + FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_SETEMBRO_ACUM;
    var FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_NOVEMBRO"]))) + FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_OUTUBRO_ACUM;
    var FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_DEZEMBRO"]))) + FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_NOVEMBRO_ACUM;


    var FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_princ= Math.max(
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JANEIRO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_MARCO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_ABRIL_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_MAIO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JUNHO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JULHO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_AGOSTO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_SETEMBRO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_OUTUBRO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_DEZEMBRO_ACUM
                             );
    var FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_princ= Math.min(

                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JANEIRO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_MARCO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_ABRIL_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_MAIO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JUNHO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JULHO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_AGOSTO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_SETEMBRO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_OUTUBRO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_DEZEMBRO_ACUM
                           );
    var FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_secon= Math.max(
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_MARCO_MAX_MIN ,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_ABRIL_MAX_MIN ,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_MAIO_MAX_MIN ,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_JUNHO_MAX_MIN ,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_JULHO_MAX_MIN ,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_DEZEMBRO_MAX_MIN ,



                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_DEZEMBRO"])))

                            );
    var FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_secon= Math.min(
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_MARCO_MAX_MIN ,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_ABRIL_MAX_MIN ,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_MAIO_MAX_MIN ,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_JUNHO_MAX_MIN ,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_JULHO_MAX_MIN ,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_DEZEMBRO_MAX_MIN ,


                           @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_DEZEMBRO"])))

                          );

    //NOTA TA: Aqui trato o minimo e o maximo do eixo principal
    if(Math.abs(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_princ)>=Math.abs(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_princ))
    {
        var FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_princ_=(Math.ceil(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_princ),0).toString().length-1);
        var FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_princ_= (Math.floor(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_princ),0).toString().length-1);
        //alert(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_princ_);
        //alert(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_princ_);
    }
    else
    {
        var FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_princ_=(Math.ceil(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_princ),0).toString().length-1);
        var FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_princ_= (Math.floor(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_princ),0).toString().length-1);}

    //NOTA TA: Aqui trato o minimo e o maximo do eixo secundario

    if(Math.abs(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_secon)>=Math.abs(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_secon))
    {
        var FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_secon_=(Math.ceil(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_secon),0).toString().length-1);
        var FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_secon_= (Math.floor(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_secon),0).toString().length-1);
        //alert(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_secon_);
        //alert(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_secon_);
    }
    else
    {
        var FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_secon_=(Math.ceil(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_secon),0).toString().length-1);
        var FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_secon_= (Math.floor(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_secon),0).toString().length-1);}


    if(Math.abs(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_princ)/Math.abs(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_princ)>=Math.abs(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_secon)/Math.abs(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_secon))
    { if(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_princ > 0 && FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_princ <0 ){ var FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_secon__=(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_princ_*FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_secon_)/FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_princ_;} else { var FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_secon__=FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_secon_;}
        if(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_secon > 0 && FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_secon <0 ){ var FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_princ__=(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_secon__*FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_princ_)/FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_secon_;} else { var FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_princ__=FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_princ_;}}
    else
    {if(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_secon > 0 && FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_secon <0 ){ var FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_princ__=(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_secon_*FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_princ_)/FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_secon_;} else { var FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_princ__=FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_princ_;}
        if(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_princ > 0 && FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_princ <0 ){ var FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_secon__=(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_princ__*FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_secon_)/FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_princ_;} else { var FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_secon__=FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_secon_;}
    }



    if(Math.abs(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_princ)/Math.abs(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_princ)>=Math.abs(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_secon)/Math.abs(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_secon))
    { if(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_princ > 0 && FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_princ <0 ){ var FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_secon__=(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_princ_*FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_secon_)/FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_princ_;} else { var FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_secon__=FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_secon_;}
        if(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_secon > 0 && FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_secon <0 ){ var FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_princ__=(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_secon__*FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_princ_)/FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_secon_;} else { var FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_princ__=FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_princ_;}}
    else
    {if(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_secon > 0 && FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_secon <0 ){ var FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_princ__=(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_secon_*FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_princ_)/FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_secon_;} else { var FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_princ__=FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_princ_;}
        if(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_princ > 0 && FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_princ <0 ){ var FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_secon__=(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_princ__*FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_secon_)/FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_princ_;} else { var FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_secon__=FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_secon_;}
    }



    var GRAFICO_FSE_RESULT_MENSAL_COMP_016=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_016').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_016=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_016, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label: 'Otr. Srv. Esp.(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   data: [
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_JANEIRO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_FEVEREIRO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_MARCO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_ABRIL_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_MAIO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_JUNHO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_JULHO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_AGOSTO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_SETEMBRO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_OUTUBRO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_NOVEMBRO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_DEZEMBRO_ACUM,
                   ],
                   type: 'line'


               },
                              {
                                  label: 'Otr. Srv. Esp.(ac) ' + ANO_VERSAO_ANTE_,
                                  yAxisID: 'A',
                                  //backgroundColor: 'rgb(201, 10, 10)',
                                  borderColor: 'rgb(0,221,0)',
                                  data: [
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JANEIRO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_MARCO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_ABRIL_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_MAIO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JUNHO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JULHO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_AGOSTO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_SETEMBRO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_OUTUBRO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_DEZEMBRO_ACUM,
                                  ],
                                  type: 'line'


                              },
                {
                    label:  'Otr. Srv. Esp.(m) ' + ANO_VERSAO_REAL_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(250 , 83 , 0, 0.5)',
                    borderColor: 'rgba(250 , 83 , 0, 0.5)',
                    data: [
                  FSE_OUTROS_SERV_ESPECIAL_ANO_N_JANEIRO ,
                  FSE_OUTROS_SERV_ESPECIAL_ANO_N_FEVEREIRO ,
                  FSE_OUTROS_SERV_ESPECIAL_ANO_N_MARCO ,
                  FSE_OUTROS_SERV_ESPECIAL_ANO_N_ABRIL,
                  FSE_OUTROS_SERV_ESPECIAL_ANO_N_MAIO ,
                  FSE_OUTROS_SERV_ESPECIAL_ANO_N_JUNHO ,
                  FSE_OUTROS_SERV_ESPECIAL_ANO_N_JULHO ,
                  FSE_OUTROS_SERV_ESPECIAL_ANO_N_AGOSTO ,
                  FSE_OUTROS_SERV_ESPECIAL_ANO_N_SETEMBRO ,
                  FSE_OUTROS_SERV_ESPECIAL_ANO_N_OUTUBRO ,
                  FSE_OUTROS_SERV_ESPECIAL_ANO_N_NOVEMBRO ,
                  FSE_OUTROS_SERV_ESPECIAL_ANO_N_DEZEMBRO ,
                    ],
                },
                {
                    label:  'Otr. Srv. Esp.(m) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(0,221,0, 0.4)',
                    borderColor: 'rgba(0,221,0, 0.4)',
                    data: [
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JANEIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_FEVEREIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_MARCO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_ABRIL"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_MAIO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JUNHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JULHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_AGOSTO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_SETEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_OUTUBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_NOVEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_DEZEMBRO"]))),
                    ],
                },


            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_OUTROS_SERV_ESPECIAL_MENSAL_1',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                min:  Math.round(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_princ__,0),
                                                max:  Math.round(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString();
                                                }
                                            }
                                        },

                    { id: 'B',
                        type: 'linear',
                        position: 'right',
                        ticks: {
                            min: Math.round(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_secon__,0),
                            max:  Math.round(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_secon__,0),
                            beginAtZero: false,
                            callback: function(value, index, values) {
                                return value.toLocaleString();
                            }
                        }
                    },






                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_017-----------------------------------------------------------*@
<script>

    var IND_VN_ANO_N_JANEIRO_ACUM = IND_VN_ANO_N_JANEIRO;
    var IND_VN_ANO_N_FEVEREIRO_ACUM = IND_VN_ANO_N_FEVEREIRO + IND_VN_ANO_N_JANEIRO_ACUM;
    var IND_VN_ANO_N_MARCO_ACUM = IND_VN_ANO_N_MARCO + IND_VN_ANO_N_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_ABRIL_ACUM = IND_VN_ANO_N_ABRIL + IND_VN_ANO_N_MARCO_ACUM;
    var IND_VN_ANO_N_MAIO_ACUM = IND_VN_ANO_N_MAIO + IND_VN_ANO_N_ABRIL_ACUM;
    var IND_VN_ANO_N_JUNHO_ACUM = IND_VN_ANO_N_JUNHO + IND_VN_ANO_N_MAIO_ACUM;
    var IND_VN_ANO_N_JULHO_ACUM = IND_VN_ANO_N_JULHO + IND_VN_ANO_N_JUNHO_ACUM;
    var IND_VN_ANO_N_AGOSTO_ACUM = IND_VN_ANO_N_AGOSTO + IND_VN_ANO_N_JULHO_ACUM;
    var IND_VN_ANO_N_SETEMBRO_ACUM = IND_VN_ANO_N_SETEMBRO + IND_VN_ANO_N_AGOSTO_ACUM;
    var IND_VN_ANO_N_OUTUBRO_ACUM = IND_VN_ANO_N_OUTUBRO + IND_VN_ANO_N_SETEMBRO_ACUM;
    var IND_VN_ANO_N_NOVEMBRO_ACUM = IND_VN_ANO_N_NOVEMBRO + IND_VN_ANO_N_OUTUBRO_ACUM;
    var IND_VN_ANO_N_DEZEMBRO_ACUM = IND_VN_ANO_N_DEZEMBRO + IND_VN_ANO_N_NOVEMBRO_ACUM;



    var IND_VN_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JANEIRO"])));
    var IND_VN_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_FEVEREIRO"]))) + IND_VN_ANO_N_1_JANEIRO_ACUM;
    var IND_VN_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MARCO"]))) + IND_VN_ANO_N_1_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_ABRIL"]))) + IND_VN_ANO_N_1_MARCO_ACUM;
    var IND_VN_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MAIO"]))) + IND_VN_ANO_N_1_ABRIL_ACUM;
    var IND_VN_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JUNHO"]))) + IND_VN_ANO_N_1_MAIO_ACUM;
    var IND_VN_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JULHO"]))) + IND_VN_ANO_N_1_JUNHO_ACUM;
    var IND_VN_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_AGOSTO"]))) + IND_VN_ANO_N_1_JULHO_ACUM;
    var IND_VN_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_SETEMBRO"]))) + IND_VN_ANO_N_1_AGOSTO_ACUM;
    var IND_VN_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_OUTUBRO"]))) + IND_VN_ANO_N_1_SETEMBRO_ACUM;
    var IND_VN_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_NOVEMBRO"]))) + IND_VN_ANO_N_1_OUTUBRO_ACUM;
    var IND_VN_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_DEZEMBRO"]))) + IND_VN_ANO_N_1_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_JANEIRO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_JANEIRO_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_JANEIRO_ACUM/IND_VN_ANO_N_JANEIRO_ACUM*100; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_FEVEREIRO_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_FEVEREIRO_ACUM/IND_VN_ANO_N_FEVEREIRO_ACUM*100; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_MARCO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_MARCO_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_MARCO_ACUM/IND_VN_ANO_N_MARCO_ACUM*100; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_MARCO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_ABRIL_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_ABRIL_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_ABRIL_ACUM/IND_VN_ANO_N_ABRIL_ACUM*100; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_ABRIL_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_MAIO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_MAIO_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_MAIO_ACUM/IND_VN_ANO_N_MAIO_ACUM*100; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_MAIO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_JUNHO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_JUNHO_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_JUNHO_ACUM/IND_VN_ANO_N_JUNHO_ACUM*100; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_JUNHO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_JULHO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_JULHO_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_JULHO_ACUM/IND_VN_ANO_N_JULHO_ACUM*100; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_JULHO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_AGOSTO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_AGOSTO_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_AGOSTO_ACUM/IND_VN_ANO_N_AGOSTO_ACUM*100; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_SETEMBRO_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_SETEMBRO_ACUM/IND_VN_ANO_N_SETEMBRO_ACUM*100; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_OUTUBRO_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_OUTUBRO_ACUM/IND_VN_ANO_N_OUTUBRO_ACUM*100; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_NOVEMBRO_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_NOVEMBRO_ACUM/IND_VN_ANO_N_NOVEMBRO_ACUM*100; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_DEZEMBRO_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_DEZEMBRO_ACUM/IND_VN_ANO_N_DEZEMBRO_ACUM*100; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_JANEIRO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_JANEIRO_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JANEIRO_ACUM/IND_VN_ANO_N_1_JANEIRO_ACUM*100; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_FEVEREIRO_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_FEVEREIRO_ACUM/IND_VN_ANO_N_1_FEVEREIRO_ACUM*100; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_MARCO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_MARCO_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_MARCO_ACUM/IND_VN_ANO_N_1_MARCO_ACUM*100; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_ABRIL_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_ABRIL_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_ABRIL_ACUM/IND_VN_ANO_N_1_ABRIL_ACUM*100; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_MAIO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_MAIO_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_MAIO_ACUM/IND_VN_ANO_N_1_MAIO_ACUM*100; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_JUNHO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_JUNHO_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JUNHO_ACUM/IND_VN_ANO_N_1_JUNHO_ACUM*100; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_JULHO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_JULHO_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JULHO_ACUM/IND_VN_ANO_N_1_JULHO_ACUM*100; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_AGOSTO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_AGOSTO_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_AGOSTO_ACUM/IND_VN_ANO_N_1_AGOSTO_ACUM*100; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_SETEMBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_SETEMBRO_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_SETEMBRO_ACUM/IND_VN_ANO_N_1_SETEMBRO_ACUM*100; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_OUTUBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_OUTUBRO_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_OUTUBRO_ACUM/IND_VN_ANO_N_1_OUTUBRO_ACUM*100; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_NOVEMBRO_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_NOVEMBRO_ACUM/IND_VN_ANO_N_1_NOVEMBRO_ACUM*100; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_DEZEMBRO_ACUM= FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_DEZEMBRO_ACUM/IND_VN_ANO_N_1_DEZEMBRO_ACUM*100; var PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_VN_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JANEIRO_ACUM= ((IND_VN_ANO_N_JANEIRO_ACUM-IND_VN_ANO_N_1_JANEIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_JANEIRO_ACUM))*100; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_FEVEREIRO_ACUM= ((IND_VN_ANO_N_FEVEREIRO_ACUM-IND_VN_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_VN_ANO_N_MARCO_ACUM = 'nd'; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MARCO_ACUM= ((IND_VN_ANO_N_MARCO_ACUM-IND_VN_ANO_N_1_MARCO_ACUM)/Math.abs(IND_VN_ANO_N_1_MARCO_ACUM))*100; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = VAR_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_VN_ANO_N_ABRIL_ACUM = 'nd'; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_ABRIL_ACUM= ((IND_VN_ANO_N_ABRIL_ACUM-IND_VN_ANO_N_1_ABRIL_ACUM)/Math.abs(IND_VN_ANO_N_1_ABRIL_ACUM))*100; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_VN_ANO_N_MAIO_ACUM = 'nd'; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MAIO_ACUM= ((IND_VN_ANO_N_MAIO_ACUM-IND_VN_ANO_N_1_MAIO_ACUM)/Math.abs(IND_VN_ANO_N_1_MAIO_ACUM))*100; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = VAR_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_VN_ANO_N_JUNHO_ACUM = 'nd'; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JUNHO_ACUM= ((IND_VN_ANO_N_JUNHO_ACUM-IND_VN_ANO_N_1_JUNHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JUNHO_ACUM))*100; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_VN_ANO_N_JULHO_ACUM = 'nd'; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JULHO_ACUM= ((IND_VN_ANO_N_JULHO_ACUM-IND_VN_ANO_N_1_JULHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JULHO_ACUM))*100; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_VN_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_AGOSTO_ACUM= ((IND_VN_ANO_N_AGOSTO_ACUM-IND_VN_ANO_N_1_AGOSTO_ACUM)/Math.abs(IND_VN_ANO_N_1_AGOSTO_ACUM))*100; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_SETEMBRO_ACUM= ((IND_VN_ANO_N_SETEMBRO_ACUM-IND_VN_ANO_N_1_SETEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_OUTUBRO_ACUM= ((IND_VN_ANO_N_OUTUBRO_ACUM-IND_VN_ANO_N_1_OUTUBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_NOVEMBRO_ACUM= ((IND_VN_ANO_N_NOVEMBRO_ACUM-IND_VN_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_DEZEMBRO_ACUM= ((IND_VN_ANO_N_DEZEMBRO_ACUM-IND_VN_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_JANEIRO_ACUM= ((FSE_OUTROS_SERV_ESPECIAL_ANO_N_JANEIRO_ACUM-FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JANEIRO_ACUM)/Math.abs(FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JANEIRO_ACUM))*100; var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_FEVEREIRO_ACUM= ((FSE_OUTROS_SERV_ESPECIAL_ANO_N_FEVEREIRO_ACUM-FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_MARCO_ACUM = 'nd'; var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_MARCO_ACUM= ((FSE_OUTROS_SERV_ESPECIAL_ANO_N_MARCO_ACUM-FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_MARCO_ACUM)/Math.abs(FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_MARCO_ACUM))*100; var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_MARCO_ACUM_MAX_MIN = VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_ABRIL_ACUM = 'nd'; var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_ABRIL_ACUM= ((FSE_OUTROS_SERV_ESPECIAL_ANO_N_ABRIL_ACUM-FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_ABRIL_ACUM)/Math.abs(FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_ABRIL_ACUM))*100; var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_MAIO_ACUM = 'nd'; var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_MAIO_ACUM= ((FSE_OUTROS_SERV_ESPECIAL_ANO_N_MAIO_ACUM-FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_MAIO_ACUM)/Math.abs(FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_MAIO_ACUM))*100; var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_MAIO_ACUM_MAX_MIN = VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_JUNHO_ACUM = 'nd'; var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_JUNHO_ACUM= ((FSE_OUTROS_SERV_ESPECIAL_ANO_N_JUNHO_ACUM-FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JUNHO_ACUM)/Math.abs(FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JUNHO_ACUM))*100; var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_JULHO_ACUM = 'nd'; var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_JULHO_ACUM= ((FSE_OUTROS_SERV_ESPECIAL_ANO_N_JULHO_ACUM-FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JULHO_ACUM)/Math.abs(FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_JULHO_ACUM))*100; var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_JULHO_ACUM_MAX_MIN = VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_AGOSTO_ACUM= ((FSE_OUTROS_SERV_ESPECIAL_ANO_N_AGOSTO_ACUM-FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_AGOSTO_ACUM)/Math.abs(FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_AGOSTO_ACUM))*100; var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_SETEMBRO_ACUM= ((FSE_OUTROS_SERV_ESPECIAL_ANO_N_SETEMBRO_ACUM-FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_SETEMBRO_ACUM)/Math.abs(FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_OUTUBRO_ACUM= ((FSE_OUTROS_SERV_ESPECIAL_ANO_N_OUTUBRO_ACUM-FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_OUTUBRO_ACUM)/Math.abs(FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_NOVEMBRO_ACUM= ((FSE_OUTROS_SERV_ESPECIAL_ANO_N_NOVEMBRO_ACUM-FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_DEZEMBRO_ACUM= ((FSE_OUTROS_SERV_ESPECIAL_ANO_N_DEZEMBRO_ACUM-FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(FSE_OUTROS_SERV_ESPECIAL_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_FSE_OUTROS_SERV_ESPECIAL_ANO_N_DEZEMBRO_ACUM };

    if( PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_JANEIRO_ACUM > PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_JANEIRO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_JANEIRO_ACUM=PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_JANEIRO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_JANEIRO_ACUM=PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_JANEIRO_ACUM ; }
    if( PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_FEVEREIRO_ACUM > PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_FEVEREIRO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_FEVEREIRO_ACUM=PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_FEVEREIRO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_FEVEREIRO_ACUM=PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_FEVEREIRO_ACUM ; }
    if( PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_MARCO_ACUM > PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_MARCO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_MARCO_ACUM=PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_MARCO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_MARCO_ACUM=PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_MARCO_ACUM ; }
    if( PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_ABRIL_ACUM > PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_ABRIL_ACUM) { var  INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_ABRIL_ACUM=PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_ABRIL_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_ABRIL_ACUM=PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_ABRIL_ACUM ; }
    if( PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_MAIO_ACUM > PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_MAIO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_MAIO_ACUM=PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_MAIO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_MAIO_ACUM=PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_MAIO_ACUM ; }
    if( PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_JUNHO_ACUM > PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_JUNHO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_JUNHO_ACUM=PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_JUNHO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_JUNHO_ACUM=PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_JUNHO_ACUM ; }
    if( PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_JULHO_ACUM > PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_JULHO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_JULHO_ACUM=PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_JULHO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_JULHO_ACUM=PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_JULHO_ACUM ; }
    if( PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_AGOSTO_ACUM > PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_AGOSTO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_AGOSTO_ACUM=PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_AGOSTO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_AGOSTO_ACUM=PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_AGOSTO_ACUM ; }
    if( PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_SETEMBRO_ACUM > PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_SETEMBRO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_SETEMBRO_ACUM=PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_SETEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_SETEMBRO_ACUM=PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_SETEMBRO_ACUM ; }
    if( PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_OUTUBRO_ACUM > PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_OUTUBRO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_OUTUBRO_ACUM=PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_OUTUBRO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_OUTUBRO_ACUM=PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_OUTUBRO_ACUM ; }
    if( PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_NOVEMBRO_ACUM > PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_NOVEMBRO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_NOVEMBRO_ACUM=PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_NOVEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_NOVEMBRO_ACUM=PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_NOVEMBRO_ACUM ; }
    if( PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_DEZEMBRO_ACUM > PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_DEZEMBRO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_DEZEMBRO_ACUM=PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_DEZEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_DEZEMBRO_ACUM=PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_DEZEMBRO_ACUM ; }



    var fillBetweenLinesPlugin = {
        afterDatasetsDraw: function (chart) {
            var ctx = chart.chart.ctx;
            var xaxis = chart.scales['x-axis-0'];
            var yaxis = chart.scales['y-axis-0'];
            var datasets = chart.data.datasets;
            ctx.save();

            for (var d = 0; d < datasets.length; d++) {
                var dataset = datasets[d];
                if (dataset.fillBetweenSet == undefined) {
                    continue;
                }

                // get meta for both data sets
                var meta1 = chart.getDatasetMeta(d);
                var meta2 = chart.getDatasetMeta(dataset.fillBetweenSet);

                // do not draw fill if one of the datasets is hidden
                if (meta1.hidden || meta2.hidden) continue;

                // create fill areas in pairs
                for (var p = 0; p < meta1.data.length-1;p++) {
                    // if null skip
                    if (dataset.data[p] == null || dataset.data[p+1] == null) continue;

                    ctx.beginPath();

                    // trace line 1
                    var curr = meta1.data[p];
                    var next = meta1.data[p+1];
                    ctx.moveTo(curr._view.x, curr._view.y);
                    ctx.lineTo(curr._view.x, curr._view.y);
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(next._view.x, curr._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        ctx.bezierCurveTo(
                          curr._view.controlPointNextX,
                          curr._view.controlPointNextY,
                          next._view.controlPointPreviousX,
                          next._view.controlPointPreviousY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // connect dataset1 to dataset2
                    var curr = meta2.data[p+1];
                    var next = meta2.data[p];
                    ctx.lineTo(curr._view.x, curr._view.y);

                    // trace BACKWORDS set2 to complete the box
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(curr._view.x, next._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        // reverse bezier
                        ctx.bezierCurveTo(
                          curr._view.controlPointPreviousX,
                          curr._view.controlPointPreviousY,
                          next._view.controlPointNextX,
                          next._view.controlPointNextY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // close the loop and fill with shading
                    ctx.closePath();
                    ctx.fillStyle = dataset.fillBetweenColor || "rgba(0,0,0,0.1)";
                    ctx.fill();
                } // end for p loop
            }
        } // end afterDatasetsDraw
    }; // end fillBetweenLinesPlugin

    Chart.pluginService.register(fillBetweenLinesPlugin);



    var GRAFICO_FSE_RESULT_MENSAL_COMP_017=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_017').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_017=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_017, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label:  'Peso Otr. Srv. Esp.vsVN(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   //borderColor: "#F00",
                   fill: false,
                   steppedLine: false,
                   tension: 0.5,
                   fillBetweenSet: 1,
                   fillBetweenColor: "rgba(0, 221, 0, 0.1)",
                   data: [
                   PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_JANEIRO_ACUM,
                   PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_FEVEREIRO_ACUM,
                   PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_MARCO_ACUM,
                   PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_ABRIL_ACUM,
                   PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_MAIO_ACUM,
                   PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_JUNHO_ACUM,
                   PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_JULHO_ACUM,
                   PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_AGOSTO_ACUM,
                   PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_SETEMBRO_ACUM,
                   PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_OUTUBRO_ACUM,
                   PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_NOVEMBRO_ACUM,
                   PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_DEZEMBRO_ACUM,

                   ],
                   type: 'line'


               },
                {
                    label: 'Peso Otr. Srv. Esp.vsVN(ac) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'A',
                    //backgroundColor: 'rgb(17, 121, 240)',
                    borderColor: 'rgb(0,221,0)',
                    //borderColor: "#00F",
                    fill: false,
                    steppedLine: false,
                    tension: 0.5,
                    data: [
                   PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_JANEIRO_ACUM,
                   PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_FEVEREIRO_ACUM,
                   PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_MARCO_ACUM,
                   PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_ABRIL_ACUM,
                   PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_MAIO_ACUM,
                   PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_JUNHO_ACUM,
                   PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_JULHO_ACUM,
                   PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_AGOSTO_ACUM,
                   PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_SETEMBRO_ACUM,
                   PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_OUTUBRO_ACUM,
                   PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_NOVEMBRO_ACUM,
                   PESO_FSE_OUTROS_SERV_ESPECIAL_VN_ANO_N_1_DEZEMBRO_ACUM,
                    ],
                    type: 'line'
                },
    {
        label: 'Ineficiência',
        yAxisID: 'A',
        backgroundColor: "rgba(255, 0, 0, 0.2)",
        borderColor: 'rgba(255, 255, 255, 0.1)',
        //borderColor: "#0D0",
        fill: false,
        steppedLine: false,
        tension: 0.5,
        fillBetweenSet: 1,
        fillBetweenColor: "rgba(255, 0, 0, 0.2)",
        data: [
    INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_JANEIRO_ACUM,
    INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_FEVEREIRO_ACUM,
    INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_MARCO_ACUM,
    INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_ABRIL_ACUM,
    INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_MAIO_ACUM,
    INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_JUNHO_ACUM,
    INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_JULHO_ACUM,
    INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_AGOSTO_ACUM,
    INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_SETEMBRO_ACUM,
    INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_OUTUBRO_ACUM,
    INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_NOVEMBRO_ACUM,
    INEFICIENCIA_FSE_OUTROS_SERV_ESPECIAL_ANO_N_DEZEMBRO_ACUM,
        ],
        type: 'line'
    },

            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_Otr. Srv. Esp. COMP',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                //min:  Math.round(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_min_princ__,0),
                                                //max:  Math.round(FSE_OUTROS_SERV_ESPECIAL_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString()+ "%";
                                                }
                                            }
                                        },







                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_018-----------------------------------------------------------*@
<script>

    if(@ViewData["MES_ACUM_REAL"]<1){ var IND_VN_ANO_N_JANEIRO = 'nd'; var IND_VN_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JANEIRO"]))); var IND_VN_ANO_N_JANEIRO_MAX_MIN = IND_VN_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var IND_VN_ANO_N_FEVEREIRO = 'nd'; var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_FEVEREIRO"]))); var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = IND_VN_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var IND_VN_ANO_N_MARCO = 'nd'; var IND_VN_ANO_N_MARCO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MARCO"]))); var IND_VN_ANO_N_MARCO_MAX_MIN = IND_VN_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var IND_VN_ANO_N_ABRIL = 'nd'; var IND_VN_ANO_N_ABRIL_MAX_MIN = 0;  } else { var IND_VN_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_ABRIL"]))); var IND_VN_ANO_N_ABRIL_MAX_MIN = IND_VN_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var IND_VN_ANO_N_MAIO = 'nd'; var IND_VN_ANO_N_MAIO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MAIO"]))); var IND_VN_ANO_N_MAIO_MAX_MIN = IND_VN_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var IND_VN_ANO_N_JUNHO = 'nd'; var IND_VN_ANO_N_JUNHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JUNHO"]))); var IND_VN_ANO_N_JUNHO_MAX_MIN = IND_VN_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var IND_VN_ANO_N_JULHO = 'nd'; var IND_VN_ANO_N_JULHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JULHO"]))); var IND_VN_ANO_N_JULHO_MAX_MIN = IND_VN_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var IND_VN_ANO_N_AGOSTO = 'nd'; var IND_VN_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_AGOSTO"]))); var IND_VN_ANO_N_AGOSTO_MAX_MIN = IND_VN_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var IND_VN_ANO_N_SETEMBRO = 'nd'; var IND_VN_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_SETEMBRO"]))); var IND_VN_ANO_N_SETEMBRO_MAX_MIN = IND_VN_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var IND_VN_ANO_N_OUTUBRO = 'nd'; var IND_VN_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_OUTUBRO"]))); var IND_VN_ANO_N_OUTUBRO_MAX_MIN = IND_VN_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var IND_VN_ANO_N_NOVEMBRO = 'nd'; var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_NOVEMBRO"]))); var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = IND_VN_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var IND_VN_ANO_N_DEZEMBRO = 'nd'; var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_DEZEMBRO"]))); var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = IND_VN_ANO_N_DEZEMBRO };

    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_FERRAM_UTENS_ANO_N_JANEIRO = 'nd'; var FSE_FERRAM_UTENS_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var FSE_FERRAM_UTENS_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_JANEIRO"]))); var FSE_FERRAM_UTENS_ANO_N_JANEIRO_MAX_MIN = FSE_FERRAM_UTENS_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_FERRAM_UTENS_ANO_N_FEVEREIRO = 'nd'; var FSE_FERRAM_UTENS_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var FSE_FERRAM_UTENS_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_FEVEREIRO"]))); var FSE_FERRAM_UTENS_ANO_N_FEVEREIRO_MAX_MIN = FSE_FERRAM_UTENS_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_FERRAM_UTENS_ANO_N_MARCO = 'nd'; var FSE_FERRAM_UTENS_ANO_N_MARCO_MAX_MIN = 0;  } else { var FSE_FERRAM_UTENS_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_MARCO"]))); var FSE_FERRAM_UTENS_ANO_N_MARCO_MAX_MIN = FSE_FERRAM_UTENS_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_FERRAM_UTENS_ANO_N_ABRIL = 'nd'; var FSE_FERRAM_UTENS_ANO_N_ABRIL_MAX_MIN = 0;  } else { var FSE_FERRAM_UTENS_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_ABRIL"]))); var FSE_FERRAM_UTENS_ANO_N_ABRIL_MAX_MIN = FSE_FERRAM_UTENS_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_FERRAM_UTENS_ANO_N_MAIO = 'nd'; var FSE_FERRAM_UTENS_ANO_N_MAIO_MAX_MIN = 0;  } else { var FSE_FERRAM_UTENS_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_MAIO"]))); var FSE_FERRAM_UTENS_ANO_N_MAIO_MAX_MIN = FSE_FERRAM_UTENS_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_FERRAM_UTENS_ANO_N_JUNHO = 'nd'; var FSE_FERRAM_UTENS_ANO_N_JUNHO_MAX_MIN = 0;  } else { var FSE_FERRAM_UTENS_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_JUNHO"]))); var FSE_FERRAM_UTENS_ANO_N_JUNHO_MAX_MIN = FSE_FERRAM_UTENS_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_FERRAM_UTENS_ANO_N_JULHO = 'nd'; var FSE_FERRAM_UTENS_ANO_N_JULHO_MAX_MIN = 0;  } else { var FSE_FERRAM_UTENS_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_JULHO"]))); var FSE_FERRAM_UTENS_ANO_N_JULHO_MAX_MIN = FSE_FERRAM_UTENS_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_FERRAM_UTENS_ANO_N_AGOSTO = 'nd'; var FSE_FERRAM_UTENS_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var FSE_FERRAM_UTENS_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_AGOSTO"]))); var FSE_FERRAM_UTENS_ANO_N_AGOSTO_MAX_MIN = FSE_FERRAM_UTENS_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_FERRAM_UTENS_ANO_N_SETEMBRO = 'nd'; var FSE_FERRAM_UTENS_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var FSE_FERRAM_UTENS_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_SETEMBRO"]))); var FSE_FERRAM_UTENS_ANO_N_SETEMBRO_MAX_MIN = FSE_FERRAM_UTENS_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_FERRAM_UTENS_ANO_N_OUTUBRO = 'nd'; var FSE_FERRAM_UTENS_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var FSE_FERRAM_UTENS_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_OUTUBRO"]))); var FSE_FERRAM_UTENS_ANO_N_OUTUBRO_MAX_MIN = FSE_FERRAM_UTENS_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_FERRAM_UTENS_ANO_N_NOVEMBRO = 'nd'; var FSE_FERRAM_UTENS_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var FSE_FERRAM_UTENS_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_NOVEMBRO"]))); var FSE_FERRAM_UTENS_ANO_N_NOVEMBRO_MAX_MIN = FSE_FERRAM_UTENS_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_FERRAM_UTENS_ANO_N_DEZEMBRO = 'nd'; var FSE_FERRAM_UTENS_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var FSE_FERRAM_UTENS_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_DEZEMBRO"]))); var FSE_FERRAM_UTENS_ANO_N_DEZEMBRO_MAX_MIN = FSE_FERRAM_UTENS_ANO_N_DEZEMBRO };


    var FSE_FERRAM_UTENS_ANO_N_JANEIRO_ACUM = FSE_FERRAM_UTENS_ANO_N_JANEIRO;
    var FSE_FERRAM_UTENS_ANO_N_FEVEREIRO_ACUM = FSE_FERRAM_UTENS_ANO_N_FEVEREIRO + FSE_FERRAM_UTENS_ANO_N_JANEIRO_ACUM;
    var FSE_FERRAM_UTENS_ANO_N_MARCO_ACUM = FSE_FERRAM_UTENS_ANO_N_MARCO + FSE_FERRAM_UTENS_ANO_N_FEVEREIRO_ACUM;
    var FSE_FERRAM_UTENS_ANO_N_ABRIL_ACUM = FSE_FERRAM_UTENS_ANO_N_ABRIL + FSE_FERRAM_UTENS_ANO_N_MARCO_ACUM;
    var FSE_FERRAM_UTENS_ANO_N_MAIO_ACUM = FSE_FERRAM_UTENS_ANO_N_MAIO + FSE_FERRAM_UTENS_ANO_N_ABRIL_ACUM;
    var FSE_FERRAM_UTENS_ANO_N_JUNHO_ACUM = FSE_FERRAM_UTENS_ANO_N_JUNHO + FSE_FERRAM_UTENS_ANO_N_MAIO_ACUM;
    var FSE_FERRAM_UTENS_ANO_N_JULHO_ACUM = FSE_FERRAM_UTENS_ANO_N_JULHO + FSE_FERRAM_UTENS_ANO_N_JUNHO_ACUM;
    var FSE_FERRAM_UTENS_ANO_N_AGOSTO_ACUM = FSE_FERRAM_UTENS_ANO_N_AGOSTO + FSE_FERRAM_UTENS_ANO_N_JULHO_ACUM;
    var FSE_FERRAM_UTENS_ANO_N_SETEMBRO_ACUM = FSE_FERRAM_UTENS_ANO_N_SETEMBRO + FSE_FERRAM_UTENS_ANO_N_AGOSTO_ACUM;
    var FSE_FERRAM_UTENS_ANO_N_OUTUBRO_ACUM = FSE_FERRAM_UTENS_ANO_N_OUTUBRO + FSE_FERRAM_UTENS_ANO_N_SETEMBRO_ACUM;
    var FSE_FERRAM_UTENS_ANO_N_NOVEMBRO_ACUM = FSE_FERRAM_UTENS_ANO_N_NOVEMBRO + FSE_FERRAM_UTENS_ANO_N_OUTUBRO_ACUM;
    var FSE_FERRAM_UTENS_ANO_N_DEZEMBRO_ACUM = FSE_FERRAM_UTENS_ANO_N_DEZEMBRO + FSE_FERRAM_UTENS_ANO_N_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_FERRAM_UTENS_ANO_N_JANEIRO_ACUM = 'nd'; var FSE_FERRAM_UTENS_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var FSE_FERRAM_UTENS_ANO_N_JANEIRO_ACUM= FSE_FERRAM_UTENS_ANO_N_JANEIRO_ACUM; var FSE_FERRAM_UTENS_ANO_N_JANEIRO_ACUM_MAX_MIN = FSE_FERRAM_UTENS_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_FERRAM_UTENS_ANO_N_FEVEREIRO_ACUM = 'nd'; var FSE_FERRAM_UTENS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var FSE_FERRAM_UTENS_ANO_N_FEVEREIRO_ACUM= FSE_FERRAM_UTENS_ANO_N_FEVEREIRO_ACUM; var FSE_FERRAM_UTENS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = FSE_FERRAM_UTENS_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_FERRAM_UTENS_ANO_N_MARCO_ACUM = 'nd'; var FSE_FERRAM_UTENS_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var FSE_FERRAM_UTENS_ANO_N_MARCO_ACUM= FSE_FERRAM_UTENS_ANO_N_MARCO_ACUM; var FSE_FERRAM_UTENS_ANO_N_MARCO_ACUM_MAX_MIN = FSE_FERRAM_UTENS_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_FERRAM_UTENS_ANO_N_ABRIL_ACUM = 'nd'; var FSE_FERRAM_UTENS_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var FSE_FERRAM_UTENS_ANO_N_ABRIL_ACUM= FSE_FERRAM_UTENS_ANO_N_ABRIL_ACUM; var FSE_FERRAM_UTENS_ANO_N_ABRIL_ACUM_MAX_MIN = FSE_FERRAM_UTENS_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_FERRAM_UTENS_ANO_N_MAIO_ACUM = 'nd'; var FSE_FERRAM_UTENS_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var FSE_FERRAM_UTENS_ANO_N_MAIO_ACUM= FSE_FERRAM_UTENS_ANO_N_MAIO_ACUM; var FSE_FERRAM_UTENS_ANO_N_MAIO_ACUM_MAX_MIN = FSE_FERRAM_UTENS_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_FERRAM_UTENS_ANO_N_JUNHO_ACUM = 'nd'; var FSE_FERRAM_UTENS_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var FSE_FERRAM_UTENS_ANO_N_JUNHO_ACUM= FSE_FERRAM_UTENS_ANO_N_JUNHO_ACUM; var FSE_FERRAM_UTENS_ANO_N_JUNHO_ACUM_MAX_MIN = FSE_FERRAM_UTENS_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_FERRAM_UTENS_ANO_N_JULHO_ACUM = 'nd'; var FSE_FERRAM_UTENS_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var FSE_FERRAM_UTENS_ANO_N_JULHO_ACUM= FSE_FERRAM_UTENS_ANO_N_JULHO_ACUM; var FSE_FERRAM_UTENS_ANO_N_JULHO_ACUM_MAX_MIN = FSE_FERRAM_UTENS_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_FERRAM_UTENS_ANO_N_AGOSTO_ACUM = 'nd'; var FSE_FERRAM_UTENS_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var FSE_FERRAM_UTENS_ANO_N_AGOSTO_ACUM= FSE_FERRAM_UTENS_ANO_N_AGOSTO_ACUM; var FSE_FERRAM_UTENS_ANO_N_AGOSTO_ACUM_MAX_MIN = FSE_FERRAM_UTENS_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_FERRAM_UTENS_ANO_N_SETEMBRO_ACUM = 'nd'; var FSE_FERRAM_UTENS_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_FERRAM_UTENS_ANO_N_SETEMBRO_ACUM= FSE_FERRAM_UTENS_ANO_N_SETEMBRO_ACUM; var FSE_FERRAM_UTENS_ANO_N_SETEMBRO_ACUM_MAX_MIN = FSE_FERRAM_UTENS_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_FERRAM_UTENS_ANO_N_OUTUBRO_ACUM = 'nd'; var FSE_FERRAM_UTENS_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var FSE_FERRAM_UTENS_ANO_N_OUTUBRO_ACUM= FSE_FERRAM_UTENS_ANO_N_OUTUBRO_ACUM; var FSE_FERRAM_UTENS_ANO_N_OUTUBRO_ACUM_MAX_MIN = FSE_FERRAM_UTENS_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_FERRAM_UTENS_ANO_N_NOVEMBRO_ACUM = 'nd'; var FSE_FERRAM_UTENS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_FERRAM_UTENS_ANO_N_NOVEMBRO_ACUM= FSE_FERRAM_UTENS_ANO_N_NOVEMBRO_ACUM; var FSE_FERRAM_UTENS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = FSE_FERRAM_UTENS_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_FERRAM_UTENS_ANO_N_DEZEMBRO_ACUM = 'nd'; var FSE_FERRAM_UTENS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_FERRAM_UTENS_ANO_N_DEZEMBRO_ACUM= FSE_FERRAM_UTENS_ANO_N_DEZEMBRO_ACUM; var FSE_FERRAM_UTENS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = FSE_FERRAM_UTENS_ANO_N_DEZEMBRO_ACUM };




    var FSE_FERRAM_UTENS_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_JANEIRO"])));
    var FSE_FERRAM_UTENS_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_FEVEREIRO"]))) + FSE_FERRAM_UTENS_ANO_N_1_JANEIRO_ACUM;
    var FSE_FERRAM_UTENS_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_MARCO"]))) + FSE_FERRAM_UTENS_ANO_N_1_FEVEREIRO_ACUM;
    var FSE_FERRAM_UTENS_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_ABRIL"]))) + FSE_FERRAM_UTENS_ANO_N_1_MARCO_ACUM;
    var FSE_FERRAM_UTENS_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_MAIO"]))) + FSE_FERRAM_UTENS_ANO_N_1_ABRIL_ACUM;
    var FSE_FERRAM_UTENS_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_JUNHO"]))) + FSE_FERRAM_UTENS_ANO_N_1_MAIO_ACUM;
    var FSE_FERRAM_UTENS_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_JULHO"]))) + FSE_FERRAM_UTENS_ANO_N_1_JUNHO_ACUM;
    var FSE_FERRAM_UTENS_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_AGOSTO"]))) + FSE_FERRAM_UTENS_ANO_N_1_JULHO_ACUM;
    var FSE_FERRAM_UTENS_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_SETEMBRO"]))) + FSE_FERRAM_UTENS_ANO_N_1_AGOSTO_ACUM;
    var FSE_FERRAM_UTENS_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_OUTUBRO"]))) + FSE_FERRAM_UTENS_ANO_N_1_SETEMBRO_ACUM;
    var FSE_FERRAM_UTENS_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_NOVEMBRO"]))) + FSE_FERRAM_UTENS_ANO_N_1_OUTUBRO_ACUM;
    var FSE_FERRAM_UTENS_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_DEZEMBRO"]))) + FSE_FERRAM_UTENS_ANO_N_1_NOVEMBRO_ACUM;


    var FSE_FERRAM_UTENS_Mensal_Eixo_max_princ= Math.max(
                       FSE_FERRAM_UTENS_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_FERRAM_UTENS_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_FERRAM_UTENS_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_FERRAM_UTENS_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_FERRAM_UTENS_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_FERRAM_UTENS_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_FERRAM_UTENS_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_FERRAM_UTENS_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_FERRAM_UTENS_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_FERRAM_UTENS_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_FERRAM_UTENS_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_FERRAM_UTENS_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_FERRAM_UTENS_ANO_N_1_JANEIRO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_1_MARCO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_1_ABRIL_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_1_MAIO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_1_JUNHO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_1_JULHO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_1_AGOSTO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_1_SETEMBRO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_1_OUTUBRO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_1_DEZEMBRO_ACUM
                             );
    var FSE_FERRAM_UTENS_Mensal_Eixo_min_princ= Math.min(

                       FSE_FERRAM_UTENS_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_FERRAM_UTENS_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_FERRAM_UTENS_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_FERRAM_UTENS_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_FERRAM_UTENS_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_FERRAM_UTENS_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_FERRAM_UTENS_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_FERRAM_UTENS_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_FERRAM_UTENS_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_FERRAM_UTENS_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_FERRAM_UTENS_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_FERRAM_UTENS_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_FERRAM_UTENS_ANO_N_1_JANEIRO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_1_MARCO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_1_ABRIL_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_1_MAIO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_1_JUNHO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_1_JULHO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_1_AGOSTO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_1_SETEMBRO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_1_OUTUBRO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_1_DEZEMBRO_ACUM
                           );
    var FSE_FERRAM_UTENS_Mensal_Eixo_max_secon= Math.max(
                       FSE_FERRAM_UTENS_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_FERRAM_UTENS_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_FERRAM_UTENS_ANO_N_MARCO_MAX_MIN ,
                       FSE_FERRAM_UTENS_ANO_N_ABRIL_MAX_MIN ,
                       FSE_FERRAM_UTENS_ANO_N_MAIO_MAX_MIN ,
                       FSE_FERRAM_UTENS_ANO_N_JUNHO_MAX_MIN ,
                       FSE_FERRAM_UTENS_ANO_N_JULHO_MAX_MIN ,
                       FSE_FERRAM_UTENS_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_FERRAM_UTENS_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_FERRAM_UTENS_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_FERRAM_UTENS_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_FERRAM_UTENS_ANO_N_DEZEMBRO_MAX_MIN ,



                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_DEZEMBRO"])))

                            );
    var FSE_FERRAM_UTENS_Mensal_Eixo_min_secon= Math.min(
                       FSE_FERRAM_UTENS_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_FERRAM_UTENS_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_FERRAM_UTENS_ANO_N_MARCO_MAX_MIN ,
                       FSE_FERRAM_UTENS_ANO_N_ABRIL_MAX_MIN ,
                       FSE_FERRAM_UTENS_ANO_N_MAIO_MAX_MIN ,
                       FSE_FERRAM_UTENS_ANO_N_JUNHO_MAX_MIN ,
                       FSE_FERRAM_UTENS_ANO_N_JULHO_MAX_MIN ,
                       FSE_FERRAM_UTENS_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_FERRAM_UTENS_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_FERRAM_UTENS_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_FERRAM_UTENS_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_FERRAM_UTENS_ANO_N_DEZEMBRO_MAX_MIN ,


                           @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_DEZEMBRO"])))

                          );

    //NOTA TA: Aqui trato o minimo e o maximo do eixo principal
    if(Math.abs(FSE_FERRAM_UTENS_Mensal_Eixo_max_princ)>=Math.abs(FSE_FERRAM_UTENS_Mensal_Eixo_min_princ))
    {
        var FSE_FERRAM_UTENS_Mensal_Eixo_max_princ_=(Math.ceil(FSE_FERRAM_UTENS_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_FERRAM_UTENS_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_FERRAM_UTENS_Mensal_Eixo_max_princ),0).toString().length-1);
        var FSE_FERRAM_UTENS_Mensal_Eixo_min_princ_= (Math.floor(FSE_FERRAM_UTENS_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_FERRAM_UTENS_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_FERRAM_UTENS_Mensal_Eixo_max_princ),0).toString().length-1);
        //alert(FSE_FERRAM_UTENS_Mensal_Eixo_max_princ_);
        //alert(FSE_FERRAM_UTENS_Mensal_Eixo_min_princ_);
    }
    else
    {
        var FSE_FERRAM_UTENS_Mensal_Eixo_max_princ_=(Math.ceil(FSE_FERRAM_UTENS_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_FERRAM_UTENS_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_FERRAM_UTENS_Mensal_Eixo_min_princ),0).toString().length-1);
        var FSE_FERRAM_UTENS_Mensal_Eixo_min_princ_= (Math.floor(FSE_FERRAM_UTENS_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_FERRAM_UTENS_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_FERRAM_UTENS_Mensal_Eixo_min_princ),0).toString().length-1);}

    //NOTA TA: Aqui trato o minimo e o maximo do eixo secundario

    if(Math.abs(FSE_FERRAM_UTENS_Mensal_Eixo_max_secon)>=Math.abs(FSE_FERRAM_UTENS_Mensal_Eixo_min_secon))
    {
        var FSE_FERRAM_UTENS_Mensal_Eixo_max_secon_=(Math.ceil(FSE_FERRAM_UTENS_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_FERRAM_UTENS_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_FERRAM_UTENS_Mensal_Eixo_max_secon),0).toString().length-1);
        var FSE_FERRAM_UTENS_Mensal_Eixo_min_secon_= (Math.floor(FSE_FERRAM_UTENS_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_FERRAM_UTENS_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_FERRAM_UTENS_Mensal_Eixo_max_secon),0).toString().length-1);
        //alert(FSE_FERRAM_UTENS_Mensal_Eixo_max_secon_);
        //alert(FSE_FERRAM_UTENS_Mensal_Eixo_min_secon_);
    }
    else
    {
        var FSE_FERRAM_UTENS_Mensal_Eixo_max_secon_=(Math.ceil(FSE_FERRAM_UTENS_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_FERRAM_UTENS_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_FERRAM_UTENS_Mensal_Eixo_min_secon),0).toString().length-1);
        var FSE_FERRAM_UTENS_Mensal_Eixo_min_secon_= (Math.floor(FSE_FERRAM_UTENS_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_FERRAM_UTENS_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_FERRAM_UTENS_Mensal_Eixo_min_secon),0).toString().length-1);}


    if(Math.abs(FSE_FERRAM_UTENS_Mensal_Eixo_min_princ)/Math.abs(FSE_FERRAM_UTENS_Mensal_Eixo_max_princ)>=Math.abs(FSE_FERRAM_UTENS_Mensal_Eixo_min_secon)/Math.abs(FSE_FERRAM_UTENS_Mensal_Eixo_max_secon))
    { if(FSE_FERRAM_UTENS_Mensal_Eixo_max_princ > 0 && FSE_FERRAM_UTENS_Mensal_Eixo_min_princ <0 ){ var FSE_FERRAM_UTENS_Mensal_Eixo_min_secon__=(FSE_FERRAM_UTENS_Mensal_Eixo_min_princ_*FSE_FERRAM_UTENS_Mensal_Eixo_max_secon_)/FSE_FERRAM_UTENS_Mensal_Eixo_max_princ_;} else { var FSE_FERRAM_UTENS_Mensal_Eixo_min_secon__=FSE_FERRAM_UTENS_Mensal_Eixo_min_secon_;}
        if(FSE_FERRAM_UTENS_Mensal_Eixo_max_secon > 0 && FSE_FERRAM_UTENS_Mensal_Eixo_min_secon <0 ){ var FSE_FERRAM_UTENS_Mensal_Eixo_min_princ__=(FSE_FERRAM_UTENS_Mensal_Eixo_min_secon__*FSE_FERRAM_UTENS_Mensal_Eixo_max_princ_)/FSE_FERRAM_UTENS_Mensal_Eixo_max_secon_;} else { var FSE_FERRAM_UTENS_Mensal_Eixo_min_princ__=FSE_FERRAM_UTENS_Mensal_Eixo_min_princ_;}}
    else
    {if(FSE_FERRAM_UTENS_Mensal_Eixo_max_secon > 0 && FSE_FERRAM_UTENS_Mensal_Eixo_min_secon <0 ){ var FSE_FERRAM_UTENS_Mensal_Eixo_min_princ__=(FSE_FERRAM_UTENS_Mensal_Eixo_min_secon_*FSE_FERRAM_UTENS_Mensal_Eixo_max_princ_)/FSE_FERRAM_UTENS_Mensal_Eixo_max_secon_;} else { var FSE_FERRAM_UTENS_Mensal_Eixo_min_princ__=FSE_FERRAM_UTENS_Mensal_Eixo_min_princ_;}
        if(FSE_FERRAM_UTENS_Mensal_Eixo_max_princ > 0 && FSE_FERRAM_UTENS_Mensal_Eixo_min_princ <0 ){ var FSE_FERRAM_UTENS_Mensal_Eixo_min_secon__=(FSE_FERRAM_UTENS_Mensal_Eixo_min_princ__*FSE_FERRAM_UTENS_Mensal_Eixo_max_secon_)/FSE_FERRAM_UTENS_Mensal_Eixo_max_princ_;} else { var FSE_FERRAM_UTENS_Mensal_Eixo_min_secon__=FSE_FERRAM_UTENS_Mensal_Eixo_min_secon_;}
    }



    if(Math.abs(FSE_FERRAM_UTENS_Mensal_Eixo_max_princ)/Math.abs(FSE_FERRAM_UTENS_Mensal_Eixo_min_princ)>=Math.abs(FSE_FERRAM_UTENS_Mensal_Eixo_max_secon)/Math.abs(FSE_FERRAM_UTENS_Mensal_Eixo_min_secon))
    { if(FSE_FERRAM_UTENS_Mensal_Eixo_min_princ > 0 && FSE_FERRAM_UTENS_Mensal_Eixo_max_princ <0 ){ var FSE_FERRAM_UTENS_Mensal_Eixo_max_secon__=(FSE_FERRAM_UTENS_Mensal_Eixo_max_princ_*FSE_FERRAM_UTENS_Mensal_Eixo_min_secon_)/FSE_FERRAM_UTENS_Mensal_Eixo_min_princ_;} else { var FSE_FERRAM_UTENS_Mensal_Eixo_max_secon__=FSE_FERRAM_UTENS_Mensal_Eixo_max_secon_;}
        if(FSE_FERRAM_UTENS_Mensal_Eixo_min_secon > 0 && FSE_FERRAM_UTENS_Mensal_Eixo_max_secon <0 ){ var FSE_FERRAM_UTENS_Mensal_Eixo_max_princ__=(FSE_FERRAM_UTENS_Mensal_Eixo_max_secon__*FSE_FERRAM_UTENS_Mensal_Eixo_min_princ_)/FSE_FERRAM_UTENS_Mensal_Eixo_min_secon_;} else { var FSE_FERRAM_UTENS_Mensal_Eixo_max_princ__=FSE_FERRAM_UTENS_Mensal_Eixo_max_princ_;}}
    else
    {if(FSE_FERRAM_UTENS_Mensal_Eixo_min_secon > 0 && FSE_FERRAM_UTENS_Mensal_Eixo_max_secon <0 ){ var FSE_FERRAM_UTENS_Mensal_Eixo_max_princ__=(FSE_FERRAM_UTENS_Mensal_Eixo_max_secon_*FSE_FERRAM_UTENS_Mensal_Eixo_min_princ_)/FSE_FERRAM_UTENS_Mensal_Eixo_min_secon_;} else { var FSE_FERRAM_UTENS_Mensal_Eixo_max_princ__=FSE_FERRAM_UTENS_Mensal_Eixo_max_princ_;}
        if(FSE_FERRAM_UTENS_Mensal_Eixo_min_princ > 0 && FSE_FERRAM_UTENS_Mensal_Eixo_max_princ <0 ){ var FSE_FERRAM_UTENS_Mensal_Eixo_max_secon__=(FSE_FERRAM_UTENS_Mensal_Eixo_max_princ__*FSE_FERRAM_UTENS_Mensal_Eixo_min_secon_)/FSE_FERRAM_UTENS_Mensal_Eixo_min_princ_;} else { var FSE_FERRAM_UTENS_Mensal_Eixo_max_secon__=FSE_FERRAM_UTENS_Mensal_Eixo_max_secon_;}
    }



    var GRAFICO_FSE_RESULT_MENSAL_COMP_018=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_018').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_018=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_018, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label: 'Ferr. Utens.(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   data: [
                       FSE_FERRAM_UTENS_ANO_N_JANEIRO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_FEVEREIRO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_MARCO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_ABRIL_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_MAIO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_JUNHO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_JULHO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_AGOSTO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_SETEMBRO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_OUTUBRO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_NOVEMBRO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_DEZEMBRO_ACUM,
                   ],
                   type: 'line'


               },
                              {
                                  label: 'Ferr. Utens.(ac) ' + ANO_VERSAO_ANTE_,
                                  yAxisID: 'A',
                                  //backgroundColor: 'rgb(201, 10, 10)',
                                  borderColor: 'rgb(0,221,0)',
                                  data: [
                       FSE_FERRAM_UTENS_ANO_N_1_JANEIRO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_1_MARCO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_1_ABRIL_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_1_MAIO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_1_JUNHO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_1_JULHO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_1_AGOSTO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_1_SETEMBRO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_1_OUTUBRO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_FERRAM_UTENS_ANO_N_1_DEZEMBRO_ACUM,
                                  ],
                                  type: 'line'


                              },
                {
                    label:  'Ferr. Utens.(m) ' + ANO_VERSAO_REAL_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(250 , 83 , 0, 0.5)',
                    borderColor: 'rgba(250 , 83 , 0, 0.5)',
                    data: [
                  FSE_FERRAM_UTENS_ANO_N_JANEIRO ,
                  FSE_FERRAM_UTENS_ANO_N_FEVEREIRO ,
                  FSE_FERRAM_UTENS_ANO_N_MARCO ,
                  FSE_FERRAM_UTENS_ANO_N_ABRIL,
                  FSE_FERRAM_UTENS_ANO_N_MAIO ,
                  FSE_FERRAM_UTENS_ANO_N_JUNHO ,
                  FSE_FERRAM_UTENS_ANO_N_JULHO ,
                  FSE_FERRAM_UTENS_ANO_N_AGOSTO ,
                  FSE_FERRAM_UTENS_ANO_N_SETEMBRO ,
                  FSE_FERRAM_UTENS_ANO_N_OUTUBRO ,
                  FSE_FERRAM_UTENS_ANO_N_NOVEMBRO ,
                  FSE_FERRAM_UTENS_ANO_N_DEZEMBRO ,
                    ],
                },
                {
                    label:  'Ferr. Utens.(m) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(0,221,0, 0.4)',
                    borderColor: 'rgba(0,221,0, 0.4)',
                    data: [
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_JANEIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_FEVEREIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_MARCO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_ABRIL"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_MAIO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_JUNHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_JULHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_AGOSTO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_SETEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_OUTUBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_NOVEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_FERRAM_UTENS_ANO_N_1_DEZEMBRO"]))),
                    ],
                },


            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_FERRAM_UTENS_MENSAL_1',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                min:  Math.round(FSE_FERRAM_UTENS_Mensal_Eixo_min_princ__,0),
                                                max:  Math.round(FSE_FERRAM_UTENS_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString();
                                                }
                                            }
                                        },

                    { id: 'B',
                        type: 'linear',
                        position: 'right',
                        ticks: {
                            min: Math.round(FSE_FERRAM_UTENS_Mensal_Eixo_min_secon__,0),
                            max:  Math.round(FSE_FERRAM_UTENS_Mensal_Eixo_max_secon__,0),
                            beginAtZero: false,
                            callback: function(value, index, values) {
                                return value.toLocaleString();
                            }
                        }
                    },






                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_019-----------------------------------------------------------*@
<script>

    var IND_VN_ANO_N_JANEIRO_ACUM = IND_VN_ANO_N_JANEIRO;
    var IND_VN_ANO_N_FEVEREIRO_ACUM = IND_VN_ANO_N_FEVEREIRO + IND_VN_ANO_N_JANEIRO_ACUM;
    var IND_VN_ANO_N_MARCO_ACUM = IND_VN_ANO_N_MARCO + IND_VN_ANO_N_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_ABRIL_ACUM = IND_VN_ANO_N_ABRIL + IND_VN_ANO_N_MARCO_ACUM;
    var IND_VN_ANO_N_MAIO_ACUM = IND_VN_ANO_N_MAIO + IND_VN_ANO_N_ABRIL_ACUM;
    var IND_VN_ANO_N_JUNHO_ACUM = IND_VN_ANO_N_JUNHO + IND_VN_ANO_N_MAIO_ACUM;
    var IND_VN_ANO_N_JULHO_ACUM = IND_VN_ANO_N_JULHO + IND_VN_ANO_N_JUNHO_ACUM;
    var IND_VN_ANO_N_AGOSTO_ACUM = IND_VN_ANO_N_AGOSTO + IND_VN_ANO_N_JULHO_ACUM;
    var IND_VN_ANO_N_SETEMBRO_ACUM = IND_VN_ANO_N_SETEMBRO + IND_VN_ANO_N_AGOSTO_ACUM;
    var IND_VN_ANO_N_OUTUBRO_ACUM = IND_VN_ANO_N_OUTUBRO + IND_VN_ANO_N_SETEMBRO_ACUM;
    var IND_VN_ANO_N_NOVEMBRO_ACUM = IND_VN_ANO_N_NOVEMBRO + IND_VN_ANO_N_OUTUBRO_ACUM;
    var IND_VN_ANO_N_DEZEMBRO_ACUM = IND_VN_ANO_N_DEZEMBRO + IND_VN_ANO_N_NOVEMBRO_ACUM;



    var IND_VN_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JANEIRO"])));
    var IND_VN_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_FEVEREIRO"]))) + IND_VN_ANO_N_1_JANEIRO_ACUM;
    var IND_VN_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MARCO"]))) + IND_VN_ANO_N_1_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_ABRIL"]))) + IND_VN_ANO_N_1_MARCO_ACUM;
    var IND_VN_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MAIO"]))) + IND_VN_ANO_N_1_ABRIL_ACUM;
    var IND_VN_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JUNHO"]))) + IND_VN_ANO_N_1_MAIO_ACUM;
    var IND_VN_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JULHO"]))) + IND_VN_ANO_N_1_JUNHO_ACUM;
    var IND_VN_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_AGOSTO"]))) + IND_VN_ANO_N_1_JULHO_ACUM;
    var IND_VN_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_SETEMBRO"]))) + IND_VN_ANO_N_1_AGOSTO_ACUM;
    var IND_VN_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_OUTUBRO"]))) + IND_VN_ANO_N_1_SETEMBRO_ACUM;
    var IND_VN_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_NOVEMBRO"]))) + IND_VN_ANO_N_1_OUTUBRO_ACUM;
    var IND_VN_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_DEZEMBRO"]))) + IND_VN_ANO_N_1_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_FERRAM_UTENS_VN_ANO_N_JANEIRO_ACUM = 'nd'; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_FERRAM_UTENS_VN_ANO_N_JANEIRO_ACUM= FSE_FERRAM_UTENS_ANO_N_JANEIRO_ACUM/IND_VN_ANO_N_JANEIRO_ACUM*100; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = PESO_FSE_FERRAM_UTENS_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_FERRAM_UTENS_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_FERRAM_UTENS_VN_ANO_N_FEVEREIRO_ACUM= FSE_FERRAM_UTENS_ANO_N_FEVEREIRO_ACUM/IND_VN_ANO_N_FEVEREIRO_ACUM*100; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_FERRAM_UTENS_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_FERRAM_UTENS_VN_ANO_N_MARCO_ACUM = 'nd'; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_FERRAM_UTENS_VN_ANO_N_MARCO_ACUM= FSE_FERRAM_UTENS_ANO_N_MARCO_ACUM/IND_VN_ANO_N_MARCO_ACUM*100; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_MARCO_ACUM_MAX_MIN = PESO_FSE_FERRAM_UTENS_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_FERRAM_UTENS_VN_ANO_N_ABRIL_ACUM = 'nd'; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_FERRAM_UTENS_VN_ANO_N_ABRIL_ACUM= FSE_FERRAM_UTENS_ANO_N_ABRIL_ACUM/IND_VN_ANO_N_ABRIL_ACUM*100; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_ABRIL_ACUM_MAX_MIN = PESO_FSE_FERRAM_UTENS_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_FERRAM_UTENS_VN_ANO_N_MAIO_ACUM = 'nd'; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_FERRAM_UTENS_VN_ANO_N_MAIO_ACUM= FSE_FERRAM_UTENS_ANO_N_MAIO_ACUM/IND_VN_ANO_N_MAIO_ACUM*100; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_MAIO_ACUM_MAX_MIN = PESO_FSE_FERRAM_UTENS_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_FERRAM_UTENS_VN_ANO_N_JUNHO_ACUM = 'nd'; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_FERRAM_UTENS_VN_ANO_N_JUNHO_ACUM= FSE_FERRAM_UTENS_ANO_N_JUNHO_ACUM/IND_VN_ANO_N_JUNHO_ACUM*100; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_JUNHO_ACUM_MAX_MIN = PESO_FSE_FERRAM_UTENS_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_FERRAM_UTENS_VN_ANO_N_JULHO_ACUM = 'nd'; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_FERRAM_UTENS_VN_ANO_N_JULHO_ACUM= FSE_FERRAM_UTENS_ANO_N_JULHO_ACUM/IND_VN_ANO_N_JULHO_ACUM*100; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_JULHO_ACUM_MAX_MIN = PESO_FSE_FERRAM_UTENS_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_FERRAM_UTENS_VN_ANO_N_AGOSTO_ACUM = 'nd'; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_FERRAM_UTENS_VN_ANO_N_AGOSTO_ACUM= FSE_FERRAM_UTENS_ANO_N_AGOSTO_ACUM/IND_VN_ANO_N_AGOSTO_ACUM*100; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = PESO_FSE_FERRAM_UTENS_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_FERRAM_UTENS_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_FERRAM_UTENS_VN_ANO_N_SETEMBRO_ACUM= FSE_FERRAM_UTENS_ANO_N_SETEMBRO_ACUM/IND_VN_ANO_N_SETEMBRO_ACUM*100; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_FERRAM_UTENS_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_FERRAM_UTENS_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_FERRAM_UTENS_VN_ANO_N_OUTUBRO_ACUM= FSE_FERRAM_UTENS_ANO_N_OUTUBRO_ACUM/IND_VN_ANO_N_OUTUBRO_ACUM*100; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_FERRAM_UTENS_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_FERRAM_UTENS_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_FERRAM_UTENS_VN_ANO_N_NOVEMBRO_ACUM= FSE_FERRAM_UTENS_ANO_N_NOVEMBRO_ACUM/IND_VN_ANO_N_NOVEMBRO_ACUM*100; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_FERRAM_UTENS_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_FERRAM_UTENS_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_FERRAM_UTENS_VN_ANO_N_DEZEMBRO_ACUM= FSE_FERRAM_UTENS_ANO_N_DEZEMBRO_ACUM/IND_VN_ANO_N_DEZEMBRO_ACUM*100; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_FERRAM_UTENS_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_JANEIRO_ACUM = 'nd'; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_JANEIRO_ACUM= FSE_FERRAM_UTENS_ANO_N_1_JANEIRO_ACUM/IND_VN_ANO_N_1_JANEIRO_ACUM*100; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_FEVEREIRO_ACUM= FSE_FERRAM_UTENS_ANO_N_1_FEVEREIRO_ACUM/IND_VN_ANO_N_1_FEVEREIRO_ACUM*100; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_MARCO_ACUM = 'nd'; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_MARCO_ACUM= FSE_FERRAM_UTENS_ANO_N_1_MARCO_ACUM/IND_VN_ANO_N_1_MARCO_ACUM*100; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_ABRIL_ACUM = 'nd'; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_ABRIL_ACUM= FSE_FERRAM_UTENS_ANO_N_1_ABRIL_ACUM/IND_VN_ANO_N_1_ABRIL_ACUM*100; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_MAIO_ACUM = 'nd'; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_MAIO_ACUM= FSE_FERRAM_UTENS_ANO_N_1_MAIO_ACUM/IND_VN_ANO_N_1_MAIO_ACUM*100; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_JUNHO_ACUM = 'nd'; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_JUNHO_ACUM= FSE_FERRAM_UTENS_ANO_N_1_JUNHO_ACUM/IND_VN_ANO_N_1_JUNHO_ACUM*100; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_JULHO_ACUM = 'nd'; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_JULHO_ACUM= FSE_FERRAM_UTENS_ANO_N_1_JULHO_ACUM/IND_VN_ANO_N_1_JULHO_ACUM*100; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_AGOSTO_ACUM = 'nd'; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_AGOSTO_ACUM= FSE_FERRAM_UTENS_ANO_N_1_AGOSTO_ACUM/IND_VN_ANO_N_1_AGOSTO_ACUM*100; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_SETEMBRO_ACUM = 'nd'; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_SETEMBRO_ACUM= FSE_FERRAM_UTENS_ANO_N_1_SETEMBRO_ACUM/IND_VN_ANO_N_1_SETEMBRO_ACUM*100; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_OUTUBRO_ACUM = 'nd'; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_OUTUBRO_ACUM= FSE_FERRAM_UTENS_ANO_N_1_OUTUBRO_ACUM/IND_VN_ANO_N_1_OUTUBRO_ACUM*100; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_NOVEMBRO_ACUM= FSE_FERRAM_UTENS_ANO_N_1_NOVEMBRO_ACUM/IND_VN_ANO_N_1_NOVEMBRO_ACUM*100; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_DEZEMBRO_ACUM= FSE_FERRAM_UTENS_ANO_N_1_DEZEMBRO_ACUM/IND_VN_ANO_N_1_DEZEMBRO_ACUM*100; var PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_VN_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JANEIRO_ACUM= ((IND_VN_ANO_N_JANEIRO_ACUM-IND_VN_ANO_N_1_JANEIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_JANEIRO_ACUM))*100; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_FEVEREIRO_ACUM= ((IND_VN_ANO_N_FEVEREIRO_ACUM-IND_VN_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_VN_ANO_N_MARCO_ACUM = 'nd'; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MARCO_ACUM= ((IND_VN_ANO_N_MARCO_ACUM-IND_VN_ANO_N_1_MARCO_ACUM)/Math.abs(IND_VN_ANO_N_1_MARCO_ACUM))*100; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = VAR_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_VN_ANO_N_ABRIL_ACUM = 'nd'; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_ABRIL_ACUM= ((IND_VN_ANO_N_ABRIL_ACUM-IND_VN_ANO_N_1_ABRIL_ACUM)/Math.abs(IND_VN_ANO_N_1_ABRIL_ACUM))*100; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_VN_ANO_N_MAIO_ACUM = 'nd'; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MAIO_ACUM= ((IND_VN_ANO_N_MAIO_ACUM-IND_VN_ANO_N_1_MAIO_ACUM)/Math.abs(IND_VN_ANO_N_1_MAIO_ACUM))*100; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = VAR_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_VN_ANO_N_JUNHO_ACUM = 'nd'; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JUNHO_ACUM= ((IND_VN_ANO_N_JUNHO_ACUM-IND_VN_ANO_N_1_JUNHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JUNHO_ACUM))*100; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_VN_ANO_N_JULHO_ACUM = 'nd'; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JULHO_ACUM= ((IND_VN_ANO_N_JULHO_ACUM-IND_VN_ANO_N_1_JULHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JULHO_ACUM))*100; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_VN_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_AGOSTO_ACUM= ((IND_VN_ANO_N_AGOSTO_ACUM-IND_VN_ANO_N_1_AGOSTO_ACUM)/Math.abs(IND_VN_ANO_N_1_AGOSTO_ACUM))*100; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_SETEMBRO_ACUM= ((IND_VN_ANO_N_SETEMBRO_ACUM-IND_VN_ANO_N_1_SETEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_OUTUBRO_ACUM= ((IND_VN_ANO_N_OUTUBRO_ACUM-IND_VN_ANO_N_1_OUTUBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_NOVEMBRO_ACUM= ((IND_VN_ANO_N_NOVEMBRO_ACUM-IND_VN_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_DEZEMBRO_ACUM= ((IND_VN_ANO_N_DEZEMBRO_ACUM-IND_VN_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_FSE_FERRAM_UTENS_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_FSE_FERRAM_UTENS_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_FERRAM_UTENS_ANO_N_JANEIRO_ACUM= ((FSE_FERRAM_UTENS_ANO_N_JANEIRO_ACUM-FSE_FERRAM_UTENS_ANO_N_1_JANEIRO_ACUM)/Math.abs(FSE_FERRAM_UTENS_ANO_N_1_JANEIRO_ACUM))*100; var VAR_FSE_FERRAM_UTENS_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_FSE_FERRAM_UTENS_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_FSE_FERRAM_UTENS_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_FSE_FERRAM_UTENS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_FERRAM_UTENS_ANO_N_FEVEREIRO_ACUM= ((FSE_FERRAM_UTENS_ANO_N_FEVEREIRO_ACUM-FSE_FERRAM_UTENS_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(FSE_FERRAM_UTENS_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_FSE_FERRAM_UTENS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_FSE_FERRAM_UTENS_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_FSE_FERRAM_UTENS_ANO_N_MARCO_ACUM = 'nd'; var VAR_FSE_FERRAM_UTENS_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_FERRAM_UTENS_ANO_N_MARCO_ACUM= ((FSE_FERRAM_UTENS_ANO_N_MARCO_ACUM-FSE_FERRAM_UTENS_ANO_N_1_MARCO_ACUM)/Math.abs(FSE_FERRAM_UTENS_ANO_N_1_MARCO_ACUM))*100; var VAR_FSE_FERRAM_UTENS_ANO_N_MARCO_ACUM_MAX_MIN = VAR_FSE_FERRAM_UTENS_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_FSE_FERRAM_UTENS_ANO_N_ABRIL_ACUM = 'nd'; var VAR_FSE_FERRAM_UTENS_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_FERRAM_UTENS_ANO_N_ABRIL_ACUM= ((FSE_FERRAM_UTENS_ANO_N_ABRIL_ACUM-FSE_FERRAM_UTENS_ANO_N_1_ABRIL_ACUM)/Math.abs(FSE_FERRAM_UTENS_ANO_N_1_ABRIL_ACUM))*100; var VAR_FSE_FERRAM_UTENS_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_FSE_FERRAM_UTENS_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_FSE_FERRAM_UTENS_ANO_N_MAIO_ACUM = 'nd'; var VAR_FSE_FERRAM_UTENS_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_FERRAM_UTENS_ANO_N_MAIO_ACUM= ((FSE_FERRAM_UTENS_ANO_N_MAIO_ACUM-FSE_FERRAM_UTENS_ANO_N_1_MAIO_ACUM)/Math.abs(FSE_FERRAM_UTENS_ANO_N_1_MAIO_ACUM))*100; var VAR_FSE_FERRAM_UTENS_ANO_N_MAIO_ACUM_MAX_MIN = VAR_FSE_FERRAM_UTENS_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_FSE_FERRAM_UTENS_ANO_N_JUNHO_ACUM = 'nd'; var VAR_FSE_FERRAM_UTENS_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_FERRAM_UTENS_ANO_N_JUNHO_ACUM= ((FSE_FERRAM_UTENS_ANO_N_JUNHO_ACUM-FSE_FERRAM_UTENS_ANO_N_1_JUNHO_ACUM)/Math.abs(FSE_FERRAM_UTENS_ANO_N_1_JUNHO_ACUM))*100; var VAR_FSE_FERRAM_UTENS_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_FSE_FERRAM_UTENS_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_FSE_FERRAM_UTENS_ANO_N_JULHO_ACUM = 'nd'; var VAR_FSE_FERRAM_UTENS_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_FERRAM_UTENS_ANO_N_JULHO_ACUM= ((FSE_FERRAM_UTENS_ANO_N_JULHO_ACUM-FSE_FERRAM_UTENS_ANO_N_1_JULHO_ACUM)/Math.abs(FSE_FERRAM_UTENS_ANO_N_1_JULHO_ACUM))*100; var VAR_FSE_FERRAM_UTENS_ANO_N_JULHO_ACUM_MAX_MIN = VAR_FSE_FERRAM_UTENS_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_FSE_FERRAM_UTENS_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_FSE_FERRAM_UTENS_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_FERRAM_UTENS_ANO_N_AGOSTO_ACUM= ((FSE_FERRAM_UTENS_ANO_N_AGOSTO_ACUM-FSE_FERRAM_UTENS_ANO_N_1_AGOSTO_ACUM)/Math.abs(FSE_FERRAM_UTENS_ANO_N_1_AGOSTO_ACUM))*100; var VAR_FSE_FERRAM_UTENS_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_FSE_FERRAM_UTENS_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_FSE_FERRAM_UTENS_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_FSE_FERRAM_UTENS_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_FERRAM_UTENS_ANO_N_SETEMBRO_ACUM= ((FSE_FERRAM_UTENS_ANO_N_SETEMBRO_ACUM-FSE_FERRAM_UTENS_ANO_N_1_SETEMBRO_ACUM)/Math.abs(FSE_FERRAM_UTENS_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_FSE_FERRAM_UTENS_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_FSE_FERRAM_UTENS_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_FSE_FERRAM_UTENS_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_FSE_FERRAM_UTENS_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_FERRAM_UTENS_ANO_N_OUTUBRO_ACUM= ((FSE_FERRAM_UTENS_ANO_N_OUTUBRO_ACUM-FSE_FERRAM_UTENS_ANO_N_1_OUTUBRO_ACUM)/Math.abs(FSE_FERRAM_UTENS_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_FSE_FERRAM_UTENS_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_FSE_FERRAM_UTENS_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_FSE_FERRAM_UTENS_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_FSE_FERRAM_UTENS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_FERRAM_UTENS_ANO_N_NOVEMBRO_ACUM= ((FSE_FERRAM_UTENS_ANO_N_NOVEMBRO_ACUM-FSE_FERRAM_UTENS_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(FSE_FERRAM_UTENS_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_FSE_FERRAM_UTENS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_FSE_FERRAM_UTENS_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_FSE_FERRAM_UTENS_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_FSE_FERRAM_UTENS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_FERRAM_UTENS_ANO_N_DEZEMBRO_ACUM= ((FSE_FERRAM_UTENS_ANO_N_DEZEMBRO_ACUM-FSE_FERRAM_UTENS_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(FSE_FERRAM_UTENS_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_FSE_FERRAM_UTENS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_FSE_FERRAM_UTENS_ANO_N_DEZEMBRO_ACUM };

    if( PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_JANEIRO_ACUM > PESO_FSE_FERRAM_UTENS_VN_ANO_N_JANEIRO_ACUM) { var  INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_JANEIRO_ACUM=PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_JANEIRO_ACUM ; } else { var  INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_JANEIRO_ACUM=PESO_FSE_FERRAM_UTENS_VN_ANO_N_JANEIRO_ACUM ; }
    if( PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_FEVEREIRO_ACUM > PESO_FSE_FERRAM_UTENS_VN_ANO_N_FEVEREIRO_ACUM) { var  INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_FEVEREIRO_ACUM=PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_FEVEREIRO_ACUM ; } else { var  INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_FEVEREIRO_ACUM=PESO_FSE_FERRAM_UTENS_VN_ANO_N_FEVEREIRO_ACUM ; }
    if( PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_MARCO_ACUM > PESO_FSE_FERRAM_UTENS_VN_ANO_N_MARCO_ACUM) { var  INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_MARCO_ACUM=PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_MARCO_ACUM ; } else { var  INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_MARCO_ACUM=PESO_FSE_FERRAM_UTENS_VN_ANO_N_MARCO_ACUM ; }
    if( PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_ABRIL_ACUM > PESO_FSE_FERRAM_UTENS_VN_ANO_N_ABRIL_ACUM) { var  INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_ABRIL_ACUM=PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_ABRIL_ACUM ; } else { var  INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_ABRIL_ACUM=PESO_FSE_FERRAM_UTENS_VN_ANO_N_ABRIL_ACUM ; }
    if( PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_MAIO_ACUM > PESO_FSE_FERRAM_UTENS_VN_ANO_N_MAIO_ACUM) { var  INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_MAIO_ACUM=PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_MAIO_ACUM ; } else { var  INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_MAIO_ACUM=PESO_FSE_FERRAM_UTENS_VN_ANO_N_MAIO_ACUM ; }
    if( PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_JUNHO_ACUM > PESO_FSE_FERRAM_UTENS_VN_ANO_N_JUNHO_ACUM) { var  INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_JUNHO_ACUM=PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_JUNHO_ACUM ; } else { var  INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_JUNHO_ACUM=PESO_FSE_FERRAM_UTENS_VN_ANO_N_JUNHO_ACUM ; }
    if( PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_JULHO_ACUM > PESO_FSE_FERRAM_UTENS_VN_ANO_N_JULHO_ACUM) { var  INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_JULHO_ACUM=PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_JULHO_ACUM ; } else { var  INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_JULHO_ACUM=PESO_FSE_FERRAM_UTENS_VN_ANO_N_JULHO_ACUM ; }
    if( PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_AGOSTO_ACUM > PESO_FSE_FERRAM_UTENS_VN_ANO_N_AGOSTO_ACUM) { var  INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_AGOSTO_ACUM=PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_AGOSTO_ACUM ; } else { var  INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_AGOSTO_ACUM=PESO_FSE_FERRAM_UTENS_VN_ANO_N_AGOSTO_ACUM ; }
    if( PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_SETEMBRO_ACUM > PESO_FSE_FERRAM_UTENS_VN_ANO_N_SETEMBRO_ACUM) { var  INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_SETEMBRO_ACUM=PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_SETEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_SETEMBRO_ACUM=PESO_FSE_FERRAM_UTENS_VN_ANO_N_SETEMBRO_ACUM ; }
    if( PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_OUTUBRO_ACUM > PESO_FSE_FERRAM_UTENS_VN_ANO_N_OUTUBRO_ACUM) { var  INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_OUTUBRO_ACUM=PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_OUTUBRO_ACUM ; } else { var  INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_OUTUBRO_ACUM=PESO_FSE_FERRAM_UTENS_VN_ANO_N_OUTUBRO_ACUM ; }
    if( PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_NOVEMBRO_ACUM > PESO_FSE_FERRAM_UTENS_VN_ANO_N_NOVEMBRO_ACUM) { var  INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_NOVEMBRO_ACUM=PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_NOVEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_NOVEMBRO_ACUM=PESO_FSE_FERRAM_UTENS_VN_ANO_N_NOVEMBRO_ACUM ; }
    if( PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_DEZEMBRO_ACUM > PESO_FSE_FERRAM_UTENS_VN_ANO_N_DEZEMBRO_ACUM) { var  INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_DEZEMBRO_ACUM=PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_DEZEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_DEZEMBRO_ACUM=PESO_FSE_FERRAM_UTENS_VN_ANO_N_DEZEMBRO_ACUM ; }



    var fillBetweenLinesPlugin = {
        afterDatasetsDraw: function (chart) {
            var ctx = chart.chart.ctx;
            var xaxis = chart.scales['x-axis-0'];
            var yaxis = chart.scales['y-axis-0'];
            var datasets = chart.data.datasets;
            ctx.save();

            for (var d = 0; d < datasets.length; d++) {
                var dataset = datasets[d];
                if (dataset.fillBetweenSet == undefined) {
                    continue;
                }

                // get meta for both data sets
                var meta1 = chart.getDatasetMeta(d);
                var meta2 = chart.getDatasetMeta(dataset.fillBetweenSet);

                // do not draw fill if one of the datasets is hidden
                if (meta1.hidden || meta2.hidden) continue;

                // create fill areas in pairs
                for (var p = 0; p < meta1.data.length-1;p++) {
                    // if null skip
                    if (dataset.data[p] == null || dataset.data[p+1] == null) continue;

                    ctx.beginPath();

                    // trace line 1
                    var curr = meta1.data[p];
                    var next = meta1.data[p+1];
                    ctx.moveTo(curr._view.x, curr._view.y);
                    ctx.lineTo(curr._view.x, curr._view.y);
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(next._view.x, curr._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        ctx.bezierCurveTo(
                          curr._view.controlPointNextX,
                          curr._view.controlPointNextY,
                          next._view.controlPointPreviousX,
                          next._view.controlPointPreviousY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // connect dataset1 to dataset2
                    var curr = meta2.data[p+1];
                    var next = meta2.data[p];
                    ctx.lineTo(curr._view.x, curr._view.y);

                    // trace BACKWORDS set2 to complete the box
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(curr._view.x, next._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        // reverse bezier
                        ctx.bezierCurveTo(
                          curr._view.controlPointPreviousX,
                          curr._view.controlPointPreviousY,
                          next._view.controlPointNextX,
                          next._view.controlPointNextY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // close the loop and fill with shading
                    ctx.closePath();
                    ctx.fillStyle = dataset.fillBetweenColor || "rgba(0,0,0,0.1)";
                    ctx.fill();
                } // end for p loop
            }
        } // end afterDatasetsDraw
    }; // end fillBetweenLinesPlugin

    Chart.pluginService.register(fillBetweenLinesPlugin);



    var GRAFICO_FSE_RESULT_MENSAL_COMP_019=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_019').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_019=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_019, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label:  'Peso Ferr. Utens.vsVN(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   //borderColor: "#F00",
                   fill: false,
                   steppedLine: false,
                   tension: 0.5,
                   fillBetweenSet: 1,
                   fillBetweenColor: "rgba(0, 221, 0, 0.1)",
                   data: [
                   PESO_FSE_FERRAM_UTENS_VN_ANO_N_JANEIRO_ACUM,
                   PESO_FSE_FERRAM_UTENS_VN_ANO_N_FEVEREIRO_ACUM,
                   PESO_FSE_FERRAM_UTENS_VN_ANO_N_MARCO_ACUM,
                   PESO_FSE_FERRAM_UTENS_VN_ANO_N_ABRIL_ACUM,
                   PESO_FSE_FERRAM_UTENS_VN_ANO_N_MAIO_ACUM,
                   PESO_FSE_FERRAM_UTENS_VN_ANO_N_JUNHO_ACUM,
                   PESO_FSE_FERRAM_UTENS_VN_ANO_N_JULHO_ACUM,
                   PESO_FSE_FERRAM_UTENS_VN_ANO_N_AGOSTO_ACUM,
                   PESO_FSE_FERRAM_UTENS_VN_ANO_N_SETEMBRO_ACUM,
                   PESO_FSE_FERRAM_UTENS_VN_ANO_N_OUTUBRO_ACUM,
                   PESO_FSE_FERRAM_UTENS_VN_ANO_N_NOVEMBRO_ACUM,
                   PESO_FSE_FERRAM_UTENS_VN_ANO_N_DEZEMBRO_ACUM,

                   ],
                   type: 'line'


               },
                {
                    label: 'Peso Ferr. Utens.vsVN(ac) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'A',
                    //backgroundColor: 'rgb(17, 121, 240)',
                    borderColor: 'rgb(0,221,0)',
                    //borderColor: "#00F",
                    fill: false,
                    steppedLine: false,
                    tension: 0.5,
                    data: [
                   PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_JANEIRO_ACUM,
                   PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_FEVEREIRO_ACUM,
                   PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_MARCO_ACUM,
                   PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_ABRIL_ACUM,
                   PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_MAIO_ACUM,
                   PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_JUNHO_ACUM,
                   PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_JULHO_ACUM,
                   PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_AGOSTO_ACUM,
                   PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_SETEMBRO_ACUM,
                   PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_OUTUBRO_ACUM,
                   PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_NOVEMBRO_ACUM,
                   PESO_FSE_FERRAM_UTENS_VN_ANO_N_1_DEZEMBRO_ACUM,
                    ],
                    type: 'line'
                },
    {
        label: 'Ineficiência',
        yAxisID: 'A',
        backgroundColor: "rgba(255, 0, 0, 0.2)",
        borderColor: 'rgba(255, 255, 255, 0.1)',
        //borderColor: "#0D0",
        fill: false,
        steppedLine: false,
        tension: 0.5,
        fillBetweenSet: 1,
        fillBetweenColor: "rgba(255, 0, 0, 0.2)",
        data: [
    INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_JANEIRO_ACUM,
    INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_FEVEREIRO_ACUM,
    INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_MARCO_ACUM,
    INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_ABRIL_ACUM,
    INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_MAIO_ACUM,
    INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_JUNHO_ACUM,
    INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_JULHO_ACUM,
    INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_AGOSTO_ACUM,
    INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_SETEMBRO_ACUM,
    INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_OUTUBRO_ACUM,
    INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_NOVEMBRO_ACUM,
    INEFICIENCIA_FSE_FERRAM_UTENS_ANO_N_DEZEMBRO_ACUM,
        ],
        type: 'line'
    },

            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_Ferr. Utens. COMP',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                //min:  Math.round(FSE_FERRAM_UTENS_Mensal_Eixo_min_princ__,0),
                                                //max:  Math.round(FSE_FERRAM_UTENS_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString()+ "%";
                                                }
                                            }
                                        },







                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_020-----------------------------------------------------------*@
<script>

    if(@ViewData["MES_ACUM_REAL"]<1){ var IND_VN_ANO_N_JANEIRO = 'nd'; var IND_VN_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JANEIRO"]))); var IND_VN_ANO_N_JANEIRO_MAX_MIN = IND_VN_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var IND_VN_ANO_N_FEVEREIRO = 'nd'; var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_FEVEREIRO"]))); var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = IND_VN_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var IND_VN_ANO_N_MARCO = 'nd'; var IND_VN_ANO_N_MARCO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MARCO"]))); var IND_VN_ANO_N_MARCO_MAX_MIN = IND_VN_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var IND_VN_ANO_N_ABRIL = 'nd'; var IND_VN_ANO_N_ABRIL_MAX_MIN = 0;  } else { var IND_VN_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_ABRIL"]))); var IND_VN_ANO_N_ABRIL_MAX_MIN = IND_VN_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var IND_VN_ANO_N_MAIO = 'nd'; var IND_VN_ANO_N_MAIO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MAIO"]))); var IND_VN_ANO_N_MAIO_MAX_MIN = IND_VN_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var IND_VN_ANO_N_JUNHO = 'nd'; var IND_VN_ANO_N_JUNHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JUNHO"]))); var IND_VN_ANO_N_JUNHO_MAX_MIN = IND_VN_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var IND_VN_ANO_N_JULHO = 'nd'; var IND_VN_ANO_N_JULHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JULHO"]))); var IND_VN_ANO_N_JULHO_MAX_MIN = IND_VN_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var IND_VN_ANO_N_AGOSTO = 'nd'; var IND_VN_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_AGOSTO"]))); var IND_VN_ANO_N_AGOSTO_MAX_MIN = IND_VN_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var IND_VN_ANO_N_SETEMBRO = 'nd'; var IND_VN_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_SETEMBRO"]))); var IND_VN_ANO_N_SETEMBRO_MAX_MIN = IND_VN_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var IND_VN_ANO_N_OUTUBRO = 'nd'; var IND_VN_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_OUTUBRO"]))); var IND_VN_ANO_N_OUTUBRO_MAX_MIN = IND_VN_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var IND_VN_ANO_N_NOVEMBRO = 'nd'; var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_NOVEMBRO"]))); var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = IND_VN_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var IND_VN_ANO_N_DEZEMBRO = 'nd'; var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_DEZEMBRO"]))); var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = IND_VN_ANO_N_DEZEMBRO };

    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_LIVR_DOCUM_TEC_ANO_N_JANEIRO = 'nd'; var FSE_LIVR_DOCUM_TEC_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var FSE_LIVR_DOCUM_TEC_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_JANEIRO"]))); var FSE_LIVR_DOCUM_TEC_ANO_N_JANEIRO_MAX_MIN = FSE_LIVR_DOCUM_TEC_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_LIVR_DOCUM_TEC_ANO_N_FEVEREIRO = 'nd'; var FSE_LIVR_DOCUM_TEC_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var FSE_LIVR_DOCUM_TEC_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_FEVEREIRO"]))); var FSE_LIVR_DOCUM_TEC_ANO_N_FEVEREIRO_MAX_MIN = FSE_LIVR_DOCUM_TEC_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_LIVR_DOCUM_TEC_ANO_N_MARCO = 'nd'; var FSE_LIVR_DOCUM_TEC_ANO_N_MARCO_MAX_MIN = 0;  } else { var FSE_LIVR_DOCUM_TEC_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_MARCO"]))); var FSE_LIVR_DOCUM_TEC_ANO_N_MARCO_MAX_MIN = FSE_LIVR_DOCUM_TEC_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_LIVR_DOCUM_TEC_ANO_N_ABRIL = 'nd'; var FSE_LIVR_DOCUM_TEC_ANO_N_ABRIL_MAX_MIN = 0;  } else { var FSE_LIVR_DOCUM_TEC_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_ABRIL"]))); var FSE_LIVR_DOCUM_TEC_ANO_N_ABRIL_MAX_MIN = FSE_LIVR_DOCUM_TEC_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_LIVR_DOCUM_TEC_ANO_N_MAIO = 'nd'; var FSE_LIVR_DOCUM_TEC_ANO_N_MAIO_MAX_MIN = 0;  } else { var FSE_LIVR_DOCUM_TEC_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_MAIO"]))); var FSE_LIVR_DOCUM_TEC_ANO_N_MAIO_MAX_MIN = FSE_LIVR_DOCUM_TEC_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_LIVR_DOCUM_TEC_ANO_N_JUNHO = 'nd'; var FSE_LIVR_DOCUM_TEC_ANO_N_JUNHO_MAX_MIN = 0;  } else { var FSE_LIVR_DOCUM_TEC_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_JUNHO"]))); var FSE_LIVR_DOCUM_TEC_ANO_N_JUNHO_MAX_MIN = FSE_LIVR_DOCUM_TEC_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_LIVR_DOCUM_TEC_ANO_N_JULHO = 'nd'; var FSE_LIVR_DOCUM_TEC_ANO_N_JULHO_MAX_MIN = 0;  } else { var FSE_LIVR_DOCUM_TEC_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_JULHO"]))); var FSE_LIVR_DOCUM_TEC_ANO_N_JULHO_MAX_MIN = FSE_LIVR_DOCUM_TEC_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_LIVR_DOCUM_TEC_ANO_N_AGOSTO = 'nd'; var FSE_LIVR_DOCUM_TEC_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var FSE_LIVR_DOCUM_TEC_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_AGOSTO"]))); var FSE_LIVR_DOCUM_TEC_ANO_N_AGOSTO_MAX_MIN = FSE_LIVR_DOCUM_TEC_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_LIVR_DOCUM_TEC_ANO_N_SETEMBRO = 'nd'; var FSE_LIVR_DOCUM_TEC_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var FSE_LIVR_DOCUM_TEC_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_SETEMBRO"]))); var FSE_LIVR_DOCUM_TEC_ANO_N_SETEMBRO_MAX_MIN = FSE_LIVR_DOCUM_TEC_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_LIVR_DOCUM_TEC_ANO_N_OUTUBRO = 'nd'; var FSE_LIVR_DOCUM_TEC_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var FSE_LIVR_DOCUM_TEC_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_OUTUBRO"]))); var FSE_LIVR_DOCUM_TEC_ANO_N_OUTUBRO_MAX_MIN = FSE_LIVR_DOCUM_TEC_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_LIVR_DOCUM_TEC_ANO_N_NOVEMBRO = 'nd'; var FSE_LIVR_DOCUM_TEC_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var FSE_LIVR_DOCUM_TEC_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_NOVEMBRO"]))); var FSE_LIVR_DOCUM_TEC_ANO_N_NOVEMBRO_MAX_MIN = FSE_LIVR_DOCUM_TEC_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_LIVR_DOCUM_TEC_ANO_N_DEZEMBRO = 'nd'; var FSE_LIVR_DOCUM_TEC_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var FSE_LIVR_DOCUM_TEC_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_DEZEMBRO"]))); var FSE_LIVR_DOCUM_TEC_ANO_N_DEZEMBRO_MAX_MIN = FSE_LIVR_DOCUM_TEC_ANO_N_DEZEMBRO };


    var FSE_LIVR_DOCUM_TEC_ANO_N_JANEIRO_ACUM = FSE_LIVR_DOCUM_TEC_ANO_N_JANEIRO;
    var FSE_LIVR_DOCUM_TEC_ANO_N_FEVEREIRO_ACUM = FSE_LIVR_DOCUM_TEC_ANO_N_FEVEREIRO + FSE_LIVR_DOCUM_TEC_ANO_N_JANEIRO_ACUM;
    var FSE_LIVR_DOCUM_TEC_ANO_N_MARCO_ACUM = FSE_LIVR_DOCUM_TEC_ANO_N_MARCO + FSE_LIVR_DOCUM_TEC_ANO_N_FEVEREIRO_ACUM;
    var FSE_LIVR_DOCUM_TEC_ANO_N_ABRIL_ACUM = FSE_LIVR_DOCUM_TEC_ANO_N_ABRIL + FSE_LIVR_DOCUM_TEC_ANO_N_MARCO_ACUM;
    var FSE_LIVR_DOCUM_TEC_ANO_N_MAIO_ACUM = FSE_LIVR_DOCUM_TEC_ANO_N_MAIO + FSE_LIVR_DOCUM_TEC_ANO_N_ABRIL_ACUM;
    var FSE_LIVR_DOCUM_TEC_ANO_N_JUNHO_ACUM = FSE_LIVR_DOCUM_TEC_ANO_N_JUNHO + FSE_LIVR_DOCUM_TEC_ANO_N_MAIO_ACUM;
    var FSE_LIVR_DOCUM_TEC_ANO_N_JULHO_ACUM = FSE_LIVR_DOCUM_TEC_ANO_N_JULHO + FSE_LIVR_DOCUM_TEC_ANO_N_JUNHO_ACUM;
    var FSE_LIVR_DOCUM_TEC_ANO_N_AGOSTO_ACUM = FSE_LIVR_DOCUM_TEC_ANO_N_AGOSTO + FSE_LIVR_DOCUM_TEC_ANO_N_JULHO_ACUM;
    var FSE_LIVR_DOCUM_TEC_ANO_N_SETEMBRO_ACUM = FSE_LIVR_DOCUM_TEC_ANO_N_SETEMBRO + FSE_LIVR_DOCUM_TEC_ANO_N_AGOSTO_ACUM;
    var FSE_LIVR_DOCUM_TEC_ANO_N_OUTUBRO_ACUM = FSE_LIVR_DOCUM_TEC_ANO_N_OUTUBRO + FSE_LIVR_DOCUM_TEC_ANO_N_SETEMBRO_ACUM;
    var FSE_LIVR_DOCUM_TEC_ANO_N_NOVEMBRO_ACUM = FSE_LIVR_DOCUM_TEC_ANO_N_NOVEMBRO + FSE_LIVR_DOCUM_TEC_ANO_N_OUTUBRO_ACUM;
    var FSE_LIVR_DOCUM_TEC_ANO_N_DEZEMBRO_ACUM = FSE_LIVR_DOCUM_TEC_ANO_N_DEZEMBRO + FSE_LIVR_DOCUM_TEC_ANO_N_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_LIVR_DOCUM_TEC_ANO_N_JANEIRO_ACUM = 'nd'; var FSE_LIVR_DOCUM_TEC_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var FSE_LIVR_DOCUM_TEC_ANO_N_JANEIRO_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_JANEIRO_ACUM; var FSE_LIVR_DOCUM_TEC_ANO_N_JANEIRO_ACUM_MAX_MIN = FSE_LIVR_DOCUM_TEC_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_LIVR_DOCUM_TEC_ANO_N_FEVEREIRO_ACUM = 'nd'; var FSE_LIVR_DOCUM_TEC_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var FSE_LIVR_DOCUM_TEC_ANO_N_FEVEREIRO_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_FEVEREIRO_ACUM; var FSE_LIVR_DOCUM_TEC_ANO_N_FEVEREIRO_ACUM_MAX_MIN = FSE_LIVR_DOCUM_TEC_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_LIVR_DOCUM_TEC_ANO_N_MARCO_ACUM = 'nd'; var FSE_LIVR_DOCUM_TEC_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var FSE_LIVR_DOCUM_TEC_ANO_N_MARCO_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_MARCO_ACUM; var FSE_LIVR_DOCUM_TEC_ANO_N_MARCO_ACUM_MAX_MIN = FSE_LIVR_DOCUM_TEC_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_LIVR_DOCUM_TEC_ANO_N_ABRIL_ACUM = 'nd'; var FSE_LIVR_DOCUM_TEC_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var FSE_LIVR_DOCUM_TEC_ANO_N_ABRIL_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_ABRIL_ACUM; var FSE_LIVR_DOCUM_TEC_ANO_N_ABRIL_ACUM_MAX_MIN = FSE_LIVR_DOCUM_TEC_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_LIVR_DOCUM_TEC_ANO_N_MAIO_ACUM = 'nd'; var FSE_LIVR_DOCUM_TEC_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var FSE_LIVR_DOCUM_TEC_ANO_N_MAIO_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_MAIO_ACUM; var FSE_LIVR_DOCUM_TEC_ANO_N_MAIO_ACUM_MAX_MIN = FSE_LIVR_DOCUM_TEC_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_LIVR_DOCUM_TEC_ANO_N_JUNHO_ACUM = 'nd'; var FSE_LIVR_DOCUM_TEC_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var FSE_LIVR_DOCUM_TEC_ANO_N_JUNHO_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_JUNHO_ACUM; var FSE_LIVR_DOCUM_TEC_ANO_N_JUNHO_ACUM_MAX_MIN = FSE_LIVR_DOCUM_TEC_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_LIVR_DOCUM_TEC_ANO_N_JULHO_ACUM = 'nd'; var FSE_LIVR_DOCUM_TEC_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var FSE_LIVR_DOCUM_TEC_ANO_N_JULHO_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_JULHO_ACUM; var FSE_LIVR_DOCUM_TEC_ANO_N_JULHO_ACUM_MAX_MIN = FSE_LIVR_DOCUM_TEC_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_LIVR_DOCUM_TEC_ANO_N_AGOSTO_ACUM = 'nd'; var FSE_LIVR_DOCUM_TEC_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var FSE_LIVR_DOCUM_TEC_ANO_N_AGOSTO_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_AGOSTO_ACUM; var FSE_LIVR_DOCUM_TEC_ANO_N_AGOSTO_ACUM_MAX_MIN = FSE_LIVR_DOCUM_TEC_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_LIVR_DOCUM_TEC_ANO_N_SETEMBRO_ACUM = 'nd'; var FSE_LIVR_DOCUM_TEC_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_LIVR_DOCUM_TEC_ANO_N_SETEMBRO_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_SETEMBRO_ACUM; var FSE_LIVR_DOCUM_TEC_ANO_N_SETEMBRO_ACUM_MAX_MIN = FSE_LIVR_DOCUM_TEC_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_LIVR_DOCUM_TEC_ANO_N_OUTUBRO_ACUM = 'nd'; var FSE_LIVR_DOCUM_TEC_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var FSE_LIVR_DOCUM_TEC_ANO_N_OUTUBRO_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_OUTUBRO_ACUM; var FSE_LIVR_DOCUM_TEC_ANO_N_OUTUBRO_ACUM_MAX_MIN = FSE_LIVR_DOCUM_TEC_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_LIVR_DOCUM_TEC_ANO_N_NOVEMBRO_ACUM = 'nd'; var FSE_LIVR_DOCUM_TEC_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_LIVR_DOCUM_TEC_ANO_N_NOVEMBRO_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_NOVEMBRO_ACUM; var FSE_LIVR_DOCUM_TEC_ANO_N_NOVEMBRO_ACUM_MAX_MIN = FSE_LIVR_DOCUM_TEC_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_LIVR_DOCUM_TEC_ANO_N_DEZEMBRO_ACUM = 'nd'; var FSE_LIVR_DOCUM_TEC_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_LIVR_DOCUM_TEC_ANO_N_DEZEMBRO_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_DEZEMBRO_ACUM; var FSE_LIVR_DOCUM_TEC_ANO_N_DEZEMBRO_ACUM_MAX_MIN = FSE_LIVR_DOCUM_TEC_ANO_N_DEZEMBRO_ACUM };




    var FSE_LIVR_DOCUM_TEC_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_JANEIRO"])));
    var FSE_LIVR_DOCUM_TEC_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_FEVEREIRO"]))) + FSE_LIVR_DOCUM_TEC_ANO_N_1_JANEIRO_ACUM;
    var FSE_LIVR_DOCUM_TEC_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_MARCO"]))) + FSE_LIVR_DOCUM_TEC_ANO_N_1_FEVEREIRO_ACUM;
    var FSE_LIVR_DOCUM_TEC_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_ABRIL"]))) + FSE_LIVR_DOCUM_TEC_ANO_N_1_MARCO_ACUM;
    var FSE_LIVR_DOCUM_TEC_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_MAIO"]))) + FSE_LIVR_DOCUM_TEC_ANO_N_1_ABRIL_ACUM;
    var FSE_LIVR_DOCUM_TEC_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_JUNHO"]))) + FSE_LIVR_DOCUM_TEC_ANO_N_1_MAIO_ACUM;
    var FSE_LIVR_DOCUM_TEC_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_JULHO"]))) + FSE_LIVR_DOCUM_TEC_ANO_N_1_JUNHO_ACUM;
    var FSE_LIVR_DOCUM_TEC_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_AGOSTO"]))) + FSE_LIVR_DOCUM_TEC_ANO_N_1_JULHO_ACUM;
    var FSE_LIVR_DOCUM_TEC_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_SETEMBRO"]))) + FSE_LIVR_DOCUM_TEC_ANO_N_1_AGOSTO_ACUM;
    var FSE_LIVR_DOCUM_TEC_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_OUTUBRO"]))) + FSE_LIVR_DOCUM_TEC_ANO_N_1_SETEMBRO_ACUM;
    var FSE_LIVR_DOCUM_TEC_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_NOVEMBRO"]))) + FSE_LIVR_DOCUM_TEC_ANO_N_1_OUTUBRO_ACUM;
    var FSE_LIVR_DOCUM_TEC_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_DEZEMBRO"]))) + FSE_LIVR_DOCUM_TEC_ANO_N_1_NOVEMBRO_ACUM;


    var FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_princ= Math.max(
                       FSE_LIVR_DOCUM_TEC_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_LIVR_DOCUM_TEC_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_LIVR_DOCUM_TEC_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_LIVR_DOCUM_TEC_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_LIVR_DOCUM_TEC_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_LIVR_DOCUM_TEC_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_LIVR_DOCUM_TEC_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_LIVR_DOCUM_TEC_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_LIVR_DOCUM_TEC_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_LIVR_DOCUM_TEC_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_LIVR_DOCUM_TEC_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_LIVR_DOCUM_TEC_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_LIVR_DOCUM_TEC_ANO_N_1_JANEIRO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_1_MARCO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_1_ABRIL_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_1_MAIO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_1_JUNHO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_1_JULHO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_1_AGOSTO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_1_SETEMBRO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_1_OUTUBRO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_1_DEZEMBRO_ACUM
                             );
    var FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_princ= Math.min(

                       FSE_LIVR_DOCUM_TEC_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_LIVR_DOCUM_TEC_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_LIVR_DOCUM_TEC_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_LIVR_DOCUM_TEC_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_LIVR_DOCUM_TEC_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_LIVR_DOCUM_TEC_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_LIVR_DOCUM_TEC_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_LIVR_DOCUM_TEC_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_LIVR_DOCUM_TEC_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_LIVR_DOCUM_TEC_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_LIVR_DOCUM_TEC_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_LIVR_DOCUM_TEC_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_LIVR_DOCUM_TEC_ANO_N_1_JANEIRO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_1_MARCO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_1_ABRIL_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_1_MAIO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_1_JUNHO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_1_JULHO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_1_AGOSTO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_1_SETEMBRO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_1_OUTUBRO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_1_DEZEMBRO_ACUM
                           );
    var FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_secon= Math.max(
                       FSE_LIVR_DOCUM_TEC_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_LIVR_DOCUM_TEC_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_LIVR_DOCUM_TEC_ANO_N_MARCO_MAX_MIN ,
                       FSE_LIVR_DOCUM_TEC_ANO_N_ABRIL_MAX_MIN ,
                       FSE_LIVR_DOCUM_TEC_ANO_N_MAIO_MAX_MIN ,
                       FSE_LIVR_DOCUM_TEC_ANO_N_JUNHO_MAX_MIN ,
                       FSE_LIVR_DOCUM_TEC_ANO_N_JULHO_MAX_MIN ,
                       FSE_LIVR_DOCUM_TEC_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_LIVR_DOCUM_TEC_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_LIVR_DOCUM_TEC_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_LIVR_DOCUM_TEC_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_LIVR_DOCUM_TEC_ANO_N_DEZEMBRO_MAX_MIN ,



                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_DEZEMBRO"])))

                            );
    var FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_secon= Math.min(
                       FSE_LIVR_DOCUM_TEC_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_LIVR_DOCUM_TEC_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_LIVR_DOCUM_TEC_ANO_N_MARCO_MAX_MIN ,
                       FSE_LIVR_DOCUM_TEC_ANO_N_ABRIL_MAX_MIN ,
                       FSE_LIVR_DOCUM_TEC_ANO_N_MAIO_MAX_MIN ,
                       FSE_LIVR_DOCUM_TEC_ANO_N_JUNHO_MAX_MIN ,
                       FSE_LIVR_DOCUM_TEC_ANO_N_JULHO_MAX_MIN ,
                       FSE_LIVR_DOCUM_TEC_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_LIVR_DOCUM_TEC_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_LIVR_DOCUM_TEC_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_LIVR_DOCUM_TEC_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_LIVR_DOCUM_TEC_ANO_N_DEZEMBRO_MAX_MIN ,


                           @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_DEZEMBRO"])))

                          );

    //NOTA TA: Aqui trato o minimo e o maximo do eixo principal
    if(Math.abs(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_princ)>=Math.abs(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_princ))
    {
        var FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_princ_=(Math.ceil(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_princ),0).toString().length-1);
        var FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_princ_= (Math.floor(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_princ),0).toString().length-1);
        //alert(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_princ_);
        //alert(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_princ_);
    }
    else
    {
        var FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_princ_=(Math.ceil(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_princ),0).toString().length-1);
        var FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_princ_= (Math.floor(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_princ),0).toString().length-1);}

    //NOTA TA: Aqui trato o minimo e o maximo do eixo secundario

    if(Math.abs(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_secon)>=Math.abs(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_secon))
    {
        var FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_secon_=(Math.ceil(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_secon),0).toString().length-1);
        var FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_secon_= (Math.floor(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_secon),0).toString().length-1);
        //alert(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_secon_);
        //alert(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_secon_);
    }
    else
    {
        var FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_secon_=(Math.ceil(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_secon),0).toString().length-1);
        var FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_secon_= (Math.floor(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_secon),0).toString().length-1);}


    if(Math.abs(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_princ)/Math.abs(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_princ)>=Math.abs(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_secon)/Math.abs(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_secon))
    { if(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_princ > 0 && FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_princ <0 ){ var FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_secon__=(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_princ_*FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_secon_)/FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_princ_;} else { var FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_secon__=FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_secon_;}
        if(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_secon > 0 && FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_secon <0 ){ var FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_princ__=(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_secon__*FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_princ_)/FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_secon_;} else { var FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_princ__=FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_princ_;}}
    else
    {if(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_secon > 0 && FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_secon <0 ){ var FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_princ__=(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_secon_*FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_princ_)/FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_secon_;} else { var FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_princ__=FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_princ_;}
        if(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_princ > 0 && FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_princ <0 ){ var FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_secon__=(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_princ__*FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_secon_)/FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_princ_;} else { var FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_secon__=FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_secon_;}
    }



    if(Math.abs(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_princ)/Math.abs(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_princ)>=Math.abs(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_secon)/Math.abs(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_secon))
    { if(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_princ > 0 && FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_princ <0 ){ var FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_secon__=(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_princ_*FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_secon_)/FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_princ_;} else { var FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_secon__=FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_secon_;}
        if(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_secon > 0 && FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_secon <0 ){ var FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_princ__=(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_secon__*FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_princ_)/FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_secon_;} else { var FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_princ__=FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_princ_;}}
    else
    {if(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_secon > 0 && FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_secon <0 ){ var FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_princ__=(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_secon_*FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_princ_)/FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_secon_;} else { var FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_princ__=FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_princ_;}
        if(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_princ > 0 && FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_princ <0 ){ var FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_secon__=(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_princ__*FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_secon_)/FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_princ_;} else { var FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_secon__=FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_secon_;}
    }



    var GRAFICO_FSE_RESULT_MENSAL_COMP_020=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_020').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_020=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_020, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label: 'Liv.Doc.Técn.(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   data: [
                       FSE_LIVR_DOCUM_TEC_ANO_N_JANEIRO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_FEVEREIRO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_MARCO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_ABRIL_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_MAIO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_JUNHO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_JULHO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_AGOSTO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_SETEMBRO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_OUTUBRO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_NOVEMBRO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_DEZEMBRO_ACUM,
                   ],
                   type: 'line'


               },
                              {
                                  label: 'Liv.Doc.Técn.(ac) ' + ANO_VERSAO_ANTE_,
                                  yAxisID: 'A',
                                  //backgroundColor: 'rgb(201, 10, 10)',
                                  borderColor: 'rgb(0,221,0)',
                                  data: [
                       FSE_LIVR_DOCUM_TEC_ANO_N_1_JANEIRO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_1_MARCO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_1_ABRIL_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_1_MAIO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_1_JUNHO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_1_JULHO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_1_AGOSTO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_1_SETEMBRO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_1_OUTUBRO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_LIVR_DOCUM_TEC_ANO_N_1_DEZEMBRO_ACUM,
                                  ],
                                  type: 'line'


                              },
                {
                    label:  'Liv.Doc.Técn.(m) ' + ANO_VERSAO_REAL_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(250 , 83 , 0, 0.5)',
                    borderColor: 'rgba(250 , 83 , 0, 0.5)',
                    data: [
                  FSE_LIVR_DOCUM_TEC_ANO_N_JANEIRO ,
                  FSE_LIVR_DOCUM_TEC_ANO_N_FEVEREIRO ,
                  FSE_LIVR_DOCUM_TEC_ANO_N_MARCO ,
                  FSE_LIVR_DOCUM_TEC_ANO_N_ABRIL,
                  FSE_LIVR_DOCUM_TEC_ANO_N_MAIO ,
                  FSE_LIVR_DOCUM_TEC_ANO_N_JUNHO ,
                  FSE_LIVR_DOCUM_TEC_ANO_N_JULHO ,
                  FSE_LIVR_DOCUM_TEC_ANO_N_AGOSTO ,
                  FSE_LIVR_DOCUM_TEC_ANO_N_SETEMBRO ,
                  FSE_LIVR_DOCUM_TEC_ANO_N_OUTUBRO ,
                  FSE_LIVR_DOCUM_TEC_ANO_N_NOVEMBRO ,
                  FSE_LIVR_DOCUM_TEC_ANO_N_DEZEMBRO ,
                    ],
                },
                {
                    label:  'Liv.Doc.Técn.(m) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(0,221,0, 0.4)',
                    borderColor: 'rgba(0,221,0, 0.4)',
                    data: [
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_JANEIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_FEVEREIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_MARCO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_ABRIL"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_MAIO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_JUNHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_JULHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_AGOSTO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_SETEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_OUTUBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_NOVEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_LIVR_DOCUM_TEC_ANO_N_1_DEZEMBRO"]))),
                    ],
                },


            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_LIVR_DOCUM_TEC_MENSAL_1',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                min:  Math.round(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_princ__,0),
                                                max:  Math.round(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString();
                                                }
                                            }
                                        },

                    { id: 'B',
                        type: 'linear',
                        position: 'right',
                        ticks: {
                            min: Math.round(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_secon__,0),
                            max:  Math.round(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_secon__,0),
                            beginAtZero: false,
                            callback: function(value, index, values) {
                                return value.toLocaleString();
                            }
                        }
                    },






                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_021-----------------------------------------------------------*@
<script>

    var IND_VN_ANO_N_JANEIRO_ACUM = IND_VN_ANO_N_JANEIRO;
    var IND_VN_ANO_N_FEVEREIRO_ACUM = IND_VN_ANO_N_FEVEREIRO + IND_VN_ANO_N_JANEIRO_ACUM;
    var IND_VN_ANO_N_MARCO_ACUM = IND_VN_ANO_N_MARCO + IND_VN_ANO_N_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_ABRIL_ACUM = IND_VN_ANO_N_ABRIL + IND_VN_ANO_N_MARCO_ACUM;
    var IND_VN_ANO_N_MAIO_ACUM = IND_VN_ANO_N_MAIO + IND_VN_ANO_N_ABRIL_ACUM;
    var IND_VN_ANO_N_JUNHO_ACUM = IND_VN_ANO_N_JUNHO + IND_VN_ANO_N_MAIO_ACUM;
    var IND_VN_ANO_N_JULHO_ACUM = IND_VN_ANO_N_JULHO + IND_VN_ANO_N_JUNHO_ACUM;
    var IND_VN_ANO_N_AGOSTO_ACUM = IND_VN_ANO_N_AGOSTO + IND_VN_ANO_N_JULHO_ACUM;
    var IND_VN_ANO_N_SETEMBRO_ACUM = IND_VN_ANO_N_SETEMBRO + IND_VN_ANO_N_AGOSTO_ACUM;
    var IND_VN_ANO_N_OUTUBRO_ACUM = IND_VN_ANO_N_OUTUBRO + IND_VN_ANO_N_SETEMBRO_ACUM;
    var IND_VN_ANO_N_NOVEMBRO_ACUM = IND_VN_ANO_N_NOVEMBRO + IND_VN_ANO_N_OUTUBRO_ACUM;
    var IND_VN_ANO_N_DEZEMBRO_ACUM = IND_VN_ANO_N_DEZEMBRO + IND_VN_ANO_N_NOVEMBRO_ACUM;



    var IND_VN_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JANEIRO"])));
    var IND_VN_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_FEVEREIRO"]))) + IND_VN_ANO_N_1_JANEIRO_ACUM;
    var IND_VN_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MARCO"]))) + IND_VN_ANO_N_1_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_ABRIL"]))) + IND_VN_ANO_N_1_MARCO_ACUM;
    var IND_VN_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MAIO"]))) + IND_VN_ANO_N_1_ABRIL_ACUM;
    var IND_VN_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JUNHO"]))) + IND_VN_ANO_N_1_MAIO_ACUM;
    var IND_VN_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JULHO"]))) + IND_VN_ANO_N_1_JUNHO_ACUM;
    var IND_VN_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_AGOSTO"]))) + IND_VN_ANO_N_1_JULHO_ACUM;
    var IND_VN_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_SETEMBRO"]))) + IND_VN_ANO_N_1_AGOSTO_ACUM;
    var IND_VN_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_OUTUBRO"]))) + IND_VN_ANO_N_1_SETEMBRO_ACUM;
    var IND_VN_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_NOVEMBRO"]))) + IND_VN_ANO_N_1_OUTUBRO_ACUM;
    var IND_VN_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_DEZEMBRO"]))) + IND_VN_ANO_N_1_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_JANEIRO_ACUM = 'nd'; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_JANEIRO_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_JANEIRO_ACUM/IND_VN_ANO_N_JANEIRO_ACUM*100; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_FEVEREIRO_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_FEVEREIRO_ACUM/IND_VN_ANO_N_FEVEREIRO_ACUM*100; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_MARCO_ACUM = 'nd'; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_MARCO_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_MARCO_ACUM/IND_VN_ANO_N_MARCO_ACUM*100; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_MARCO_ACUM_MAX_MIN = PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_ABRIL_ACUM = 'nd'; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_ABRIL_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_ABRIL_ACUM/IND_VN_ANO_N_ABRIL_ACUM*100; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_ABRIL_ACUM_MAX_MIN = PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_MAIO_ACUM = 'nd'; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_MAIO_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_MAIO_ACUM/IND_VN_ANO_N_MAIO_ACUM*100; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_MAIO_ACUM_MAX_MIN = PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_JUNHO_ACUM = 'nd'; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_JUNHO_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_JUNHO_ACUM/IND_VN_ANO_N_JUNHO_ACUM*100; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_JUNHO_ACUM_MAX_MIN = PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_JULHO_ACUM = 'nd'; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_JULHO_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_JULHO_ACUM/IND_VN_ANO_N_JULHO_ACUM*100; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_JULHO_ACUM_MAX_MIN = PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_AGOSTO_ACUM = 'nd'; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_AGOSTO_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_AGOSTO_ACUM/IND_VN_ANO_N_AGOSTO_ACUM*100; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_SETEMBRO_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_SETEMBRO_ACUM/IND_VN_ANO_N_SETEMBRO_ACUM*100; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_OUTUBRO_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_OUTUBRO_ACUM/IND_VN_ANO_N_OUTUBRO_ACUM*100; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_NOVEMBRO_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_NOVEMBRO_ACUM/IND_VN_ANO_N_NOVEMBRO_ACUM*100; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_DEZEMBRO_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_DEZEMBRO_ACUM/IND_VN_ANO_N_DEZEMBRO_ACUM*100; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_JANEIRO_ACUM = 'nd'; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_JANEIRO_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_1_JANEIRO_ACUM/IND_VN_ANO_N_1_JANEIRO_ACUM*100; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_FEVEREIRO_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_1_FEVEREIRO_ACUM/IND_VN_ANO_N_1_FEVEREIRO_ACUM*100; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_MARCO_ACUM = 'nd'; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_MARCO_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_1_MARCO_ACUM/IND_VN_ANO_N_1_MARCO_ACUM*100; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_ABRIL_ACUM = 'nd'; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_ABRIL_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_1_ABRIL_ACUM/IND_VN_ANO_N_1_ABRIL_ACUM*100; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_MAIO_ACUM = 'nd'; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_MAIO_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_1_MAIO_ACUM/IND_VN_ANO_N_1_MAIO_ACUM*100; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_JUNHO_ACUM = 'nd'; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_JUNHO_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_1_JUNHO_ACUM/IND_VN_ANO_N_1_JUNHO_ACUM*100; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_JULHO_ACUM = 'nd'; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_JULHO_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_1_JULHO_ACUM/IND_VN_ANO_N_1_JULHO_ACUM*100; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_AGOSTO_ACUM = 'nd'; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_AGOSTO_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_1_AGOSTO_ACUM/IND_VN_ANO_N_1_AGOSTO_ACUM*100; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_SETEMBRO_ACUM = 'nd'; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_SETEMBRO_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_1_SETEMBRO_ACUM/IND_VN_ANO_N_1_SETEMBRO_ACUM*100; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_OUTUBRO_ACUM = 'nd'; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_OUTUBRO_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_1_OUTUBRO_ACUM/IND_VN_ANO_N_1_OUTUBRO_ACUM*100; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_NOVEMBRO_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_1_NOVEMBRO_ACUM/IND_VN_ANO_N_1_NOVEMBRO_ACUM*100; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_DEZEMBRO_ACUM= FSE_LIVR_DOCUM_TEC_ANO_N_1_DEZEMBRO_ACUM/IND_VN_ANO_N_1_DEZEMBRO_ACUM*100; var PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_VN_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JANEIRO_ACUM= ((IND_VN_ANO_N_JANEIRO_ACUM-IND_VN_ANO_N_1_JANEIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_JANEIRO_ACUM))*100; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_FEVEREIRO_ACUM= ((IND_VN_ANO_N_FEVEREIRO_ACUM-IND_VN_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_VN_ANO_N_MARCO_ACUM = 'nd'; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MARCO_ACUM= ((IND_VN_ANO_N_MARCO_ACUM-IND_VN_ANO_N_1_MARCO_ACUM)/Math.abs(IND_VN_ANO_N_1_MARCO_ACUM))*100; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = VAR_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_VN_ANO_N_ABRIL_ACUM = 'nd'; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_ABRIL_ACUM= ((IND_VN_ANO_N_ABRIL_ACUM-IND_VN_ANO_N_1_ABRIL_ACUM)/Math.abs(IND_VN_ANO_N_1_ABRIL_ACUM))*100; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_VN_ANO_N_MAIO_ACUM = 'nd'; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MAIO_ACUM= ((IND_VN_ANO_N_MAIO_ACUM-IND_VN_ANO_N_1_MAIO_ACUM)/Math.abs(IND_VN_ANO_N_1_MAIO_ACUM))*100; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = VAR_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_VN_ANO_N_JUNHO_ACUM = 'nd'; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JUNHO_ACUM= ((IND_VN_ANO_N_JUNHO_ACUM-IND_VN_ANO_N_1_JUNHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JUNHO_ACUM))*100; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_VN_ANO_N_JULHO_ACUM = 'nd'; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JULHO_ACUM= ((IND_VN_ANO_N_JULHO_ACUM-IND_VN_ANO_N_1_JULHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JULHO_ACUM))*100; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_VN_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_AGOSTO_ACUM= ((IND_VN_ANO_N_AGOSTO_ACUM-IND_VN_ANO_N_1_AGOSTO_ACUM)/Math.abs(IND_VN_ANO_N_1_AGOSTO_ACUM))*100; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_SETEMBRO_ACUM= ((IND_VN_ANO_N_SETEMBRO_ACUM-IND_VN_ANO_N_1_SETEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_OUTUBRO_ACUM= ((IND_VN_ANO_N_OUTUBRO_ACUM-IND_VN_ANO_N_1_OUTUBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_NOVEMBRO_ACUM= ((IND_VN_ANO_N_NOVEMBRO_ACUM-IND_VN_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_DEZEMBRO_ACUM= ((IND_VN_ANO_N_DEZEMBRO_ACUM-IND_VN_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_JANEIRO_ACUM= ((FSE_LIVR_DOCUM_TEC_ANO_N_JANEIRO_ACUM-FSE_LIVR_DOCUM_TEC_ANO_N_1_JANEIRO_ACUM)/Math.abs(FSE_LIVR_DOCUM_TEC_ANO_N_1_JANEIRO_ACUM))*100; var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_FSE_LIVR_DOCUM_TEC_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_FEVEREIRO_ACUM= ((FSE_LIVR_DOCUM_TEC_ANO_N_FEVEREIRO_ACUM-FSE_LIVR_DOCUM_TEC_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(FSE_LIVR_DOCUM_TEC_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_FSE_LIVR_DOCUM_TEC_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_MARCO_ACUM = 'nd'; var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_MARCO_ACUM= ((FSE_LIVR_DOCUM_TEC_ANO_N_MARCO_ACUM-FSE_LIVR_DOCUM_TEC_ANO_N_1_MARCO_ACUM)/Math.abs(FSE_LIVR_DOCUM_TEC_ANO_N_1_MARCO_ACUM))*100; var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_MARCO_ACUM_MAX_MIN = VAR_FSE_LIVR_DOCUM_TEC_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_ABRIL_ACUM = 'nd'; var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_ABRIL_ACUM= ((FSE_LIVR_DOCUM_TEC_ANO_N_ABRIL_ACUM-FSE_LIVR_DOCUM_TEC_ANO_N_1_ABRIL_ACUM)/Math.abs(FSE_LIVR_DOCUM_TEC_ANO_N_1_ABRIL_ACUM))*100; var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_FSE_LIVR_DOCUM_TEC_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_MAIO_ACUM = 'nd'; var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_MAIO_ACUM= ((FSE_LIVR_DOCUM_TEC_ANO_N_MAIO_ACUM-FSE_LIVR_DOCUM_TEC_ANO_N_1_MAIO_ACUM)/Math.abs(FSE_LIVR_DOCUM_TEC_ANO_N_1_MAIO_ACUM))*100; var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_MAIO_ACUM_MAX_MIN = VAR_FSE_LIVR_DOCUM_TEC_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_JUNHO_ACUM = 'nd'; var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_JUNHO_ACUM= ((FSE_LIVR_DOCUM_TEC_ANO_N_JUNHO_ACUM-FSE_LIVR_DOCUM_TEC_ANO_N_1_JUNHO_ACUM)/Math.abs(FSE_LIVR_DOCUM_TEC_ANO_N_1_JUNHO_ACUM))*100; var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_FSE_LIVR_DOCUM_TEC_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_JULHO_ACUM = 'nd'; var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_JULHO_ACUM= ((FSE_LIVR_DOCUM_TEC_ANO_N_JULHO_ACUM-FSE_LIVR_DOCUM_TEC_ANO_N_1_JULHO_ACUM)/Math.abs(FSE_LIVR_DOCUM_TEC_ANO_N_1_JULHO_ACUM))*100; var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_JULHO_ACUM_MAX_MIN = VAR_FSE_LIVR_DOCUM_TEC_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_AGOSTO_ACUM= ((FSE_LIVR_DOCUM_TEC_ANO_N_AGOSTO_ACUM-FSE_LIVR_DOCUM_TEC_ANO_N_1_AGOSTO_ACUM)/Math.abs(FSE_LIVR_DOCUM_TEC_ANO_N_1_AGOSTO_ACUM))*100; var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_FSE_LIVR_DOCUM_TEC_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_SETEMBRO_ACUM= ((FSE_LIVR_DOCUM_TEC_ANO_N_SETEMBRO_ACUM-FSE_LIVR_DOCUM_TEC_ANO_N_1_SETEMBRO_ACUM)/Math.abs(FSE_LIVR_DOCUM_TEC_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_FSE_LIVR_DOCUM_TEC_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_OUTUBRO_ACUM= ((FSE_LIVR_DOCUM_TEC_ANO_N_OUTUBRO_ACUM-FSE_LIVR_DOCUM_TEC_ANO_N_1_OUTUBRO_ACUM)/Math.abs(FSE_LIVR_DOCUM_TEC_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_FSE_LIVR_DOCUM_TEC_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_NOVEMBRO_ACUM= ((FSE_LIVR_DOCUM_TEC_ANO_N_NOVEMBRO_ACUM-FSE_LIVR_DOCUM_TEC_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(FSE_LIVR_DOCUM_TEC_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_FSE_LIVR_DOCUM_TEC_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_DEZEMBRO_ACUM= ((FSE_LIVR_DOCUM_TEC_ANO_N_DEZEMBRO_ACUM-FSE_LIVR_DOCUM_TEC_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(FSE_LIVR_DOCUM_TEC_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_FSE_LIVR_DOCUM_TEC_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_FSE_LIVR_DOCUM_TEC_ANO_N_DEZEMBRO_ACUM };

    if( PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_JANEIRO_ACUM > PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_JANEIRO_ACUM) { var  INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_JANEIRO_ACUM=PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_JANEIRO_ACUM ; } else { var  INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_JANEIRO_ACUM=PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_JANEIRO_ACUM ; }
    if( PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_FEVEREIRO_ACUM > PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_FEVEREIRO_ACUM) { var  INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_FEVEREIRO_ACUM=PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_FEVEREIRO_ACUM ; } else { var  INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_FEVEREIRO_ACUM=PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_FEVEREIRO_ACUM ; }
    if( PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_MARCO_ACUM > PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_MARCO_ACUM) { var  INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_MARCO_ACUM=PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_MARCO_ACUM ; } else { var  INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_MARCO_ACUM=PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_MARCO_ACUM ; }
    if( PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_ABRIL_ACUM > PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_ABRIL_ACUM) { var  INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_ABRIL_ACUM=PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_ABRIL_ACUM ; } else { var  INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_ABRIL_ACUM=PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_ABRIL_ACUM ; }
    if( PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_MAIO_ACUM > PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_MAIO_ACUM) { var  INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_MAIO_ACUM=PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_MAIO_ACUM ; } else { var  INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_MAIO_ACUM=PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_MAIO_ACUM ; }
    if( PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_JUNHO_ACUM > PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_JUNHO_ACUM) { var  INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_JUNHO_ACUM=PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_JUNHO_ACUM ; } else { var  INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_JUNHO_ACUM=PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_JUNHO_ACUM ; }
    if( PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_JULHO_ACUM > PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_JULHO_ACUM) { var  INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_JULHO_ACUM=PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_JULHO_ACUM ; } else { var  INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_JULHO_ACUM=PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_JULHO_ACUM ; }
    if( PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_AGOSTO_ACUM > PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_AGOSTO_ACUM) { var  INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_AGOSTO_ACUM=PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_AGOSTO_ACUM ; } else { var  INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_AGOSTO_ACUM=PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_AGOSTO_ACUM ; }
    if( PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_SETEMBRO_ACUM > PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_SETEMBRO_ACUM) { var  INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_SETEMBRO_ACUM=PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_SETEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_SETEMBRO_ACUM=PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_SETEMBRO_ACUM ; }
    if( PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_OUTUBRO_ACUM > PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_OUTUBRO_ACUM) { var  INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_OUTUBRO_ACUM=PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_OUTUBRO_ACUM ; } else { var  INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_OUTUBRO_ACUM=PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_OUTUBRO_ACUM ; }
    if( PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_NOVEMBRO_ACUM > PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_NOVEMBRO_ACUM) { var  INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_NOVEMBRO_ACUM=PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_NOVEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_NOVEMBRO_ACUM=PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_NOVEMBRO_ACUM ; }
    if( PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_DEZEMBRO_ACUM > PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_DEZEMBRO_ACUM) { var  INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_DEZEMBRO_ACUM=PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_DEZEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_DEZEMBRO_ACUM=PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_DEZEMBRO_ACUM ; }



    var fillBetweenLinesPlugin = {
        afterDatasetsDraw: function (chart) {
            var ctx = chart.chart.ctx;
            var xaxis = chart.scales['x-axis-0'];
            var yaxis = chart.scales['y-axis-0'];
            var datasets = chart.data.datasets;
            ctx.save();

            for (var d = 0; d < datasets.length; d++) {
                var dataset = datasets[d];
                if (dataset.fillBetweenSet == undefined) {
                    continue;
                }

                // get meta for both data sets
                var meta1 = chart.getDatasetMeta(d);
                var meta2 = chart.getDatasetMeta(dataset.fillBetweenSet);

                // do not draw fill if one of the datasets is hidden
                if (meta1.hidden || meta2.hidden) continue;

                // create fill areas in pairs
                for (var p = 0; p < meta1.data.length-1;p++) {
                    // if null skip
                    if (dataset.data[p] == null || dataset.data[p+1] == null) continue;

                    ctx.beginPath();

                    // trace line 1
                    var curr = meta1.data[p];
                    var next = meta1.data[p+1];
                    ctx.moveTo(curr._view.x, curr._view.y);
                    ctx.lineTo(curr._view.x, curr._view.y);
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(next._view.x, curr._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        ctx.bezierCurveTo(
                          curr._view.controlPointNextX,
                          curr._view.controlPointNextY,
                          next._view.controlPointPreviousX,
                          next._view.controlPointPreviousY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // connect dataset1 to dataset2
                    var curr = meta2.data[p+1];
                    var next = meta2.data[p];
                    ctx.lineTo(curr._view.x, curr._view.y);

                    // trace BACKWORDS set2 to complete the box
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(curr._view.x, next._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        // reverse bezier
                        ctx.bezierCurveTo(
                          curr._view.controlPointPreviousX,
                          curr._view.controlPointPreviousY,
                          next._view.controlPointNextX,
                          next._view.controlPointNextY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // close the loop and fill with shading
                    ctx.closePath();
                    ctx.fillStyle = dataset.fillBetweenColor || "rgba(0,0,0,0.1)";
                    ctx.fill();
                } // end for p loop
            }
        } // end afterDatasetsDraw
    }; // end fillBetweenLinesPlugin

    Chart.pluginService.register(fillBetweenLinesPlugin);



    var GRAFICO_FSE_RESULT_MENSAL_COMP_021=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_021').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_021=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_021, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label:  'Peso Liv.Doc.Técn.vsVN(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   //borderColor: "#F00",
                   fill: false,
                   steppedLine: false,
                   tension: 0.5,
                   fillBetweenSet: 1,
                   fillBetweenColor: "rgba(0, 221, 0, 0.1)",
                   data: [
                   PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_JANEIRO_ACUM,
                   PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_FEVEREIRO_ACUM,
                   PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_MARCO_ACUM,
                   PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_ABRIL_ACUM,
                   PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_MAIO_ACUM,
                   PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_JUNHO_ACUM,
                   PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_JULHO_ACUM,
                   PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_AGOSTO_ACUM,
                   PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_SETEMBRO_ACUM,
                   PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_OUTUBRO_ACUM,
                   PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_NOVEMBRO_ACUM,
                   PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_DEZEMBRO_ACUM,

                   ],
                   type: 'line'


               },
                {
                    label: 'Peso Liv.Doc.Técn.vsVN(ac) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'A',
                    //backgroundColor: 'rgb(17, 121, 240)',
                    borderColor: 'rgb(0,221,0)',
                    //borderColor: "#00F",
                    fill: false,
                    steppedLine: false,
                    tension: 0.5,
                    data: [
                   PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_JANEIRO_ACUM,
                   PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_FEVEREIRO_ACUM,
                   PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_MARCO_ACUM,
                   PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_ABRIL_ACUM,
                   PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_MAIO_ACUM,
                   PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_JUNHO_ACUM,
                   PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_JULHO_ACUM,
                   PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_AGOSTO_ACUM,
                   PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_SETEMBRO_ACUM,
                   PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_OUTUBRO_ACUM,
                   PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_NOVEMBRO_ACUM,
                   PESO_FSE_LIVR_DOCUM_TEC_VN_ANO_N_1_DEZEMBRO_ACUM,
                    ],
                    type: 'line'
                },
    {
        label: 'Ineficiência',
        yAxisID: 'A',
        backgroundColor: "rgba(255, 0, 0, 0.2)",
        borderColor: 'rgba(255, 255, 255, 0.1)',
        //borderColor: "#0D0",
        fill: false,
        steppedLine: false,
        tension: 0.5,
        fillBetweenSet: 1,
        fillBetweenColor: "rgba(255, 0, 0, 0.2)",
        data: [
    INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_JANEIRO_ACUM,
    INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_FEVEREIRO_ACUM,
    INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_MARCO_ACUM,
    INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_ABRIL_ACUM,
    INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_MAIO_ACUM,
    INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_JUNHO_ACUM,
    INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_JULHO_ACUM,
    INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_AGOSTO_ACUM,
    INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_SETEMBRO_ACUM,
    INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_OUTUBRO_ACUM,
    INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_NOVEMBRO_ACUM,
    INEFICIENCIA_FSE_LIVR_DOCUM_TEC_ANO_N_DEZEMBRO_ACUM,
        ],
        type: 'line'
    },

            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_Liv.Doc.Técn. COMP',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                //min:  Math.round(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_min_princ__,0),
                                                //max:  Math.round(FSE_LIVR_DOCUM_TEC_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString()+ "%";
                                                }
                                            }
                                        },







                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_022-----------------------------------------------------------*@
<script>

    if(@ViewData["MES_ACUM_REAL"]<1){ var IND_VN_ANO_N_JANEIRO = 'nd'; var IND_VN_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JANEIRO"]))); var IND_VN_ANO_N_JANEIRO_MAX_MIN = IND_VN_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var IND_VN_ANO_N_FEVEREIRO = 'nd'; var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_FEVEREIRO"]))); var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = IND_VN_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var IND_VN_ANO_N_MARCO = 'nd'; var IND_VN_ANO_N_MARCO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MARCO"]))); var IND_VN_ANO_N_MARCO_MAX_MIN = IND_VN_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var IND_VN_ANO_N_ABRIL = 'nd'; var IND_VN_ANO_N_ABRIL_MAX_MIN = 0;  } else { var IND_VN_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_ABRIL"]))); var IND_VN_ANO_N_ABRIL_MAX_MIN = IND_VN_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var IND_VN_ANO_N_MAIO = 'nd'; var IND_VN_ANO_N_MAIO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MAIO"]))); var IND_VN_ANO_N_MAIO_MAX_MIN = IND_VN_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var IND_VN_ANO_N_JUNHO = 'nd'; var IND_VN_ANO_N_JUNHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JUNHO"]))); var IND_VN_ANO_N_JUNHO_MAX_MIN = IND_VN_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var IND_VN_ANO_N_JULHO = 'nd'; var IND_VN_ANO_N_JULHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JULHO"]))); var IND_VN_ANO_N_JULHO_MAX_MIN = IND_VN_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var IND_VN_ANO_N_AGOSTO = 'nd'; var IND_VN_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_AGOSTO"]))); var IND_VN_ANO_N_AGOSTO_MAX_MIN = IND_VN_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var IND_VN_ANO_N_SETEMBRO = 'nd'; var IND_VN_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_SETEMBRO"]))); var IND_VN_ANO_N_SETEMBRO_MAX_MIN = IND_VN_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var IND_VN_ANO_N_OUTUBRO = 'nd'; var IND_VN_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_OUTUBRO"]))); var IND_VN_ANO_N_OUTUBRO_MAX_MIN = IND_VN_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var IND_VN_ANO_N_NOVEMBRO = 'nd'; var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_NOVEMBRO"]))); var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = IND_VN_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var IND_VN_ANO_N_DEZEMBRO = 'nd'; var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_DEZEMBRO"]))); var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = IND_VN_ANO_N_DEZEMBRO };

    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_MAT_ESCRITOR_ANO_N_JANEIRO = 'nd'; var FSE_MAT_ESCRITOR_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var FSE_MAT_ESCRITOR_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_JANEIRO"]))); var FSE_MAT_ESCRITOR_ANO_N_JANEIRO_MAX_MIN = FSE_MAT_ESCRITOR_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_MAT_ESCRITOR_ANO_N_FEVEREIRO = 'nd'; var FSE_MAT_ESCRITOR_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var FSE_MAT_ESCRITOR_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_FEVEREIRO"]))); var FSE_MAT_ESCRITOR_ANO_N_FEVEREIRO_MAX_MIN = FSE_MAT_ESCRITOR_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_MAT_ESCRITOR_ANO_N_MARCO = 'nd'; var FSE_MAT_ESCRITOR_ANO_N_MARCO_MAX_MIN = 0;  } else { var FSE_MAT_ESCRITOR_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_MARCO"]))); var FSE_MAT_ESCRITOR_ANO_N_MARCO_MAX_MIN = FSE_MAT_ESCRITOR_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_MAT_ESCRITOR_ANO_N_ABRIL = 'nd'; var FSE_MAT_ESCRITOR_ANO_N_ABRIL_MAX_MIN = 0;  } else { var FSE_MAT_ESCRITOR_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_ABRIL"]))); var FSE_MAT_ESCRITOR_ANO_N_ABRIL_MAX_MIN = FSE_MAT_ESCRITOR_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_MAT_ESCRITOR_ANO_N_MAIO = 'nd'; var FSE_MAT_ESCRITOR_ANO_N_MAIO_MAX_MIN = 0;  } else { var FSE_MAT_ESCRITOR_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_MAIO"]))); var FSE_MAT_ESCRITOR_ANO_N_MAIO_MAX_MIN = FSE_MAT_ESCRITOR_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_MAT_ESCRITOR_ANO_N_JUNHO = 'nd'; var FSE_MAT_ESCRITOR_ANO_N_JUNHO_MAX_MIN = 0;  } else { var FSE_MAT_ESCRITOR_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_JUNHO"]))); var FSE_MAT_ESCRITOR_ANO_N_JUNHO_MAX_MIN = FSE_MAT_ESCRITOR_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_MAT_ESCRITOR_ANO_N_JULHO = 'nd'; var FSE_MAT_ESCRITOR_ANO_N_JULHO_MAX_MIN = 0;  } else { var FSE_MAT_ESCRITOR_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_JULHO"]))); var FSE_MAT_ESCRITOR_ANO_N_JULHO_MAX_MIN = FSE_MAT_ESCRITOR_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_MAT_ESCRITOR_ANO_N_AGOSTO = 'nd'; var FSE_MAT_ESCRITOR_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var FSE_MAT_ESCRITOR_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_AGOSTO"]))); var FSE_MAT_ESCRITOR_ANO_N_AGOSTO_MAX_MIN = FSE_MAT_ESCRITOR_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_MAT_ESCRITOR_ANO_N_SETEMBRO = 'nd'; var FSE_MAT_ESCRITOR_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var FSE_MAT_ESCRITOR_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_SETEMBRO"]))); var FSE_MAT_ESCRITOR_ANO_N_SETEMBRO_MAX_MIN = FSE_MAT_ESCRITOR_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_MAT_ESCRITOR_ANO_N_OUTUBRO = 'nd'; var FSE_MAT_ESCRITOR_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var FSE_MAT_ESCRITOR_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_OUTUBRO"]))); var FSE_MAT_ESCRITOR_ANO_N_OUTUBRO_MAX_MIN = FSE_MAT_ESCRITOR_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_MAT_ESCRITOR_ANO_N_NOVEMBRO = 'nd'; var FSE_MAT_ESCRITOR_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var FSE_MAT_ESCRITOR_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_NOVEMBRO"]))); var FSE_MAT_ESCRITOR_ANO_N_NOVEMBRO_MAX_MIN = FSE_MAT_ESCRITOR_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_MAT_ESCRITOR_ANO_N_DEZEMBRO = 'nd'; var FSE_MAT_ESCRITOR_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var FSE_MAT_ESCRITOR_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_DEZEMBRO"]))); var FSE_MAT_ESCRITOR_ANO_N_DEZEMBRO_MAX_MIN = FSE_MAT_ESCRITOR_ANO_N_DEZEMBRO };


    var FSE_MAT_ESCRITOR_ANO_N_JANEIRO_ACUM = FSE_MAT_ESCRITOR_ANO_N_JANEIRO;
    var FSE_MAT_ESCRITOR_ANO_N_FEVEREIRO_ACUM = FSE_MAT_ESCRITOR_ANO_N_FEVEREIRO + FSE_MAT_ESCRITOR_ANO_N_JANEIRO_ACUM;
    var FSE_MAT_ESCRITOR_ANO_N_MARCO_ACUM = FSE_MAT_ESCRITOR_ANO_N_MARCO + FSE_MAT_ESCRITOR_ANO_N_FEVEREIRO_ACUM;
    var FSE_MAT_ESCRITOR_ANO_N_ABRIL_ACUM = FSE_MAT_ESCRITOR_ANO_N_ABRIL + FSE_MAT_ESCRITOR_ANO_N_MARCO_ACUM;
    var FSE_MAT_ESCRITOR_ANO_N_MAIO_ACUM = FSE_MAT_ESCRITOR_ANO_N_MAIO + FSE_MAT_ESCRITOR_ANO_N_ABRIL_ACUM;
    var FSE_MAT_ESCRITOR_ANO_N_JUNHO_ACUM = FSE_MAT_ESCRITOR_ANO_N_JUNHO + FSE_MAT_ESCRITOR_ANO_N_MAIO_ACUM;
    var FSE_MAT_ESCRITOR_ANO_N_JULHO_ACUM = FSE_MAT_ESCRITOR_ANO_N_JULHO + FSE_MAT_ESCRITOR_ANO_N_JUNHO_ACUM;
    var FSE_MAT_ESCRITOR_ANO_N_AGOSTO_ACUM = FSE_MAT_ESCRITOR_ANO_N_AGOSTO + FSE_MAT_ESCRITOR_ANO_N_JULHO_ACUM;
    var FSE_MAT_ESCRITOR_ANO_N_SETEMBRO_ACUM = FSE_MAT_ESCRITOR_ANO_N_SETEMBRO + FSE_MAT_ESCRITOR_ANO_N_AGOSTO_ACUM;
    var FSE_MAT_ESCRITOR_ANO_N_OUTUBRO_ACUM = FSE_MAT_ESCRITOR_ANO_N_OUTUBRO + FSE_MAT_ESCRITOR_ANO_N_SETEMBRO_ACUM;
    var FSE_MAT_ESCRITOR_ANO_N_NOVEMBRO_ACUM = FSE_MAT_ESCRITOR_ANO_N_NOVEMBRO + FSE_MAT_ESCRITOR_ANO_N_OUTUBRO_ACUM;
    var FSE_MAT_ESCRITOR_ANO_N_DEZEMBRO_ACUM = FSE_MAT_ESCRITOR_ANO_N_DEZEMBRO + FSE_MAT_ESCRITOR_ANO_N_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_MAT_ESCRITOR_ANO_N_JANEIRO_ACUM = 'nd'; var FSE_MAT_ESCRITOR_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var FSE_MAT_ESCRITOR_ANO_N_JANEIRO_ACUM= FSE_MAT_ESCRITOR_ANO_N_JANEIRO_ACUM; var FSE_MAT_ESCRITOR_ANO_N_JANEIRO_ACUM_MAX_MIN = FSE_MAT_ESCRITOR_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_MAT_ESCRITOR_ANO_N_FEVEREIRO_ACUM = 'nd'; var FSE_MAT_ESCRITOR_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var FSE_MAT_ESCRITOR_ANO_N_FEVEREIRO_ACUM= FSE_MAT_ESCRITOR_ANO_N_FEVEREIRO_ACUM; var FSE_MAT_ESCRITOR_ANO_N_FEVEREIRO_ACUM_MAX_MIN = FSE_MAT_ESCRITOR_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_MAT_ESCRITOR_ANO_N_MARCO_ACUM = 'nd'; var FSE_MAT_ESCRITOR_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var FSE_MAT_ESCRITOR_ANO_N_MARCO_ACUM= FSE_MAT_ESCRITOR_ANO_N_MARCO_ACUM; var FSE_MAT_ESCRITOR_ANO_N_MARCO_ACUM_MAX_MIN = FSE_MAT_ESCRITOR_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_MAT_ESCRITOR_ANO_N_ABRIL_ACUM = 'nd'; var FSE_MAT_ESCRITOR_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var FSE_MAT_ESCRITOR_ANO_N_ABRIL_ACUM= FSE_MAT_ESCRITOR_ANO_N_ABRIL_ACUM; var FSE_MAT_ESCRITOR_ANO_N_ABRIL_ACUM_MAX_MIN = FSE_MAT_ESCRITOR_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_MAT_ESCRITOR_ANO_N_MAIO_ACUM = 'nd'; var FSE_MAT_ESCRITOR_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var FSE_MAT_ESCRITOR_ANO_N_MAIO_ACUM= FSE_MAT_ESCRITOR_ANO_N_MAIO_ACUM; var FSE_MAT_ESCRITOR_ANO_N_MAIO_ACUM_MAX_MIN = FSE_MAT_ESCRITOR_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_MAT_ESCRITOR_ANO_N_JUNHO_ACUM = 'nd'; var FSE_MAT_ESCRITOR_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var FSE_MAT_ESCRITOR_ANO_N_JUNHO_ACUM= FSE_MAT_ESCRITOR_ANO_N_JUNHO_ACUM; var FSE_MAT_ESCRITOR_ANO_N_JUNHO_ACUM_MAX_MIN = FSE_MAT_ESCRITOR_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_MAT_ESCRITOR_ANO_N_JULHO_ACUM = 'nd'; var FSE_MAT_ESCRITOR_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var FSE_MAT_ESCRITOR_ANO_N_JULHO_ACUM= FSE_MAT_ESCRITOR_ANO_N_JULHO_ACUM; var FSE_MAT_ESCRITOR_ANO_N_JULHO_ACUM_MAX_MIN = FSE_MAT_ESCRITOR_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_MAT_ESCRITOR_ANO_N_AGOSTO_ACUM = 'nd'; var FSE_MAT_ESCRITOR_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var FSE_MAT_ESCRITOR_ANO_N_AGOSTO_ACUM= FSE_MAT_ESCRITOR_ANO_N_AGOSTO_ACUM; var FSE_MAT_ESCRITOR_ANO_N_AGOSTO_ACUM_MAX_MIN = FSE_MAT_ESCRITOR_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_MAT_ESCRITOR_ANO_N_SETEMBRO_ACUM = 'nd'; var FSE_MAT_ESCRITOR_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_MAT_ESCRITOR_ANO_N_SETEMBRO_ACUM= FSE_MAT_ESCRITOR_ANO_N_SETEMBRO_ACUM; var FSE_MAT_ESCRITOR_ANO_N_SETEMBRO_ACUM_MAX_MIN = FSE_MAT_ESCRITOR_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_MAT_ESCRITOR_ANO_N_OUTUBRO_ACUM = 'nd'; var FSE_MAT_ESCRITOR_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var FSE_MAT_ESCRITOR_ANO_N_OUTUBRO_ACUM= FSE_MAT_ESCRITOR_ANO_N_OUTUBRO_ACUM; var FSE_MAT_ESCRITOR_ANO_N_OUTUBRO_ACUM_MAX_MIN = FSE_MAT_ESCRITOR_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_MAT_ESCRITOR_ANO_N_NOVEMBRO_ACUM = 'nd'; var FSE_MAT_ESCRITOR_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_MAT_ESCRITOR_ANO_N_NOVEMBRO_ACUM= FSE_MAT_ESCRITOR_ANO_N_NOVEMBRO_ACUM; var FSE_MAT_ESCRITOR_ANO_N_NOVEMBRO_ACUM_MAX_MIN = FSE_MAT_ESCRITOR_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_MAT_ESCRITOR_ANO_N_DEZEMBRO_ACUM = 'nd'; var FSE_MAT_ESCRITOR_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_MAT_ESCRITOR_ANO_N_DEZEMBRO_ACUM= FSE_MAT_ESCRITOR_ANO_N_DEZEMBRO_ACUM; var FSE_MAT_ESCRITOR_ANO_N_DEZEMBRO_ACUM_MAX_MIN = FSE_MAT_ESCRITOR_ANO_N_DEZEMBRO_ACUM };




    var FSE_MAT_ESCRITOR_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_JANEIRO"])));
    var FSE_MAT_ESCRITOR_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_FEVEREIRO"]))) + FSE_MAT_ESCRITOR_ANO_N_1_JANEIRO_ACUM;
    var FSE_MAT_ESCRITOR_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_MARCO"]))) + FSE_MAT_ESCRITOR_ANO_N_1_FEVEREIRO_ACUM;
    var FSE_MAT_ESCRITOR_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_ABRIL"]))) + FSE_MAT_ESCRITOR_ANO_N_1_MARCO_ACUM;
    var FSE_MAT_ESCRITOR_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_MAIO"]))) + FSE_MAT_ESCRITOR_ANO_N_1_ABRIL_ACUM;
    var FSE_MAT_ESCRITOR_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_JUNHO"]))) + FSE_MAT_ESCRITOR_ANO_N_1_MAIO_ACUM;
    var FSE_MAT_ESCRITOR_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_JULHO"]))) + FSE_MAT_ESCRITOR_ANO_N_1_JUNHO_ACUM;
    var FSE_MAT_ESCRITOR_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_AGOSTO"]))) + FSE_MAT_ESCRITOR_ANO_N_1_JULHO_ACUM;
    var FSE_MAT_ESCRITOR_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_SETEMBRO"]))) + FSE_MAT_ESCRITOR_ANO_N_1_AGOSTO_ACUM;
    var FSE_MAT_ESCRITOR_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_OUTUBRO"]))) + FSE_MAT_ESCRITOR_ANO_N_1_SETEMBRO_ACUM;
    var FSE_MAT_ESCRITOR_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_NOVEMBRO"]))) + FSE_MAT_ESCRITOR_ANO_N_1_OUTUBRO_ACUM;
    var FSE_MAT_ESCRITOR_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_DEZEMBRO"]))) + FSE_MAT_ESCRITOR_ANO_N_1_NOVEMBRO_ACUM;


    var FSE_MAT_ESCRITOR_Mensal_Eixo_max_princ= Math.max(
                       FSE_MAT_ESCRITOR_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_MAT_ESCRITOR_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_MAT_ESCRITOR_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_MAT_ESCRITOR_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_MAT_ESCRITOR_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_MAT_ESCRITOR_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_MAT_ESCRITOR_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_MAT_ESCRITOR_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_MAT_ESCRITOR_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_MAT_ESCRITOR_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_MAT_ESCRITOR_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_MAT_ESCRITOR_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_MAT_ESCRITOR_ANO_N_1_JANEIRO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_1_MARCO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_1_ABRIL_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_1_MAIO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_1_JUNHO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_1_JULHO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_1_AGOSTO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_1_SETEMBRO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_1_OUTUBRO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_1_DEZEMBRO_ACUM
                             );
    var FSE_MAT_ESCRITOR_Mensal_Eixo_min_princ= Math.min(

                       FSE_MAT_ESCRITOR_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_MAT_ESCRITOR_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_MAT_ESCRITOR_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_MAT_ESCRITOR_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_MAT_ESCRITOR_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_MAT_ESCRITOR_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_MAT_ESCRITOR_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_MAT_ESCRITOR_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_MAT_ESCRITOR_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_MAT_ESCRITOR_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_MAT_ESCRITOR_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_MAT_ESCRITOR_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_MAT_ESCRITOR_ANO_N_1_JANEIRO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_1_MARCO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_1_ABRIL_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_1_MAIO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_1_JUNHO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_1_JULHO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_1_AGOSTO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_1_SETEMBRO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_1_OUTUBRO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_1_DEZEMBRO_ACUM
                           );
    var FSE_MAT_ESCRITOR_Mensal_Eixo_max_secon= Math.max(
                       FSE_MAT_ESCRITOR_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_MAT_ESCRITOR_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_MAT_ESCRITOR_ANO_N_MARCO_MAX_MIN ,
                       FSE_MAT_ESCRITOR_ANO_N_ABRIL_MAX_MIN ,
                       FSE_MAT_ESCRITOR_ANO_N_MAIO_MAX_MIN ,
                       FSE_MAT_ESCRITOR_ANO_N_JUNHO_MAX_MIN ,
                       FSE_MAT_ESCRITOR_ANO_N_JULHO_MAX_MIN ,
                       FSE_MAT_ESCRITOR_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_MAT_ESCRITOR_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_MAT_ESCRITOR_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_MAT_ESCRITOR_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_MAT_ESCRITOR_ANO_N_DEZEMBRO_MAX_MIN ,



                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_DEZEMBRO"])))

                            );
    var FSE_MAT_ESCRITOR_Mensal_Eixo_min_secon= Math.min(
                       FSE_MAT_ESCRITOR_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_MAT_ESCRITOR_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_MAT_ESCRITOR_ANO_N_MARCO_MAX_MIN ,
                       FSE_MAT_ESCRITOR_ANO_N_ABRIL_MAX_MIN ,
                       FSE_MAT_ESCRITOR_ANO_N_MAIO_MAX_MIN ,
                       FSE_MAT_ESCRITOR_ANO_N_JUNHO_MAX_MIN ,
                       FSE_MAT_ESCRITOR_ANO_N_JULHO_MAX_MIN ,
                       FSE_MAT_ESCRITOR_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_MAT_ESCRITOR_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_MAT_ESCRITOR_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_MAT_ESCRITOR_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_MAT_ESCRITOR_ANO_N_DEZEMBRO_MAX_MIN ,


                           @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_DEZEMBRO"])))

                          );

    //NOTA TA: Aqui trato o minimo e o maximo do eixo principal
    if(Math.abs(FSE_MAT_ESCRITOR_Mensal_Eixo_max_princ)>=Math.abs(FSE_MAT_ESCRITOR_Mensal_Eixo_min_princ))
    {
        var FSE_MAT_ESCRITOR_Mensal_Eixo_max_princ_=(Math.ceil(FSE_MAT_ESCRITOR_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_MAT_ESCRITOR_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_MAT_ESCRITOR_Mensal_Eixo_max_princ),0).toString().length-1);
        var FSE_MAT_ESCRITOR_Mensal_Eixo_min_princ_= (Math.floor(FSE_MAT_ESCRITOR_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_MAT_ESCRITOR_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_MAT_ESCRITOR_Mensal_Eixo_max_princ),0).toString().length-1);
        //alert(FSE_MAT_ESCRITOR_Mensal_Eixo_max_princ_);
        //alert(FSE_MAT_ESCRITOR_Mensal_Eixo_min_princ_);
    }
    else
    {
        var FSE_MAT_ESCRITOR_Mensal_Eixo_max_princ_=(Math.ceil(FSE_MAT_ESCRITOR_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_MAT_ESCRITOR_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_MAT_ESCRITOR_Mensal_Eixo_min_princ),0).toString().length-1);
        var FSE_MAT_ESCRITOR_Mensal_Eixo_min_princ_= (Math.floor(FSE_MAT_ESCRITOR_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_MAT_ESCRITOR_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_MAT_ESCRITOR_Mensal_Eixo_min_princ),0).toString().length-1);}

    //NOTA TA: Aqui trato o minimo e o maximo do eixo secundario

    if(Math.abs(FSE_MAT_ESCRITOR_Mensal_Eixo_max_secon)>=Math.abs(FSE_MAT_ESCRITOR_Mensal_Eixo_min_secon))
    {
        var FSE_MAT_ESCRITOR_Mensal_Eixo_max_secon_=(Math.ceil(FSE_MAT_ESCRITOR_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_MAT_ESCRITOR_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_MAT_ESCRITOR_Mensal_Eixo_max_secon),0).toString().length-1);
        var FSE_MAT_ESCRITOR_Mensal_Eixo_min_secon_= (Math.floor(FSE_MAT_ESCRITOR_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_MAT_ESCRITOR_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_MAT_ESCRITOR_Mensal_Eixo_max_secon),0).toString().length-1);
        //alert(FSE_MAT_ESCRITOR_Mensal_Eixo_max_secon_);
        //alert(FSE_MAT_ESCRITOR_Mensal_Eixo_min_secon_);
    }
    else
    {
        var FSE_MAT_ESCRITOR_Mensal_Eixo_max_secon_=(Math.ceil(FSE_MAT_ESCRITOR_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_MAT_ESCRITOR_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_MAT_ESCRITOR_Mensal_Eixo_min_secon),0).toString().length-1);
        var FSE_MAT_ESCRITOR_Mensal_Eixo_min_secon_= (Math.floor(FSE_MAT_ESCRITOR_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_MAT_ESCRITOR_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_MAT_ESCRITOR_Mensal_Eixo_min_secon),0).toString().length-1);}


    if(Math.abs(FSE_MAT_ESCRITOR_Mensal_Eixo_min_princ)/Math.abs(FSE_MAT_ESCRITOR_Mensal_Eixo_max_princ)>=Math.abs(FSE_MAT_ESCRITOR_Mensal_Eixo_min_secon)/Math.abs(FSE_MAT_ESCRITOR_Mensal_Eixo_max_secon))
    { if(FSE_MAT_ESCRITOR_Mensal_Eixo_max_princ > 0 && FSE_MAT_ESCRITOR_Mensal_Eixo_min_princ <0 ){ var FSE_MAT_ESCRITOR_Mensal_Eixo_min_secon__=(FSE_MAT_ESCRITOR_Mensal_Eixo_min_princ_*FSE_MAT_ESCRITOR_Mensal_Eixo_max_secon_)/FSE_MAT_ESCRITOR_Mensal_Eixo_max_princ_;} else { var FSE_MAT_ESCRITOR_Mensal_Eixo_min_secon__=FSE_MAT_ESCRITOR_Mensal_Eixo_min_secon_;}
        if(FSE_MAT_ESCRITOR_Mensal_Eixo_max_secon > 0 && FSE_MAT_ESCRITOR_Mensal_Eixo_min_secon <0 ){ var FSE_MAT_ESCRITOR_Mensal_Eixo_min_princ__=(FSE_MAT_ESCRITOR_Mensal_Eixo_min_secon__*FSE_MAT_ESCRITOR_Mensal_Eixo_max_princ_)/FSE_MAT_ESCRITOR_Mensal_Eixo_max_secon_;} else { var FSE_MAT_ESCRITOR_Mensal_Eixo_min_princ__=FSE_MAT_ESCRITOR_Mensal_Eixo_min_princ_;}}
    else
    {if(FSE_MAT_ESCRITOR_Mensal_Eixo_max_secon > 0 && FSE_MAT_ESCRITOR_Mensal_Eixo_min_secon <0 ){ var FSE_MAT_ESCRITOR_Mensal_Eixo_min_princ__=(FSE_MAT_ESCRITOR_Mensal_Eixo_min_secon_*FSE_MAT_ESCRITOR_Mensal_Eixo_max_princ_)/FSE_MAT_ESCRITOR_Mensal_Eixo_max_secon_;} else { var FSE_MAT_ESCRITOR_Mensal_Eixo_min_princ__=FSE_MAT_ESCRITOR_Mensal_Eixo_min_princ_;}
        if(FSE_MAT_ESCRITOR_Mensal_Eixo_max_princ > 0 && FSE_MAT_ESCRITOR_Mensal_Eixo_min_princ <0 ){ var FSE_MAT_ESCRITOR_Mensal_Eixo_min_secon__=(FSE_MAT_ESCRITOR_Mensal_Eixo_min_princ__*FSE_MAT_ESCRITOR_Mensal_Eixo_max_secon_)/FSE_MAT_ESCRITOR_Mensal_Eixo_max_princ_;} else { var FSE_MAT_ESCRITOR_Mensal_Eixo_min_secon__=FSE_MAT_ESCRITOR_Mensal_Eixo_min_secon_;}
    }



    if(Math.abs(FSE_MAT_ESCRITOR_Mensal_Eixo_max_princ)/Math.abs(FSE_MAT_ESCRITOR_Mensal_Eixo_min_princ)>=Math.abs(FSE_MAT_ESCRITOR_Mensal_Eixo_max_secon)/Math.abs(FSE_MAT_ESCRITOR_Mensal_Eixo_min_secon))
    { if(FSE_MAT_ESCRITOR_Mensal_Eixo_min_princ > 0 && FSE_MAT_ESCRITOR_Mensal_Eixo_max_princ <0 ){ var FSE_MAT_ESCRITOR_Mensal_Eixo_max_secon__=(FSE_MAT_ESCRITOR_Mensal_Eixo_max_princ_*FSE_MAT_ESCRITOR_Mensal_Eixo_min_secon_)/FSE_MAT_ESCRITOR_Mensal_Eixo_min_princ_;} else { var FSE_MAT_ESCRITOR_Mensal_Eixo_max_secon__=FSE_MAT_ESCRITOR_Mensal_Eixo_max_secon_;}
        if(FSE_MAT_ESCRITOR_Mensal_Eixo_min_secon > 0 && FSE_MAT_ESCRITOR_Mensal_Eixo_max_secon <0 ){ var FSE_MAT_ESCRITOR_Mensal_Eixo_max_princ__=(FSE_MAT_ESCRITOR_Mensal_Eixo_max_secon__*FSE_MAT_ESCRITOR_Mensal_Eixo_min_princ_)/FSE_MAT_ESCRITOR_Mensal_Eixo_min_secon_;} else { var FSE_MAT_ESCRITOR_Mensal_Eixo_max_princ__=FSE_MAT_ESCRITOR_Mensal_Eixo_max_princ_;}}
    else
    {if(FSE_MAT_ESCRITOR_Mensal_Eixo_min_secon > 0 && FSE_MAT_ESCRITOR_Mensal_Eixo_max_secon <0 ){ var FSE_MAT_ESCRITOR_Mensal_Eixo_max_princ__=(FSE_MAT_ESCRITOR_Mensal_Eixo_max_secon_*FSE_MAT_ESCRITOR_Mensal_Eixo_min_princ_)/FSE_MAT_ESCRITOR_Mensal_Eixo_min_secon_;} else { var FSE_MAT_ESCRITOR_Mensal_Eixo_max_princ__=FSE_MAT_ESCRITOR_Mensal_Eixo_max_princ_;}
        if(FSE_MAT_ESCRITOR_Mensal_Eixo_min_princ > 0 && FSE_MAT_ESCRITOR_Mensal_Eixo_max_princ <0 ){ var FSE_MAT_ESCRITOR_Mensal_Eixo_max_secon__=(FSE_MAT_ESCRITOR_Mensal_Eixo_max_princ__*FSE_MAT_ESCRITOR_Mensal_Eixo_min_secon_)/FSE_MAT_ESCRITOR_Mensal_Eixo_min_princ_;} else { var FSE_MAT_ESCRITOR_Mensal_Eixo_max_secon__=FSE_MAT_ESCRITOR_Mensal_Eixo_max_secon_;}
    }



    var GRAFICO_FSE_RESULT_MENSAL_COMP_022=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_022').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_022=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_022, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label: 'Mat. Escrit.(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   data: [
                       FSE_MAT_ESCRITOR_ANO_N_JANEIRO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_FEVEREIRO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_MARCO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_ABRIL_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_MAIO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_JUNHO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_JULHO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_AGOSTO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_SETEMBRO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_OUTUBRO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_NOVEMBRO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_DEZEMBRO_ACUM,
                   ],
                   type: 'line'


               },
                              {
                                  label: 'Mat. Escrit.(ac) ' + ANO_VERSAO_ANTE_,
                                  yAxisID: 'A',
                                  //backgroundColor: 'rgb(201, 10, 10)',
                                  borderColor: 'rgb(0,221,0)',
                                  data: [
                       FSE_MAT_ESCRITOR_ANO_N_1_JANEIRO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_1_MARCO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_1_ABRIL_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_1_MAIO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_1_JUNHO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_1_JULHO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_1_AGOSTO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_1_SETEMBRO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_1_OUTUBRO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_MAT_ESCRITOR_ANO_N_1_DEZEMBRO_ACUM,
                                  ],
                                  type: 'line'


                              },
                {
                    label:  'Mat. Escrit.(m) ' + ANO_VERSAO_REAL_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(250 , 83 , 0, 0.5)',
                    borderColor: 'rgba(250 , 83 , 0, 0.5)',
                    data: [
                  FSE_MAT_ESCRITOR_ANO_N_JANEIRO ,
                  FSE_MAT_ESCRITOR_ANO_N_FEVEREIRO ,
                  FSE_MAT_ESCRITOR_ANO_N_MARCO ,
                  FSE_MAT_ESCRITOR_ANO_N_ABRIL,
                  FSE_MAT_ESCRITOR_ANO_N_MAIO ,
                  FSE_MAT_ESCRITOR_ANO_N_JUNHO ,
                  FSE_MAT_ESCRITOR_ANO_N_JULHO ,
                  FSE_MAT_ESCRITOR_ANO_N_AGOSTO ,
                  FSE_MAT_ESCRITOR_ANO_N_SETEMBRO ,
                  FSE_MAT_ESCRITOR_ANO_N_OUTUBRO ,
                  FSE_MAT_ESCRITOR_ANO_N_NOVEMBRO ,
                  FSE_MAT_ESCRITOR_ANO_N_DEZEMBRO ,
                    ],
                },
                {
                    label:  'Mat. Escrit.(m) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(0,221,0, 0.4)',
                    borderColor: 'rgba(0,221,0, 0.4)',
                    data: [
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_JANEIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_FEVEREIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_MARCO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_ABRIL"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_MAIO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_JUNHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_JULHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_AGOSTO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_SETEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_OUTUBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_NOVEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_MAT_ESCRITOR_ANO_N_1_DEZEMBRO"]))),
                    ],
                },


            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_MAT_ESCRITOR_MENSAL_1',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                min:  Math.round(FSE_MAT_ESCRITOR_Mensal_Eixo_min_princ__,0),
                                                max:  Math.round(FSE_MAT_ESCRITOR_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString();
                                                }
                                            }
                                        },

                    { id: 'B',
                        type: 'linear',
                        position: 'right',
                        ticks: {
                            min: Math.round(FSE_MAT_ESCRITOR_Mensal_Eixo_min_secon__,0),
                            max:  Math.round(FSE_MAT_ESCRITOR_Mensal_Eixo_max_secon__,0),
                            beginAtZero: false,
                            callback: function(value, index, values) {
                                return value.toLocaleString();
                            }
                        }
                    },






                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_023-----------------------------------------------------------*@
<script>

    var IND_VN_ANO_N_JANEIRO_ACUM = IND_VN_ANO_N_JANEIRO;
    var IND_VN_ANO_N_FEVEREIRO_ACUM = IND_VN_ANO_N_FEVEREIRO + IND_VN_ANO_N_JANEIRO_ACUM;
    var IND_VN_ANO_N_MARCO_ACUM = IND_VN_ANO_N_MARCO + IND_VN_ANO_N_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_ABRIL_ACUM = IND_VN_ANO_N_ABRIL + IND_VN_ANO_N_MARCO_ACUM;
    var IND_VN_ANO_N_MAIO_ACUM = IND_VN_ANO_N_MAIO + IND_VN_ANO_N_ABRIL_ACUM;
    var IND_VN_ANO_N_JUNHO_ACUM = IND_VN_ANO_N_JUNHO + IND_VN_ANO_N_MAIO_ACUM;
    var IND_VN_ANO_N_JULHO_ACUM = IND_VN_ANO_N_JULHO + IND_VN_ANO_N_JUNHO_ACUM;
    var IND_VN_ANO_N_AGOSTO_ACUM = IND_VN_ANO_N_AGOSTO + IND_VN_ANO_N_JULHO_ACUM;
    var IND_VN_ANO_N_SETEMBRO_ACUM = IND_VN_ANO_N_SETEMBRO + IND_VN_ANO_N_AGOSTO_ACUM;
    var IND_VN_ANO_N_OUTUBRO_ACUM = IND_VN_ANO_N_OUTUBRO + IND_VN_ANO_N_SETEMBRO_ACUM;
    var IND_VN_ANO_N_NOVEMBRO_ACUM = IND_VN_ANO_N_NOVEMBRO + IND_VN_ANO_N_OUTUBRO_ACUM;
    var IND_VN_ANO_N_DEZEMBRO_ACUM = IND_VN_ANO_N_DEZEMBRO + IND_VN_ANO_N_NOVEMBRO_ACUM;



    var IND_VN_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JANEIRO"])));
    var IND_VN_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_FEVEREIRO"]))) + IND_VN_ANO_N_1_JANEIRO_ACUM;
    var IND_VN_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MARCO"]))) + IND_VN_ANO_N_1_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_ABRIL"]))) + IND_VN_ANO_N_1_MARCO_ACUM;
    var IND_VN_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MAIO"]))) + IND_VN_ANO_N_1_ABRIL_ACUM;
    var IND_VN_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JUNHO"]))) + IND_VN_ANO_N_1_MAIO_ACUM;
    var IND_VN_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JULHO"]))) + IND_VN_ANO_N_1_JUNHO_ACUM;
    var IND_VN_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_AGOSTO"]))) + IND_VN_ANO_N_1_JULHO_ACUM;
    var IND_VN_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_SETEMBRO"]))) + IND_VN_ANO_N_1_AGOSTO_ACUM;
    var IND_VN_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_OUTUBRO"]))) + IND_VN_ANO_N_1_SETEMBRO_ACUM;
    var IND_VN_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_NOVEMBRO"]))) + IND_VN_ANO_N_1_OUTUBRO_ACUM;
    var IND_VN_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_DEZEMBRO"]))) + IND_VN_ANO_N_1_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_JANEIRO_ACUM = 'nd'; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_JANEIRO_ACUM= FSE_MAT_ESCRITOR_ANO_N_JANEIRO_ACUM/IND_VN_ANO_N_JANEIRO_ACUM*100; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = PESO_FSE_MAT_ESCRITOR_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_FEVEREIRO_ACUM= FSE_MAT_ESCRITOR_ANO_N_FEVEREIRO_ACUM/IND_VN_ANO_N_FEVEREIRO_ACUM*100; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_MAT_ESCRITOR_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_MARCO_ACUM = 'nd'; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_MARCO_ACUM= FSE_MAT_ESCRITOR_ANO_N_MARCO_ACUM/IND_VN_ANO_N_MARCO_ACUM*100; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_MARCO_ACUM_MAX_MIN = PESO_FSE_MAT_ESCRITOR_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_ABRIL_ACUM = 'nd'; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_ABRIL_ACUM= FSE_MAT_ESCRITOR_ANO_N_ABRIL_ACUM/IND_VN_ANO_N_ABRIL_ACUM*100; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = PESO_FSE_MAT_ESCRITOR_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_MAIO_ACUM = 'nd'; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_MAIO_ACUM= FSE_MAT_ESCRITOR_ANO_N_MAIO_ACUM/IND_VN_ANO_N_MAIO_ACUM*100; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_MAIO_ACUM_MAX_MIN = PESO_FSE_MAT_ESCRITOR_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_JUNHO_ACUM = 'nd'; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_JUNHO_ACUM= FSE_MAT_ESCRITOR_ANO_N_JUNHO_ACUM/IND_VN_ANO_N_JUNHO_ACUM*100; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = PESO_FSE_MAT_ESCRITOR_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_JULHO_ACUM = 'nd'; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_JULHO_ACUM= FSE_MAT_ESCRITOR_ANO_N_JULHO_ACUM/IND_VN_ANO_N_JULHO_ACUM*100; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_JULHO_ACUM_MAX_MIN = PESO_FSE_MAT_ESCRITOR_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_AGOSTO_ACUM = 'nd'; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_AGOSTO_ACUM= FSE_MAT_ESCRITOR_ANO_N_AGOSTO_ACUM/IND_VN_ANO_N_AGOSTO_ACUM*100; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = PESO_FSE_MAT_ESCRITOR_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_SETEMBRO_ACUM= FSE_MAT_ESCRITOR_ANO_N_SETEMBRO_ACUM/IND_VN_ANO_N_SETEMBRO_ACUM*100; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_MAT_ESCRITOR_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_OUTUBRO_ACUM= FSE_MAT_ESCRITOR_ANO_N_OUTUBRO_ACUM/IND_VN_ANO_N_OUTUBRO_ACUM*100; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_MAT_ESCRITOR_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_NOVEMBRO_ACUM= FSE_MAT_ESCRITOR_ANO_N_NOVEMBRO_ACUM/IND_VN_ANO_N_NOVEMBRO_ACUM*100; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_MAT_ESCRITOR_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_DEZEMBRO_ACUM= FSE_MAT_ESCRITOR_ANO_N_DEZEMBRO_ACUM/IND_VN_ANO_N_DEZEMBRO_ACUM*100; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_MAT_ESCRITOR_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_JANEIRO_ACUM = 'nd'; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_JANEIRO_ACUM= FSE_MAT_ESCRITOR_ANO_N_1_JANEIRO_ACUM/IND_VN_ANO_N_1_JANEIRO_ACUM*100; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_FEVEREIRO_ACUM= FSE_MAT_ESCRITOR_ANO_N_1_FEVEREIRO_ACUM/IND_VN_ANO_N_1_FEVEREIRO_ACUM*100; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_MARCO_ACUM = 'nd'; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_MARCO_ACUM= FSE_MAT_ESCRITOR_ANO_N_1_MARCO_ACUM/IND_VN_ANO_N_1_MARCO_ACUM*100; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_ABRIL_ACUM = 'nd'; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_ABRIL_ACUM= FSE_MAT_ESCRITOR_ANO_N_1_ABRIL_ACUM/IND_VN_ANO_N_1_ABRIL_ACUM*100; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_MAIO_ACUM = 'nd'; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_MAIO_ACUM= FSE_MAT_ESCRITOR_ANO_N_1_MAIO_ACUM/IND_VN_ANO_N_1_MAIO_ACUM*100; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_JUNHO_ACUM = 'nd'; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_JUNHO_ACUM= FSE_MAT_ESCRITOR_ANO_N_1_JUNHO_ACUM/IND_VN_ANO_N_1_JUNHO_ACUM*100; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_JULHO_ACUM = 'nd'; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_JULHO_ACUM= FSE_MAT_ESCRITOR_ANO_N_1_JULHO_ACUM/IND_VN_ANO_N_1_JULHO_ACUM*100; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_AGOSTO_ACUM = 'nd'; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_AGOSTO_ACUM= FSE_MAT_ESCRITOR_ANO_N_1_AGOSTO_ACUM/IND_VN_ANO_N_1_AGOSTO_ACUM*100; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_SETEMBRO_ACUM = 'nd'; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_SETEMBRO_ACUM= FSE_MAT_ESCRITOR_ANO_N_1_SETEMBRO_ACUM/IND_VN_ANO_N_1_SETEMBRO_ACUM*100; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_OUTUBRO_ACUM = 'nd'; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_OUTUBRO_ACUM= FSE_MAT_ESCRITOR_ANO_N_1_OUTUBRO_ACUM/IND_VN_ANO_N_1_OUTUBRO_ACUM*100; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_NOVEMBRO_ACUM= FSE_MAT_ESCRITOR_ANO_N_1_NOVEMBRO_ACUM/IND_VN_ANO_N_1_NOVEMBRO_ACUM*100; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_DEZEMBRO_ACUM= FSE_MAT_ESCRITOR_ANO_N_1_DEZEMBRO_ACUM/IND_VN_ANO_N_1_DEZEMBRO_ACUM*100; var PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_VN_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JANEIRO_ACUM= ((IND_VN_ANO_N_JANEIRO_ACUM-IND_VN_ANO_N_1_JANEIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_JANEIRO_ACUM))*100; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_FEVEREIRO_ACUM= ((IND_VN_ANO_N_FEVEREIRO_ACUM-IND_VN_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_VN_ANO_N_MARCO_ACUM = 'nd'; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MARCO_ACUM= ((IND_VN_ANO_N_MARCO_ACUM-IND_VN_ANO_N_1_MARCO_ACUM)/Math.abs(IND_VN_ANO_N_1_MARCO_ACUM))*100; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = VAR_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_VN_ANO_N_ABRIL_ACUM = 'nd'; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_ABRIL_ACUM= ((IND_VN_ANO_N_ABRIL_ACUM-IND_VN_ANO_N_1_ABRIL_ACUM)/Math.abs(IND_VN_ANO_N_1_ABRIL_ACUM))*100; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_VN_ANO_N_MAIO_ACUM = 'nd'; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MAIO_ACUM= ((IND_VN_ANO_N_MAIO_ACUM-IND_VN_ANO_N_1_MAIO_ACUM)/Math.abs(IND_VN_ANO_N_1_MAIO_ACUM))*100; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = VAR_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_VN_ANO_N_JUNHO_ACUM = 'nd'; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JUNHO_ACUM= ((IND_VN_ANO_N_JUNHO_ACUM-IND_VN_ANO_N_1_JUNHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JUNHO_ACUM))*100; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_VN_ANO_N_JULHO_ACUM = 'nd'; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JULHO_ACUM= ((IND_VN_ANO_N_JULHO_ACUM-IND_VN_ANO_N_1_JULHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JULHO_ACUM))*100; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_VN_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_AGOSTO_ACUM= ((IND_VN_ANO_N_AGOSTO_ACUM-IND_VN_ANO_N_1_AGOSTO_ACUM)/Math.abs(IND_VN_ANO_N_1_AGOSTO_ACUM))*100; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_SETEMBRO_ACUM= ((IND_VN_ANO_N_SETEMBRO_ACUM-IND_VN_ANO_N_1_SETEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_OUTUBRO_ACUM= ((IND_VN_ANO_N_OUTUBRO_ACUM-IND_VN_ANO_N_1_OUTUBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_NOVEMBRO_ACUM= ((IND_VN_ANO_N_NOVEMBRO_ACUM-IND_VN_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_DEZEMBRO_ACUM= ((IND_VN_ANO_N_DEZEMBRO_ACUM-IND_VN_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_FSE_MAT_ESCRITOR_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_FSE_MAT_ESCRITOR_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_MAT_ESCRITOR_ANO_N_JANEIRO_ACUM= ((FSE_MAT_ESCRITOR_ANO_N_JANEIRO_ACUM-FSE_MAT_ESCRITOR_ANO_N_1_JANEIRO_ACUM)/Math.abs(FSE_MAT_ESCRITOR_ANO_N_1_JANEIRO_ACUM))*100; var VAR_FSE_MAT_ESCRITOR_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_FSE_MAT_ESCRITOR_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_FSE_MAT_ESCRITOR_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_FSE_MAT_ESCRITOR_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_MAT_ESCRITOR_ANO_N_FEVEREIRO_ACUM= ((FSE_MAT_ESCRITOR_ANO_N_FEVEREIRO_ACUM-FSE_MAT_ESCRITOR_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(FSE_MAT_ESCRITOR_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_FSE_MAT_ESCRITOR_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_FSE_MAT_ESCRITOR_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_FSE_MAT_ESCRITOR_ANO_N_MARCO_ACUM = 'nd'; var VAR_FSE_MAT_ESCRITOR_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_MAT_ESCRITOR_ANO_N_MARCO_ACUM= ((FSE_MAT_ESCRITOR_ANO_N_MARCO_ACUM-FSE_MAT_ESCRITOR_ANO_N_1_MARCO_ACUM)/Math.abs(FSE_MAT_ESCRITOR_ANO_N_1_MARCO_ACUM))*100; var VAR_FSE_MAT_ESCRITOR_ANO_N_MARCO_ACUM_MAX_MIN = VAR_FSE_MAT_ESCRITOR_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_FSE_MAT_ESCRITOR_ANO_N_ABRIL_ACUM = 'nd'; var VAR_FSE_MAT_ESCRITOR_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_MAT_ESCRITOR_ANO_N_ABRIL_ACUM= ((FSE_MAT_ESCRITOR_ANO_N_ABRIL_ACUM-FSE_MAT_ESCRITOR_ANO_N_1_ABRIL_ACUM)/Math.abs(FSE_MAT_ESCRITOR_ANO_N_1_ABRIL_ACUM))*100; var VAR_FSE_MAT_ESCRITOR_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_FSE_MAT_ESCRITOR_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_FSE_MAT_ESCRITOR_ANO_N_MAIO_ACUM = 'nd'; var VAR_FSE_MAT_ESCRITOR_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_MAT_ESCRITOR_ANO_N_MAIO_ACUM= ((FSE_MAT_ESCRITOR_ANO_N_MAIO_ACUM-FSE_MAT_ESCRITOR_ANO_N_1_MAIO_ACUM)/Math.abs(FSE_MAT_ESCRITOR_ANO_N_1_MAIO_ACUM))*100; var VAR_FSE_MAT_ESCRITOR_ANO_N_MAIO_ACUM_MAX_MIN = VAR_FSE_MAT_ESCRITOR_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_FSE_MAT_ESCRITOR_ANO_N_JUNHO_ACUM = 'nd'; var VAR_FSE_MAT_ESCRITOR_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_MAT_ESCRITOR_ANO_N_JUNHO_ACUM= ((FSE_MAT_ESCRITOR_ANO_N_JUNHO_ACUM-FSE_MAT_ESCRITOR_ANO_N_1_JUNHO_ACUM)/Math.abs(FSE_MAT_ESCRITOR_ANO_N_1_JUNHO_ACUM))*100; var VAR_FSE_MAT_ESCRITOR_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_FSE_MAT_ESCRITOR_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_FSE_MAT_ESCRITOR_ANO_N_JULHO_ACUM = 'nd'; var VAR_FSE_MAT_ESCRITOR_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_MAT_ESCRITOR_ANO_N_JULHO_ACUM= ((FSE_MAT_ESCRITOR_ANO_N_JULHO_ACUM-FSE_MAT_ESCRITOR_ANO_N_1_JULHO_ACUM)/Math.abs(FSE_MAT_ESCRITOR_ANO_N_1_JULHO_ACUM))*100; var VAR_FSE_MAT_ESCRITOR_ANO_N_JULHO_ACUM_MAX_MIN = VAR_FSE_MAT_ESCRITOR_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_FSE_MAT_ESCRITOR_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_FSE_MAT_ESCRITOR_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_MAT_ESCRITOR_ANO_N_AGOSTO_ACUM= ((FSE_MAT_ESCRITOR_ANO_N_AGOSTO_ACUM-FSE_MAT_ESCRITOR_ANO_N_1_AGOSTO_ACUM)/Math.abs(FSE_MAT_ESCRITOR_ANO_N_1_AGOSTO_ACUM))*100; var VAR_FSE_MAT_ESCRITOR_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_FSE_MAT_ESCRITOR_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_FSE_MAT_ESCRITOR_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_FSE_MAT_ESCRITOR_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_MAT_ESCRITOR_ANO_N_SETEMBRO_ACUM= ((FSE_MAT_ESCRITOR_ANO_N_SETEMBRO_ACUM-FSE_MAT_ESCRITOR_ANO_N_1_SETEMBRO_ACUM)/Math.abs(FSE_MAT_ESCRITOR_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_FSE_MAT_ESCRITOR_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_FSE_MAT_ESCRITOR_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_FSE_MAT_ESCRITOR_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_FSE_MAT_ESCRITOR_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_MAT_ESCRITOR_ANO_N_OUTUBRO_ACUM= ((FSE_MAT_ESCRITOR_ANO_N_OUTUBRO_ACUM-FSE_MAT_ESCRITOR_ANO_N_1_OUTUBRO_ACUM)/Math.abs(FSE_MAT_ESCRITOR_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_FSE_MAT_ESCRITOR_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_FSE_MAT_ESCRITOR_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_FSE_MAT_ESCRITOR_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_FSE_MAT_ESCRITOR_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_MAT_ESCRITOR_ANO_N_NOVEMBRO_ACUM= ((FSE_MAT_ESCRITOR_ANO_N_NOVEMBRO_ACUM-FSE_MAT_ESCRITOR_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(FSE_MAT_ESCRITOR_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_FSE_MAT_ESCRITOR_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_FSE_MAT_ESCRITOR_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_FSE_MAT_ESCRITOR_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_FSE_MAT_ESCRITOR_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_MAT_ESCRITOR_ANO_N_DEZEMBRO_ACUM= ((FSE_MAT_ESCRITOR_ANO_N_DEZEMBRO_ACUM-FSE_MAT_ESCRITOR_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(FSE_MAT_ESCRITOR_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_FSE_MAT_ESCRITOR_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_FSE_MAT_ESCRITOR_ANO_N_DEZEMBRO_ACUM };

    if( PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_JANEIRO_ACUM > PESO_FSE_MAT_ESCRITOR_VN_ANO_N_JANEIRO_ACUM) { var  INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_JANEIRO_ACUM=PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_JANEIRO_ACUM ; } else { var  INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_JANEIRO_ACUM=PESO_FSE_MAT_ESCRITOR_VN_ANO_N_JANEIRO_ACUM ; }
    if( PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_FEVEREIRO_ACUM > PESO_FSE_MAT_ESCRITOR_VN_ANO_N_FEVEREIRO_ACUM) { var  INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_FEVEREIRO_ACUM=PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_FEVEREIRO_ACUM ; } else { var  INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_FEVEREIRO_ACUM=PESO_FSE_MAT_ESCRITOR_VN_ANO_N_FEVEREIRO_ACUM ; }
    if( PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_MARCO_ACUM > PESO_FSE_MAT_ESCRITOR_VN_ANO_N_MARCO_ACUM) { var  INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_MARCO_ACUM=PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_MARCO_ACUM ; } else { var  INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_MARCO_ACUM=PESO_FSE_MAT_ESCRITOR_VN_ANO_N_MARCO_ACUM ; }
    if( PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_ABRIL_ACUM > PESO_FSE_MAT_ESCRITOR_VN_ANO_N_ABRIL_ACUM) { var  INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_ABRIL_ACUM=PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_ABRIL_ACUM ; } else { var  INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_ABRIL_ACUM=PESO_FSE_MAT_ESCRITOR_VN_ANO_N_ABRIL_ACUM ; }
    if( PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_MAIO_ACUM > PESO_FSE_MAT_ESCRITOR_VN_ANO_N_MAIO_ACUM) { var  INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_MAIO_ACUM=PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_MAIO_ACUM ; } else { var  INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_MAIO_ACUM=PESO_FSE_MAT_ESCRITOR_VN_ANO_N_MAIO_ACUM ; }
    if( PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_JUNHO_ACUM > PESO_FSE_MAT_ESCRITOR_VN_ANO_N_JUNHO_ACUM) { var  INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_JUNHO_ACUM=PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_JUNHO_ACUM ; } else { var  INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_JUNHO_ACUM=PESO_FSE_MAT_ESCRITOR_VN_ANO_N_JUNHO_ACUM ; }
    if( PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_JULHO_ACUM > PESO_FSE_MAT_ESCRITOR_VN_ANO_N_JULHO_ACUM) { var  INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_JULHO_ACUM=PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_JULHO_ACUM ; } else { var  INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_JULHO_ACUM=PESO_FSE_MAT_ESCRITOR_VN_ANO_N_JULHO_ACUM ; }
    if( PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_AGOSTO_ACUM > PESO_FSE_MAT_ESCRITOR_VN_ANO_N_AGOSTO_ACUM) { var  INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_AGOSTO_ACUM=PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_AGOSTO_ACUM ; } else { var  INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_AGOSTO_ACUM=PESO_FSE_MAT_ESCRITOR_VN_ANO_N_AGOSTO_ACUM ; }
    if( PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_SETEMBRO_ACUM > PESO_FSE_MAT_ESCRITOR_VN_ANO_N_SETEMBRO_ACUM) { var  INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_SETEMBRO_ACUM=PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_SETEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_SETEMBRO_ACUM=PESO_FSE_MAT_ESCRITOR_VN_ANO_N_SETEMBRO_ACUM ; }
    if( PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_OUTUBRO_ACUM > PESO_FSE_MAT_ESCRITOR_VN_ANO_N_OUTUBRO_ACUM) { var  INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_OUTUBRO_ACUM=PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_OUTUBRO_ACUM ; } else { var  INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_OUTUBRO_ACUM=PESO_FSE_MAT_ESCRITOR_VN_ANO_N_OUTUBRO_ACUM ; }
    if( PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_NOVEMBRO_ACUM > PESO_FSE_MAT_ESCRITOR_VN_ANO_N_NOVEMBRO_ACUM) { var  INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_NOVEMBRO_ACUM=PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_NOVEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_NOVEMBRO_ACUM=PESO_FSE_MAT_ESCRITOR_VN_ANO_N_NOVEMBRO_ACUM ; }
    if( PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_DEZEMBRO_ACUM > PESO_FSE_MAT_ESCRITOR_VN_ANO_N_DEZEMBRO_ACUM) { var  INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_DEZEMBRO_ACUM=PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_DEZEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_DEZEMBRO_ACUM=PESO_FSE_MAT_ESCRITOR_VN_ANO_N_DEZEMBRO_ACUM ; }



    var fillBetweenLinesPlugin = {
        afterDatasetsDraw: function (chart) {
            var ctx = chart.chart.ctx;
            var xaxis = chart.scales['x-axis-0'];
            var yaxis = chart.scales['y-axis-0'];
            var datasets = chart.data.datasets;
            ctx.save();

            for (var d = 0; d < datasets.length; d++) {
                var dataset = datasets[d];
                if (dataset.fillBetweenSet == undefined) {
                    continue;
                }

                // get meta for both data sets
                var meta1 = chart.getDatasetMeta(d);
                var meta2 = chart.getDatasetMeta(dataset.fillBetweenSet);

                // do not draw fill if one of the datasets is hidden
                if (meta1.hidden || meta2.hidden) continue;

                // create fill areas in pairs
                for (var p = 0; p < meta1.data.length-1;p++) {
                    // if null skip
                    if (dataset.data[p] == null || dataset.data[p+1] == null) continue;

                    ctx.beginPath();

                    // trace line 1
                    var curr = meta1.data[p];
                    var next = meta1.data[p+1];
                    ctx.moveTo(curr._view.x, curr._view.y);
                    ctx.lineTo(curr._view.x, curr._view.y);
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(next._view.x, curr._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        ctx.bezierCurveTo(
                          curr._view.controlPointNextX,
                          curr._view.controlPointNextY,
                          next._view.controlPointPreviousX,
                          next._view.controlPointPreviousY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // connect dataset1 to dataset2
                    var curr = meta2.data[p+1];
                    var next = meta2.data[p];
                    ctx.lineTo(curr._view.x, curr._view.y);

                    // trace BACKWORDS set2 to complete the box
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(curr._view.x, next._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        // reverse bezier
                        ctx.bezierCurveTo(
                          curr._view.controlPointPreviousX,
                          curr._view.controlPointPreviousY,
                          next._view.controlPointNextX,
                          next._view.controlPointNextY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // close the loop and fill with shading
                    ctx.closePath();
                    ctx.fillStyle = dataset.fillBetweenColor || "rgba(0,0,0,0.1)";
                    ctx.fill();
                } // end for p loop
            }
        } // end afterDatasetsDraw
    }; // end fillBetweenLinesPlugin

    Chart.pluginService.register(fillBetweenLinesPlugin);



    var GRAFICO_FSE_RESULT_MENSAL_COMP_023=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_023').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_023=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_023, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label:  'Peso Mat. Escrit.vsVN(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   //borderColor: "#F00",
                   fill: false,
                   steppedLine: false,
                   tension: 0.5,
                   fillBetweenSet: 1,
                   fillBetweenColor: "rgba(0, 221, 0, 0.1)",
                   data: [
                   PESO_FSE_MAT_ESCRITOR_VN_ANO_N_JANEIRO_ACUM,
                   PESO_FSE_MAT_ESCRITOR_VN_ANO_N_FEVEREIRO_ACUM,
                   PESO_FSE_MAT_ESCRITOR_VN_ANO_N_MARCO_ACUM,
                   PESO_FSE_MAT_ESCRITOR_VN_ANO_N_ABRIL_ACUM,
                   PESO_FSE_MAT_ESCRITOR_VN_ANO_N_MAIO_ACUM,
                   PESO_FSE_MAT_ESCRITOR_VN_ANO_N_JUNHO_ACUM,
                   PESO_FSE_MAT_ESCRITOR_VN_ANO_N_JULHO_ACUM,
                   PESO_FSE_MAT_ESCRITOR_VN_ANO_N_AGOSTO_ACUM,
                   PESO_FSE_MAT_ESCRITOR_VN_ANO_N_SETEMBRO_ACUM,
                   PESO_FSE_MAT_ESCRITOR_VN_ANO_N_OUTUBRO_ACUM,
                   PESO_FSE_MAT_ESCRITOR_VN_ANO_N_NOVEMBRO_ACUM,
                   PESO_FSE_MAT_ESCRITOR_VN_ANO_N_DEZEMBRO_ACUM,

                   ],
                   type: 'line'


               },
                {
                    label: 'Peso Mat. Escrit.vsVN(ac) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'A',
                    //backgroundColor: 'rgb(17, 121, 240)',
                    borderColor: 'rgb(0,221,0)',
                    //borderColor: "#00F",
                    fill: false,
                    steppedLine: false,
                    tension: 0.5,
                    data: [
                   PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_JANEIRO_ACUM,
                   PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_FEVEREIRO_ACUM,
                   PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_MARCO_ACUM,
                   PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_ABRIL_ACUM,
                   PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_MAIO_ACUM,
                   PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_JUNHO_ACUM,
                   PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_JULHO_ACUM,
                   PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_AGOSTO_ACUM,
                   PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_SETEMBRO_ACUM,
                   PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_OUTUBRO_ACUM,
                   PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_NOVEMBRO_ACUM,
                   PESO_FSE_MAT_ESCRITOR_VN_ANO_N_1_DEZEMBRO_ACUM,
                    ],
                    type: 'line'
                },
    {
        label: 'Ineficiência',
        yAxisID: 'A',
        backgroundColor: "rgba(255, 0, 0, 0.2)",
        borderColor: 'rgba(255, 255, 255, 0.1)',
        //borderColor: "#0D0",
        fill: false,
        steppedLine: false,
        tension: 0.5,
        fillBetweenSet: 1,
        fillBetweenColor: "rgba(255, 0, 0, 0.2)",
        data: [
    INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_JANEIRO_ACUM,
    INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_FEVEREIRO_ACUM,
    INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_MARCO_ACUM,
    INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_ABRIL_ACUM,
    INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_MAIO_ACUM,
    INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_JUNHO_ACUM,
    INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_JULHO_ACUM,
    INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_AGOSTO_ACUM,
    INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_SETEMBRO_ACUM,
    INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_OUTUBRO_ACUM,
    INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_NOVEMBRO_ACUM,
    INEFICIENCIA_FSE_MAT_ESCRITOR_ANO_N_DEZEMBRO_ACUM,
        ],
        type: 'line'
    },

            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_Mat. Escrit. COMP',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                //min:  Math.round(FSE_MAT_ESCRITOR_Mensal_Eixo_min_princ__,0),
                                                //max:  Math.round(FSE_MAT_ESCRITOR_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString()+ "%";
                                                }
                                            }
                                        },







                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_024-----------------------------------------------------------*@
<script>

    if(@ViewData["MES_ACUM_REAL"]<1){ var IND_VN_ANO_N_JANEIRO = 'nd'; var IND_VN_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JANEIRO"]))); var IND_VN_ANO_N_JANEIRO_MAX_MIN = IND_VN_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var IND_VN_ANO_N_FEVEREIRO = 'nd'; var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_FEVEREIRO"]))); var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = IND_VN_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var IND_VN_ANO_N_MARCO = 'nd'; var IND_VN_ANO_N_MARCO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MARCO"]))); var IND_VN_ANO_N_MARCO_MAX_MIN = IND_VN_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var IND_VN_ANO_N_ABRIL = 'nd'; var IND_VN_ANO_N_ABRIL_MAX_MIN = 0;  } else { var IND_VN_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_ABRIL"]))); var IND_VN_ANO_N_ABRIL_MAX_MIN = IND_VN_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var IND_VN_ANO_N_MAIO = 'nd'; var IND_VN_ANO_N_MAIO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MAIO"]))); var IND_VN_ANO_N_MAIO_MAX_MIN = IND_VN_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var IND_VN_ANO_N_JUNHO = 'nd'; var IND_VN_ANO_N_JUNHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JUNHO"]))); var IND_VN_ANO_N_JUNHO_MAX_MIN = IND_VN_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var IND_VN_ANO_N_JULHO = 'nd'; var IND_VN_ANO_N_JULHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JULHO"]))); var IND_VN_ANO_N_JULHO_MAX_MIN = IND_VN_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var IND_VN_ANO_N_AGOSTO = 'nd'; var IND_VN_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_AGOSTO"]))); var IND_VN_ANO_N_AGOSTO_MAX_MIN = IND_VN_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var IND_VN_ANO_N_SETEMBRO = 'nd'; var IND_VN_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_SETEMBRO"]))); var IND_VN_ANO_N_SETEMBRO_MAX_MIN = IND_VN_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var IND_VN_ANO_N_OUTUBRO = 'nd'; var IND_VN_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_OUTUBRO"]))); var IND_VN_ANO_N_OUTUBRO_MAX_MIN = IND_VN_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var IND_VN_ANO_N_NOVEMBRO = 'nd'; var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_NOVEMBRO"]))); var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = IND_VN_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var IND_VN_ANO_N_DEZEMBRO = 'nd'; var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_DEZEMBRO"]))); var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = IND_VN_ANO_N_DEZEMBRO };

    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_ART_OFERTA_ANO_N_JANEIRO = 'nd'; var FSE_ART_OFERTA_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var FSE_ART_OFERTA_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_JANEIRO"]))); var FSE_ART_OFERTA_ANO_N_JANEIRO_MAX_MIN = FSE_ART_OFERTA_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_ART_OFERTA_ANO_N_FEVEREIRO = 'nd'; var FSE_ART_OFERTA_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var FSE_ART_OFERTA_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_FEVEREIRO"]))); var FSE_ART_OFERTA_ANO_N_FEVEREIRO_MAX_MIN = FSE_ART_OFERTA_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_ART_OFERTA_ANO_N_MARCO = 'nd'; var FSE_ART_OFERTA_ANO_N_MARCO_MAX_MIN = 0;  } else { var FSE_ART_OFERTA_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_MARCO"]))); var FSE_ART_OFERTA_ANO_N_MARCO_MAX_MIN = FSE_ART_OFERTA_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_ART_OFERTA_ANO_N_ABRIL = 'nd'; var FSE_ART_OFERTA_ANO_N_ABRIL_MAX_MIN = 0;  } else { var FSE_ART_OFERTA_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_ABRIL"]))); var FSE_ART_OFERTA_ANO_N_ABRIL_MAX_MIN = FSE_ART_OFERTA_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_ART_OFERTA_ANO_N_MAIO = 'nd'; var FSE_ART_OFERTA_ANO_N_MAIO_MAX_MIN = 0;  } else { var FSE_ART_OFERTA_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_MAIO"]))); var FSE_ART_OFERTA_ANO_N_MAIO_MAX_MIN = FSE_ART_OFERTA_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_ART_OFERTA_ANO_N_JUNHO = 'nd'; var FSE_ART_OFERTA_ANO_N_JUNHO_MAX_MIN = 0;  } else { var FSE_ART_OFERTA_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_JUNHO"]))); var FSE_ART_OFERTA_ANO_N_JUNHO_MAX_MIN = FSE_ART_OFERTA_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_ART_OFERTA_ANO_N_JULHO = 'nd'; var FSE_ART_OFERTA_ANO_N_JULHO_MAX_MIN = 0;  } else { var FSE_ART_OFERTA_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_JULHO"]))); var FSE_ART_OFERTA_ANO_N_JULHO_MAX_MIN = FSE_ART_OFERTA_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_ART_OFERTA_ANO_N_AGOSTO = 'nd'; var FSE_ART_OFERTA_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var FSE_ART_OFERTA_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_AGOSTO"]))); var FSE_ART_OFERTA_ANO_N_AGOSTO_MAX_MIN = FSE_ART_OFERTA_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_ART_OFERTA_ANO_N_SETEMBRO = 'nd'; var FSE_ART_OFERTA_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var FSE_ART_OFERTA_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_SETEMBRO"]))); var FSE_ART_OFERTA_ANO_N_SETEMBRO_MAX_MIN = FSE_ART_OFERTA_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_ART_OFERTA_ANO_N_OUTUBRO = 'nd'; var FSE_ART_OFERTA_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var FSE_ART_OFERTA_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_OUTUBRO"]))); var FSE_ART_OFERTA_ANO_N_OUTUBRO_MAX_MIN = FSE_ART_OFERTA_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_ART_OFERTA_ANO_N_NOVEMBRO = 'nd'; var FSE_ART_OFERTA_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var FSE_ART_OFERTA_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_NOVEMBRO"]))); var FSE_ART_OFERTA_ANO_N_NOVEMBRO_MAX_MIN = FSE_ART_OFERTA_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_ART_OFERTA_ANO_N_DEZEMBRO = 'nd'; var FSE_ART_OFERTA_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var FSE_ART_OFERTA_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_DEZEMBRO"]))); var FSE_ART_OFERTA_ANO_N_DEZEMBRO_MAX_MIN = FSE_ART_OFERTA_ANO_N_DEZEMBRO };


    var FSE_ART_OFERTA_ANO_N_JANEIRO_ACUM = FSE_ART_OFERTA_ANO_N_JANEIRO;
    var FSE_ART_OFERTA_ANO_N_FEVEREIRO_ACUM = FSE_ART_OFERTA_ANO_N_FEVEREIRO + FSE_ART_OFERTA_ANO_N_JANEIRO_ACUM;
    var FSE_ART_OFERTA_ANO_N_MARCO_ACUM = FSE_ART_OFERTA_ANO_N_MARCO + FSE_ART_OFERTA_ANO_N_FEVEREIRO_ACUM;
    var FSE_ART_OFERTA_ANO_N_ABRIL_ACUM = FSE_ART_OFERTA_ANO_N_ABRIL + FSE_ART_OFERTA_ANO_N_MARCO_ACUM;
    var FSE_ART_OFERTA_ANO_N_MAIO_ACUM = FSE_ART_OFERTA_ANO_N_MAIO + FSE_ART_OFERTA_ANO_N_ABRIL_ACUM;
    var FSE_ART_OFERTA_ANO_N_JUNHO_ACUM = FSE_ART_OFERTA_ANO_N_JUNHO + FSE_ART_OFERTA_ANO_N_MAIO_ACUM;
    var FSE_ART_OFERTA_ANO_N_JULHO_ACUM = FSE_ART_OFERTA_ANO_N_JULHO + FSE_ART_OFERTA_ANO_N_JUNHO_ACUM;
    var FSE_ART_OFERTA_ANO_N_AGOSTO_ACUM = FSE_ART_OFERTA_ANO_N_AGOSTO + FSE_ART_OFERTA_ANO_N_JULHO_ACUM;
    var FSE_ART_OFERTA_ANO_N_SETEMBRO_ACUM = FSE_ART_OFERTA_ANO_N_SETEMBRO + FSE_ART_OFERTA_ANO_N_AGOSTO_ACUM;
    var FSE_ART_OFERTA_ANO_N_OUTUBRO_ACUM = FSE_ART_OFERTA_ANO_N_OUTUBRO + FSE_ART_OFERTA_ANO_N_SETEMBRO_ACUM;
    var FSE_ART_OFERTA_ANO_N_NOVEMBRO_ACUM = FSE_ART_OFERTA_ANO_N_NOVEMBRO + FSE_ART_OFERTA_ANO_N_OUTUBRO_ACUM;
    var FSE_ART_OFERTA_ANO_N_DEZEMBRO_ACUM = FSE_ART_OFERTA_ANO_N_DEZEMBRO + FSE_ART_OFERTA_ANO_N_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_ART_OFERTA_ANO_N_JANEIRO_ACUM = 'nd'; var FSE_ART_OFERTA_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var FSE_ART_OFERTA_ANO_N_JANEIRO_ACUM= FSE_ART_OFERTA_ANO_N_JANEIRO_ACUM; var FSE_ART_OFERTA_ANO_N_JANEIRO_ACUM_MAX_MIN = FSE_ART_OFERTA_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_ART_OFERTA_ANO_N_FEVEREIRO_ACUM = 'nd'; var FSE_ART_OFERTA_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var FSE_ART_OFERTA_ANO_N_FEVEREIRO_ACUM= FSE_ART_OFERTA_ANO_N_FEVEREIRO_ACUM; var FSE_ART_OFERTA_ANO_N_FEVEREIRO_ACUM_MAX_MIN = FSE_ART_OFERTA_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_ART_OFERTA_ANO_N_MARCO_ACUM = 'nd'; var FSE_ART_OFERTA_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var FSE_ART_OFERTA_ANO_N_MARCO_ACUM= FSE_ART_OFERTA_ANO_N_MARCO_ACUM; var FSE_ART_OFERTA_ANO_N_MARCO_ACUM_MAX_MIN = FSE_ART_OFERTA_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_ART_OFERTA_ANO_N_ABRIL_ACUM = 'nd'; var FSE_ART_OFERTA_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var FSE_ART_OFERTA_ANO_N_ABRIL_ACUM= FSE_ART_OFERTA_ANO_N_ABRIL_ACUM; var FSE_ART_OFERTA_ANO_N_ABRIL_ACUM_MAX_MIN = FSE_ART_OFERTA_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_ART_OFERTA_ANO_N_MAIO_ACUM = 'nd'; var FSE_ART_OFERTA_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var FSE_ART_OFERTA_ANO_N_MAIO_ACUM= FSE_ART_OFERTA_ANO_N_MAIO_ACUM; var FSE_ART_OFERTA_ANO_N_MAIO_ACUM_MAX_MIN = FSE_ART_OFERTA_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_ART_OFERTA_ANO_N_JUNHO_ACUM = 'nd'; var FSE_ART_OFERTA_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var FSE_ART_OFERTA_ANO_N_JUNHO_ACUM= FSE_ART_OFERTA_ANO_N_JUNHO_ACUM; var FSE_ART_OFERTA_ANO_N_JUNHO_ACUM_MAX_MIN = FSE_ART_OFERTA_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_ART_OFERTA_ANO_N_JULHO_ACUM = 'nd'; var FSE_ART_OFERTA_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var FSE_ART_OFERTA_ANO_N_JULHO_ACUM= FSE_ART_OFERTA_ANO_N_JULHO_ACUM; var FSE_ART_OFERTA_ANO_N_JULHO_ACUM_MAX_MIN = FSE_ART_OFERTA_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_ART_OFERTA_ANO_N_AGOSTO_ACUM = 'nd'; var FSE_ART_OFERTA_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var FSE_ART_OFERTA_ANO_N_AGOSTO_ACUM= FSE_ART_OFERTA_ANO_N_AGOSTO_ACUM; var FSE_ART_OFERTA_ANO_N_AGOSTO_ACUM_MAX_MIN = FSE_ART_OFERTA_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_ART_OFERTA_ANO_N_SETEMBRO_ACUM = 'nd'; var FSE_ART_OFERTA_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_ART_OFERTA_ANO_N_SETEMBRO_ACUM= FSE_ART_OFERTA_ANO_N_SETEMBRO_ACUM; var FSE_ART_OFERTA_ANO_N_SETEMBRO_ACUM_MAX_MIN = FSE_ART_OFERTA_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_ART_OFERTA_ANO_N_OUTUBRO_ACUM = 'nd'; var FSE_ART_OFERTA_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var FSE_ART_OFERTA_ANO_N_OUTUBRO_ACUM= FSE_ART_OFERTA_ANO_N_OUTUBRO_ACUM; var FSE_ART_OFERTA_ANO_N_OUTUBRO_ACUM_MAX_MIN = FSE_ART_OFERTA_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_ART_OFERTA_ANO_N_NOVEMBRO_ACUM = 'nd'; var FSE_ART_OFERTA_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_ART_OFERTA_ANO_N_NOVEMBRO_ACUM= FSE_ART_OFERTA_ANO_N_NOVEMBRO_ACUM; var FSE_ART_OFERTA_ANO_N_NOVEMBRO_ACUM_MAX_MIN = FSE_ART_OFERTA_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_ART_OFERTA_ANO_N_DEZEMBRO_ACUM = 'nd'; var FSE_ART_OFERTA_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_ART_OFERTA_ANO_N_DEZEMBRO_ACUM= FSE_ART_OFERTA_ANO_N_DEZEMBRO_ACUM; var FSE_ART_OFERTA_ANO_N_DEZEMBRO_ACUM_MAX_MIN = FSE_ART_OFERTA_ANO_N_DEZEMBRO_ACUM };




    var FSE_ART_OFERTA_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_JANEIRO"])));
    var FSE_ART_OFERTA_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_FEVEREIRO"]))) + FSE_ART_OFERTA_ANO_N_1_JANEIRO_ACUM;
    var FSE_ART_OFERTA_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_MARCO"]))) + FSE_ART_OFERTA_ANO_N_1_FEVEREIRO_ACUM;
    var FSE_ART_OFERTA_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_ABRIL"]))) + FSE_ART_OFERTA_ANO_N_1_MARCO_ACUM;
    var FSE_ART_OFERTA_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_MAIO"]))) + FSE_ART_OFERTA_ANO_N_1_ABRIL_ACUM;
    var FSE_ART_OFERTA_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_JUNHO"]))) + FSE_ART_OFERTA_ANO_N_1_MAIO_ACUM;
    var FSE_ART_OFERTA_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_JULHO"]))) + FSE_ART_OFERTA_ANO_N_1_JUNHO_ACUM;
    var FSE_ART_OFERTA_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_AGOSTO"]))) + FSE_ART_OFERTA_ANO_N_1_JULHO_ACUM;
    var FSE_ART_OFERTA_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_SETEMBRO"]))) + FSE_ART_OFERTA_ANO_N_1_AGOSTO_ACUM;
    var FSE_ART_OFERTA_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_OUTUBRO"]))) + FSE_ART_OFERTA_ANO_N_1_SETEMBRO_ACUM;
    var FSE_ART_OFERTA_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_NOVEMBRO"]))) + FSE_ART_OFERTA_ANO_N_1_OUTUBRO_ACUM;
    var FSE_ART_OFERTA_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_DEZEMBRO"]))) + FSE_ART_OFERTA_ANO_N_1_NOVEMBRO_ACUM;


    var FSE_ART_OFERTA_Mensal_Eixo_max_princ= Math.max(
                       FSE_ART_OFERTA_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_ART_OFERTA_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_ART_OFERTA_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_ART_OFERTA_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_ART_OFERTA_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_ART_OFERTA_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_ART_OFERTA_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_ART_OFERTA_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_ART_OFERTA_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_ART_OFERTA_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_ART_OFERTA_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_ART_OFERTA_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_ART_OFERTA_ANO_N_1_JANEIRO_ACUM,
                       FSE_ART_OFERTA_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_ART_OFERTA_ANO_N_1_MARCO_ACUM,
                       FSE_ART_OFERTA_ANO_N_1_ABRIL_ACUM,
                       FSE_ART_OFERTA_ANO_N_1_MAIO_ACUM,
                       FSE_ART_OFERTA_ANO_N_1_JUNHO_ACUM,
                       FSE_ART_OFERTA_ANO_N_1_JULHO_ACUM,
                       FSE_ART_OFERTA_ANO_N_1_AGOSTO_ACUM,
                       FSE_ART_OFERTA_ANO_N_1_SETEMBRO_ACUM,
                       FSE_ART_OFERTA_ANO_N_1_OUTUBRO_ACUM,
                       FSE_ART_OFERTA_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_ART_OFERTA_ANO_N_1_DEZEMBRO_ACUM
                             );
    var FSE_ART_OFERTA_Mensal_Eixo_min_princ= Math.min(

                       FSE_ART_OFERTA_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_ART_OFERTA_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_ART_OFERTA_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_ART_OFERTA_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_ART_OFERTA_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_ART_OFERTA_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_ART_OFERTA_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_ART_OFERTA_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_ART_OFERTA_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_ART_OFERTA_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_ART_OFERTA_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_ART_OFERTA_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_ART_OFERTA_ANO_N_1_JANEIRO_ACUM,
                       FSE_ART_OFERTA_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_ART_OFERTA_ANO_N_1_MARCO_ACUM,
                       FSE_ART_OFERTA_ANO_N_1_ABRIL_ACUM,
                       FSE_ART_OFERTA_ANO_N_1_MAIO_ACUM,
                       FSE_ART_OFERTA_ANO_N_1_JUNHO_ACUM,
                       FSE_ART_OFERTA_ANO_N_1_JULHO_ACUM,
                       FSE_ART_OFERTA_ANO_N_1_AGOSTO_ACUM,
                       FSE_ART_OFERTA_ANO_N_1_SETEMBRO_ACUM,
                       FSE_ART_OFERTA_ANO_N_1_OUTUBRO_ACUM,
                       FSE_ART_OFERTA_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_ART_OFERTA_ANO_N_1_DEZEMBRO_ACUM
                           );
    var FSE_ART_OFERTA_Mensal_Eixo_max_secon= Math.max(
                       FSE_ART_OFERTA_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_ART_OFERTA_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_ART_OFERTA_ANO_N_MARCO_MAX_MIN ,
                       FSE_ART_OFERTA_ANO_N_ABRIL_MAX_MIN ,
                       FSE_ART_OFERTA_ANO_N_MAIO_MAX_MIN ,
                       FSE_ART_OFERTA_ANO_N_JUNHO_MAX_MIN ,
                       FSE_ART_OFERTA_ANO_N_JULHO_MAX_MIN ,
                       FSE_ART_OFERTA_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_ART_OFERTA_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_ART_OFERTA_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_ART_OFERTA_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_ART_OFERTA_ANO_N_DEZEMBRO_MAX_MIN ,



                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_DEZEMBRO"])))

                            );
    var FSE_ART_OFERTA_Mensal_Eixo_min_secon= Math.min(
                       FSE_ART_OFERTA_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_ART_OFERTA_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_ART_OFERTA_ANO_N_MARCO_MAX_MIN ,
                       FSE_ART_OFERTA_ANO_N_ABRIL_MAX_MIN ,
                       FSE_ART_OFERTA_ANO_N_MAIO_MAX_MIN ,
                       FSE_ART_OFERTA_ANO_N_JUNHO_MAX_MIN ,
                       FSE_ART_OFERTA_ANO_N_JULHO_MAX_MIN ,
                       FSE_ART_OFERTA_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_ART_OFERTA_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_ART_OFERTA_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_ART_OFERTA_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_ART_OFERTA_ANO_N_DEZEMBRO_MAX_MIN ,


                           @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_DEZEMBRO"])))

                          );

    //NOTA TA: Aqui trato o minimo e o maximo do eixo principal
    if(Math.abs(FSE_ART_OFERTA_Mensal_Eixo_max_princ)>=Math.abs(FSE_ART_OFERTA_Mensal_Eixo_min_princ))
    {
        var FSE_ART_OFERTA_Mensal_Eixo_max_princ_=(Math.ceil(FSE_ART_OFERTA_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_ART_OFERTA_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_ART_OFERTA_Mensal_Eixo_max_princ),0).toString().length-1);
        var FSE_ART_OFERTA_Mensal_Eixo_min_princ_= (Math.floor(FSE_ART_OFERTA_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_ART_OFERTA_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_ART_OFERTA_Mensal_Eixo_max_princ),0).toString().length-1);
        //alert(FSE_ART_OFERTA_Mensal_Eixo_max_princ_);
        //alert(FSE_ART_OFERTA_Mensal_Eixo_min_princ_);
    }
    else
    {
        var FSE_ART_OFERTA_Mensal_Eixo_max_princ_=(Math.ceil(FSE_ART_OFERTA_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_ART_OFERTA_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_ART_OFERTA_Mensal_Eixo_min_princ),0).toString().length-1);
        var FSE_ART_OFERTA_Mensal_Eixo_min_princ_= (Math.floor(FSE_ART_OFERTA_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_ART_OFERTA_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_ART_OFERTA_Mensal_Eixo_min_princ),0).toString().length-1);}

    //NOTA TA: Aqui trato o minimo e o maximo do eixo secundario

    if(Math.abs(FSE_ART_OFERTA_Mensal_Eixo_max_secon)>=Math.abs(FSE_ART_OFERTA_Mensal_Eixo_min_secon))
    {
        var FSE_ART_OFERTA_Mensal_Eixo_max_secon_=(Math.ceil(FSE_ART_OFERTA_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_ART_OFERTA_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_ART_OFERTA_Mensal_Eixo_max_secon),0).toString().length-1);
        var FSE_ART_OFERTA_Mensal_Eixo_min_secon_= (Math.floor(FSE_ART_OFERTA_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_ART_OFERTA_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_ART_OFERTA_Mensal_Eixo_max_secon),0).toString().length-1);
        //alert(FSE_ART_OFERTA_Mensal_Eixo_max_secon_);
        //alert(FSE_ART_OFERTA_Mensal_Eixo_min_secon_);
    }
    else
    {
        var FSE_ART_OFERTA_Mensal_Eixo_max_secon_=(Math.ceil(FSE_ART_OFERTA_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_ART_OFERTA_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_ART_OFERTA_Mensal_Eixo_min_secon),0).toString().length-1);
        var FSE_ART_OFERTA_Mensal_Eixo_min_secon_= (Math.floor(FSE_ART_OFERTA_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_ART_OFERTA_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_ART_OFERTA_Mensal_Eixo_min_secon),0).toString().length-1);}


    if(Math.abs(FSE_ART_OFERTA_Mensal_Eixo_min_princ)/Math.abs(FSE_ART_OFERTA_Mensal_Eixo_max_princ)>=Math.abs(FSE_ART_OFERTA_Mensal_Eixo_min_secon)/Math.abs(FSE_ART_OFERTA_Mensal_Eixo_max_secon))
    { if(FSE_ART_OFERTA_Mensal_Eixo_max_princ > 0 && FSE_ART_OFERTA_Mensal_Eixo_min_princ <0 ){ var FSE_ART_OFERTA_Mensal_Eixo_min_secon__=(FSE_ART_OFERTA_Mensal_Eixo_min_princ_*FSE_ART_OFERTA_Mensal_Eixo_max_secon_)/FSE_ART_OFERTA_Mensal_Eixo_max_princ_;} else { var FSE_ART_OFERTA_Mensal_Eixo_min_secon__=FSE_ART_OFERTA_Mensal_Eixo_min_secon_;}
        if(FSE_ART_OFERTA_Mensal_Eixo_max_secon > 0 && FSE_ART_OFERTA_Mensal_Eixo_min_secon <0 ){ var FSE_ART_OFERTA_Mensal_Eixo_min_princ__=(FSE_ART_OFERTA_Mensal_Eixo_min_secon__*FSE_ART_OFERTA_Mensal_Eixo_max_princ_)/FSE_ART_OFERTA_Mensal_Eixo_max_secon_;} else { var FSE_ART_OFERTA_Mensal_Eixo_min_princ__=FSE_ART_OFERTA_Mensal_Eixo_min_princ_;}}
    else
    {if(FSE_ART_OFERTA_Mensal_Eixo_max_secon > 0 && FSE_ART_OFERTA_Mensal_Eixo_min_secon <0 ){ var FSE_ART_OFERTA_Mensal_Eixo_min_princ__=(FSE_ART_OFERTA_Mensal_Eixo_min_secon_*FSE_ART_OFERTA_Mensal_Eixo_max_princ_)/FSE_ART_OFERTA_Mensal_Eixo_max_secon_;} else { var FSE_ART_OFERTA_Mensal_Eixo_min_princ__=FSE_ART_OFERTA_Mensal_Eixo_min_princ_;}
        if(FSE_ART_OFERTA_Mensal_Eixo_max_princ > 0 && FSE_ART_OFERTA_Mensal_Eixo_min_princ <0 ){ var FSE_ART_OFERTA_Mensal_Eixo_min_secon__=(FSE_ART_OFERTA_Mensal_Eixo_min_princ__*FSE_ART_OFERTA_Mensal_Eixo_max_secon_)/FSE_ART_OFERTA_Mensal_Eixo_max_princ_;} else { var FSE_ART_OFERTA_Mensal_Eixo_min_secon__=FSE_ART_OFERTA_Mensal_Eixo_min_secon_;}
    }



    if(Math.abs(FSE_ART_OFERTA_Mensal_Eixo_max_princ)/Math.abs(FSE_ART_OFERTA_Mensal_Eixo_min_princ)>=Math.abs(FSE_ART_OFERTA_Mensal_Eixo_max_secon)/Math.abs(FSE_ART_OFERTA_Mensal_Eixo_min_secon))
    { if(FSE_ART_OFERTA_Mensal_Eixo_min_princ > 0 && FSE_ART_OFERTA_Mensal_Eixo_max_princ <0 ){ var FSE_ART_OFERTA_Mensal_Eixo_max_secon__=(FSE_ART_OFERTA_Mensal_Eixo_max_princ_*FSE_ART_OFERTA_Mensal_Eixo_min_secon_)/FSE_ART_OFERTA_Mensal_Eixo_min_princ_;} else { var FSE_ART_OFERTA_Mensal_Eixo_max_secon__=FSE_ART_OFERTA_Mensal_Eixo_max_secon_;}
        if(FSE_ART_OFERTA_Mensal_Eixo_min_secon > 0 && FSE_ART_OFERTA_Mensal_Eixo_max_secon <0 ){ var FSE_ART_OFERTA_Mensal_Eixo_max_princ__=(FSE_ART_OFERTA_Mensal_Eixo_max_secon__*FSE_ART_OFERTA_Mensal_Eixo_min_princ_)/FSE_ART_OFERTA_Mensal_Eixo_min_secon_;} else { var FSE_ART_OFERTA_Mensal_Eixo_max_princ__=FSE_ART_OFERTA_Mensal_Eixo_max_princ_;}}
    else
    {if(FSE_ART_OFERTA_Mensal_Eixo_min_secon > 0 && FSE_ART_OFERTA_Mensal_Eixo_max_secon <0 ){ var FSE_ART_OFERTA_Mensal_Eixo_max_princ__=(FSE_ART_OFERTA_Mensal_Eixo_max_secon_*FSE_ART_OFERTA_Mensal_Eixo_min_princ_)/FSE_ART_OFERTA_Mensal_Eixo_min_secon_;} else { var FSE_ART_OFERTA_Mensal_Eixo_max_princ__=FSE_ART_OFERTA_Mensal_Eixo_max_princ_;}
        if(FSE_ART_OFERTA_Mensal_Eixo_min_princ > 0 && FSE_ART_OFERTA_Mensal_Eixo_max_princ <0 ){ var FSE_ART_OFERTA_Mensal_Eixo_max_secon__=(FSE_ART_OFERTA_Mensal_Eixo_max_princ__*FSE_ART_OFERTA_Mensal_Eixo_min_secon_)/FSE_ART_OFERTA_Mensal_Eixo_min_princ_;} else { var FSE_ART_OFERTA_Mensal_Eixo_max_secon__=FSE_ART_OFERTA_Mensal_Eixo_max_secon_;}
    }



    var GRAFICO_FSE_RESULT_MENSAL_COMP_024=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_024').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_024=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_024, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label: 'Art. Oferta(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   data: [
                       FSE_ART_OFERTA_ANO_N_JANEIRO_ACUM,
                       FSE_ART_OFERTA_ANO_N_FEVEREIRO_ACUM,
                       FSE_ART_OFERTA_ANO_N_MARCO_ACUM,
                       FSE_ART_OFERTA_ANO_N_ABRIL_ACUM,
                       FSE_ART_OFERTA_ANO_N_MAIO_ACUM,
                       FSE_ART_OFERTA_ANO_N_JUNHO_ACUM,
                       FSE_ART_OFERTA_ANO_N_JULHO_ACUM,
                       FSE_ART_OFERTA_ANO_N_AGOSTO_ACUM,
                       FSE_ART_OFERTA_ANO_N_SETEMBRO_ACUM,
                       FSE_ART_OFERTA_ANO_N_OUTUBRO_ACUM,
                       FSE_ART_OFERTA_ANO_N_NOVEMBRO_ACUM,
                       FSE_ART_OFERTA_ANO_N_DEZEMBRO_ACUM,
                   ],
                   type: 'line'


               },
                              {
                                  label: 'Art. Oferta(ac) ' + ANO_VERSAO_ANTE_,
                                  yAxisID: 'A',
                                  //backgroundColor: 'rgb(201, 10, 10)',
                                  borderColor: 'rgb(0,221,0)',
                                  data: [
                       FSE_ART_OFERTA_ANO_N_1_JANEIRO_ACUM,
                       FSE_ART_OFERTA_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_ART_OFERTA_ANO_N_1_MARCO_ACUM,
                       FSE_ART_OFERTA_ANO_N_1_ABRIL_ACUM,
                       FSE_ART_OFERTA_ANO_N_1_MAIO_ACUM,
                       FSE_ART_OFERTA_ANO_N_1_JUNHO_ACUM,
                       FSE_ART_OFERTA_ANO_N_1_JULHO_ACUM,
                       FSE_ART_OFERTA_ANO_N_1_AGOSTO_ACUM,
                       FSE_ART_OFERTA_ANO_N_1_SETEMBRO_ACUM,
                       FSE_ART_OFERTA_ANO_N_1_OUTUBRO_ACUM,
                       FSE_ART_OFERTA_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_ART_OFERTA_ANO_N_1_DEZEMBRO_ACUM,
                                  ],
                                  type: 'line'


                              },
                {
                    label:  'Art. Oferta(m) ' + ANO_VERSAO_REAL_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(250 , 83 , 0, 0.5)',
                    borderColor: 'rgba(250 , 83 , 0, 0.5)',
                    data: [
                  FSE_ART_OFERTA_ANO_N_JANEIRO ,
                  FSE_ART_OFERTA_ANO_N_FEVEREIRO ,
                  FSE_ART_OFERTA_ANO_N_MARCO ,
                  FSE_ART_OFERTA_ANO_N_ABRIL,
                  FSE_ART_OFERTA_ANO_N_MAIO ,
                  FSE_ART_OFERTA_ANO_N_JUNHO ,
                  FSE_ART_OFERTA_ANO_N_JULHO ,
                  FSE_ART_OFERTA_ANO_N_AGOSTO ,
                  FSE_ART_OFERTA_ANO_N_SETEMBRO ,
                  FSE_ART_OFERTA_ANO_N_OUTUBRO ,
                  FSE_ART_OFERTA_ANO_N_NOVEMBRO ,
                  FSE_ART_OFERTA_ANO_N_DEZEMBRO ,
                    ],
                },
                {
                    label:  'Art. Oferta(m) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(0,221,0, 0.4)',
                    borderColor: 'rgba(0,221,0, 0.4)',
                    data: [
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_JANEIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_FEVEREIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_MARCO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_ABRIL"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_MAIO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_JUNHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_JULHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_AGOSTO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_SETEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_OUTUBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_NOVEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ART_OFERTA_ANO_N_1_DEZEMBRO"]))),
                    ],
                },


            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_ART_OFERTA_MENSAL_1',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                min:  Math.round(FSE_ART_OFERTA_Mensal_Eixo_min_princ__,0),
                                                max:  Math.round(FSE_ART_OFERTA_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString();
                                                }
                                            }
                                        },

                    { id: 'B',
                        type: 'linear',
                        position: 'right',
                        ticks: {
                            min: Math.round(FSE_ART_OFERTA_Mensal_Eixo_min_secon__,0),
                            max:  Math.round(FSE_ART_OFERTA_Mensal_Eixo_max_secon__,0),
                            beginAtZero: false,
                            callback: function(value, index, values) {
                                return value.toLocaleString();
                            }
                        }
                    },






                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_025-----------------------------------------------------------*@
<script>

    var IND_VN_ANO_N_JANEIRO_ACUM = IND_VN_ANO_N_JANEIRO;
    var IND_VN_ANO_N_FEVEREIRO_ACUM = IND_VN_ANO_N_FEVEREIRO + IND_VN_ANO_N_JANEIRO_ACUM;
    var IND_VN_ANO_N_MARCO_ACUM = IND_VN_ANO_N_MARCO + IND_VN_ANO_N_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_ABRIL_ACUM = IND_VN_ANO_N_ABRIL + IND_VN_ANO_N_MARCO_ACUM;
    var IND_VN_ANO_N_MAIO_ACUM = IND_VN_ANO_N_MAIO + IND_VN_ANO_N_ABRIL_ACUM;
    var IND_VN_ANO_N_JUNHO_ACUM = IND_VN_ANO_N_JUNHO + IND_VN_ANO_N_MAIO_ACUM;
    var IND_VN_ANO_N_JULHO_ACUM = IND_VN_ANO_N_JULHO + IND_VN_ANO_N_JUNHO_ACUM;
    var IND_VN_ANO_N_AGOSTO_ACUM = IND_VN_ANO_N_AGOSTO + IND_VN_ANO_N_JULHO_ACUM;
    var IND_VN_ANO_N_SETEMBRO_ACUM = IND_VN_ANO_N_SETEMBRO + IND_VN_ANO_N_AGOSTO_ACUM;
    var IND_VN_ANO_N_OUTUBRO_ACUM = IND_VN_ANO_N_OUTUBRO + IND_VN_ANO_N_SETEMBRO_ACUM;
    var IND_VN_ANO_N_NOVEMBRO_ACUM = IND_VN_ANO_N_NOVEMBRO + IND_VN_ANO_N_OUTUBRO_ACUM;
    var IND_VN_ANO_N_DEZEMBRO_ACUM = IND_VN_ANO_N_DEZEMBRO + IND_VN_ANO_N_NOVEMBRO_ACUM;



    var IND_VN_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JANEIRO"])));
    var IND_VN_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_FEVEREIRO"]))) + IND_VN_ANO_N_1_JANEIRO_ACUM;
    var IND_VN_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MARCO"]))) + IND_VN_ANO_N_1_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_ABRIL"]))) + IND_VN_ANO_N_1_MARCO_ACUM;
    var IND_VN_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MAIO"]))) + IND_VN_ANO_N_1_ABRIL_ACUM;
    var IND_VN_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JUNHO"]))) + IND_VN_ANO_N_1_MAIO_ACUM;
    var IND_VN_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JULHO"]))) + IND_VN_ANO_N_1_JUNHO_ACUM;
    var IND_VN_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_AGOSTO"]))) + IND_VN_ANO_N_1_JULHO_ACUM;
    var IND_VN_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_SETEMBRO"]))) + IND_VN_ANO_N_1_AGOSTO_ACUM;
    var IND_VN_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_OUTUBRO"]))) + IND_VN_ANO_N_1_SETEMBRO_ACUM;
    var IND_VN_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_NOVEMBRO"]))) + IND_VN_ANO_N_1_OUTUBRO_ACUM;
    var IND_VN_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_DEZEMBRO"]))) + IND_VN_ANO_N_1_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_ART_OFERTA_VN_ANO_N_JANEIRO_ACUM = 'nd'; var PESO_FSE_ART_OFERTA_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ART_OFERTA_VN_ANO_N_JANEIRO_ACUM= FSE_ART_OFERTA_ANO_N_JANEIRO_ACUM/IND_VN_ANO_N_JANEIRO_ACUM*100; var PESO_FSE_ART_OFERTA_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = PESO_FSE_ART_OFERTA_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_ART_OFERTA_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_ART_OFERTA_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ART_OFERTA_VN_ANO_N_FEVEREIRO_ACUM= FSE_ART_OFERTA_ANO_N_FEVEREIRO_ACUM/IND_VN_ANO_N_FEVEREIRO_ACUM*100; var PESO_FSE_ART_OFERTA_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_ART_OFERTA_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_ART_OFERTA_VN_ANO_N_MARCO_ACUM = 'nd'; var PESO_FSE_ART_OFERTA_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ART_OFERTA_VN_ANO_N_MARCO_ACUM= FSE_ART_OFERTA_ANO_N_MARCO_ACUM/IND_VN_ANO_N_MARCO_ACUM*100; var PESO_FSE_ART_OFERTA_VN_ANO_N_MARCO_ACUM_MAX_MIN = PESO_FSE_ART_OFERTA_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_ART_OFERTA_VN_ANO_N_ABRIL_ACUM = 'nd'; var PESO_FSE_ART_OFERTA_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ART_OFERTA_VN_ANO_N_ABRIL_ACUM= FSE_ART_OFERTA_ANO_N_ABRIL_ACUM/IND_VN_ANO_N_ABRIL_ACUM*100; var PESO_FSE_ART_OFERTA_VN_ANO_N_ABRIL_ACUM_MAX_MIN = PESO_FSE_ART_OFERTA_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_ART_OFERTA_VN_ANO_N_MAIO_ACUM = 'nd'; var PESO_FSE_ART_OFERTA_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ART_OFERTA_VN_ANO_N_MAIO_ACUM= FSE_ART_OFERTA_ANO_N_MAIO_ACUM/IND_VN_ANO_N_MAIO_ACUM*100; var PESO_FSE_ART_OFERTA_VN_ANO_N_MAIO_ACUM_MAX_MIN = PESO_FSE_ART_OFERTA_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_ART_OFERTA_VN_ANO_N_JUNHO_ACUM = 'nd'; var PESO_FSE_ART_OFERTA_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ART_OFERTA_VN_ANO_N_JUNHO_ACUM= FSE_ART_OFERTA_ANO_N_JUNHO_ACUM/IND_VN_ANO_N_JUNHO_ACUM*100; var PESO_FSE_ART_OFERTA_VN_ANO_N_JUNHO_ACUM_MAX_MIN = PESO_FSE_ART_OFERTA_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_ART_OFERTA_VN_ANO_N_JULHO_ACUM = 'nd'; var PESO_FSE_ART_OFERTA_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ART_OFERTA_VN_ANO_N_JULHO_ACUM= FSE_ART_OFERTA_ANO_N_JULHO_ACUM/IND_VN_ANO_N_JULHO_ACUM*100; var PESO_FSE_ART_OFERTA_VN_ANO_N_JULHO_ACUM_MAX_MIN = PESO_FSE_ART_OFERTA_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_ART_OFERTA_VN_ANO_N_AGOSTO_ACUM = 'nd'; var PESO_FSE_ART_OFERTA_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ART_OFERTA_VN_ANO_N_AGOSTO_ACUM= FSE_ART_OFERTA_ANO_N_AGOSTO_ACUM/IND_VN_ANO_N_AGOSTO_ACUM*100; var PESO_FSE_ART_OFERTA_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = PESO_FSE_ART_OFERTA_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_ART_OFERTA_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var PESO_FSE_ART_OFERTA_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ART_OFERTA_VN_ANO_N_SETEMBRO_ACUM= FSE_ART_OFERTA_ANO_N_SETEMBRO_ACUM/IND_VN_ANO_N_SETEMBRO_ACUM*100; var PESO_FSE_ART_OFERTA_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_ART_OFERTA_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_ART_OFERTA_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var PESO_FSE_ART_OFERTA_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ART_OFERTA_VN_ANO_N_OUTUBRO_ACUM= FSE_ART_OFERTA_ANO_N_OUTUBRO_ACUM/IND_VN_ANO_N_OUTUBRO_ACUM*100; var PESO_FSE_ART_OFERTA_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_ART_OFERTA_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_ART_OFERTA_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_ART_OFERTA_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ART_OFERTA_VN_ANO_N_NOVEMBRO_ACUM= FSE_ART_OFERTA_ANO_N_NOVEMBRO_ACUM/IND_VN_ANO_N_NOVEMBRO_ACUM*100; var PESO_FSE_ART_OFERTA_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_ART_OFERTA_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_ART_OFERTA_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_ART_OFERTA_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ART_OFERTA_VN_ANO_N_DEZEMBRO_ACUM= FSE_ART_OFERTA_ANO_N_DEZEMBRO_ACUM/IND_VN_ANO_N_DEZEMBRO_ACUM*100; var PESO_FSE_ART_OFERTA_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_ART_OFERTA_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_ART_OFERTA_VN_ANO_N_1_JANEIRO_ACUM = 'nd'; var PESO_FSE_ART_OFERTA_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ART_OFERTA_VN_ANO_N_1_JANEIRO_ACUM= FSE_ART_OFERTA_ANO_N_1_JANEIRO_ACUM/IND_VN_ANO_N_1_JANEIRO_ACUM*100; var PESO_FSE_ART_OFERTA_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = PESO_FSE_ART_OFERTA_VN_ANO_N_1_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_ART_OFERTA_VN_ANO_N_1_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_ART_OFERTA_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ART_OFERTA_VN_ANO_N_1_FEVEREIRO_ACUM= FSE_ART_OFERTA_ANO_N_1_FEVEREIRO_ACUM/IND_VN_ANO_N_1_FEVEREIRO_ACUM*100; var PESO_FSE_ART_OFERTA_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_ART_OFERTA_VN_ANO_N_1_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_ART_OFERTA_VN_ANO_N_1_MARCO_ACUM = 'nd'; var PESO_FSE_ART_OFERTA_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ART_OFERTA_VN_ANO_N_1_MARCO_ACUM= FSE_ART_OFERTA_ANO_N_1_MARCO_ACUM/IND_VN_ANO_N_1_MARCO_ACUM*100; var PESO_FSE_ART_OFERTA_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = PESO_FSE_ART_OFERTA_VN_ANO_N_1_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_ART_OFERTA_VN_ANO_N_1_ABRIL_ACUM = 'nd'; var PESO_FSE_ART_OFERTA_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ART_OFERTA_VN_ANO_N_1_ABRIL_ACUM= FSE_ART_OFERTA_ANO_N_1_ABRIL_ACUM/IND_VN_ANO_N_1_ABRIL_ACUM*100; var PESO_FSE_ART_OFERTA_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = PESO_FSE_ART_OFERTA_VN_ANO_N_1_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_ART_OFERTA_VN_ANO_N_1_MAIO_ACUM = 'nd'; var PESO_FSE_ART_OFERTA_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ART_OFERTA_VN_ANO_N_1_MAIO_ACUM= FSE_ART_OFERTA_ANO_N_1_MAIO_ACUM/IND_VN_ANO_N_1_MAIO_ACUM*100; var PESO_FSE_ART_OFERTA_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = PESO_FSE_ART_OFERTA_VN_ANO_N_1_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_ART_OFERTA_VN_ANO_N_1_JUNHO_ACUM = 'nd'; var PESO_FSE_ART_OFERTA_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ART_OFERTA_VN_ANO_N_1_JUNHO_ACUM= FSE_ART_OFERTA_ANO_N_1_JUNHO_ACUM/IND_VN_ANO_N_1_JUNHO_ACUM*100; var PESO_FSE_ART_OFERTA_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = PESO_FSE_ART_OFERTA_VN_ANO_N_1_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_ART_OFERTA_VN_ANO_N_1_JULHO_ACUM = 'nd'; var PESO_FSE_ART_OFERTA_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ART_OFERTA_VN_ANO_N_1_JULHO_ACUM= FSE_ART_OFERTA_ANO_N_1_JULHO_ACUM/IND_VN_ANO_N_1_JULHO_ACUM*100; var PESO_FSE_ART_OFERTA_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = PESO_FSE_ART_OFERTA_VN_ANO_N_1_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_ART_OFERTA_VN_ANO_N_1_AGOSTO_ACUM = 'nd'; var PESO_FSE_ART_OFERTA_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ART_OFERTA_VN_ANO_N_1_AGOSTO_ACUM= FSE_ART_OFERTA_ANO_N_1_AGOSTO_ACUM/IND_VN_ANO_N_1_AGOSTO_ACUM*100; var PESO_FSE_ART_OFERTA_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = PESO_FSE_ART_OFERTA_VN_ANO_N_1_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_ART_OFERTA_VN_ANO_N_1_SETEMBRO_ACUM = 'nd'; var PESO_FSE_ART_OFERTA_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ART_OFERTA_VN_ANO_N_1_SETEMBRO_ACUM= FSE_ART_OFERTA_ANO_N_1_SETEMBRO_ACUM/IND_VN_ANO_N_1_SETEMBRO_ACUM*100; var PESO_FSE_ART_OFERTA_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_ART_OFERTA_VN_ANO_N_1_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_ART_OFERTA_VN_ANO_N_1_OUTUBRO_ACUM = 'nd'; var PESO_FSE_ART_OFERTA_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ART_OFERTA_VN_ANO_N_1_OUTUBRO_ACUM= FSE_ART_OFERTA_ANO_N_1_OUTUBRO_ACUM/IND_VN_ANO_N_1_OUTUBRO_ACUM*100; var PESO_FSE_ART_OFERTA_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_ART_OFERTA_VN_ANO_N_1_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_ART_OFERTA_VN_ANO_N_1_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_ART_OFERTA_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ART_OFERTA_VN_ANO_N_1_NOVEMBRO_ACUM= FSE_ART_OFERTA_ANO_N_1_NOVEMBRO_ACUM/IND_VN_ANO_N_1_NOVEMBRO_ACUM*100; var PESO_FSE_ART_OFERTA_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_ART_OFERTA_VN_ANO_N_1_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_ART_OFERTA_VN_ANO_N_1_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_ART_OFERTA_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ART_OFERTA_VN_ANO_N_1_DEZEMBRO_ACUM= FSE_ART_OFERTA_ANO_N_1_DEZEMBRO_ACUM/IND_VN_ANO_N_1_DEZEMBRO_ACUM*100; var PESO_FSE_ART_OFERTA_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_ART_OFERTA_VN_ANO_N_1_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_VN_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JANEIRO_ACUM= ((IND_VN_ANO_N_JANEIRO_ACUM-IND_VN_ANO_N_1_JANEIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_JANEIRO_ACUM))*100; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_FEVEREIRO_ACUM= ((IND_VN_ANO_N_FEVEREIRO_ACUM-IND_VN_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_VN_ANO_N_MARCO_ACUM = 'nd'; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MARCO_ACUM= ((IND_VN_ANO_N_MARCO_ACUM-IND_VN_ANO_N_1_MARCO_ACUM)/Math.abs(IND_VN_ANO_N_1_MARCO_ACUM))*100; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = VAR_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_VN_ANO_N_ABRIL_ACUM = 'nd'; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_ABRIL_ACUM= ((IND_VN_ANO_N_ABRIL_ACUM-IND_VN_ANO_N_1_ABRIL_ACUM)/Math.abs(IND_VN_ANO_N_1_ABRIL_ACUM))*100; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_VN_ANO_N_MAIO_ACUM = 'nd'; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MAIO_ACUM= ((IND_VN_ANO_N_MAIO_ACUM-IND_VN_ANO_N_1_MAIO_ACUM)/Math.abs(IND_VN_ANO_N_1_MAIO_ACUM))*100; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = VAR_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_VN_ANO_N_JUNHO_ACUM = 'nd'; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JUNHO_ACUM= ((IND_VN_ANO_N_JUNHO_ACUM-IND_VN_ANO_N_1_JUNHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JUNHO_ACUM))*100; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_VN_ANO_N_JULHO_ACUM = 'nd'; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JULHO_ACUM= ((IND_VN_ANO_N_JULHO_ACUM-IND_VN_ANO_N_1_JULHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JULHO_ACUM))*100; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_VN_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_AGOSTO_ACUM= ((IND_VN_ANO_N_AGOSTO_ACUM-IND_VN_ANO_N_1_AGOSTO_ACUM)/Math.abs(IND_VN_ANO_N_1_AGOSTO_ACUM))*100; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_SETEMBRO_ACUM= ((IND_VN_ANO_N_SETEMBRO_ACUM-IND_VN_ANO_N_1_SETEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_OUTUBRO_ACUM= ((IND_VN_ANO_N_OUTUBRO_ACUM-IND_VN_ANO_N_1_OUTUBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_NOVEMBRO_ACUM= ((IND_VN_ANO_N_NOVEMBRO_ACUM-IND_VN_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_DEZEMBRO_ACUM= ((IND_VN_ANO_N_DEZEMBRO_ACUM-IND_VN_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_FSE_ART_OFERTA_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_FSE_ART_OFERTA_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ART_OFERTA_ANO_N_JANEIRO_ACUM= ((FSE_ART_OFERTA_ANO_N_JANEIRO_ACUM-FSE_ART_OFERTA_ANO_N_1_JANEIRO_ACUM)/Math.abs(FSE_ART_OFERTA_ANO_N_1_JANEIRO_ACUM))*100; var VAR_FSE_ART_OFERTA_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_FSE_ART_OFERTA_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_FSE_ART_OFERTA_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_FSE_ART_OFERTA_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ART_OFERTA_ANO_N_FEVEREIRO_ACUM= ((FSE_ART_OFERTA_ANO_N_FEVEREIRO_ACUM-FSE_ART_OFERTA_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(FSE_ART_OFERTA_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_FSE_ART_OFERTA_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_FSE_ART_OFERTA_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_FSE_ART_OFERTA_ANO_N_MARCO_ACUM = 'nd'; var VAR_FSE_ART_OFERTA_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ART_OFERTA_ANO_N_MARCO_ACUM= ((FSE_ART_OFERTA_ANO_N_MARCO_ACUM-FSE_ART_OFERTA_ANO_N_1_MARCO_ACUM)/Math.abs(FSE_ART_OFERTA_ANO_N_1_MARCO_ACUM))*100; var VAR_FSE_ART_OFERTA_ANO_N_MARCO_ACUM_MAX_MIN = VAR_FSE_ART_OFERTA_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_FSE_ART_OFERTA_ANO_N_ABRIL_ACUM = 'nd'; var VAR_FSE_ART_OFERTA_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ART_OFERTA_ANO_N_ABRIL_ACUM= ((FSE_ART_OFERTA_ANO_N_ABRIL_ACUM-FSE_ART_OFERTA_ANO_N_1_ABRIL_ACUM)/Math.abs(FSE_ART_OFERTA_ANO_N_1_ABRIL_ACUM))*100; var VAR_FSE_ART_OFERTA_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_FSE_ART_OFERTA_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_FSE_ART_OFERTA_ANO_N_MAIO_ACUM = 'nd'; var VAR_FSE_ART_OFERTA_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ART_OFERTA_ANO_N_MAIO_ACUM= ((FSE_ART_OFERTA_ANO_N_MAIO_ACUM-FSE_ART_OFERTA_ANO_N_1_MAIO_ACUM)/Math.abs(FSE_ART_OFERTA_ANO_N_1_MAIO_ACUM))*100; var VAR_FSE_ART_OFERTA_ANO_N_MAIO_ACUM_MAX_MIN = VAR_FSE_ART_OFERTA_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_FSE_ART_OFERTA_ANO_N_JUNHO_ACUM = 'nd'; var VAR_FSE_ART_OFERTA_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ART_OFERTA_ANO_N_JUNHO_ACUM= ((FSE_ART_OFERTA_ANO_N_JUNHO_ACUM-FSE_ART_OFERTA_ANO_N_1_JUNHO_ACUM)/Math.abs(FSE_ART_OFERTA_ANO_N_1_JUNHO_ACUM))*100; var VAR_FSE_ART_OFERTA_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_FSE_ART_OFERTA_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_FSE_ART_OFERTA_ANO_N_JULHO_ACUM = 'nd'; var VAR_FSE_ART_OFERTA_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ART_OFERTA_ANO_N_JULHO_ACUM= ((FSE_ART_OFERTA_ANO_N_JULHO_ACUM-FSE_ART_OFERTA_ANO_N_1_JULHO_ACUM)/Math.abs(FSE_ART_OFERTA_ANO_N_1_JULHO_ACUM))*100; var VAR_FSE_ART_OFERTA_ANO_N_JULHO_ACUM_MAX_MIN = VAR_FSE_ART_OFERTA_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_FSE_ART_OFERTA_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_FSE_ART_OFERTA_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ART_OFERTA_ANO_N_AGOSTO_ACUM= ((FSE_ART_OFERTA_ANO_N_AGOSTO_ACUM-FSE_ART_OFERTA_ANO_N_1_AGOSTO_ACUM)/Math.abs(FSE_ART_OFERTA_ANO_N_1_AGOSTO_ACUM))*100; var VAR_FSE_ART_OFERTA_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_FSE_ART_OFERTA_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_FSE_ART_OFERTA_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_FSE_ART_OFERTA_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ART_OFERTA_ANO_N_SETEMBRO_ACUM= ((FSE_ART_OFERTA_ANO_N_SETEMBRO_ACUM-FSE_ART_OFERTA_ANO_N_1_SETEMBRO_ACUM)/Math.abs(FSE_ART_OFERTA_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_FSE_ART_OFERTA_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_FSE_ART_OFERTA_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_FSE_ART_OFERTA_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_FSE_ART_OFERTA_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ART_OFERTA_ANO_N_OUTUBRO_ACUM= ((FSE_ART_OFERTA_ANO_N_OUTUBRO_ACUM-FSE_ART_OFERTA_ANO_N_1_OUTUBRO_ACUM)/Math.abs(FSE_ART_OFERTA_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_FSE_ART_OFERTA_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_FSE_ART_OFERTA_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_FSE_ART_OFERTA_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_FSE_ART_OFERTA_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ART_OFERTA_ANO_N_NOVEMBRO_ACUM= ((FSE_ART_OFERTA_ANO_N_NOVEMBRO_ACUM-FSE_ART_OFERTA_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(FSE_ART_OFERTA_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_FSE_ART_OFERTA_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_FSE_ART_OFERTA_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_FSE_ART_OFERTA_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_FSE_ART_OFERTA_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ART_OFERTA_ANO_N_DEZEMBRO_ACUM= ((FSE_ART_OFERTA_ANO_N_DEZEMBRO_ACUM-FSE_ART_OFERTA_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(FSE_ART_OFERTA_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_FSE_ART_OFERTA_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_FSE_ART_OFERTA_ANO_N_DEZEMBRO_ACUM };

    if( PESO_FSE_ART_OFERTA_VN_ANO_N_1_JANEIRO_ACUM > PESO_FSE_ART_OFERTA_VN_ANO_N_JANEIRO_ACUM) { var  INEFICIENCIA_FSE_ART_OFERTA_ANO_N_JANEIRO_ACUM=PESO_FSE_ART_OFERTA_VN_ANO_N_1_JANEIRO_ACUM ; } else { var  INEFICIENCIA_FSE_ART_OFERTA_ANO_N_JANEIRO_ACUM=PESO_FSE_ART_OFERTA_VN_ANO_N_JANEIRO_ACUM ; }
    if( PESO_FSE_ART_OFERTA_VN_ANO_N_1_FEVEREIRO_ACUM > PESO_FSE_ART_OFERTA_VN_ANO_N_FEVEREIRO_ACUM) { var  INEFICIENCIA_FSE_ART_OFERTA_ANO_N_FEVEREIRO_ACUM=PESO_FSE_ART_OFERTA_VN_ANO_N_1_FEVEREIRO_ACUM ; } else { var  INEFICIENCIA_FSE_ART_OFERTA_ANO_N_FEVEREIRO_ACUM=PESO_FSE_ART_OFERTA_VN_ANO_N_FEVEREIRO_ACUM ; }
    if( PESO_FSE_ART_OFERTA_VN_ANO_N_1_MARCO_ACUM > PESO_FSE_ART_OFERTA_VN_ANO_N_MARCO_ACUM) { var  INEFICIENCIA_FSE_ART_OFERTA_ANO_N_MARCO_ACUM=PESO_FSE_ART_OFERTA_VN_ANO_N_1_MARCO_ACUM ; } else { var  INEFICIENCIA_FSE_ART_OFERTA_ANO_N_MARCO_ACUM=PESO_FSE_ART_OFERTA_VN_ANO_N_MARCO_ACUM ; }
    if( PESO_FSE_ART_OFERTA_VN_ANO_N_1_ABRIL_ACUM > PESO_FSE_ART_OFERTA_VN_ANO_N_ABRIL_ACUM) { var  INEFICIENCIA_FSE_ART_OFERTA_ANO_N_ABRIL_ACUM=PESO_FSE_ART_OFERTA_VN_ANO_N_1_ABRIL_ACUM ; } else { var  INEFICIENCIA_FSE_ART_OFERTA_ANO_N_ABRIL_ACUM=PESO_FSE_ART_OFERTA_VN_ANO_N_ABRIL_ACUM ; }
    if( PESO_FSE_ART_OFERTA_VN_ANO_N_1_MAIO_ACUM > PESO_FSE_ART_OFERTA_VN_ANO_N_MAIO_ACUM) { var  INEFICIENCIA_FSE_ART_OFERTA_ANO_N_MAIO_ACUM=PESO_FSE_ART_OFERTA_VN_ANO_N_1_MAIO_ACUM ; } else { var  INEFICIENCIA_FSE_ART_OFERTA_ANO_N_MAIO_ACUM=PESO_FSE_ART_OFERTA_VN_ANO_N_MAIO_ACUM ; }
    if( PESO_FSE_ART_OFERTA_VN_ANO_N_1_JUNHO_ACUM > PESO_FSE_ART_OFERTA_VN_ANO_N_JUNHO_ACUM) { var  INEFICIENCIA_FSE_ART_OFERTA_ANO_N_JUNHO_ACUM=PESO_FSE_ART_OFERTA_VN_ANO_N_1_JUNHO_ACUM ; } else { var  INEFICIENCIA_FSE_ART_OFERTA_ANO_N_JUNHO_ACUM=PESO_FSE_ART_OFERTA_VN_ANO_N_JUNHO_ACUM ; }
    if( PESO_FSE_ART_OFERTA_VN_ANO_N_1_JULHO_ACUM > PESO_FSE_ART_OFERTA_VN_ANO_N_JULHO_ACUM) { var  INEFICIENCIA_FSE_ART_OFERTA_ANO_N_JULHO_ACUM=PESO_FSE_ART_OFERTA_VN_ANO_N_1_JULHO_ACUM ; } else { var  INEFICIENCIA_FSE_ART_OFERTA_ANO_N_JULHO_ACUM=PESO_FSE_ART_OFERTA_VN_ANO_N_JULHO_ACUM ; }
    if( PESO_FSE_ART_OFERTA_VN_ANO_N_1_AGOSTO_ACUM > PESO_FSE_ART_OFERTA_VN_ANO_N_AGOSTO_ACUM) { var  INEFICIENCIA_FSE_ART_OFERTA_ANO_N_AGOSTO_ACUM=PESO_FSE_ART_OFERTA_VN_ANO_N_1_AGOSTO_ACUM ; } else { var  INEFICIENCIA_FSE_ART_OFERTA_ANO_N_AGOSTO_ACUM=PESO_FSE_ART_OFERTA_VN_ANO_N_AGOSTO_ACUM ; }
    if( PESO_FSE_ART_OFERTA_VN_ANO_N_1_SETEMBRO_ACUM > PESO_FSE_ART_OFERTA_VN_ANO_N_SETEMBRO_ACUM) { var  INEFICIENCIA_FSE_ART_OFERTA_ANO_N_SETEMBRO_ACUM=PESO_FSE_ART_OFERTA_VN_ANO_N_1_SETEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_ART_OFERTA_ANO_N_SETEMBRO_ACUM=PESO_FSE_ART_OFERTA_VN_ANO_N_SETEMBRO_ACUM ; }
    if( PESO_FSE_ART_OFERTA_VN_ANO_N_1_OUTUBRO_ACUM > PESO_FSE_ART_OFERTA_VN_ANO_N_OUTUBRO_ACUM) { var  INEFICIENCIA_FSE_ART_OFERTA_ANO_N_OUTUBRO_ACUM=PESO_FSE_ART_OFERTA_VN_ANO_N_1_OUTUBRO_ACUM ; } else { var  INEFICIENCIA_FSE_ART_OFERTA_ANO_N_OUTUBRO_ACUM=PESO_FSE_ART_OFERTA_VN_ANO_N_OUTUBRO_ACUM ; }
    if( PESO_FSE_ART_OFERTA_VN_ANO_N_1_NOVEMBRO_ACUM > PESO_FSE_ART_OFERTA_VN_ANO_N_NOVEMBRO_ACUM) { var  INEFICIENCIA_FSE_ART_OFERTA_ANO_N_NOVEMBRO_ACUM=PESO_FSE_ART_OFERTA_VN_ANO_N_1_NOVEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_ART_OFERTA_ANO_N_NOVEMBRO_ACUM=PESO_FSE_ART_OFERTA_VN_ANO_N_NOVEMBRO_ACUM ; }
    if( PESO_FSE_ART_OFERTA_VN_ANO_N_1_DEZEMBRO_ACUM > PESO_FSE_ART_OFERTA_VN_ANO_N_DEZEMBRO_ACUM) { var  INEFICIENCIA_FSE_ART_OFERTA_ANO_N_DEZEMBRO_ACUM=PESO_FSE_ART_OFERTA_VN_ANO_N_1_DEZEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_ART_OFERTA_ANO_N_DEZEMBRO_ACUM=PESO_FSE_ART_OFERTA_VN_ANO_N_DEZEMBRO_ACUM ; }



    var fillBetweenLinesPlugin = {
        afterDatasetsDraw: function (chart) {
            var ctx = chart.chart.ctx;
            var xaxis = chart.scales['x-axis-0'];
            var yaxis = chart.scales['y-axis-0'];
            var datasets = chart.data.datasets;
            ctx.save();

            for (var d = 0; d < datasets.length; d++) {
                var dataset = datasets[d];
                if (dataset.fillBetweenSet == undefined) {
                    continue;
                }

                // get meta for both data sets
                var meta1 = chart.getDatasetMeta(d);
                var meta2 = chart.getDatasetMeta(dataset.fillBetweenSet);

                // do not draw fill if one of the datasets is hidden
                if (meta1.hidden || meta2.hidden) continue;

                // create fill areas in pairs
                for (var p = 0; p < meta1.data.length-1;p++) {
                    // if null skip
                    if (dataset.data[p] == null || dataset.data[p+1] == null) continue;

                    ctx.beginPath();

                    // trace line 1
                    var curr = meta1.data[p];
                    var next = meta1.data[p+1];
                    ctx.moveTo(curr._view.x, curr._view.y);
                    ctx.lineTo(curr._view.x, curr._view.y);
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(next._view.x, curr._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        ctx.bezierCurveTo(
                          curr._view.controlPointNextX,
                          curr._view.controlPointNextY,
                          next._view.controlPointPreviousX,
                          next._view.controlPointPreviousY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // connect dataset1 to dataset2
                    var curr = meta2.data[p+1];
                    var next = meta2.data[p];
                    ctx.lineTo(curr._view.x, curr._view.y);

                    // trace BACKWORDS set2 to complete the box
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(curr._view.x, next._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        // reverse bezier
                        ctx.bezierCurveTo(
                          curr._view.controlPointPreviousX,
                          curr._view.controlPointPreviousY,
                          next._view.controlPointNextX,
                          next._view.controlPointNextY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // close the loop and fill with shading
                    ctx.closePath();
                    ctx.fillStyle = dataset.fillBetweenColor || "rgba(0,0,0,0.1)";
                    ctx.fill();
                } // end for p loop
            }
        } // end afterDatasetsDraw
    }; // end fillBetweenLinesPlugin

    Chart.pluginService.register(fillBetweenLinesPlugin);



    var GRAFICO_FSE_RESULT_MENSAL_COMP_025=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_025').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_025=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_025, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label:  'Peso Art. OfertavsVN(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   //borderColor: "#F00",
                   fill: false,
                   steppedLine: false,
                   tension: 0.5,
                   fillBetweenSet: 1,
                   fillBetweenColor: "rgba(0, 221, 0, 0.1)",
                   data: [
                   PESO_FSE_ART_OFERTA_VN_ANO_N_JANEIRO_ACUM,
                   PESO_FSE_ART_OFERTA_VN_ANO_N_FEVEREIRO_ACUM,
                   PESO_FSE_ART_OFERTA_VN_ANO_N_MARCO_ACUM,
                   PESO_FSE_ART_OFERTA_VN_ANO_N_ABRIL_ACUM,
                   PESO_FSE_ART_OFERTA_VN_ANO_N_MAIO_ACUM,
                   PESO_FSE_ART_OFERTA_VN_ANO_N_JUNHO_ACUM,
                   PESO_FSE_ART_OFERTA_VN_ANO_N_JULHO_ACUM,
                   PESO_FSE_ART_OFERTA_VN_ANO_N_AGOSTO_ACUM,
                   PESO_FSE_ART_OFERTA_VN_ANO_N_SETEMBRO_ACUM,
                   PESO_FSE_ART_OFERTA_VN_ANO_N_OUTUBRO_ACUM,
                   PESO_FSE_ART_OFERTA_VN_ANO_N_NOVEMBRO_ACUM,
                   PESO_FSE_ART_OFERTA_VN_ANO_N_DEZEMBRO_ACUM,

                   ],
                   type: 'line'


               },
                {
                    label: 'Peso Art. OfertavsVN(ac) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'A',
                    //backgroundColor: 'rgb(17, 121, 240)',
                    borderColor: 'rgb(0,221,0)',
                    //borderColor: "#00F",
                    fill: false,
                    steppedLine: false,
                    tension: 0.5,
                    data: [
                   PESO_FSE_ART_OFERTA_VN_ANO_N_1_JANEIRO_ACUM,
                   PESO_FSE_ART_OFERTA_VN_ANO_N_1_FEVEREIRO_ACUM,
                   PESO_FSE_ART_OFERTA_VN_ANO_N_1_MARCO_ACUM,
                   PESO_FSE_ART_OFERTA_VN_ANO_N_1_ABRIL_ACUM,
                   PESO_FSE_ART_OFERTA_VN_ANO_N_1_MAIO_ACUM,
                   PESO_FSE_ART_OFERTA_VN_ANO_N_1_JUNHO_ACUM,
                   PESO_FSE_ART_OFERTA_VN_ANO_N_1_JULHO_ACUM,
                   PESO_FSE_ART_OFERTA_VN_ANO_N_1_AGOSTO_ACUM,
                   PESO_FSE_ART_OFERTA_VN_ANO_N_1_SETEMBRO_ACUM,
                   PESO_FSE_ART_OFERTA_VN_ANO_N_1_OUTUBRO_ACUM,
                   PESO_FSE_ART_OFERTA_VN_ANO_N_1_NOVEMBRO_ACUM,
                   PESO_FSE_ART_OFERTA_VN_ANO_N_1_DEZEMBRO_ACUM,
                    ],
                    type: 'line'
                },
    {
        label: 'Ineficiência',
        yAxisID: 'A',
        backgroundColor: "rgba(255, 0, 0, 0.2)",
        borderColor: 'rgba(255, 255, 255, 0.1)',
        //borderColor: "#0D0",
        fill: false,
        steppedLine: false,
        tension: 0.5,
        fillBetweenSet: 1,
        fillBetweenColor: "rgba(255, 0, 0, 0.2)",
        data: [
    INEFICIENCIA_FSE_ART_OFERTA_ANO_N_JANEIRO_ACUM,
    INEFICIENCIA_FSE_ART_OFERTA_ANO_N_FEVEREIRO_ACUM,
    INEFICIENCIA_FSE_ART_OFERTA_ANO_N_MARCO_ACUM,
    INEFICIENCIA_FSE_ART_OFERTA_ANO_N_ABRIL_ACUM,
    INEFICIENCIA_FSE_ART_OFERTA_ANO_N_MAIO_ACUM,
    INEFICIENCIA_FSE_ART_OFERTA_ANO_N_JUNHO_ACUM,
    INEFICIENCIA_FSE_ART_OFERTA_ANO_N_JULHO_ACUM,
    INEFICIENCIA_FSE_ART_OFERTA_ANO_N_AGOSTO_ACUM,
    INEFICIENCIA_FSE_ART_OFERTA_ANO_N_SETEMBRO_ACUM,
    INEFICIENCIA_FSE_ART_OFERTA_ANO_N_OUTUBRO_ACUM,
    INEFICIENCIA_FSE_ART_OFERTA_ANO_N_NOVEMBRO_ACUM,
    INEFICIENCIA_FSE_ART_OFERTA_ANO_N_DEZEMBRO_ACUM,
        ],
        type: 'line'
    },

            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_Art. Oferta COMP',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                //min:  Math.round(FSE_ART_OFERTA_Mensal_Eixo_min_princ__,0),
                                                //max:  Math.round(FSE_ART_OFERTA_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString()+ "%";
                                                }
                                            }
                                        },







                ]
            }
        },

    });

</script>
@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_026-----------------------------------------------------------*@
<script>

    if(@ViewData["MES_ACUM_REAL"]<1){ var IND_VN_ANO_N_JANEIRO = 'nd'; var IND_VN_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JANEIRO"]))); var IND_VN_ANO_N_JANEIRO_MAX_MIN = IND_VN_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var IND_VN_ANO_N_FEVEREIRO = 'nd'; var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_FEVEREIRO"]))); var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = IND_VN_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var IND_VN_ANO_N_MARCO = 'nd'; var IND_VN_ANO_N_MARCO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MARCO"]))); var IND_VN_ANO_N_MARCO_MAX_MIN = IND_VN_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var IND_VN_ANO_N_ABRIL = 'nd'; var IND_VN_ANO_N_ABRIL_MAX_MIN = 0;  } else { var IND_VN_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_ABRIL"]))); var IND_VN_ANO_N_ABRIL_MAX_MIN = IND_VN_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var IND_VN_ANO_N_MAIO = 'nd'; var IND_VN_ANO_N_MAIO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MAIO"]))); var IND_VN_ANO_N_MAIO_MAX_MIN = IND_VN_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var IND_VN_ANO_N_JUNHO = 'nd'; var IND_VN_ANO_N_JUNHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JUNHO"]))); var IND_VN_ANO_N_JUNHO_MAX_MIN = IND_VN_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var IND_VN_ANO_N_JULHO = 'nd'; var IND_VN_ANO_N_JULHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JULHO"]))); var IND_VN_ANO_N_JULHO_MAX_MIN = IND_VN_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var IND_VN_ANO_N_AGOSTO = 'nd'; var IND_VN_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_AGOSTO"]))); var IND_VN_ANO_N_AGOSTO_MAX_MIN = IND_VN_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var IND_VN_ANO_N_SETEMBRO = 'nd'; var IND_VN_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_SETEMBRO"]))); var IND_VN_ANO_N_SETEMBRO_MAX_MIN = IND_VN_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var IND_VN_ANO_N_OUTUBRO = 'nd'; var IND_VN_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_OUTUBRO"]))); var IND_VN_ANO_N_OUTUBRO_MAX_MIN = IND_VN_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var IND_VN_ANO_N_NOVEMBRO = 'nd'; var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_NOVEMBRO"]))); var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = IND_VN_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var IND_VN_ANO_N_DEZEMBRO = 'nd'; var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_DEZEMBRO"]))); var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = IND_VN_ANO_N_DEZEMBRO };

    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_OUTROS_MATERIAIS_ANO_N_JANEIRO = 'nd'; var FSE_OUTROS_MATERIAIS_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var FSE_OUTROS_MATERIAIS_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_JANEIRO"]))); var FSE_OUTROS_MATERIAIS_ANO_N_JANEIRO_MAX_MIN = FSE_OUTROS_MATERIAIS_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_OUTROS_MATERIAIS_ANO_N_FEVEREIRO = 'nd'; var FSE_OUTROS_MATERIAIS_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var FSE_OUTROS_MATERIAIS_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_FEVEREIRO"]))); var FSE_OUTROS_MATERIAIS_ANO_N_FEVEREIRO_MAX_MIN = FSE_OUTROS_MATERIAIS_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_OUTROS_MATERIAIS_ANO_N_MARCO = 'nd'; var FSE_OUTROS_MATERIAIS_ANO_N_MARCO_MAX_MIN = 0;  } else { var FSE_OUTROS_MATERIAIS_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_MARCO"]))); var FSE_OUTROS_MATERIAIS_ANO_N_MARCO_MAX_MIN = FSE_OUTROS_MATERIAIS_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_OUTROS_MATERIAIS_ANO_N_ABRIL = 'nd'; var FSE_OUTROS_MATERIAIS_ANO_N_ABRIL_MAX_MIN = 0;  } else { var FSE_OUTROS_MATERIAIS_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_ABRIL"]))); var FSE_OUTROS_MATERIAIS_ANO_N_ABRIL_MAX_MIN = FSE_OUTROS_MATERIAIS_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_OUTROS_MATERIAIS_ANO_N_MAIO = 'nd'; var FSE_OUTROS_MATERIAIS_ANO_N_MAIO_MAX_MIN = 0;  } else { var FSE_OUTROS_MATERIAIS_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_MAIO"]))); var FSE_OUTROS_MATERIAIS_ANO_N_MAIO_MAX_MIN = FSE_OUTROS_MATERIAIS_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_OUTROS_MATERIAIS_ANO_N_JUNHO = 'nd'; var FSE_OUTROS_MATERIAIS_ANO_N_JUNHO_MAX_MIN = 0;  } else { var FSE_OUTROS_MATERIAIS_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_JUNHO"]))); var FSE_OUTROS_MATERIAIS_ANO_N_JUNHO_MAX_MIN = FSE_OUTROS_MATERIAIS_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_OUTROS_MATERIAIS_ANO_N_JULHO = 'nd'; var FSE_OUTROS_MATERIAIS_ANO_N_JULHO_MAX_MIN = 0;  } else { var FSE_OUTROS_MATERIAIS_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_JULHO"]))); var FSE_OUTROS_MATERIAIS_ANO_N_JULHO_MAX_MIN = FSE_OUTROS_MATERIAIS_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_OUTROS_MATERIAIS_ANO_N_AGOSTO = 'nd'; var FSE_OUTROS_MATERIAIS_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var FSE_OUTROS_MATERIAIS_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_AGOSTO"]))); var FSE_OUTROS_MATERIAIS_ANO_N_AGOSTO_MAX_MIN = FSE_OUTROS_MATERIAIS_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_OUTROS_MATERIAIS_ANO_N_SETEMBRO = 'nd'; var FSE_OUTROS_MATERIAIS_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var FSE_OUTROS_MATERIAIS_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_SETEMBRO"]))); var FSE_OUTROS_MATERIAIS_ANO_N_SETEMBRO_MAX_MIN = FSE_OUTROS_MATERIAIS_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_OUTROS_MATERIAIS_ANO_N_OUTUBRO = 'nd'; var FSE_OUTROS_MATERIAIS_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var FSE_OUTROS_MATERIAIS_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_OUTUBRO"]))); var FSE_OUTROS_MATERIAIS_ANO_N_OUTUBRO_MAX_MIN = FSE_OUTROS_MATERIAIS_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_OUTROS_MATERIAIS_ANO_N_NOVEMBRO = 'nd'; var FSE_OUTROS_MATERIAIS_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var FSE_OUTROS_MATERIAIS_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_NOVEMBRO"]))); var FSE_OUTROS_MATERIAIS_ANO_N_NOVEMBRO_MAX_MIN = FSE_OUTROS_MATERIAIS_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_OUTROS_MATERIAIS_ANO_N_DEZEMBRO = 'nd'; var FSE_OUTROS_MATERIAIS_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var FSE_OUTROS_MATERIAIS_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_DEZEMBRO"]))); var FSE_OUTROS_MATERIAIS_ANO_N_DEZEMBRO_MAX_MIN = FSE_OUTROS_MATERIAIS_ANO_N_DEZEMBRO };


    var FSE_OUTROS_MATERIAIS_ANO_N_JANEIRO_ACUM = FSE_OUTROS_MATERIAIS_ANO_N_JANEIRO;
    var FSE_OUTROS_MATERIAIS_ANO_N_FEVEREIRO_ACUM = FSE_OUTROS_MATERIAIS_ANO_N_FEVEREIRO + FSE_OUTROS_MATERIAIS_ANO_N_JANEIRO_ACUM;
    var FSE_OUTROS_MATERIAIS_ANO_N_MARCO_ACUM = FSE_OUTROS_MATERIAIS_ANO_N_MARCO + FSE_OUTROS_MATERIAIS_ANO_N_FEVEREIRO_ACUM;
    var FSE_OUTROS_MATERIAIS_ANO_N_ABRIL_ACUM = FSE_OUTROS_MATERIAIS_ANO_N_ABRIL + FSE_OUTROS_MATERIAIS_ANO_N_MARCO_ACUM;
    var FSE_OUTROS_MATERIAIS_ANO_N_MAIO_ACUM = FSE_OUTROS_MATERIAIS_ANO_N_MAIO + FSE_OUTROS_MATERIAIS_ANO_N_ABRIL_ACUM;
    var FSE_OUTROS_MATERIAIS_ANO_N_JUNHO_ACUM = FSE_OUTROS_MATERIAIS_ANO_N_JUNHO + FSE_OUTROS_MATERIAIS_ANO_N_MAIO_ACUM;
    var FSE_OUTROS_MATERIAIS_ANO_N_JULHO_ACUM = FSE_OUTROS_MATERIAIS_ANO_N_JULHO + FSE_OUTROS_MATERIAIS_ANO_N_JUNHO_ACUM;
    var FSE_OUTROS_MATERIAIS_ANO_N_AGOSTO_ACUM = FSE_OUTROS_MATERIAIS_ANO_N_AGOSTO + FSE_OUTROS_MATERIAIS_ANO_N_JULHO_ACUM;
    var FSE_OUTROS_MATERIAIS_ANO_N_SETEMBRO_ACUM = FSE_OUTROS_MATERIAIS_ANO_N_SETEMBRO + FSE_OUTROS_MATERIAIS_ANO_N_AGOSTO_ACUM;
    var FSE_OUTROS_MATERIAIS_ANO_N_OUTUBRO_ACUM = FSE_OUTROS_MATERIAIS_ANO_N_OUTUBRO + FSE_OUTROS_MATERIAIS_ANO_N_SETEMBRO_ACUM;
    var FSE_OUTROS_MATERIAIS_ANO_N_NOVEMBRO_ACUM = FSE_OUTROS_MATERIAIS_ANO_N_NOVEMBRO + FSE_OUTROS_MATERIAIS_ANO_N_OUTUBRO_ACUM;
    var FSE_OUTROS_MATERIAIS_ANO_N_DEZEMBRO_ACUM = FSE_OUTROS_MATERIAIS_ANO_N_DEZEMBRO + FSE_OUTROS_MATERIAIS_ANO_N_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_OUTROS_MATERIAIS_ANO_N_JANEIRO_ACUM = 'nd'; var FSE_OUTROS_MATERIAIS_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_MATERIAIS_ANO_N_JANEIRO_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_JANEIRO_ACUM; var FSE_OUTROS_MATERIAIS_ANO_N_JANEIRO_ACUM_MAX_MIN = FSE_OUTROS_MATERIAIS_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_OUTROS_MATERIAIS_ANO_N_FEVEREIRO_ACUM = 'nd'; var FSE_OUTROS_MATERIAIS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_MATERIAIS_ANO_N_FEVEREIRO_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_FEVEREIRO_ACUM; var FSE_OUTROS_MATERIAIS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = FSE_OUTROS_MATERIAIS_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_OUTROS_MATERIAIS_ANO_N_MARCO_ACUM = 'nd'; var FSE_OUTROS_MATERIAIS_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_MATERIAIS_ANO_N_MARCO_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_MARCO_ACUM; var FSE_OUTROS_MATERIAIS_ANO_N_MARCO_ACUM_MAX_MIN = FSE_OUTROS_MATERIAIS_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_OUTROS_MATERIAIS_ANO_N_ABRIL_ACUM = 'nd'; var FSE_OUTROS_MATERIAIS_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_MATERIAIS_ANO_N_ABRIL_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_ABRIL_ACUM; var FSE_OUTROS_MATERIAIS_ANO_N_ABRIL_ACUM_MAX_MIN = FSE_OUTROS_MATERIAIS_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_OUTROS_MATERIAIS_ANO_N_MAIO_ACUM = 'nd'; var FSE_OUTROS_MATERIAIS_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_MATERIAIS_ANO_N_MAIO_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_MAIO_ACUM; var FSE_OUTROS_MATERIAIS_ANO_N_MAIO_ACUM_MAX_MIN = FSE_OUTROS_MATERIAIS_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_OUTROS_MATERIAIS_ANO_N_JUNHO_ACUM = 'nd'; var FSE_OUTROS_MATERIAIS_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_MATERIAIS_ANO_N_JUNHO_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_JUNHO_ACUM; var FSE_OUTROS_MATERIAIS_ANO_N_JUNHO_ACUM_MAX_MIN = FSE_OUTROS_MATERIAIS_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_OUTROS_MATERIAIS_ANO_N_JULHO_ACUM = 'nd'; var FSE_OUTROS_MATERIAIS_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_MATERIAIS_ANO_N_JULHO_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_JULHO_ACUM; var FSE_OUTROS_MATERIAIS_ANO_N_JULHO_ACUM_MAX_MIN = FSE_OUTROS_MATERIAIS_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_OUTROS_MATERIAIS_ANO_N_AGOSTO_ACUM = 'nd'; var FSE_OUTROS_MATERIAIS_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_MATERIAIS_ANO_N_AGOSTO_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_AGOSTO_ACUM; var FSE_OUTROS_MATERIAIS_ANO_N_AGOSTO_ACUM_MAX_MIN = FSE_OUTROS_MATERIAIS_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_OUTROS_MATERIAIS_ANO_N_SETEMBRO_ACUM = 'nd'; var FSE_OUTROS_MATERIAIS_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_MATERIAIS_ANO_N_SETEMBRO_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_SETEMBRO_ACUM; var FSE_OUTROS_MATERIAIS_ANO_N_SETEMBRO_ACUM_MAX_MIN = FSE_OUTROS_MATERIAIS_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_OUTROS_MATERIAIS_ANO_N_OUTUBRO_ACUM = 'nd'; var FSE_OUTROS_MATERIAIS_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_MATERIAIS_ANO_N_OUTUBRO_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_OUTUBRO_ACUM; var FSE_OUTROS_MATERIAIS_ANO_N_OUTUBRO_ACUM_MAX_MIN = FSE_OUTROS_MATERIAIS_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_OUTROS_MATERIAIS_ANO_N_NOVEMBRO_ACUM = 'nd'; var FSE_OUTROS_MATERIAIS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_MATERIAIS_ANO_N_NOVEMBRO_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_NOVEMBRO_ACUM; var FSE_OUTROS_MATERIAIS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = FSE_OUTROS_MATERIAIS_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_OUTROS_MATERIAIS_ANO_N_DEZEMBRO_ACUM = 'nd'; var FSE_OUTROS_MATERIAIS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_OUTROS_MATERIAIS_ANO_N_DEZEMBRO_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_DEZEMBRO_ACUM; var FSE_OUTROS_MATERIAIS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = FSE_OUTROS_MATERIAIS_ANO_N_DEZEMBRO_ACUM };




    var FSE_OUTROS_MATERIAIS_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_JANEIRO"])));
    var FSE_OUTROS_MATERIAIS_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_FEVEREIRO"]))) + FSE_OUTROS_MATERIAIS_ANO_N_1_JANEIRO_ACUM;
    var FSE_OUTROS_MATERIAIS_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_MARCO"]))) + FSE_OUTROS_MATERIAIS_ANO_N_1_FEVEREIRO_ACUM;
    var FSE_OUTROS_MATERIAIS_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_ABRIL"]))) + FSE_OUTROS_MATERIAIS_ANO_N_1_MARCO_ACUM;
    var FSE_OUTROS_MATERIAIS_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_MAIO"]))) + FSE_OUTROS_MATERIAIS_ANO_N_1_ABRIL_ACUM;
    var FSE_OUTROS_MATERIAIS_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_JUNHO"]))) + FSE_OUTROS_MATERIAIS_ANO_N_1_MAIO_ACUM;
    var FSE_OUTROS_MATERIAIS_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_JULHO"]))) + FSE_OUTROS_MATERIAIS_ANO_N_1_JUNHO_ACUM;
    var FSE_OUTROS_MATERIAIS_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_AGOSTO"]))) + FSE_OUTROS_MATERIAIS_ANO_N_1_JULHO_ACUM;
    var FSE_OUTROS_MATERIAIS_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_SETEMBRO"]))) + FSE_OUTROS_MATERIAIS_ANO_N_1_AGOSTO_ACUM;
    var FSE_OUTROS_MATERIAIS_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_OUTUBRO"]))) + FSE_OUTROS_MATERIAIS_ANO_N_1_SETEMBRO_ACUM;
    var FSE_OUTROS_MATERIAIS_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_NOVEMBRO"]))) + FSE_OUTROS_MATERIAIS_ANO_N_1_OUTUBRO_ACUM;
    var FSE_OUTROS_MATERIAIS_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_DEZEMBRO"]))) + FSE_OUTROS_MATERIAIS_ANO_N_1_NOVEMBRO_ACUM;


    var FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_princ= Math.max(
                       FSE_OUTROS_MATERIAIS_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_OUTROS_MATERIAIS_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_OUTROS_MATERIAIS_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_OUTROS_MATERIAIS_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_OUTROS_MATERIAIS_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_OUTROS_MATERIAIS_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_OUTROS_MATERIAIS_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_OUTROS_MATERIAIS_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_OUTROS_MATERIAIS_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_OUTROS_MATERIAIS_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_OUTROS_MATERIAIS_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_OUTROS_MATERIAIS_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_OUTROS_MATERIAIS_ANO_N_1_JANEIRO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_1_MARCO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_1_ABRIL_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_1_MAIO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_1_JUNHO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_1_JULHO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_1_AGOSTO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_1_SETEMBRO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_1_OUTUBRO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_1_DEZEMBRO_ACUM
                             );
    var FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_princ= Math.min(

                       FSE_OUTROS_MATERIAIS_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_OUTROS_MATERIAIS_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_OUTROS_MATERIAIS_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_OUTROS_MATERIAIS_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_OUTROS_MATERIAIS_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_OUTROS_MATERIAIS_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_OUTROS_MATERIAIS_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_OUTROS_MATERIAIS_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_OUTROS_MATERIAIS_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_OUTROS_MATERIAIS_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_OUTROS_MATERIAIS_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_OUTROS_MATERIAIS_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_OUTROS_MATERIAIS_ANO_N_1_JANEIRO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_1_MARCO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_1_ABRIL_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_1_MAIO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_1_JUNHO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_1_JULHO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_1_AGOSTO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_1_SETEMBRO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_1_OUTUBRO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_1_DEZEMBRO_ACUM
                           );
    var FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_secon= Math.max(
                       FSE_OUTROS_MATERIAIS_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_OUTROS_MATERIAIS_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_OUTROS_MATERIAIS_ANO_N_MARCO_MAX_MIN ,
                       FSE_OUTROS_MATERIAIS_ANO_N_ABRIL_MAX_MIN ,
                       FSE_OUTROS_MATERIAIS_ANO_N_MAIO_MAX_MIN ,
                       FSE_OUTROS_MATERIAIS_ANO_N_JUNHO_MAX_MIN ,
                       FSE_OUTROS_MATERIAIS_ANO_N_JULHO_MAX_MIN ,
                       FSE_OUTROS_MATERIAIS_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_OUTROS_MATERIAIS_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_OUTROS_MATERIAIS_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_OUTROS_MATERIAIS_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_OUTROS_MATERIAIS_ANO_N_DEZEMBRO_MAX_MIN ,



                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_DEZEMBRO"])))

                            );
    var FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_secon= Math.min(
                       FSE_OUTROS_MATERIAIS_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_OUTROS_MATERIAIS_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_OUTROS_MATERIAIS_ANO_N_MARCO_MAX_MIN ,
                       FSE_OUTROS_MATERIAIS_ANO_N_ABRIL_MAX_MIN ,
                       FSE_OUTROS_MATERIAIS_ANO_N_MAIO_MAX_MIN ,
                       FSE_OUTROS_MATERIAIS_ANO_N_JUNHO_MAX_MIN ,
                       FSE_OUTROS_MATERIAIS_ANO_N_JULHO_MAX_MIN ,
                       FSE_OUTROS_MATERIAIS_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_OUTROS_MATERIAIS_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_OUTROS_MATERIAIS_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_OUTROS_MATERIAIS_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_OUTROS_MATERIAIS_ANO_N_DEZEMBRO_MAX_MIN ,


                           @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_DEZEMBRO"])))

                          );

    //NOTA TA: Aqui trato o minimo e o maximo do eixo principal
    if(Math.abs(FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_princ)>=Math.abs(FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_princ))
    {
        var FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_princ_=(Math.ceil(FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_princ),0).toString().length-1);
        var FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_princ_= (Math.floor(FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_princ),0).toString().length-1);
        //alert(FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_princ_);
        //alert(FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_princ_);
    }
    else
    {
        var FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_princ_=(Math.ceil(FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_princ),0).toString().length-1);
        var FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_princ_= (Math.floor(FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_princ),0).toString().length-1);}

    //NOTA TA: Aqui trato o minimo e o maximo do eixo secundario

    if(Math.abs(FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_secon)>=Math.abs(FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_secon))
    {
        var FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_secon_=(Math.ceil(FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_secon),0).toString().length-1);
        var FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_secon_= (Math.floor(FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_secon),0).toString().length-1);
        //alert(FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_secon_);
        //alert(FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_secon_);
    }
    else
    {
        var FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_secon_=(Math.ceil(FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_secon),0).toString().length-1);
        var FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_secon_= (Math.floor(FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_secon),0).toString().length-1);}


    if(Math.abs(FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_princ)/Math.abs(FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_princ)>=Math.abs(FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_secon)/Math.abs(FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_secon))
    { if(FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_princ > 0 && FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_princ <0 ){ var FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_secon__=(FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_princ_*FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_secon_)/FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_princ_;} else { var FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_secon__=FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_secon_;}
        if(FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_secon > 0 && FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_secon <0 ){ var FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_princ__=(FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_secon__*FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_princ_)/FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_secon_;} else { var FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_princ__=FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_princ_;}}
    else
    {if(FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_secon > 0 && FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_secon <0 ){ var FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_princ__=(FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_secon_*FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_princ_)/FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_secon_;} else { var FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_princ__=FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_princ_;}
        if(FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_princ > 0 && FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_princ <0 ){ var FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_secon__=(FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_princ__*FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_secon_)/FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_princ_;} else { var FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_secon__=FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_secon_;}
    }



    if(Math.abs(FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_princ)/Math.abs(FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_princ)>=Math.abs(FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_secon)/Math.abs(FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_secon))
    { if(FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_princ > 0 && FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_princ <0 ){ var FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_secon__=(FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_princ_*FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_secon_)/FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_princ_;} else { var FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_secon__=FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_secon_;}
        if(FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_secon > 0 && FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_secon <0 ){ var FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_princ__=(FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_secon__*FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_princ_)/FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_secon_;} else { var FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_princ__=FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_princ_;}}
    else
    {if(FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_secon > 0 && FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_secon <0 ){ var FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_princ__=(FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_secon_*FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_princ_)/FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_secon_;} else { var FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_princ__=FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_princ_;}
        if(FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_princ > 0 && FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_princ <0 ){ var FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_secon__=(FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_princ__*FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_secon_)/FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_princ_;} else { var FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_secon__=FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_secon_;}
    }



    var GRAFICO_FSE_RESULT_MENSAL_COMP_026=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_026').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_026=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_026, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label: 'Otr. Materiais(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   data: [
                       FSE_OUTROS_MATERIAIS_ANO_N_JANEIRO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_FEVEREIRO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_MARCO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_ABRIL_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_MAIO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_JUNHO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_JULHO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_AGOSTO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_SETEMBRO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_OUTUBRO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_NOVEMBRO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_DEZEMBRO_ACUM,
                   ],
                   type: 'line'


               },
                              {
                                  label: 'Otr. Materiais(ac) ' + ANO_VERSAO_ANTE_,
                                  yAxisID: 'A',
                                  //backgroundColor: 'rgb(201, 10, 10)',
                                  borderColor: 'rgb(0,221,0)',
                                  data: [
                       FSE_OUTROS_MATERIAIS_ANO_N_1_JANEIRO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_1_MARCO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_1_ABRIL_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_1_MAIO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_1_JUNHO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_1_JULHO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_1_AGOSTO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_1_SETEMBRO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_1_OUTUBRO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_OUTROS_MATERIAIS_ANO_N_1_DEZEMBRO_ACUM,
                                  ],
                                  type: 'line'


                              },
                {
                    label:  'Otr. Materiais(m) ' + ANO_VERSAO_REAL_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(250 , 83 , 0, 0.5)',
                    borderColor: 'rgba(250 , 83 , 0, 0.5)',
                    data: [
                  FSE_OUTROS_MATERIAIS_ANO_N_JANEIRO ,
                  FSE_OUTROS_MATERIAIS_ANO_N_FEVEREIRO ,
                  FSE_OUTROS_MATERIAIS_ANO_N_MARCO ,
                  FSE_OUTROS_MATERIAIS_ANO_N_ABRIL,
                  FSE_OUTROS_MATERIAIS_ANO_N_MAIO ,
                  FSE_OUTROS_MATERIAIS_ANO_N_JUNHO ,
                  FSE_OUTROS_MATERIAIS_ANO_N_JULHO ,
                  FSE_OUTROS_MATERIAIS_ANO_N_AGOSTO ,
                  FSE_OUTROS_MATERIAIS_ANO_N_SETEMBRO ,
                  FSE_OUTROS_MATERIAIS_ANO_N_OUTUBRO ,
                  FSE_OUTROS_MATERIAIS_ANO_N_NOVEMBRO ,
                  FSE_OUTROS_MATERIAIS_ANO_N_DEZEMBRO ,
                    ],
                },
                {
                    label:  'Otr. Materiais(m) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(0,221,0, 0.4)',
                    borderColor: 'rgba(0,221,0, 0.4)',
                    data: [
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_JANEIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_FEVEREIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_MARCO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_ABRIL"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_MAIO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_JUNHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_JULHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_AGOSTO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_SETEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_OUTUBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_NOVEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_OUTROS_MATERIAIS_ANO_N_1_DEZEMBRO"]))),
                    ],
                },


            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_OUTROS_MATERIAIS_MENSAL_1',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                min:  Math.round(FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_princ__,0),
                                                max:  Math.round(FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString();
                                                }
                                            }
                                        },

                    { id: 'B',
                        type: 'linear',
                        position: 'right',
                        ticks: {
                            min: Math.round(FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_secon__,0),
                            max:  Math.round(FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_secon__,0),
                            beginAtZero: false,
                            callback: function(value, index, values) {
                                return value.toLocaleString();
                            }
                        }
                    },






                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_027-----------------------------------------------------------*@
<script>

    var IND_VN_ANO_N_JANEIRO_ACUM = IND_VN_ANO_N_JANEIRO;
    var IND_VN_ANO_N_FEVEREIRO_ACUM = IND_VN_ANO_N_FEVEREIRO + IND_VN_ANO_N_JANEIRO_ACUM;
    var IND_VN_ANO_N_MARCO_ACUM = IND_VN_ANO_N_MARCO + IND_VN_ANO_N_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_ABRIL_ACUM = IND_VN_ANO_N_ABRIL + IND_VN_ANO_N_MARCO_ACUM;
    var IND_VN_ANO_N_MAIO_ACUM = IND_VN_ANO_N_MAIO + IND_VN_ANO_N_ABRIL_ACUM;
    var IND_VN_ANO_N_JUNHO_ACUM = IND_VN_ANO_N_JUNHO + IND_VN_ANO_N_MAIO_ACUM;
    var IND_VN_ANO_N_JULHO_ACUM = IND_VN_ANO_N_JULHO + IND_VN_ANO_N_JUNHO_ACUM;
    var IND_VN_ANO_N_AGOSTO_ACUM = IND_VN_ANO_N_AGOSTO + IND_VN_ANO_N_JULHO_ACUM;
    var IND_VN_ANO_N_SETEMBRO_ACUM = IND_VN_ANO_N_SETEMBRO + IND_VN_ANO_N_AGOSTO_ACUM;
    var IND_VN_ANO_N_OUTUBRO_ACUM = IND_VN_ANO_N_OUTUBRO + IND_VN_ANO_N_SETEMBRO_ACUM;
    var IND_VN_ANO_N_NOVEMBRO_ACUM = IND_VN_ANO_N_NOVEMBRO + IND_VN_ANO_N_OUTUBRO_ACUM;
    var IND_VN_ANO_N_DEZEMBRO_ACUM = IND_VN_ANO_N_DEZEMBRO + IND_VN_ANO_N_NOVEMBRO_ACUM;



    var IND_VN_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JANEIRO"])));
    var IND_VN_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_FEVEREIRO"]))) + IND_VN_ANO_N_1_JANEIRO_ACUM;
    var IND_VN_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MARCO"]))) + IND_VN_ANO_N_1_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_ABRIL"]))) + IND_VN_ANO_N_1_MARCO_ACUM;
    var IND_VN_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MAIO"]))) + IND_VN_ANO_N_1_ABRIL_ACUM;
    var IND_VN_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JUNHO"]))) + IND_VN_ANO_N_1_MAIO_ACUM;
    var IND_VN_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JULHO"]))) + IND_VN_ANO_N_1_JUNHO_ACUM;
    var IND_VN_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_AGOSTO"]))) + IND_VN_ANO_N_1_JULHO_ACUM;
    var IND_VN_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_SETEMBRO"]))) + IND_VN_ANO_N_1_AGOSTO_ACUM;
    var IND_VN_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_OUTUBRO"]))) + IND_VN_ANO_N_1_SETEMBRO_ACUM;
    var IND_VN_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_NOVEMBRO"]))) + IND_VN_ANO_N_1_OUTUBRO_ACUM;
    var IND_VN_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_DEZEMBRO"]))) + IND_VN_ANO_N_1_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_JANEIRO_ACUM = 'nd'; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_JANEIRO_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_JANEIRO_ACUM/IND_VN_ANO_N_JANEIRO_ACUM*100; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_FEVEREIRO_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_FEVEREIRO_ACUM/IND_VN_ANO_N_FEVEREIRO_ACUM*100; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_MARCO_ACUM = 'nd'; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_MARCO_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_MARCO_ACUM/IND_VN_ANO_N_MARCO_ACUM*100; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_MARCO_ACUM_MAX_MIN = PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_ABRIL_ACUM = 'nd'; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_ABRIL_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_ABRIL_ACUM/IND_VN_ANO_N_ABRIL_ACUM*100; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_ABRIL_ACUM_MAX_MIN = PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_MAIO_ACUM = 'nd'; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_MAIO_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_MAIO_ACUM/IND_VN_ANO_N_MAIO_ACUM*100; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_MAIO_ACUM_MAX_MIN = PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_JUNHO_ACUM = 'nd'; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_JUNHO_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_JUNHO_ACUM/IND_VN_ANO_N_JUNHO_ACUM*100; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_JUNHO_ACUM_MAX_MIN = PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_JULHO_ACUM = 'nd'; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_JULHO_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_JULHO_ACUM/IND_VN_ANO_N_JULHO_ACUM*100; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_JULHO_ACUM_MAX_MIN = PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_AGOSTO_ACUM = 'nd'; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_AGOSTO_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_AGOSTO_ACUM/IND_VN_ANO_N_AGOSTO_ACUM*100; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_SETEMBRO_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_SETEMBRO_ACUM/IND_VN_ANO_N_SETEMBRO_ACUM*100; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_OUTUBRO_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_OUTUBRO_ACUM/IND_VN_ANO_N_OUTUBRO_ACUM*100; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_NOVEMBRO_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_NOVEMBRO_ACUM/IND_VN_ANO_N_NOVEMBRO_ACUM*100; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_DEZEMBRO_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_DEZEMBRO_ACUM/IND_VN_ANO_N_DEZEMBRO_ACUM*100; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_JANEIRO_ACUM = 'nd'; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_JANEIRO_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_1_JANEIRO_ACUM/IND_VN_ANO_N_1_JANEIRO_ACUM*100; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_FEVEREIRO_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_1_FEVEREIRO_ACUM/IND_VN_ANO_N_1_FEVEREIRO_ACUM*100; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_MARCO_ACUM = 'nd'; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_MARCO_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_1_MARCO_ACUM/IND_VN_ANO_N_1_MARCO_ACUM*100; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_ABRIL_ACUM = 'nd'; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_ABRIL_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_1_ABRIL_ACUM/IND_VN_ANO_N_1_ABRIL_ACUM*100; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_MAIO_ACUM = 'nd'; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_MAIO_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_1_MAIO_ACUM/IND_VN_ANO_N_1_MAIO_ACUM*100; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_JUNHO_ACUM = 'nd'; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_JUNHO_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_1_JUNHO_ACUM/IND_VN_ANO_N_1_JUNHO_ACUM*100; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_JULHO_ACUM = 'nd'; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_JULHO_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_1_JULHO_ACUM/IND_VN_ANO_N_1_JULHO_ACUM*100; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_AGOSTO_ACUM = 'nd'; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_AGOSTO_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_1_AGOSTO_ACUM/IND_VN_ANO_N_1_AGOSTO_ACUM*100; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_SETEMBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_SETEMBRO_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_1_SETEMBRO_ACUM/IND_VN_ANO_N_1_SETEMBRO_ACUM*100; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_OUTUBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_OUTUBRO_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_1_OUTUBRO_ACUM/IND_VN_ANO_N_1_OUTUBRO_ACUM*100; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_NOVEMBRO_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_1_NOVEMBRO_ACUM/IND_VN_ANO_N_1_NOVEMBRO_ACUM*100; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_DEZEMBRO_ACUM= FSE_OUTROS_MATERIAIS_ANO_N_1_DEZEMBRO_ACUM/IND_VN_ANO_N_1_DEZEMBRO_ACUM*100; var PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_VN_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JANEIRO_ACUM= ((IND_VN_ANO_N_JANEIRO_ACUM-IND_VN_ANO_N_1_JANEIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_JANEIRO_ACUM))*100; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_FEVEREIRO_ACUM= ((IND_VN_ANO_N_FEVEREIRO_ACUM-IND_VN_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_VN_ANO_N_MARCO_ACUM = 'nd'; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MARCO_ACUM= ((IND_VN_ANO_N_MARCO_ACUM-IND_VN_ANO_N_1_MARCO_ACUM)/Math.abs(IND_VN_ANO_N_1_MARCO_ACUM))*100; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = VAR_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_VN_ANO_N_ABRIL_ACUM = 'nd'; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_ABRIL_ACUM= ((IND_VN_ANO_N_ABRIL_ACUM-IND_VN_ANO_N_1_ABRIL_ACUM)/Math.abs(IND_VN_ANO_N_1_ABRIL_ACUM))*100; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_VN_ANO_N_MAIO_ACUM = 'nd'; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MAIO_ACUM= ((IND_VN_ANO_N_MAIO_ACUM-IND_VN_ANO_N_1_MAIO_ACUM)/Math.abs(IND_VN_ANO_N_1_MAIO_ACUM))*100; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = VAR_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_VN_ANO_N_JUNHO_ACUM = 'nd'; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JUNHO_ACUM= ((IND_VN_ANO_N_JUNHO_ACUM-IND_VN_ANO_N_1_JUNHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JUNHO_ACUM))*100; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_VN_ANO_N_JULHO_ACUM = 'nd'; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JULHO_ACUM= ((IND_VN_ANO_N_JULHO_ACUM-IND_VN_ANO_N_1_JULHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JULHO_ACUM))*100; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_VN_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_AGOSTO_ACUM= ((IND_VN_ANO_N_AGOSTO_ACUM-IND_VN_ANO_N_1_AGOSTO_ACUM)/Math.abs(IND_VN_ANO_N_1_AGOSTO_ACUM))*100; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_SETEMBRO_ACUM= ((IND_VN_ANO_N_SETEMBRO_ACUM-IND_VN_ANO_N_1_SETEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_OUTUBRO_ACUM= ((IND_VN_ANO_N_OUTUBRO_ACUM-IND_VN_ANO_N_1_OUTUBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_NOVEMBRO_ACUM= ((IND_VN_ANO_N_NOVEMBRO_ACUM-IND_VN_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_DEZEMBRO_ACUM= ((IND_VN_ANO_N_DEZEMBRO_ACUM-IND_VN_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_FSE_OUTROS_MATERIAIS_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_FSE_OUTROS_MATERIAIS_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_MATERIAIS_ANO_N_JANEIRO_ACUM= ((FSE_OUTROS_MATERIAIS_ANO_N_JANEIRO_ACUM-FSE_OUTROS_MATERIAIS_ANO_N_1_JANEIRO_ACUM)/Math.abs(FSE_OUTROS_MATERIAIS_ANO_N_1_JANEIRO_ACUM))*100; var VAR_FSE_OUTROS_MATERIAIS_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_FSE_OUTROS_MATERIAIS_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_FSE_OUTROS_MATERIAIS_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_FSE_OUTROS_MATERIAIS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_MATERIAIS_ANO_N_FEVEREIRO_ACUM= ((FSE_OUTROS_MATERIAIS_ANO_N_FEVEREIRO_ACUM-FSE_OUTROS_MATERIAIS_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(FSE_OUTROS_MATERIAIS_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_FSE_OUTROS_MATERIAIS_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_FSE_OUTROS_MATERIAIS_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_FSE_OUTROS_MATERIAIS_ANO_N_MARCO_ACUM = 'nd'; var VAR_FSE_OUTROS_MATERIAIS_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_MATERIAIS_ANO_N_MARCO_ACUM= ((FSE_OUTROS_MATERIAIS_ANO_N_MARCO_ACUM-FSE_OUTROS_MATERIAIS_ANO_N_1_MARCO_ACUM)/Math.abs(FSE_OUTROS_MATERIAIS_ANO_N_1_MARCO_ACUM))*100; var VAR_FSE_OUTROS_MATERIAIS_ANO_N_MARCO_ACUM_MAX_MIN = VAR_FSE_OUTROS_MATERIAIS_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_FSE_OUTROS_MATERIAIS_ANO_N_ABRIL_ACUM = 'nd'; var VAR_FSE_OUTROS_MATERIAIS_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_MATERIAIS_ANO_N_ABRIL_ACUM= ((FSE_OUTROS_MATERIAIS_ANO_N_ABRIL_ACUM-FSE_OUTROS_MATERIAIS_ANO_N_1_ABRIL_ACUM)/Math.abs(FSE_OUTROS_MATERIAIS_ANO_N_1_ABRIL_ACUM))*100; var VAR_FSE_OUTROS_MATERIAIS_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_FSE_OUTROS_MATERIAIS_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_FSE_OUTROS_MATERIAIS_ANO_N_MAIO_ACUM = 'nd'; var VAR_FSE_OUTROS_MATERIAIS_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_MATERIAIS_ANO_N_MAIO_ACUM= ((FSE_OUTROS_MATERIAIS_ANO_N_MAIO_ACUM-FSE_OUTROS_MATERIAIS_ANO_N_1_MAIO_ACUM)/Math.abs(FSE_OUTROS_MATERIAIS_ANO_N_1_MAIO_ACUM))*100; var VAR_FSE_OUTROS_MATERIAIS_ANO_N_MAIO_ACUM_MAX_MIN = VAR_FSE_OUTROS_MATERIAIS_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_FSE_OUTROS_MATERIAIS_ANO_N_JUNHO_ACUM = 'nd'; var VAR_FSE_OUTROS_MATERIAIS_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_MATERIAIS_ANO_N_JUNHO_ACUM= ((FSE_OUTROS_MATERIAIS_ANO_N_JUNHO_ACUM-FSE_OUTROS_MATERIAIS_ANO_N_1_JUNHO_ACUM)/Math.abs(FSE_OUTROS_MATERIAIS_ANO_N_1_JUNHO_ACUM))*100; var VAR_FSE_OUTROS_MATERIAIS_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_FSE_OUTROS_MATERIAIS_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_FSE_OUTROS_MATERIAIS_ANO_N_JULHO_ACUM = 'nd'; var VAR_FSE_OUTROS_MATERIAIS_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_MATERIAIS_ANO_N_JULHO_ACUM= ((FSE_OUTROS_MATERIAIS_ANO_N_JULHO_ACUM-FSE_OUTROS_MATERIAIS_ANO_N_1_JULHO_ACUM)/Math.abs(FSE_OUTROS_MATERIAIS_ANO_N_1_JULHO_ACUM))*100; var VAR_FSE_OUTROS_MATERIAIS_ANO_N_JULHO_ACUM_MAX_MIN = VAR_FSE_OUTROS_MATERIAIS_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_FSE_OUTROS_MATERIAIS_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_FSE_OUTROS_MATERIAIS_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_MATERIAIS_ANO_N_AGOSTO_ACUM= ((FSE_OUTROS_MATERIAIS_ANO_N_AGOSTO_ACUM-FSE_OUTROS_MATERIAIS_ANO_N_1_AGOSTO_ACUM)/Math.abs(FSE_OUTROS_MATERIAIS_ANO_N_1_AGOSTO_ACUM))*100; var VAR_FSE_OUTROS_MATERIAIS_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_FSE_OUTROS_MATERIAIS_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_FSE_OUTROS_MATERIAIS_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_FSE_OUTROS_MATERIAIS_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_MATERIAIS_ANO_N_SETEMBRO_ACUM= ((FSE_OUTROS_MATERIAIS_ANO_N_SETEMBRO_ACUM-FSE_OUTROS_MATERIAIS_ANO_N_1_SETEMBRO_ACUM)/Math.abs(FSE_OUTROS_MATERIAIS_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_FSE_OUTROS_MATERIAIS_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_FSE_OUTROS_MATERIAIS_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_FSE_OUTROS_MATERIAIS_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_FSE_OUTROS_MATERIAIS_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_MATERIAIS_ANO_N_OUTUBRO_ACUM= ((FSE_OUTROS_MATERIAIS_ANO_N_OUTUBRO_ACUM-FSE_OUTROS_MATERIAIS_ANO_N_1_OUTUBRO_ACUM)/Math.abs(FSE_OUTROS_MATERIAIS_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_FSE_OUTROS_MATERIAIS_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_FSE_OUTROS_MATERIAIS_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_FSE_OUTROS_MATERIAIS_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_FSE_OUTROS_MATERIAIS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_MATERIAIS_ANO_N_NOVEMBRO_ACUM= ((FSE_OUTROS_MATERIAIS_ANO_N_NOVEMBRO_ACUM-FSE_OUTROS_MATERIAIS_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(FSE_OUTROS_MATERIAIS_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_FSE_OUTROS_MATERIAIS_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_FSE_OUTROS_MATERIAIS_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_FSE_OUTROS_MATERIAIS_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_FSE_OUTROS_MATERIAIS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_OUTROS_MATERIAIS_ANO_N_DEZEMBRO_ACUM= ((FSE_OUTROS_MATERIAIS_ANO_N_DEZEMBRO_ACUM-FSE_OUTROS_MATERIAIS_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(FSE_OUTROS_MATERIAIS_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_FSE_OUTROS_MATERIAIS_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_FSE_OUTROS_MATERIAIS_ANO_N_DEZEMBRO_ACUM };

    if( PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_JANEIRO_ACUM > PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_JANEIRO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_JANEIRO_ACUM=PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_JANEIRO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_JANEIRO_ACUM=PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_JANEIRO_ACUM ; }
    if( PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_FEVEREIRO_ACUM > PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_FEVEREIRO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_FEVEREIRO_ACUM=PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_FEVEREIRO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_FEVEREIRO_ACUM=PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_FEVEREIRO_ACUM ; }
    if( PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_MARCO_ACUM > PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_MARCO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_MARCO_ACUM=PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_MARCO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_MARCO_ACUM=PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_MARCO_ACUM ; }
    if( PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_ABRIL_ACUM > PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_ABRIL_ACUM) { var  INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_ABRIL_ACUM=PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_ABRIL_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_ABRIL_ACUM=PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_ABRIL_ACUM ; }
    if( PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_MAIO_ACUM > PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_MAIO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_MAIO_ACUM=PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_MAIO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_MAIO_ACUM=PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_MAIO_ACUM ; }
    if( PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_JUNHO_ACUM > PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_JUNHO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_JUNHO_ACUM=PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_JUNHO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_JUNHO_ACUM=PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_JUNHO_ACUM ; }
    if( PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_JULHO_ACUM > PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_JULHO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_JULHO_ACUM=PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_JULHO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_JULHO_ACUM=PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_JULHO_ACUM ; }
    if( PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_AGOSTO_ACUM > PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_AGOSTO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_AGOSTO_ACUM=PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_AGOSTO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_AGOSTO_ACUM=PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_AGOSTO_ACUM ; }
    if( PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_SETEMBRO_ACUM > PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_SETEMBRO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_SETEMBRO_ACUM=PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_SETEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_SETEMBRO_ACUM=PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_SETEMBRO_ACUM ; }
    if( PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_OUTUBRO_ACUM > PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_OUTUBRO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_OUTUBRO_ACUM=PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_OUTUBRO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_OUTUBRO_ACUM=PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_OUTUBRO_ACUM ; }
    if( PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_NOVEMBRO_ACUM > PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_NOVEMBRO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_NOVEMBRO_ACUM=PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_NOVEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_NOVEMBRO_ACUM=PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_NOVEMBRO_ACUM ; }
    if( PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_DEZEMBRO_ACUM > PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_DEZEMBRO_ACUM) { var  INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_DEZEMBRO_ACUM=PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_DEZEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_DEZEMBRO_ACUM=PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_DEZEMBRO_ACUM ; }



    var fillBetweenLinesPlugin = {
        afterDatasetsDraw: function (chart) {
            var ctx = chart.chart.ctx;
            var xaxis = chart.scales['x-axis-0'];
            var yaxis = chart.scales['y-axis-0'];
            var datasets = chart.data.datasets;
            ctx.save();

            for (var d = 0; d < datasets.length; d++) {
                var dataset = datasets[d];
                if (dataset.fillBetweenSet == undefined) {
                    continue;
                }

                // get meta for both data sets
                var meta1 = chart.getDatasetMeta(d);
                var meta2 = chart.getDatasetMeta(dataset.fillBetweenSet);

                // do not draw fill if one of the datasets is hidden
                if (meta1.hidden || meta2.hidden) continue;

                // create fill areas in pairs
                for (var p = 0; p < meta1.data.length-1;p++) {
                    // if null skip
                    if (dataset.data[p] == null || dataset.data[p+1] == null) continue;

                    ctx.beginPath();

                    // trace line 1
                    var curr = meta1.data[p];
                    var next = meta1.data[p+1];
                    ctx.moveTo(curr._view.x, curr._view.y);
                    ctx.lineTo(curr._view.x, curr._view.y);
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(next._view.x, curr._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        ctx.bezierCurveTo(
                          curr._view.controlPointNextX,
                          curr._view.controlPointNextY,
                          next._view.controlPointPreviousX,
                          next._view.controlPointPreviousY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // connect dataset1 to dataset2
                    var curr = meta2.data[p+1];
                    var next = meta2.data[p];
                    ctx.lineTo(curr._view.x, curr._view.y);

                    // trace BACKWORDS set2 to complete the box
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(curr._view.x, next._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        // reverse bezier
                        ctx.bezierCurveTo(
                          curr._view.controlPointPreviousX,
                          curr._view.controlPointPreviousY,
                          next._view.controlPointNextX,
                          next._view.controlPointNextY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // close the loop and fill with shading
                    ctx.closePath();
                    ctx.fillStyle = dataset.fillBetweenColor || "rgba(0,0,0,0.1)";
                    ctx.fill();
                } // end for p loop
            }
        } // end afterDatasetsDraw
    }; // end fillBetweenLinesPlugin

    Chart.pluginService.register(fillBetweenLinesPlugin);



    var GRAFICO_FSE_RESULT_MENSAL_COMP_027=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_027').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_027=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_027, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label:  'Peso Otr. MateriaisvsVN(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   //borderColor: "#F00",
                   fill: false,
                   steppedLine: false,
                   tension: 0.5,
                   fillBetweenSet: 1,
                   fillBetweenColor: "rgba(0, 221, 0, 0.1)",
                   data: [
                   PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_JANEIRO_ACUM,
                   PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_FEVEREIRO_ACUM,
                   PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_MARCO_ACUM,
                   PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_ABRIL_ACUM,
                   PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_MAIO_ACUM,
                   PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_JUNHO_ACUM,
                   PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_JULHO_ACUM,
                   PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_AGOSTO_ACUM,
                   PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_SETEMBRO_ACUM,
                   PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_OUTUBRO_ACUM,
                   PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_NOVEMBRO_ACUM,
                   PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_DEZEMBRO_ACUM,

                   ],
                   type: 'line'


               },
                {
                    label: 'Peso Otr. MateriaisvsVN(ac) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'A',
                    //backgroundColor: 'rgb(17, 121, 240)',
                    borderColor: 'rgb(0,221,0)',
                    //borderColor: "#00F",
                    fill: false,
                    steppedLine: false,
                    tension: 0.5,
                    data: [
                   PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_JANEIRO_ACUM,
                   PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_FEVEREIRO_ACUM,
                   PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_MARCO_ACUM,
                   PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_ABRIL_ACUM,
                   PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_MAIO_ACUM,
                   PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_JUNHO_ACUM,
                   PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_JULHO_ACUM,
                   PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_AGOSTO_ACUM,
                   PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_SETEMBRO_ACUM,
                   PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_OUTUBRO_ACUM,
                   PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_NOVEMBRO_ACUM,
                   PESO_FSE_OUTROS_MATERIAIS_VN_ANO_N_1_DEZEMBRO_ACUM,
                    ],
                    type: 'line'
                },
    {
        label: 'Ineficiência',
        yAxisID: 'A',
        backgroundColor: "rgba(255, 0, 0, 0.2)",
        borderColor: 'rgba(255, 255, 255, 0.1)',
        //borderColor: "#0D0",
        fill: false,
        steppedLine: false,
        tension: 0.5,
        fillBetweenSet: 1,
        fillBetweenColor: "rgba(255, 0, 0, 0.2)",
        data: [
    INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_JANEIRO_ACUM,
    INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_FEVEREIRO_ACUM,
    INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_MARCO_ACUM,
    INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_ABRIL_ACUM,
    INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_MAIO_ACUM,
    INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_JUNHO_ACUM,
    INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_JULHO_ACUM,
    INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_AGOSTO_ACUM,
    INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_SETEMBRO_ACUM,
    INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_OUTUBRO_ACUM,
    INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_NOVEMBRO_ACUM,
    INEFICIENCIA_FSE_OUTROS_MATERIAIS_ANO_N_DEZEMBRO_ACUM,
        ],
        type: 'line'
    },

            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_Otr. Materiais COMP',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                //min:  Math.round(FSE_OUTROS_MATERIAIS_Mensal_Eixo_min_princ__,0),
                                                //max:  Math.round(FSE_OUTROS_MATERIAIS_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString()+ "%";
                                                }
                                            }
                                        },







                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_028-----------------------------------------------------------*@
<script>

    if(@ViewData["MES_ACUM_REAL"]<1){ var IND_VN_ANO_N_JANEIRO = 'nd'; var IND_VN_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JANEIRO"]))); var IND_VN_ANO_N_JANEIRO_MAX_MIN = IND_VN_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var IND_VN_ANO_N_FEVEREIRO = 'nd'; var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_FEVEREIRO"]))); var IND_VN_ANO_N_FEVEREIRO_MAX_MIN = IND_VN_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var IND_VN_ANO_N_MARCO = 'nd'; var IND_VN_ANO_N_MARCO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MARCO"]))); var IND_VN_ANO_N_MARCO_MAX_MIN = IND_VN_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var IND_VN_ANO_N_ABRIL = 'nd'; var IND_VN_ANO_N_ABRIL_MAX_MIN = 0;  } else { var IND_VN_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_ABRIL"]))); var IND_VN_ANO_N_ABRIL_MAX_MIN = IND_VN_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var IND_VN_ANO_N_MAIO = 'nd'; var IND_VN_ANO_N_MAIO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_MAIO"]))); var IND_VN_ANO_N_MAIO_MAX_MIN = IND_VN_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var IND_VN_ANO_N_JUNHO = 'nd'; var IND_VN_ANO_N_JUNHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JUNHO"]))); var IND_VN_ANO_N_JUNHO_MAX_MIN = IND_VN_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var IND_VN_ANO_N_JULHO = 'nd'; var IND_VN_ANO_N_JULHO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_JULHO"]))); var IND_VN_ANO_N_JULHO_MAX_MIN = IND_VN_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var IND_VN_ANO_N_AGOSTO = 'nd'; var IND_VN_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_AGOSTO"]))); var IND_VN_ANO_N_AGOSTO_MAX_MIN = IND_VN_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var IND_VN_ANO_N_SETEMBRO = 'nd'; var IND_VN_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_SETEMBRO"]))); var IND_VN_ANO_N_SETEMBRO_MAX_MIN = IND_VN_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var IND_VN_ANO_N_OUTUBRO = 'nd'; var IND_VN_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_OUTUBRO"]))); var IND_VN_ANO_N_OUTUBRO_MAX_MIN = IND_VN_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var IND_VN_ANO_N_NOVEMBRO = 'nd'; var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_NOVEMBRO"]))); var IND_VN_ANO_N_NOVEMBRO_MAX_MIN = IND_VN_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var IND_VN_ANO_N_DEZEMBRO = 'nd'; var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var IND_VN_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_DEZEMBRO"]))); var IND_VN_ANO_N_DEZEMBRO_MAX_MIN = IND_VN_ANO_N_DEZEMBRO };

    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_ELECTRICIDADE_ANO_N_JANEIRO = 'nd'; var FSE_ELECTRICIDADE_ANO_N_JANEIRO_MAX_MIN = 0;  } else { var FSE_ELECTRICIDADE_ANO_N_JANEIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_JANEIRO"]))); var FSE_ELECTRICIDADE_ANO_N_JANEIRO_MAX_MIN = FSE_ELECTRICIDADE_ANO_N_JANEIRO };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_ELECTRICIDADE_ANO_N_FEVEREIRO = 'nd'; var FSE_ELECTRICIDADE_ANO_N_FEVEREIRO_MAX_MIN = 0;  } else { var FSE_ELECTRICIDADE_ANO_N_FEVEREIRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_FEVEREIRO"]))); var FSE_ELECTRICIDADE_ANO_N_FEVEREIRO_MAX_MIN = FSE_ELECTRICIDADE_ANO_N_FEVEREIRO };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_ELECTRICIDADE_ANO_N_MARCO = 'nd'; var FSE_ELECTRICIDADE_ANO_N_MARCO_MAX_MIN = 0;  } else { var FSE_ELECTRICIDADE_ANO_N_MARCO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_MARCO"]))); var FSE_ELECTRICIDADE_ANO_N_MARCO_MAX_MIN = FSE_ELECTRICIDADE_ANO_N_MARCO };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_ELECTRICIDADE_ANO_N_ABRIL = 'nd'; var FSE_ELECTRICIDADE_ANO_N_ABRIL_MAX_MIN = 0;  } else { var FSE_ELECTRICIDADE_ANO_N_ABRIL= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_ABRIL"]))); var FSE_ELECTRICIDADE_ANO_N_ABRIL_MAX_MIN = FSE_ELECTRICIDADE_ANO_N_ABRIL };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_ELECTRICIDADE_ANO_N_MAIO = 'nd'; var FSE_ELECTRICIDADE_ANO_N_MAIO_MAX_MIN = 0;  } else { var FSE_ELECTRICIDADE_ANO_N_MAIO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_MAIO"]))); var FSE_ELECTRICIDADE_ANO_N_MAIO_MAX_MIN = FSE_ELECTRICIDADE_ANO_N_MAIO };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_ELECTRICIDADE_ANO_N_JUNHO = 'nd'; var FSE_ELECTRICIDADE_ANO_N_JUNHO_MAX_MIN = 0;  } else { var FSE_ELECTRICIDADE_ANO_N_JUNHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_JUNHO"]))); var FSE_ELECTRICIDADE_ANO_N_JUNHO_MAX_MIN = FSE_ELECTRICIDADE_ANO_N_JUNHO };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_ELECTRICIDADE_ANO_N_JULHO = 'nd'; var FSE_ELECTRICIDADE_ANO_N_JULHO_MAX_MIN = 0;  } else { var FSE_ELECTRICIDADE_ANO_N_JULHO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_JULHO"]))); var FSE_ELECTRICIDADE_ANO_N_JULHO_MAX_MIN = FSE_ELECTRICIDADE_ANO_N_JULHO };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_ELECTRICIDADE_ANO_N_AGOSTO = 'nd'; var FSE_ELECTRICIDADE_ANO_N_AGOSTO_MAX_MIN = 0;  } else { var FSE_ELECTRICIDADE_ANO_N_AGOSTO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_AGOSTO"]))); var FSE_ELECTRICIDADE_ANO_N_AGOSTO_MAX_MIN = FSE_ELECTRICIDADE_ANO_N_AGOSTO };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_ELECTRICIDADE_ANO_N_SETEMBRO = 'nd'; var FSE_ELECTRICIDADE_ANO_N_SETEMBRO_MAX_MIN = 0;  } else { var FSE_ELECTRICIDADE_ANO_N_SETEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_SETEMBRO"]))); var FSE_ELECTRICIDADE_ANO_N_SETEMBRO_MAX_MIN = FSE_ELECTRICIDADE_ANO_N_SETEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_ELECTRICIDADE_ANO_N_OUTUBRO = 'nd'; var FSE_ELECTRICIDADE_ANO_N_OUTUBRO_MAX_MIN = 0;  } else { var FSE_ELECTRICIDADE_ANO_N_OUTUBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_OUTUBRO"]))); var FSE_ELECTRICIDADE_ANO_N_OUTUBRO_MAX_MIN = FSE_ELECTRICIDADE_ANO_N_OUTUBRO };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_ELECTRICIDADE_ANO_N_NOVEMBRO = 'nd'; var FSE_ELECTRICIDADE_ANO_N_NOVEMBRO_MAX_MIN = 0;  } else { var FSE_ELECTRICIDADE_ANO_N_NOVEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_NOVEMBRO"]))); var FSE_ELECTRICIDADE_ANO_N_NOVEMBRO_MAX_MIN = FSE_ELECTRICIDADE_ANO_N_NOVEMBRO };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_ELECTRICIDADE_ANO_N_DEZEMBRO = 'nd'; var FSE_ELECTRICIDADE_ANO_N_DEZEMBRO_MAX_MIN = 0;  } else { var FSE_ELECTRICIDADE_ANO_N_DEZEMBRO= @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_DEZEMBRO"]))); var FSE_ELECTRICIDADE_ANO_N_DEZEMBRO_MAX_MIN = FSE_ELECTRICIDADE_ANO_N_DEZEMBRO };


    var FSE_ELECTRICIDADE_ANO_N_JANEIRO_ACUM = FSE_ELECTRICIDADE_ANO_N_JANEIRO;
    var FSE_ELECTRICIDADE_ANO_N_FEVEREIRO_ACUM = FSE_ELECTRICIDADE_ANO_N_FEVEREIRO + FSE_ELECTRICIDADE_ANO_N_JANEIRO_ACUM;
    var FSE_ELECTRICIDADE_ANO_N_MARCO_ACUM = FSE_ELECTRICIDADE_ANO_N_MARCO + FSE_ELECTRICIDADE_ANO_N_FEVEREIRO_ACUM;
    var FSE_ELECTRICIDADE_ANO_N_ABRIL_ACUM = FSE_ELECTRICIDADE_ANO_N_ABRIL + FSE_ELECTRICIDADE_ANO_N_MARCO_ACUM;
    var FSE_ELECTRICIDADE_ANO_N_MAIO_ACUM = FSE_ELECTRICIDADE_ANO_N_MAIO + FSE_ELECTRICIDADE_ANO_N_ABRIL_ACUM;
    var FSE_ELECTRICIDADE_ANO_N_JUNHO_ACUM = FSE_ELECTRICIDADE_ANO_N_JUNHO + FSE_ELECTRICIDADE_ANO_N_MAIO_ACUM;
    var FSE_ELECTRICIDADE_ANO_N_JULHO_ACUM = FSE_ELECTRICIDADE_ANO_N_JULHO + FSE_ELECTRICIDADE_ANO_N_JUNHO_ACUM;
    var FSE_ELECTRICIDADE_ANO_N_AGOSTO_ACUM = FSE_ELECTRICIDADE_ANO_N_AGOSTO + FSE_ELECTRICIDADE_ANO_N_JULHO_ACUM;
    var FSE_ELECTRICIDADE_ANO_N_SETEMBRO_ACUM = FSE_ELECTRICIDADE_ANO_N_SETEMBRO + FSE_ELECTRICIDADE_ANO_N_AGOSTO_ACUM;
    var FSE_ELECTRICIDADE_ANO_N_OUTUBRO_ACUM = FSE_ELECTRICIDADE_ANO_N_OUTUBRO + FSE_ELECTRICIDADE_ANO_N_SETEMBRO_ACUM;
    var FSE_ELECTRICIDADE_ANO_N_NOVEMBRO_ACUM = FSE_ELECTRICIDADE_ANO_N_NOVEMBRO + FSE_ELECTRICIDADE_ANO_N_OUTUBRO_ACUM;
    var FSE_ELECTRICIDADE_ANO_N_DEZEMBRO_ACUM = FSE_ELECTRICIDADE_ANO_N_DEZEMBRO + FSE_ELECTRICIDADE_ANO_N_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var FSE_ELECTRICIDADE_ANO_N_JANEIRO_ACUM = 'nd'; var FSE_ELECTRICIDADE_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var FSE_ELECTRICIDADE_ANO_N_JANEIRO_ACUM= FSE_ELECTRICIDADE_ANO_N_JANEIRO_ACUM; var FSE_ELECTRICIDADE_ANO_N_JANEIRO_ACUM_MAX_MIN = FSE_ELECTRICIDADE_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var FSE_ELECTRICIDADE_ANO_N_FEVEREIRO_ACUM = 'nd'; var FSE_ELECTRICIDADE_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var FSE_ELECTRICIDADE_ANO_N_FEVEREIRO_ACUM= FSE_ELECTRICIDADE_ANO_N_FEVEREIRO_ACUM; var FSE_ELECTRICIDADE_ANO_N_FEVEREIRO_ACUM_MAX_MIN = FSE_ELECTRICIDADE_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var FSE_ELECTRICIDADE_ANO_N_MARCO_ACUM = 'nd'; var FSE_ELECTRICIDADE_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var FSE_ELECTRICIDADE_ANO_N_MARCO_ACUM= FSE_ELECTRICIDADE_ANO_N_MARCO_ACUM; var FSE_ELECTRICIDADE_ANO_N_MARCO_ACUM_MAX_MIN = FSE_ELECTRICIDADE_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var FSE_ELECTRICIDADE_ANO_N_ABRIL_ACUM = 'nd'; var FSE_ELECTRICIDADE_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var FSE_ELECTRICIDADE_ANO_N_ABRIL_ACUM= FSE_ELECTRICIDADE_ANO_N_ABRIL_ACUM; var FSE_ELECTRICIDADE_ANO_N_ABRIL_ACUM_MAX_MIN = FSE_ELECTRICIDADE_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var FSE_ELECTRICIDADE_ANO_N_MAIO_ACUM = 'nd'; var FSE_ELECTRICIDADE_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var FSE_ELECTRICIDADE_ANO_N_MAIO_ACUM= FSE_ELECTRICIDADE_ANO_N_MAIO_ACUM; var FSE_ELECTRICIDADE_ANO_N_MAIO_ACUM_MAX_MIN = FSE_ELECTRICIDADE_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var FSE_ELECTRICIDADE_ANO_N_JUNHO_ACUM = 'nd'; var FSE_ELECTRICIDADE_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var FSE_ELECTRICIDADE_ANO_N_JUNHO_ACUM= FSE_ELECTRICIDADE_ANO_N_JUNHO_ACUM; var FSE_ELECTRICIDADE_ANO_N_JUNHO_ACUM_MAX_MIN = FSE_ELECTRICIDADE_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var FSE_ELECTRICIDADE_ANO_N_JULHO_ACUM = 'nd'; var FSE_ELECTRICIDADE_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var FSE_ELECTRICIDADE_ANO_N_JULHO_ACUM= FSE_ELECTRICIDADE_ANO_N_JULHO_ACUM; var FSE_ELECTRICIDADE_ANO_N_JULHO_ACUM_MAX_MIN = FSE_ELECTRICIDADE_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var FSE_ELECTRICIDADE_ANO_N_AGOSTO_ACUM = 'nd'; var FSE_ELECTRICIDADE_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var FSE_ELECTRICIDADE_ANO_N_AGOSTO_ACUM= FSE_ELECTRICIDADE_ANO_N_AGOSTO_ACUM; var FSE_ELECTRICIDADE_ANO_N_AGOSTO_ACUM_MAX_MIN = FSE_ELECTRICIDADE_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var FSE_ELECTRICIDADE_ANO_N_SETEMBRO_ACUM = 'nd'; var FSE_ELECTRICIDADE_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_ELECTRICIDADE_ANO_N_SETEMBRO_ACUM= FSE_ELECTRICIDADE_ANO_N_SETEMBRO_ACUM; var FSE_ELECTRICIDADE_ANO_N_SETEMBRO_ACUM_MAX_MIN = FSE_ELECTRICIDADE_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var FSE_ELECTRICIDADE_ANO_N_OUTUBRO_ACUM = 'nd'; var FSE_ELECTRICIDADE_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var FSE_ELECTRICIDADE_ANO_N_OUTUBRO_ACUM= FSE_ELECTRICIDADE_ANO_N_OUTUBRO_ACUM; var FSE_ELECTRICIDADE_ANO_N_OUTUBRO_ACUM_MAX_MIN = FSE_ELECTRICIDADE_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var FSE_ELECTRICIDADE_ANO_N_NOVEMBRO_ACUM = 'nd'; var FSE_ELECTRICIDADE_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_ELECTRICIDADE_ANO_N_NOVEMBRO_ACUM= FSE_ELECTRICIDADE_ANO_N_NOVEMBRO_ACUM; var FSE_ELECTRICIDADE_ANO_N_NOVEMBRO_ACUM_MAX_MIN = FSE_ELECTRICIDADE_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var FSE_ELECTRICIDADE_ANO_N_DEZEMBRO_ACUM = 'nd'; var FSE_ELECTRICIDADE_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var FSE_ELECTRICIDADE_ANO_N_DEZEMBRO_ACUM= FSE_ELECTRICIDADE_ANO_N_DEZEMBRO_ACUM; var FSE_ELECTRICIDADE_ANO_N_DEZEMBRO_ACUM_MAX_MIN = FSE_ELECTRICIDADE_ANO_N_DEZEMBRO_ACUM };




    var FSE_ELECTRICIDADE_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_JANEIRO"])));
    var FSE_ELECTRICIDADE_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_FEVEREIRO"]))) + FSE_ELECTRICIDADE_ANO_N_1_JANEIRO_ACUM;
    var FSE_ELECTRICIDADE_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_MARCO"]))) + FSE_ELECTRICIDADE_ANO_N_1_FEVEREIRO_ACUM;
    var FSE_ELECTRICIDADE_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_ABRIL"]))) + FSE_ELECTRICIDADE_ANO_N_1_MARCO_ACUM;
    var FSE_ELECTRICIDADE_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_MAIO"]))) + FSE_ELECTRICIDADE_ANO_N_1_ABRIL_ACUM;
    var FSE_ELECTRICIDADE_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_JUNHO"]))) + FSE_ELECTRICIDADE_ANO_N_1_MAIO_ACUM;
    var FSE_ELECTRICIDADE_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_JULHO"]))) + FSE_ELECTRICIDADE_ANO_N_1_JUNHO_ACUM;
    var FSE_ELECTRICIDADE_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_AGOSTO"]))) + FSE_ELECTRICIDADE_ANO_N_1_JULHO_ACUM;
    var FSE_ELECTRICIDADE_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_SETEMBRO"]))) + FSE_ELECTRICIDADE_ANO_N_1_AGOSTO_ACUM;
    var FSE_ELECTRICIDADE_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_OUTUBRO"]))) + FSE_ELECTRICIDADE_ANO_N_1_SETEMBRO_ACUM;
    var FSE_ELECTRICIDADE_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_NOVEMBRO"]))) + FSE_ELECTRICIDADE_ANO_N_1_OUTUBRO_ACUM;
    var FSE_ELECTRICIDADE_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_DEZEMBRO"]))) + FSE_ELECTRICIDADE_ANO_N_1_NOVEMBRO_ACUM;


    var FSE_ELECTRICIDADE_Mensal_Eixo_max_princ= Math.max(
                       FSE_ELECTRICIDADE_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_ELECTRICIDADE_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_ELECTRICIDADE_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_ELECTRICIDADE_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_ELECTRICIDADE_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_ELECTRICIDADE_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_ELECTRICIDADE_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_ELECTRICIDADE_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_ELECTRICIDADE_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_ELECTRICIDADE_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_ELECTRICIDADE_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_ELECTRICIDADE_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_ELECTRICIDADE_ANO_N_1_JANEIRO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_1_MARCO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_1_ABRIL_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_1_MAIO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_1_JUNHO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_1_JULHO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_1_AGOSTO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_1_SETEMBRO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_1_OUTUBRO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_1_DEZEMBRO_ACUM
                             );
    var FSE_ELECTRICIDADE_Mensal_Eixo_min_princ= Math.min(

                       FSE_ELECTRICIDADE_ANO_N_JANEIRO_ACUM_MAX_MIN,
                       FSE_ELECTRICIDADE_ANO_N_FEVEREIRO_ACUM_MAX_MIN,
                       FSE_ELECTRICIDADE_ANO_N_MARCO_ACUM_MAX_MIN,
                       FSE_ELECTRICIDADE_ANO_N_ABRIL_ACUM_MAX_MIN,
                       FSE_ELECTRICIDADE_ANO_N_MAIO_ACUM_MAX_MIN,
                       FSE_ELECTRICIDADE_ANO_N_JUNHO_ACUM_MAX_MIN,
                       FSE_ELECTRICIDADE_ANO_N_JULHO_ACUM_MAX_MIN,
                       FSE_ELECTRICIDADE_ANO_N_AGOSTO_ACUM_MAX_MIN,
                       FSE_ELECTRICIDADE_ANO_N_SETEMBRO_ACUM_MAX_MIN,
                       FSE_ELECTRICIDADE_ANO_N_OUTUBRO_ACUM_MAX_MIN,
                       FSE_ELECTRICIDADE_ANO_N_NOVEMBRO_ACUM_MAX_MIN,
                       FSE_ELECTRICIDADE_ANO_N_DEZEMBRO_ACUM_MAX_MIN,

                       FSE_ELECTRICIDADE_ANO_N_1_JANEIRO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_1_MARCO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_1_ABRIL_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_1_MAIO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_1_JUNHO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_1_JULHO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_1_AGOSTO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_1_SETEMBRO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_1_OUTUBRO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_1_DEZEMBRO_ACUM
                           );
    var FSE_ELECTRICIDADE_Mensal_Eixo_max_secon= Math.max(
                       FSE_ELECTRICIDADE_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_ELECTRICIDADE_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_ELECTRICIDADE_ANO_N_MARCO_MAX_MIN ,
                       FSE_ELECTRICIDADE_ANO_N_ABRIL_MAX_MIN ,
                       FSE_ELECTRICIDADE_ANO_N_MAIO_MAX_MIN ,
                       FSE_ELECTRICIDADE_ANO_N_JUNHO_MAX_MIN ,
                       FSE_ELECTRICIDADE_ANO_N_JULHO_MAX_MIN ,
                       FSE_ELECTRICIDADE_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_ELECTRICIDADE_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_ELECTRICIDADE_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_ELECTRICIDADE_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_ELECTRICIDADE_ANO_N_DEZEMBRO_MAX_MIN ,



                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_DEZEMBRO"])))

                            );
    var FSE_ELECTRICIDADE_Mensal_Eixo_min_secon= Math.min(
                       FSE_ELECTRICIDADE_ANO_N_JANEIRO_MAX_MIN ,
                       FSE_ELECTRICIDADE_ANO_N_FEVEREIRO_MAX_MIN ,
                       FSE_ELECTRICIDADE_ANO_N_MARCO_MAX_MIN ,
                       FSE_ELECTRICIDADE_ANO_N_ABRIL_MAX_MIN ,
                       FSE_ELECTRICIDADE_ANO_N_MAIO_MAX_MIN ,
                       FSE_ELECTRICIDADE_ANO_N_JUNHO_MAX_MIN ,
                       FSE_ELECTRICIDADE_ANO_N_JULHO_MAX_MIN ,
                       FSE_ELECTRICIDADE_ANO_N_AGOSTO_MAX_MIN ,
                       FSE_ELECTRICIDADE_ANO_N_SETEMBRO_MAX_MIN ,
                       FSE_ELECTRICIDADE_ANO_N_OUTUBRO_MAX_MIN ,
                       FSE_ELECTRICIDADE_ANO_N_NOVEMBRO_MAX_MIN ,
                       FSE_ELECTRICIDADE_ANO_N_DEZEMBRO_MAX_MIN ,


                           @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_JANEIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_FEVEREIRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_MARCO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_ABRIL"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_MAIO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_JUNHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_JULHO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_AGOSTO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_SETEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_OUTUBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_NOVEMBRO"]))),
                            @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_DEZEMBRO"])))

                          );

    //NOTA TA: Aqui trato o minimo e o maximo do eixo principal
    if(Math.abs(FSE_ELECTRICIDADE_Mensal_Eixo_max_princ)>=Math.abs(FSE_ELECTRICIDADE_Mensal_Eixo_min_princ))
    {
        var FSE_ELECTRICIDADE_Mensal_Eixo_max_princ_=(Math.ceil(FSE_ELECTRICIDADE_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_ELECTRICIDADE_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_ELECTRICIDADE_Mensal_Eixo_max_princ),0).toString().length-1);
        var FSE_ELECTRICIDADE_Mensal_Eixo_min_princ_= (Math.floor(FSE_ELECTRICIDADE_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_ELECTRICIDADE_Mensal_Eixo_max_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_ELECTRICIDADE_Mensal_Eixo_max_princ),0).toString().length-1);
        //alert(FSE_ELECTRICIDADE_Mensal_Eixo_max_princ_);
        //alert(FSE_ELECTRICIDADE_Mensal_Eixo_min_princ_);
    }
    else
    {
        var FSE_ELECTRICIDADE_Mensal_Eixo_max_princ_=(Math.ceil(FSE_ELECTRICIDADE_Mensal_Eixo_max_princ/Math.pow(10,Math.round(Math.abs(FSE_ELECTRICIDADE_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_ELECTRICIDADE_Mensal_Eixo_min_princ),0).toString().length-1);
        var FSE_ELECTRICIDADE_Mensal_Eixo_min_princ_= (Math.floor(FSE_ELECTRICIDADE_Mensal_Eixo_min_princ/Math.pow(10,Math.round(Math.abs(FSE_ELECTRICIDADE_Mensal_Eixo_min_princ),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_ELECTRICIDADE_Mensal_Eixo_min_princ),0).toString().length-1);}

    //NOTA TA: Aqui trato o minimo e o maximo do eixo secundario

    if(Math.abs(FSE_ELECTRICIDADE_Mensal_Eixo_max_secon)>=Math.abs(FSE_ELECTRICIDADE_Mensal_Eixo_min_secon))
    {
        var FSE_ELECTRICIDADE_Mensal_Eixo_max_secon_=(Math.ceil(FSE_ELECTRICIDADE_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_ELECTRICIDADE_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_ELECTRICIDADE_Mensal_Eixo_max_secon),0).toString().length-1);
        var FSE_ELECTRICIDADE_Mensal_Eixo_min_secon_= (Math.floor(FSE_ELECTRICIDADE_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_ELECTRICIDADE_Mensal_Eixo_max_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_ELECTRICIDADE_Mensal_Eixo_max_secon),0).toString().length-1);
        //alert(FSE_ELECTRICIDADE_Mensal_Eixo_max_secon_);
        //alert(FSE_ELECTRICIDADE_Mensal_Eixo_min_secon_);
    }
    else
    {
        var FSE_ELECTRICIDADE_Mensal_Eixo_max_secon_=(Math.ceil(FSE_ELECTRICIDADE_Mensal_Eixo_max_secon/Math.pow(10,Math.round(Math.abs(FSE_ELECTRICIDADE_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_ELECTRICIDADE_Mensal_Eixo_min_secon),0).toString().length-1);
        var FSE_ELECTRICIDADE_Mensal_Eixo_min_secon_= (Math.floor(FSE_ELECTRICIDADE_Mensal_Eixo_min_secon/Math.pow(10,Math.round(Math.abs(FSE_ELECTRICIDADE_Mensal_Eixo_min_secon),0).toString().length-1),0))*Math.pow(10,Math.round(Math.abs(FSE_ELECTRICIDADE_Mensal_Eixo_min_secon),0).toString().length-1);}


    if(Math.abs(FSE_ELECTRICIDADE_Mensal_Eixo_min_princ)/Math.abs(FSE_ELECTRICIDADE_Mensal_Eixo_max_princ)>=Math.abs(FSE_ELECTRICIDADE_Mensal_Eixo_min_secon)/Math.abs(FSE_ELECTRICIDADE_Mensal_Eixo_max_secon))
    { if(FSE_ELECTRICIDADE_Mensal_Eixo_max_princ > 0 && FSE_ELECTRICIDADE_Mensal_Eixo_min_princ <0 ){ var FSE_ELECTRICIDADE_Mensal_Eixo_min_secon__=(FSE_ELECTRICIDADE_Mensal_Eixo_min_princ_*FSE_ELECTRICIDADE_Mensal_Eixo_max_secon_)/FSE_ELECTRICIDADE_Mensal_Eixo_max_princ_;} else { var FSE_ELECTRICIDADE_Mensal_Eixo_min_secon__=FSE_ELECTRICIDADE_Mensal_Eixo_min_secon_;}
        if(FSE_ELECTRICIDADE_Mensal_Eixo_max_secon > 0 && FSE_ELECTRICIDADE_Mensal_Eixo_min_secon <0 ){ var FSE_ELECTRICIDADE_Mensal_Eixo_min_princ__=(FSE_ELECTRICIDADE_Mensal_Eixo_min_secon__*FSE_ELECTRICIDADE_Mensal_Eixo_max_princ_)/FSE_ELECTRICIDADE_Mensal_Eixo_max_secon_;} else { var FSE_ELECTRICIDADE_Mensal_Eixo_min_princ__=FSE_ELECTRICIDADE_Mensal_Eixo_min_princ_;}}
    else
    {if(FSE_ELECTRICIDADE_Mensal_Eixo_max_secon > 0 && FSE_ELECTRICIDADE_Mensal_Eixo_min_secon <0 ){ var FSE_ELECTRICIDADE_Mensal_Eixo_min_princ__=(FSE_ELECTRICIDADE_Mensal_Eixo_min_secon_*FSE_ELECTRICIDADE_Mensal_Eixo_max_princ_)/FSE_ELECTRICIDADE_Mensal_Eixo_max_secon_;} else { var FSE_ELECTRICIDADE_Mensal_Eixo_min_princ__=FSE_ELECTRICIDADE_Mensal_Eixo_min_princ_;}
        if(FSE_ELECTRICIDADE_Mensal_Eixo_max_princ > 0 && FSE_ELECTRICIDADE_Mensal_Eixo_min_princ <0 ){ var FSE_ELECTRICIDADE_Mensal_Eixo_min_secon__=(FSE_ELECTRICIDADE_Mensal_Eixo_min_princ__*FSE_ELECTRICIDADE_Mensal_Eixo_max_secon_)/FSE_ELECTRICIDADE_Mensal_Eixo_max_princ_;} else { var FSE_ELECTRICIDADE_Mensal_Eixo_min_secon__=FSE_ELECTRICIDADE_Mensal_Eixo_min_secon_;}
    }



    if(Math.abs(FSE_ELECTRICIDADE_Mensal_Eixo_max_princ)/Math.abs(FSE_ELECTRICIDADE_Mensal_Eixo_min_princ)>=Math.abs(FSE_ELECTRICIDADE_Mensal_Eixo_max_secon)/Math.abs(FSE_ELECTRICIDADE_Mensal_Eixo_min_secon))
    { if(FSE_ELECTRICIDADE_Mensal_Eixo_min_princ > 0 && FSE_ELECTRICIDADE_Mensal_Eixo_max_princ <0 ){ var FSE_ELECTRICIDADE_Mensal_Eixo_max_secon__=(FSE_ELECTRICIDADE_Mensal_Eixo_max_princ_*FSE_ELECTRICIDADE_Mensal_Eixo_min_secon_)/FSE_ELECTRICIDADE_Mensal_Eixo_min_princ_;} else { var FSE_ELECTRICIDADE_Mensal_Eixo_max_secon__=FSE_ELECTRICIDADE_Mensal_Eixo_max_secon_;}
        if(FSE_ELECTRICIDADE_Mensal_Eixo_min_secon > 0 && FSE_ELECTRICIDADE_Mensal_Eixo_max_secon <0 ){ var FSE_ELECTRICIDADE_Mensal_Eixo_max_princ__=(FSE_ELECTRICIDADE_Mensal_Eixo_max_secon__*FSE_ELECTRICIDADE_Mensal_Eixo_min_princ_)/FSE_ELECTRICIDADE_Mensal_Eixo_min_secon_;} else { var FSE_ELECTRICIDADE_Mensal_Eixo_max_princ__=FSE_ELECTRICIDADE_Mensal_Eixo_max_princ_;}}
    else
    {if(FSE_ELECTRICIDADE_Mensal_Eixo_min_secon > 0 && FSE_ELECTRICIDADE_Mensal_Eixo_max_secon <0 ){ var FSE_ELECTRICIDADE_Mensal_Eixo_max_princ__=(FSE_ELECTRICIDADE_Mensal_Eixo_max_secon_*FSE_ELECTRICIDADE_Mensal_Eixo_min_princ_)/FSE_ELECTRICIDADE_Mensal_Eixo_min_secon_;} else { var FSE_ELECTRICIDADE_Mensal_Eixo_max_princ__=FSE_ELECTRICIDADE_Mensal_Eixo_max_princ_;}
        if(FSE_ELECTRICIDADE_Mensal_Eixo_min_princ > 0 && FSE_ELECTRICIDADE_Mensal_Eixo_max_princ <0 ){ var FSE_ELECTRICIDADE_Mensal_Eixo_max_secon__=(FSE_ELECTRICIDADE_Mensal_Eixo_max_princ__*FSE_ELECTRICIDADE_Mensal_Eixo_min_secon_)/FSE_ELECTRICIDADE_Mensal_Eixo_min_princ_;} else { var FSE_ELECTRICIDADE_Mensal_Eixo_max_secon__=FSE_ELECTRICIDADE_Mensal_Eixo_max_secon_;}
    }



    var GRAFICO_FSE_RESULT_MENSAL_COMP_028=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_028').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_028=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_028, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label: 'Electricidade(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   data: [
                       FSE_ELECTRICIDADE_ANO_N_JANEIRO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_FEVEREIRO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_MARCO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_ABRIL_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_MAIO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_JUNHO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_JULHO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_AGOSTO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_SETEMBRO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_OUTUBRO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_NOVEMBRO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_DEZEMBRO_ACUM,
                   ],
                   type: 'line'


               },
                              {
                                  label: 'Electricidade(ac) ' + ANO_VERSAO_ANTE_,
                                  yAxisID: 'A',
                                  //backgroundColor: 'rgb(201, 10, 10)',
                                  borderColor: 'rgb(0,221,0)',
                                  data: [
                       FSE_ELECTRICIDADE_ANO_N_1_JANEIRO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_1_FEVEREIRO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_1_MARCO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_1_ABRIL_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_1_MAIO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_1_JUNHO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_1_JULHO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_1_AGOSTO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_1_SETEMBRO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_1_OUTUBRO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_1_NOVEMBRO_ACUM,
                       FSE_ELECTRICIDADE_ANO_N_1_DEZEMBRO_ACUM,
                                  ],
                                  type: 'line'


                              },
                {
                    label:  'Electricidade(m) ' + ANO_VERSAO_REAL_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(250 , 83 , 0, 0.5)',
                    borderColor: 'rgba(250 , 83 , 0, 0.5)',
                    data: [
                  FSE_ELECTRICIDADE_ANO_N_JANEIRO ,
                  FSE_ELECTRICIDADE_ANO_N_FEVEREIRO ,
                  FSE_ELECTRICIDADE_ANO_N_MARCO ,
                  FSE_ELECTRICIDADE_ANO_N_ABRIL,
                  FSE_ELECTRICIDADE_ANO_N_MAIO ,
                  FSE_ELECTRICIDADE_ANO_N_JUNHO ,
                  FSE_ELECTRICIDADE_ANO_N_JULHO ,
                  FSE_ELECTRICIDADE_ANO_N_AGOSTO ,
                  FSE_ELECTRICIDADE_ANO_N_SETEMBRO ,
                  FSE_ELECTRICIDADE_ANO_N_OUTUBRO ,
                  FSE_ELECTRICIDADE_ANO_N_NOVEMBRO ,
                  FSE_ELECTRICIDADE_ANO_N_DEZEMBRO ,
                    ],
                },
                {
                    label:  'Electricidade(m) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'B',
                    backgroundColor: 'rgba(0,221,0, 0.4)',
                    borderColor: 'rgba(0,221,0, 0.4)',
                    data: [
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_JANEIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_FEVEREIRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_MARCO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_ABRIL"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_MAIO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_JUNHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_JULHO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_AGOSTO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_SETEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_OUTUBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_NOVEMBRO"]))),
                       @Html.Raw((string.Format("{0:0}", @ViewData["FSE_ELECTRICIDADE_ANO_N_1_DEZEMBRO"]))),
                    ],
                },


            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_ELECTRICIDADE_MENSAL_1',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                min:  Math.round(FSE_ELECTRICIDADE_Mensal_Eixo_min_princ__,0),
                                                max:  Math.round(FSE_ELECTRICIDADE_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString();
                                                }
                                            }
                                        },

                    { id: 'B',
                        type: 'linear',
                        position: 'right',
                        ticks: {
                            min: Math.round(FSE_ELECTRICIDADE_Mensal_Eixo_min_secon__,0),
                            max:  Math.round(FSE_ELECTRICIDADE_Mensal_Eixo_max_secon__,0),
                            beginAtZero: false,
                            callback: function(value, index, values) {
                                return value.toLocaleString();
                            }
                        }
                    },






                ]
            }
        },

    });

</script>

@*------------------------------------------------GRAFICO_FSE_RESULT_MENSAL_COMP_029-----------------------------------------------------------*@
<script>

    var IND_VN_ANO_N_JANEIRO_ACUM = IND_VN_ANO_N_JANEIRO;
    var IND_VN_ANO_N_FEVEREIRO_ACUM = IND_VN_ANO_N_FEVEREIRO + IND_VN_ANO_N_JANEIRO_ACUM;
    var IND_VN_ANO_N_MARCO_ACUM = IND_VN_ANO_N_MARCO + IND_VN_ANO_N_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_ABRIL_ACUM = IND_VN_ANO_N_ABRIL + IND_VN_ANO_N_MARCO_ACUM;
    var IND_VN_ANO_N_MAIO_ACUM = IND_VN_ANO_N_MAIO + IND_VN_ANO_N_ABRIL_ACUM;
    var IND_VN_ANO_N_JUNHO_ACUM = IND_VN_ANO_N_JUNHO + IND_VN_ANO_N_MAIO_ACUM;
    var IND_VN_ANO_N_JULHO_ACUM = IND_VN_ANO_N_JULHO + IND_VN_ANO_N_JUNHO_ACUM;
    var IND_VN_ANO_N_AGOSTO_ACUM = IND_VN_ANO_N_AGOSTO + IND_VN_ANO_N_JULHO_ACUM;
    var IND_VN_ANO_N_SETEMBRO_ACUM = IND_VN_ANO_N_SETEMBRO + IND_VN_ANO_N_AGOSTO_ACUM;
    var IND_VN_ANO_N_OUTUBRO_ACUM = IND_VN_ANO_N_OUTUBRO + IND_VN_ANO_N_SETEMBRO_ACUM;
    var IND_VN_ANO_N_NOVEMBRO_ACUM = IND_VN_ANO_N_NOVEMBRO + IND_VN_ANO_N_OUTUBRO_ACUM;
    var IND_VN_ANO_N_DEZEMBRO_ACUM = IND_VN_ANO_N_DEZEMBRO + IND_VN_ANO_N_NOVEMBRO_ACUM;



    var IND_VN_ANO_N_1_JANEIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JANEIRO"])));
    var IND_VN_ANO_N_1_FEVEREIRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_FEVEREIRO"]))) + IND_VN_ANO_N_1_JANEIRO_ACUM;
    var IND_VN_ANO_N_1_MARCO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MARCO"]))) + IND_VN_ANO_N_1_FEVEREIRO_ACUM;
    var IND_VN_ANO_N_1_ABRIL_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_ABRIL"]))) + IND_VN_ANO_N_1_MARCO_ACUM;
    var IND_VN_ANO_N_1_MAIO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_MAIO"]))) + IND_VN_ANO_N_1_ABRIL_ACUM;
    var IND_VN_ANO_N_1_JUNHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JUNHO"]))) + IND_VN_ANO_N_1_MAIO_ACUM;
    var IND_VN_ANO_N_1_JULHO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_JULHO"]))) + IND_VN_ANO_N_1_JUNHO_ACUM;
    var IND_VN_ANO_N_1_AGOSTO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_AGOSTO"]))) + IND_VN_ANO_N_1_JULHO_ACUM;
    var IND_VN_ANO_N_1_SETEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_SETEMBRO"]))) + IND_VN_ANO_N_1_AGOSTO_ACUM;
    var IND_VN_ANO_N_1_OUTUBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_OUTUBRO"]))) + IND_VN_ANO_N_1_SETEMBRO_ACUM;
    var IND_VN_ANO_N_1_NOVEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_NOVEMBRO"]))) + IND_VN_ANO_N_1_OUTUBRO_ACUM;
    var IND_VN_ANO_N_1_DEZEMBRO_ACUM = @Html.Raw((string.Format("{0:0}", @ViewData["IND_VN_ANO_N_1_DEZEMBRO"]))) + IND_VN_ANO_N_1_NOVEMBRO_ACUM;




    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_ELECTRICIDADE_VN_ANO_N_JANEIRO_ACUM = 'nd'; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ELECTRICIDADE_VN_ANO_N_JANEIRO_ACUM= FSE_ELECTRICIDADE_ANO_N_JANEIRO_ACUM/IND_VN_ANO_N_JANEIRO_ACUM*100; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = PESO_FSE_ELECTRICIDADE_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_ELECTRICIDADE_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ELECTRICIDADE_VN_ANO_N_FEVEREIRO_ACUM= FSE_ELECTRICIDADE_ANO_N_FEVEREIRO_ACUM/IND_VN_ANO_N_FEVEREIRO_ACUM*100; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_ELECTRICIDADE_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_ELECTRICIDADE_VN_ANO_N_MARCO_ACUM = 'nd'; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ELECTRICIDADE_VN_ANO_N_MARCO_ACUM= FSE_ELECTRICIDADE_ANO_N_MARCO_ACUM/IND_VN_ANO_N_MARCO_ACUM*100; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_MARCO_ACUM_MAX_MIN = PESO_FSE_ELECTRICIDADE_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_ELECTRICIDADE_VN_ANO_N_ABRIL_ACUM = 'nd'; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ELECTRICIDADE_VN_ANO_N_ABRIL_ACUM= FSE_ELECTRICIDADE_ANO_N_ABRIL_ACUM/IND_VN_ANO_N_ABRIL_ACUM*100; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_ABRIL_ACUM_MAX_MIN = PESO_FSE_ELECTRICIDADE_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_ELECTRICIDADE_VN_ANO_N_MAIO_ACUM = 'nd'; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ELECTRICIDADE_VN_ANO_N_MAIO_ACUM= FSE_ELECTRICIDADE_ANO_N_MAIO_ACUM/IND_VN_ANO_N_MAIO_ACUM*100; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_MAIO_ACUM_MAX_MIN = PESO_FSE_ELECTRICIDADE_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_ELECTRICIDADE_VN_ANO_N_JUNHO_ACUM = 'nd'; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ELECTRICIDADE_VN_ANO_N_JUNHO_ACUM= FSE_ELECTRICIDADE_ANO_N_JUNHO_ACUM/IND_VN_ANO_N_JUNHO_ACUM*100; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_JUNHO_ACUM_MAX_MIN = PESO_FSE_ELECTRICIDADE_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_ELECTRICIDADE_VN_ANO_N_JULHO_ACUM = 'nd'; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ELECTRICIDADE_VN_ANO_N_JULHO_ACUM= FSE_ELECTRICIDADE_ANO_N_JULHO_ACUM/IND_VN_ANO_N_JULHO_ACUM*100; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_JULHO_ACUM_MAX_MIN = PESO_FSE_ELECTRICIDADE_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_ELECTRICIDADE_VN_ANO_N_AGOSTO_ACUM = 'nd'; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ELECTRICIDADE_VN_ANO_N_AGOSTO_ACUM= FSE_ELECTRICIDADE_ANO_N_AGOSTO_ACUM/IND_VN_ANO_N_AGOSTO_ACUM*100; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = PESO_FSE_ELECTRICIDADE_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_ELECTRICIDADE_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ELECTRICIDADE_VN_ANO_N_SETEMBRO_ACUM= FSE_ELECTRICIDADE_ANO_N_SETEMBRO_ACUM/IND_VN_ANO_N_SETEMBRO_ACUM*100; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_ELECTRICIDADE_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_ELECTRICIDADE_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ELECTRICIDADE_VN_ANO_N_OUTUBRO_ACUM= FSE_ELECTRICIDADE_ANO_N_OUTUBRO_ACUM/IND_VN_ANO_N_OUTUBRO_ACUM*100; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_ELECTRICIDADE_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_ELECTRICIDADE_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ELECTRICIDADE_VN_ANO_N_NOVEMBRO_ACUM= FSE_ELECTRICIDADE_ANO_N_NOVEMBRO_ACUM/IND_VN_ANO_N_NOVEMBRO_ACUM*100; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_ELECTRICIDADE_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_ELECTRICIDADE_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ELECTRICIDADE_VN_ANO_N_DEZEMBRO_ACUM= FSE_ELECTRICIDADE_ANO_N_DEZEMBRO_ACUM/IND_VN_ANO_N_DEZEMBRO_ACUM*100; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_ELECTRICIDADE_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_JANEIRO_ACUM = 'nd'; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_JANEIRO_ACUM= FSE_ELECTRICIDADE_ANO_N_1_JANEIRO_ACUM/IND_VN_ANO_N_1_JANEIRO_ACUM*100; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_JANEIRO_ACUM_MAX_MIN = PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_FEVEREIRO_ACUM = 'nd'; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_FEVEREIRO_ACUM= FSE_ELECTRICIDADE_ANO_N_1_FEVEREIRO_ACUM/IND_VN_ANO_N_1_FEVEREIRO_ACUM*100; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_FEVEREIRO_ACUM_MAX_MIN = PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_MARCO_ACUM = 'nd'; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_MARCO_ACUM= FSE_ELECTRICIDADE_ANO_N_1_MARCO_ACUM/IND_VN_ANO_N_1_MARCO_ACUM*100; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_MARCO_ACUM_MAX_MIN = PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_ABRIL_ACUM = 'nd'; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_ABRIL_ACUM= FSE_ELECTRICIDADE_ANO_N_1_ABRIL_ACUM/IND_VN_ANO_N_1_ABRIL_ACUM*100; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_ABRIL_ACUM_MAX_MIN = PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_MAIO_ACUM = 'nd'; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_MAIO_ACUM= FSE_ELECTRICIDADE_ANO_N_1_MAIO_ACUM/IND_VN_ANO_N_1_MAIO_ACUM*100; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_MAIO_ACUM_MAX_MIN = PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_JUNHO_ACUM = 'nd'; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_JUNHO_ACUM= FSE_ELECTRICIDADE_ANO_N_1_JUNHO_ACUM/IND_VN_ANO_N_1_JUNHO_ACUM*100; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_JUNHO_ACUM_MAX_MIN = PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_JULHO_ACUM = 'nd'; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_JULHO_ACUM= FSE_ELECTRICIDADE_ANO_N_1_JULHO_ACUM/IND_VN_ANO_N_1_JULHO_ACUM*100; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_JULHO_ACUM_MAX_MIN = PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_AGOSTO_ACUM = 'nd'; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_AGOSTO_ACUM= FSE_ELECTRICIDADE_ANO_N_1_AGOSTO_ACUM/IND_VN_ANO_N_1_AGOSTO_ACUM*100; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_AGOSTO_ACUM_MAX_MIN = PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_SETEMBRO_ACUM = 'nd'; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_SETEMBRO_ACUM= FSE_ELECTRICIDADE_ANO_N_1_SETEMBRO_ACUM/IND_VN_ANO_N_1_SETEMBRO_ACUM*100; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_SETEMBRO_ACUM_MAX_MIN = PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_OUTUBRO_ACUM = 'nd'; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_OUTUBRO_ACUM= FSE_ELECTRICIDADE_ANO_N_1_OUTUBRO_ACUM/IND_VN_ANO_N_1_OUTUBRO_ACUM*100; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_OUTUBRO_ACUM_MAX_MIN = PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_NOVEMBRO_ACUM = 'nd'; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_NOVEMBRO_ACUM= FSE_ELECTRICIDADE_ANO_N_1_NOVEMBRO_ACUM/IND_VN_ANO_N_1_NOVEMBRO_ACUM*100; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_NOVEMBRO_ACUM_MAX_MIN = PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_DEZEMBRO_ACUM = 'nd'; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_DEZEMBRO_ACUM= FSE_ELECTRICIDADE_ANO_N_1_DEZEMBRO_ACUM/IND_VN_ANO_N_1_DEZEMBRO_ACUM*100; var PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_DEZEMBRO_ACUM_MAX_MIN = PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_VN_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JANEIRO_ACUM= ((IND_VN_ANO_N_JANEIRO_ACUM-IND_VN_ANO_N_1_JANEIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_JANEIRO_ACUM))*100; var VAR_VN_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_VN_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_FEVEREIRO_ACUM= ((IND_VN_ANO_N_FEVEREIRO_ACUM-IND_VN_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(IND_VN_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_VN_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_VN_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_VN_ANO_N_MARCO_ACUM = 'nd'; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MARCO_ACUM= ((IND_VN_ANO_N_MARCO_ACUM-IND_VN_ANO_N_1_MARCO_ACUM)/Math.abs(IND_VN_ANO_N_1_MARCO_ACUM))*100; var VAR_VN_ANO_N_MARCO_ACUM_MAX_MIN = VAR_VN_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_VN_ANO_N_ABRIL_ACUM = 'nd'; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_ABRIL_ACUM= ((IND_VN_ANO_N_ABRIL_ACUM-IND_VN_ANO_N_1_ABRIL_ACUM)/Math.abs(IND_VN_ANO_N_1_ABRIL_ACUM))*100; var VAR_VN_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_VN_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_VN_ANO_N_MAIO_ACUM = 'nd'; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_MAIO_ACUM= ((IND_VN_ANO_N_MAIO_ACUM-IND_VN_ANO_N_1_MAIO_ACUM)/Math.abs(IND_VN_ANO_N_1_MAIO_ACUM))*100; var VAR_VN_ANO_N_MAIO_ACUM_MAX_MIN = VAR_VN_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_VN_ANO_N_JUNHO_ACUM = 'nd'; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JUNHO_ACUM= ((IND_VN_ANO_N_JUNHO_ACUM-IND_VN_ANO_N_1_JUNHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JUNHO_ACUM))*100; var VAR_VN_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_VN_ANO_N_JULHO_ACUM = 'nd'; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_JULHO_ACUM= ((IND_VN_ANO_N_JULHO_ACUM-IND_VN_ANO_N_1_JULHO_ACUM)/Math.abs(IND_VN_ANO_N_1_JULHO_ACUM))*100; var VAR_VN_ANO_N_JULHO_ACUM_MAX_MIN = VAR_VN_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_VN_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_AGOSTO_ACUM= ((IND_VN_ANO_N_AGOSTO_ACUM-IND_VN_ANO_N_1_AGOSTO_ACUM)/Math.abs(IND_VN_ANO_N_1_AGOSTO_ACUM))*100; var VAR_VN_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_VN_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_VN_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_SETEMBRO_ACUM= ((IND_VN_ANO_N_SETEMBRO_ACUM-IND_VN_ANO_N_1_SETEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_VN_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_VN_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_OUTUBRO_ACUM= ((IND_VN_ANO_N_OUTUBRO_ACUM-IND_VN_ANO_N_1_OUTUBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_VN_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_VN_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_NOVEMBRO_ACUM= ((IND_VN_ANO_N_NOVEMBRO_ACUM-IND_VN_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_VN_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_VN_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_VN_ANO_N_DEZEMBRO_ACUM= ((IND_VN_ANO_N_DEZEMBRO_ACUM-IND_VN_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(IND_VN_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_VN_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_VN_ANO_N_DEZEMBRO_ACUM };



    if(@ViewData["MES_ACUM_REAL"]<1){ var VAR_FSE_ELECTRICIDADE_ANO_N_JANEIRO_ACUM = 'nd'; var VAR_FSE_ELECTRICIDADE_ANO_N_JANEIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ELECTRICIDADE_ANO_N_JANEIRO_ACUM= ((FSE_ELECTRICIDADE_ANO_N_JANEIRO_ACUM-FSE_ELECTRICIDADE_ANO_N_1_JANEIRO_ACUM)/Math.abs(FSE_ELECTRICIDADE_ANO_N_1_JANEIRO_ACUM))*100; var VAR_FSE_ELECTRICIDADE_ANO_N_JANEIRO_ACUM_MAX_MIN = VAR_FSE_ELECTRICIDADE_ANO_N_JANEIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<2){ var VAR_FSE_ELECTRICIDADE_ANO_N_FEVEREIRO_ACUM = 'nd'; var VAR_FSE_ELECTRICIDADE_ANO_N_FEVEREIRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ELECTRICIDADE_ANO_N_FEVEREIRO_ACUM= ((FSE_ELECTRICIDADE_ANO_N_FEVEREIRO_ACUM-FSE_ELECTRICIDADE_ANO_N_1_FEVEREIRO_ACUM)/Math.abs(FSE_ELECTRICIDADE_ANO_N_1_FEVEREIRO_ACUM))*100; var VAR_FSE_ELECTRICIDADE_ANO_N_FEVEREIRO_ACUM_MAX_MIN = VAR_FSE_ELECTRICIDADE_ANO_N_FEVEREIRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<3){ var VAR_FSE_ELECTRICIDADE_ANO_N_MARCO_ACUM = 'nd'; var VAR_FSE_ELECTRICIDADE_ANO_N_MARCO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ELECTRICIDADE_ANO_N_MARCO_ACUM= ((FSE_ELECTRICIDADE_ANO_N_MARCO_ACUM-FSE_ELECTRICIDADE_ANO_N_1_MARCO_ACUM)/Math.abs(FSE_ELECTRICIDADE_ANO_N_1_MARCO_ACUM))*100; var VAR_FSE_ELECTRICIDADE_ANO_N_MARCO_ACUM_MAX_MIN = VAR_FSE_ELECTRICIDADE_ANO_N_MARCO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<4){ var VAR_FSE_ELECTRICIDADE_ANO_N_ABRIL_ACUM = 'nd'; var VAR_FSE_ELECTRICIDADE_ANO_N_ABRIL_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ELECTRICIDADE_ANO_N_ABRIL_ACUM= ((FSE_ELECTRICIDADE_ANO_N_ABRIL_ACUM-FSE_ELECTRICIDADE_ANO_N_1_ABRIL_ACUM)/Math.abs(FSE_ELECTRICIDADE_ANO_N_1_ABRIL_ACUM))*100; var VAR_FSE_ELECTRICIDADE_ANO_N_ABRIL_ACUM_MAX_MIN = VAR_FSE_ELECTRICIDADE_ANO_N_ABRIL_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<5){ var VAR_FSE_ELECTRICIDADE_ANO_N_MAIO_ACUM = 'nd'; var VAR_FSE_ELECTRICIDADE_ANO_N_MAIO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ELECTRICIDADE_ANO_N_MAIO_ACUM= ((FSE_ELECTRICIDADE_ANO_N_MAIO_ACUM-FSE_ELECTRICIDADE_ANO_N_1_MAIO_ACUM)/Math.abs(FSE_ELECTRICIDADE_ANO_N_1_MAIO_ACUM))*100; var VAR_FSE_ELECTRICIDADE_ANO_N_MAIO_ACUM_MAX_MIN = VAR_FSE_ELECTRICIDADE_ANO_N_MAIO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<6){ var VAR_FSE_ELECTRICIDADE_ANO_N_JUNHO_ACUM = 'nd'; var VAR_FSE_ELECTRICIDADE_ANO_N_JUNHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ELECTRICIDADE_ANO_N_JUNHO_ACUM= ((FSE_ELECTRICIDADE_ANO_N_JUNHO_ACUM-FSE_ELECTRICIDADE_ANO_N_1_JUNHO_ACUM)/Math.abs(FSE_ELECTRICIDADE_ANO_N_1_JUNHO_ACUM))*100; var VAR_FSE_ELECTRICIDADE_ANO_N_JUNHO_ACUM_MAX_MIN = VAR_FSE_ELECTRICIDADE_ANO_N_JUNHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<7){ var VAR_FSE_ELECTRICIDADE_ANO_N_JULHO_ACUM = 'nd'; var VAR_FSE_ELECTRICIDADE_ANO_N_JULHO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ELECTRICIDADE_ANO_N_JULHO_ACUM= ((FSE_ELECTRICIDADE_ANO_N_JULHO_ACUM-FSE_ELECTRICIDADE_ANO_N_1_JULHO_ACUM)/Math.abs(FSE_ELECTRICIDADE_ANO_N_1_JULHO_ACUM))*100; var VAR_FSE_ELECTRICIDADE_ANO_N_JULHO_ACUM_MAX_MIN = VAR_FSE_ELECTRICIDADE_ANO_N_JULHO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<8){ var VAR_FSE_ELECTRICIDADE_ANO_N_AGOSTO_ACUM = 'nd'; var VAR_FSE_ELECTRICIDADE_ANO_N_AGOSTO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ELECTRICIDADE_ANO_N_AGOSTO_ACUM= ((FSE_ELECTRICIDADE_ANO_N_AGOSTO_ACUM-FSE_ELECTRICIDADE_ANO_N_1_AGOSTO_ACUM)/Math.abs(FSE_ELECTRICIDADE_ANO_N_1_AGOSTO_ACUM))*100; var VAR_FSE_ELECTRICIDADE_ANO_N_AGOSTO_ACUM_MAX_MIN = VAR_FSE_ELECTRICIDADE_ANO_N_AGOSTO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<9){ var VAR_FSE_ELECTRICIDADE_ANO_N_SETEMBRO_ACUM = 'nd'; var VAR_FSE_ELECTRICIDADE_ANO_N_SETEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ELECTRICIDADE_ANO_N_SETEMBRO_ACUM= ((FSE_ELECTRICIDADE_ANO_N_SETEMBRO_ACUM-FSE_ELECTRICIDADE_ANO_N_1_SETEMBRO_ACUM)/Math.abs(FSE_ELECTRICIDADE_ANO_N_1_SETEMBRO_ACUM))*100; var VAR_FSE_ELECTRICIDADE_ANO_N_SETEMBRO_ACUM_MAX_MIN = VAR_FSE_ELECTRICIDADE_ANO_N_SETEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<10){ var VAR_FSE_ELECTRICIDADE_ANO_N_OUTUBRO_ACUM = 'nd'; var VAR_FSE_ELECTRICIDADE_ANO_N_OUTUBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ELECTRICIDADE_ANO_N_OUTUBRO_ACUM= ((FSE_ELECTRICIDADE_ANO_N_OUTUBRO_ACUM-FSE_ELECTRICIDADE_ANO_N_1_OUTUBRO_ACUM)/Math.abs(FSE_ELECTRICIDADE_ANO_N_1_OUTUBRO_ACUM))*100; var VAR_FSE_ELECTRICIDADE_ANO_N_OUTUBRO_ACUM_MAX_MIN = VAR_FSE_ELECTRICIDADE_ANO_N_OUTUBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<11){ var VAR_FSE_ELECTRICIDADE_ANO_N_NOVEMBRO_ACUM = 'nd'; var VAR_FSE_ELECTRICIDADE_ANO_N_NOVEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ELECTRICIDADE_ANO_N_NOVEMBRO_ACUM= ((FSE_ELECTRICIDADE_ANO_N_NOVEMBRO_ACUM-FSE_ELECTRICIDADE_ANO_N_1_NOVEMBRO_ACUM)/Math.abs(FSE_ELECTRICIDADE_ANO_N_1_NOVEMBRO_ACUM))*100; var VAR_FSE_ELECTRICIDADE_ANO_N_NOVEMBRO_ACUM_MAX_MIN = VAR_FSE_ELECTRICIDADE_ANO_N_NOVEMBRO_ACUM };
    if(@ViewData["MES_ACUM_REAL"]<12){ var VAR_FSE_ELECTRICIDADE_ANO_N_DEZEMBRO_ACUM = 'nd'; var VAR_FSE_ELECTRICIDADE_ANO_N_DEZEMBRO_ACUM_MAX_MIN = 0;  } else { var VAR_FSE_ELECTRICIDADE_ANO_N_DEZEMBRO_ACUM= ((FSE_ELECTRICIDADE_ANO_N_DEZEMBRO_ACUM-FSE_ELECTRICIDADE_ANO_N_1_DEZEMBRO_ACUM)/Math.abs(FSE_ELECTRICIDADE_ANO_N_1_DEZEMBRO_ACUM))*100; var VAR_FSE_ELECTRICIDADE_ANO_N_DEZEMBRO_ACUM_MAX_MIN = VAR_FSE_ELECTRICIDADE_ANO_N_DEZEMBRO_ACUM };

    if( PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_JANEIRO_ACUM > PESO_FSE_ELECTRICIDADE_VN_ANO_N_JANEIRO_ACUM) { var  INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_JANEIRO_ACUM=PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_JANEIRO_ACUM ; } else { var  INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_JANEIRO_ACUM=PESO_FSE_ELECTRICIDADE_VN_ANO_N_JANEIRO_ACUM ; }
    if( PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_FEVEREIRO_ACUM > PESO_FSE_ELECTRICIDADE_VN_ANO_N_FEVEREIRO_ACUM) { var  INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_FEVEREIRO_ACUM=PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_FEVEREIRO_ACUM ; } else { var  INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_FEVEREIRO_ACUM=PESO_FSE_ELECTRICIDADE_VN_ANO_N_FEVEREIRO_ACUM ; }
    if( PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_MARCO_ACUM > PESO_FSE_ELECTRICIDADE_VN_ANO_N_MARCO_ACUM) { var  INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_MARCO_ACUM=PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_MARCO_ACUM ; } else { var  INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_MARCO_ACUM=PESO_FSE_ELECTRICIDADE_VN_ANO_N_MARCO_ACUM ; }
    if( PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_ABRIL_ACUM > PESO_FSE_ELECTRICIDADE_VN_ANO_N_ABRIL_ACUM) { var  INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_ABRIL_ACUM=PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_ABRIL_ACUM ; } else { var  INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_ABRIL_ACUM=PESO_FSE_ELECTRICIDADE_VN_ANO_N_ABRIL_ACUM ; }
    if( PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_MAIO_ACUM > PESO_FSE_ELECTRICIDADE_VN_ANO_N_MAIO_ACUM) { var  INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_MAIO_ACUM=PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_MAIO_ACUM ; } else { var  INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_MAIO_ACUM=PESO_FSE_ELECTRICIDADE_VN_ANO_N_MAIO_ACUM ; }
    if( PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_JUNHO_ACUM > PESO_FSE_ELECTRICIDADE_VN_ANO_N_JUNHO_ACUM) { var  INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_JUNHO_ACUM=PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_JUNHO_ACUM ; } else { var  INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_JUNHO_ACUM=PESO_FSE_ELECTRICIDADE_VN_ANO_N_JUNHO_ACUM ; }
    if( PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_JULHO_ACUM > PESO_FSE_ELECTRICIDADE_VN_ANO_N_JULHO_ACUM) { var  INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_JULHO_ACUM=PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_JULHO_ACUM ; } else { var  INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_JULHO_ACUM=PESO_FSE_ELECTRICIDADE_VN_ANO_N_JULHO_ACUM ; }
    if( PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_AGOSTO_ACUM > PESO_FSE_ELECTRICIDADE_VN_ANO_N_AGOSTO_ACUM) { var  INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_AGOSTO_ACUM=PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_AGOSTO_ACUM ; } else { var  INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_AGOSTO_ACUM=PESO_FSE_ELECTRICIDADE_VN_ANO_N_AGOSTO_ACUM ; }
    if( PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_SETEMBRO_ACUM > PESO_FSE_ELECTRICIDADE_VN_ANO_N_SETEMBRO_ACUM) { var  INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_SETEMBRO_ACUM=PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_SETEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_SETEMBRO_ACUM=PESO_FSE_ELECTRICIDADE_VN_ANO_N_SETEMBRO_ACUM ; }
    if( PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_OUTUBRO_ACUM > PESO_FSE_ELECTRICIDADE_VN_ANO_N_OUTUBRO_ACUM) { var  INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_OUTUBRO_ACUM=PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_OUTUBRO_ACUM ; } else { var  INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_OUTUBRO_ACUM=PESO_FSE_ELECTRICIDADE_VN_ANO_N_OUTUBRO_ACUM ; }
    if( PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_NOVEMBRO_ACUM > PESO_FSE_ELECTRICIDADE_VN_ANO_N_NOVEMBRO_ACUM) { var  INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_NOVEMBRO_ACUM=PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_NOVEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_NOVEMBRO_ACUM=PESO_FSE_ELECTRICIDADE_VN_ANO_N_NOVEMBRO_ACUM ; }
    if( PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_DEZEMBRO_ACUM > PESO_FSE_ELECTRICIDADE_VN_ANO_N_DEZEMBRO_ACUM) { var  INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_DEZEMBRO_ACUM=PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_DEZEMBRO_ACUM ; } else { var  INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_DEZEMBRO_ACUM=PESO_FSE_ELECTRICIDADE_VN_ANO_N_DEZEMBRO_ACUM ; }



    var fillBetweenLinesPlugin = {
        afterDatasetsDraw: function (chart) {
            var ctx = chart.chart.ctx;
            var xaxis = chart.scales['x-axis-0'];
            var yaxis = chart.scales['y-axis-0'];
            var datasets = chart.data.datasets;
            ctx.save();

            for (var d = 0; d < datasets.length; d++) {
                var dataset = datasets[d];
                if (dataset.fillBetweenSet == undefined) {
                    continue;
                }

                // get meta for both data sets
                var meta1 = chart.getDatasetMeta(d);
                var meta2 = chart.getDatasetMeta(dataset.fillBetweenSet);

                // do not draw fill if one of the datasets is hidden
                if (meta1.hidden || meta2.hidden) continue;

                // create fill areas in pairs
                for (var p = 0; p < meta1.data.length-1;p++) {
                    // if null skip
                    if (dataset.data[p] == null || dataset.data[p+1] == null) continue;

                    ctx.beginPath();

                    // trace line 1
                    var curr = meta1.data[p];
                    var next = meta1.data[p+1];
                    ctx.moveTo(curr._view.x, curr._view.y);
                    ctx.lineTo(curr._view.x, curr._view.y);
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(next._view.x, curr._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        ctx.bezierCurveTo(
                          curr._view.controlPointNextX,
                          curr._view.controlPointNextY,
                          next._view.controlPointPreviousX,
                          next._view.controlPointPreviousY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // connect dataset1 to dataset2
                    var curr = meta2.data[p+1];
                    var next = meta2.data[p];
                    ctx.lineTo(curr._view.x, curr._view.y);

                    // trace BACKWORDS set2 to complete the box
                    if (curr._view.steppedLine === true) {
                        ctx.lineTo(curr._view.x, next._view.y);
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else if (next._view.tension === 0) {
                        ctx.lineTo(next._view.x, next._view.y);
                    }
                    else {
                        // reverse bezier
                        ctx.bezierCurveTo(
                          curr._view.controlPointPreviousX,
                          curr._view.controlPointPreviousY,
                          next._view.controlPointNextX,
                          next._view.controlPointNextY,
                          next._view.x,
                          next._view.y
                        );
                    }

                    // close the loop and fill with shading
                    ctx.closePath();
                    ctx.fillStyle = dataset.fillBetweenColor || "rgba(0,0,0,0.1)";
                    ctx.fill();
                } // end for p loop
            }
        } // end afterDatasetsDraw
    }; // end fillBetweenLinesPlugin

    Chart.pluginService.register(fillBetweenLinesPlugin);



    var GRAFICO_FSE_RESULT_MENSAL_COMP_029=document.getElementById('GRAFICO_FSE_RESULT_MENSAL_COMP_029').getContext('2d');

    var GRAFICO_FSE_RESULT_MENSAL_COMP_029=new Chart(GRAFICO_FSE_RESULT_MENSAL_COMP_029, {
        // The type of chart we want to create
        type: 'bar',

        // The data for our dataset
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            datasets: [
               {
                   label:  'Peso ElectricidadevsVN(ac) ' + ANO_VERSAO_REAL_,
                   yAxisID: 'A',
                   //backgroundColor: 'rgb(201, 10, 10)',
                   borderColor: 'rgb(250 , 83 , 0)',
                   //borderColor: "#F00",
                   fill: false,
                   steppedLine: false,
                   tension: 0.5,
                   fillBetweenSet: 1,
                   fillBetweenColor: "rgba(0, 221, 0, 0.1)",
                   data: [
                   PESO_FSE_ELECTRICIDADE_VN_ANO_N_JANEIRO_ACUM,
                   PESO_FSE_ELECTRICIDADE_VN_ANO_N_FEVEREIRO_ACUM,
                   PESO_FSE_ELECTRICIDADE_VN_ANO_N_MARCO_ACUM,
                   PESO_FSE_ELECTRICIDADE_VN_ANO_N_ABRIL_ACUM,
                   PESO_FSE_ELECTRICIDADE_VN_ANO_N_MAIO_ACUM,
                   PESO_FSE_ELECTRICIDADE_VN_ANO_N_JUNHO_ACUM,
                   PESO_FSE_ELECTRICIDADE_VN_ANO_N_JULHO_ACUM,
                   PESO_FSE_ELECTRICIDADE_VN_ANO_N_AGOSTO_ACUM,
                   PESO_FSE_ELECTRICIDADE_VN_ANO_N_SETEMBRO_ACUM,
                   PESO_FSE_ELECTRICIDADE_VN_ANO_N_OUTUBRO_ACUM,
                   PESO_FSE_ELECTRICIDADE_VN_ANO_N_NOVEMBRO_ACUM,
                   PESO_FSE_ELECTRICIDADE_VN_ANO_N_DEZEMBRO_ACUM,

                   ],
                   type: 'line'


               },
                {
                    label: 'Peso ElectricidadevsVN(ac) ' + ANO_VERSAO_ANTE_,
                    yAxisID: 'A',
                    //backgroundColor: 'rgb(17, 121, 240)',
                    borderColor: 'rgb(0,221,0)',
                    //borderColor: "#00F",
                    fill: false,
                    steppedLine: false,
                    tension: 0.5,
                    data: [
                   PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_JANEIRO_ACUM,
                   PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_FEVEREIRO_ACUM,
                   PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_MARCO_ACUM,
                   PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_ABRIL_ACUM,
                   PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_MAIO_ACUM,
                   PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_JUNHO_ACUM,
                   PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_JULHO_ACUM,
                   PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_AGOSTO_ACUM,
                   PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_SETEMBRO_ACUM,
                   PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_OUTUBRO_ACUM,
                   PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_NOVEMBRO_ACUM,
                   PESO_FSE_ELECTRICIDADE_VN_ANO_N_1_DEZEMBRO_ACUM,
                    ],
                    type: 'line'
                },
    {
        label: 'Ineficiência',
        yAxisID: 'A',
        backgroundColor: "rgba(255, 0, 0, 0.2)",
        borderColor: 'rgba(255, 255, 255, 0.1)',
        //borderColor: "#0D0",
        fill: false,
        steppedLine: false,
        tension: 0.5,
        fillBetweenSet: 1,
        fillBetweenColor: "rgba(255, 0, 0, 0.2)",
        data: [
    INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_JANEIRO_ACUM,
    INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_FEVEREIRO_ACUM,
    INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_MARCO_ACUM,
    INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_ABRIL_ACUM,
    INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_MAIO_ACUM,
    INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_JUNHO_ACUM,
    INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_JULHO_ACUM,
    INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_AGOSTO_ACUM,
    INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_SETEMBRO_ACUM,
    INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_OUTUBRO_ACUM,
    INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_NOVEMBRO_ACUM,
    INEFICIENCIA_FSE_ELECTRICIDADE_ANO_N_DEZEMBRO_ACUM,
        ],
        type: 'line'
    },

            ]
        },

        // Configuration options go here

        options: {
            title: {
                display: false,
                text: 'FSE_Electricidade COMP',
                fontStyle: 'bold',
                fontSize: 8
            },



            tooltips: {
                callbacks: {
                    // this callback is used to create the tooltip label
                    label: function(tooltipItem, data) {
                        // get the data label and data value to display
                        // convert the data value to local string so it uses a comma seperated number
                        var dataLabel = data.labels[tooltipItem.index];
                        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();

                        // make this isn't a multi-line label (e.g. [["label 1 - line 1, "line 2, ], [etc...]])
                        if (Chart.helpers.isArray(dataLabel)) {
                            // show value on first line of multiline label
                            // need to clone because we are changing the value
                            dataLabel = dataLabel.slice();
                            dataLabel[0] += value;
                        } else {
                            dataLabel += value;
                        }

                        // return the text to display on the tooltip
                        return dataLabel;
                    }
                }
            },


            scales: {
                yAxes: [
                                        {    id: 'A',
                                            type: 'linear',
                                            position: 'left',
                                            ticks: {
                                                //min:  Math.round(FSE_ELECTRICIDADE_Mensal_Eixo_min_princ__,0),
                                                //max:  Math.round(FSE_ELECTRICIDADE_Mensal_Eixo_max_princ__,0),
                                                beginAtZero: false,
                                                callback: function(value, index, values) {
                                                    return value.toLocaleString()+ "%";
                                                }
                                            }
                                        },







                ]
            }
        },

    });

</script>








